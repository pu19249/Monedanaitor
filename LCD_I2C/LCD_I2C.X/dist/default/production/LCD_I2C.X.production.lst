

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Aug 27 00:45:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301                           
   302                           	psect	idataCOMMON
   303  028F                     __pidataCOMMON:
   304                           
   305                           ;initializer for _BackLight_State
   306  028F  3408               	retlw	8
   307                           
   308                           	psect	nvBANK0
   309  0026                     __pnvBANK0:
   310  0026                     _i2c_add:
   311  0026                     	ds	1
   312  0013                     _SSPBUF	set	19
   313  0014                     _SSPCON	set	20
   314  0009                     _PORTE	set	9
   315  0008                     _PORTD	set	8
   316  0007                     _PORTC	set	7
   317  0006                     _PORTB	set	6
   318  0005                     _PORTA	set	5
   319  0063                     _SSPIF	set	99
   320  0093                     _SSPADD	set	147
   321  0094                     _SSPSTAT	set	148
   322  0091                     _SSPCON2	set	145
   323  008F                     _OSCCONbits	set	143
   324  048B                     _RCEN	set	1163
   325  048E                     _ACKSTAT	set	1166
   326  048C                     _ACKEN	set	1164
   327  048D                     _ACKDT	set	1165
   328  048A                     _PEN	set	1162
   329  0489                     _RSEN	set	1161
   330  0488                     _SEN	set	1160
   331  043C                     _TRISC4	set	1084
   332  043B                     _TRISC3	set	1083
   333  0189                     _ANSELH	set	393
   334  0188                     _ANSEL	set	392
   335                           
   336                           	psect	strings
   337  0198                     __pstrings:
   338  0198                     stringtab:
   339  0198                     __stringtab:
   340  0198                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343  0198                     stringdir:
   344  0198  3001               	movlw	high stringdir
   345  0199  008A               	movwf	10
   346  019A  0804               	movf	4,w
   347  019B  0A84               	incf	4,f
   348  019C  0782               	addwf	2,f
   349  019D                     __stringbase:
   350  019D  3400               	retlw	0
   351  019E                     __end_of__stringtab:
   352  019E                     STR_1:
   353  019E  3420               	retlw	32	;' '
   354  019F  3420               	retlw	32	;' '
   355  01A0  344D               	retlw	77	;'M'
   356  01A1  346F               	retlw	111	;'o'
   357  01A2  346E               	retlw	110	;'n'
   358  01A3  3465               	retlw	101	;'e'
   359  01A4  3464               	retlw	100	;'d'
   360  01A5  3461               	retlw	97	;'a'
   361  01A6  346E               	retlw	110	;'n'
   362  01A7  3461               	retlw	97	;'a'
   363  01A8  3469               	retlw	105	;'i'
   364  01A9  3474               	retlw	116	;'t'
   365  01AA  346F               	retlw	111	;'o'
   366  01AB  3472               	retlw	114	;'r'
   367  01AC  3400               	retlw	0
   368  01AD                     STR_2:
   369  01AD  3420               	retlw	32	;' '
   370  01AE  3420               	retlw	32	;' '
   371  01AF  3420               	retlw	32	;' '
   372  01B0  3444               	retlw	68	;'D'
   373  01B1  3469               	retlw	105	;'i'
   374  01B2  3467               	retlw	103	;'g'
   375  01B3  3469               	retlw	105	;'i'
   376  01B4  3474               	retlw	116	;'t'
   377  01B5  3461               	retlw	97	;'a'
   378  01B6  346C               	retlw	108	;'l'
   379  01B7  3420               	retlw	32	;' '
   380  01B8  3432               	retlw	50	;'2'
   381  01B9  3400               	retlw	0
   382                           
   383                           	psect	cinit
   384  000F                     start_initialization:	
   385                           ; #config settings
   386                           
   387  000F                     __initialization:
   388                           
   389                           ; Initialize objects allocated to COMMON
   390  000F  120A  118A  228F  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   391  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   392                           
   393                           ; Clear objects allocated to COMMON
   394  0015  01FA               	clrf	__pbssCOMMON& (0+127)
   395  0016                     end_of_initialization:	
   396                           ;End of C runtime variable initialization code
   397                           
   398  0016                     __end_of__initialization:
   399  0016  0183               	clrf	3
   400  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   401                           
   402                           	psect	bssCOMMON
   403  007A                     __pbssCOMMON:
   404  007A                     _RS:
   405  007A                     	ds	1
   406                           
   407                           	psect	dataCOMMON
   408  007B                     __pdataCOMMON:
   409  007B                     _BackLight_State:
   410  007B                     	ds	1
   411                           
   412                           	psect	cstackCOMMON
   413  0070                     __pcstackCOMMON:
   414  0070                     ?_setup:
   415  0070                     ?_I2C_Master_Init:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_LCD_Init:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_LCD_Write_String:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_LCD_SR:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_LCD_SL:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_IO_Expander_Write:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_LCD_CMD:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_isr:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_isr:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_main:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_I2C_Master_Wait:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_I2C_Master_Start:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_I2C_Master_Stop:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_I2C_Master_Write:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_LCD_Write_4Bit:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_LCD_Write_Char:	
   461                           ; 1 bytes @ 0x0
   462                           
   463                           
   464                           ; 1 bytes @ 0x0
   465  0070                     	ds	2
   466  0072                     ??_setup:
   467  0072                     ??_I2C_Master_Init:	
   468                           ; 1 bytes @ 0x2
   469                           
   470  0072                     ??_I2C_Master_Wait:	
   471                           ; 1 bytes @ 0x2
   472                           
   473  0072                     ??_I2C_Master_Start:	
   474                           ; 1 bytes @ 0x2
   475                           
   476  0072                     ??_I2C_Master_Stop:	
   477                           ; 1 bytes @ 0x2
   478                           
   479  0072                     ??_I2C_Master_Write:	
   480                           ; 1 bytes @ 0x2
   481                           
   482  0072                     I2C_Master_Write@data:	
   483                           ; 1 bytes @ 0x2
   484                           
   485                           
   486                           ; 1 bytes @ 0x2
   487  0072                     	ds	1
   488  0073                     ??_IO_Expander_Write:
   489  0073                     IO_Expander_Write@Data:	
   490                           ; 1 bytes @ 0x3
   491                           
   492                           
   493                           ; 1 bytes @ 0x3
   494  0073                     	ds	1
   495  0074                     ??_LCD_Write_4Bit:
   496                           
   497                           ; 1 bytes @ 0x4
   498  0074                     	ds	1
   499  0075                     LCD_Write_4Bit@Nibble:
   500                           
   501                           ; 1 bytes @ 0x5
   502  0075                     	ds	1
   503  0076                     ??_LCD_CMD:
   504  0076                     ??_LCD_Write_Char:	
   505                           ; 1 bytes @ 0x6
   506                           
   507                           
   508                           ; 1 bytes @ 0x6
   509  0076                     	ds	1
   510  0077                     LCD_CMD@CMD:
   511  0077                     LCD_Write_Char@Data:	
   512                           ; 1 bytes @ 0x7
   513                           
   514                           
   515                           ; 1 bytes @ 0x7
   516  0077                     	ds	1
   517  0078                     ??_LCD_Init:
   518  0078                     ?_LCD_Set_Cursor:	
   519                           ; 1 bytes @ 0x8
   520                           
   521  0078                     ??_LCD_Write_String:	
   522                           ; 1 bytes @ 0x8
   523                           
   524  0078                     ??_LCD_SR:	
   525                           ; 1 bytes @ 0x8
   526                           
   527  0078                     ??_LCD_SL:	
   528                           ; 1 bytes @ 0x8
   529                           
   530  0078                     LCD_Set_Cursor@COL:	
   531                           ; 1 bytes @ 0x8
   532                           
   533                           
   534                           ; 1 bytes @ 0x8
   535  0078                     	ds	1
   536  0079                     LCD_Set_Cursor@ROW:
   537                           
   538                           ; 1 bytes @ 0x9
   539  0079                     	ds	1
   540                           
   541                           	psect	cstackBANK0
   542  0020                     __pcstackBANK0:
   543  0020                     ??_LCD_Set_Cursor:
   544  0020                     LCD_Init@I2C_Add:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0020                     LCD_Write_String@i:	
   548                           ; 1 bytes @ 0x0
   549                           
   550                           
   551                           ; 2 bytes @ 0x0
   552  0020                     	ds	2
   553  0022                     LCD_Write_String@Str:
   554                           
   555                           ; 1 bytes @ 0x2
   556  0022                     	ds	1
   557  0023                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x3
   560  0023                     	ds	3
   561                           
   562                           	psect	maintext
   563  001A                     __pmaintext:	
   564 ;;
   565 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   566 ;;
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 69 in file "Main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : B00/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0
   585 ;;      Temps:          0       3       0       0       0
   586 ;;      Totals:         0       3       0       0       0
   587 ;;Total ram usage:        3 bytes
   588 ;; Hardware stack levels required when called:    7
   589 ;; This function calls:
   590 ;;		_I2C_Master_Init
   591 ;;		_LCD_Init
   592 ;;		_LCD_SL
   593 ;;		_LCD_SR
   594 ;;		_LCD_Set_Cursor
   595 ;;		_LCD_Write_String
   596 ;;		_setup
   597 ;; This function is called by:
   598 ;;		Startup code after reset
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           
   603                           ;psect for function _main
   604  001A                     _main:
   605  001A                     l1227:	
   606                           ;incstack = 0
   607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   608                           
   609                           
   610                           ;Main.c: 71:     setup();
   611  001A  120A  118A  2222  120A  118A  	fcall	_setup
   612  001F                     l1229:
   613                           
   614                           ;Main.c: 73:     I2C_Master_Init();
   615  001F  120A  118A  2251  120A  118A  	fcall	_I2C_Master_Init
   616  0024                     l1231:
   617                           
   618                           ;Main.c: 74:     LCD_Init(0x4E);
   619  0024  304E               	movlw	78
   620  0025  120A  118A  20A9  120A  118A  	fcall	_LCD_Init
   621  002A                     l1233:
   622                           
   623                           ;Main.c: 76:     LCD_Set_Cursor(1, 1);
   624  002A  01F8               	clrf	LCD_Set_Cursor@COL
   625  002B  0AF8               	incf	LCD_Set_Cursor@COL,f
   626  002C  3001               	movlw	1
   627  002D  120A  118A  2137  120A  118A  	fcall	_LCD_Set_Cursor
   628  0032                     l1235:
   629                           
   630                           ;Main.c: 77:     LCD_Write_String("  Monedanaitor");
   631  0032  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   632  0033  120A  118A  216F  120A  118A  	fcall	_LCD_Write_String
   633  0038                     l1237:
   634                           
   635                           ;Main.c: 78:     LCD_Set_Cursor(2, 1);
   636  0038  01F8               	clrf	LCD_Set_Cursor@COL
   637  0039  0AF8               	incf	LCD_Set_Cursor@COL,f
   638  003A  3002               	movlw	2
   639  003B  120A  118A  2137  120A  118A  	fcall	_LCD_Set_Cursor
   640  0040                     l1239:
   641                           
   642                           ;Main.c: 79:     LCD_Write_String("   Digital 2");
   643  0040  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   644  0041  120A  118A  216F  120A  118A  	fcall	_LCD_Write_String
   645  0046                     l1241:
   646                           
   647                           ;Main.c: 80:     _delay((unsigned long)((2500)*(8000000/4000.0)));
   648  0046  301A               	movlw	26
   649  0047  1283               	bcf	3,5	;RP0=0, select bank0
   650  0048  1303               	bcf	3,6	;RP1=0, select bank0
   651  0049  00A5               	movwf	??_main+2
   652  004A  305E               	movlw	94
   653  004B  00A4               	movwf	??_main+1
   654  004C  306D               	movlw	109
   655  004D  00A3               	movwf	??_main
   656  004E                     u227:
   657  004E  0BA3               	decfsz	??_main,f
   658  004F  284E               	goto	u227
   659  0050  0BA4               	decfsz	??_main+1,f
   660  0051  284E               	goto	u227
   661  0052  0BA5               	decfsz	??_main+2,f
   662  0053  284E               	goto	u227
   663  0054  2855               	nop2
   664  0055                     l42:	
   665                           ;Main.c: 82:     while(1)
   666                           
   667                           
   668                           ;Main.c: 83:     {;Main.c: 84:     LCD_SR();
   669  0055  120A  118A  225E  120A  118A  	fcall	_LCD_SR
   670  005A                     l1243:
   671                           
   672                           ;Main.c: 85:     _delay((unsigned long)((350)*(8000000/4000.0)));
   673  005A  3004               	movlw	4
   674  005B  1283               	bcf	3,5	;RP0=0, select bank0
   675  005C  1303               	bcf	3,6	;RP1=0, select bank0
   676  005D  00A5               	movwf	??_main+2
   677  005E  308E               	movlw	142
   678  005F  00A4               	movwf	??_main+1
   679  0060  3011               	movlw	17
   680  0061  00A3               	movwf	??_main
   681  0062                     u237:
   682  0062  0BA3               	decfsz	??_main,f
   683  0063  2862               	goto	u237
   684  0064  0BA4               	decfsz	??_main+1,f
   685  0065  2862               	goto	u237
   686  0066  0BA5               	decfsz	??_main+2,f
   687  0067  2862               	goto	u237
   688  0068  2869               	nop2
   689  0069                     l1245:
   690                           
   691                           ;Main.c: 86:     LCD_SR();
   692  0069  120A  118A  225E  120A  118A  	fcall	_LCD_SR
   693                           
   694                           ;Main.c: 87:     _delay((unsigned long)((350)*(8000000/4000.0)));
   695  006E  3004               	movlw	4
   696  006F  1283               	bcf	3,5	;RP0=0, select bank0
   697  0070  1303               	bcf	3,6	;RP1=0, select bank0
   698  0071  00A5               	movwf	??_main+2
   699  0072  308E               	movlw	142
   700  0073  00A4               	movwf	??_main+1
   701  0074  3011               	movlw	17
   702  0075  00A3               	movwf	??_main
   703  0076                     u247:
   704  0076  0BA3               	decfsz	??_main,f
   705  0077  2876               	goto	u247
   706  0078  0BA4               	decfsz	??_main+1,f
   707  0079  2876               	goto	u247
   708  007A  0BA5               	decfsz	??_main+2,f
   709  007B  2876               	goto	u247
   710  007C  287D               	nop2
   711  007D                     l1247:
   712                           
   713                           ;Main.c: 88:     LCD_SL();
   714  007D  120A  118A  226A  120A  118A  	fcall	_LCD_SL
   715  0082                     l1249:
   716                           
   717                           ;Main.c: 89:     _delay((unsigned long)((350)*(8000000/4000.0)));
   718  0082  3004               	movlw	4
   719  0083  1283               	bcf	3,5	;RP0=0, select bank0
   720  0084  1303               	bcf	3,6	;RP1=0, select bank0
   721  0085  00A5               	movwf	??_main+2
   722  0086  308E               	movlw	142
   723  0087  00A4               	movwf	??_main+1
   724  0088  3011               	movlw	17
   725  0089  00A3               	movwf	??_main
   726  008A                     u257:
   727  008A  0BA3               	decfsz	??_main,f
   728  008B  288A               	goto	u257
   729  008C  0BA4               	decfsz	??_main+1,f
   730  008D  288A               	goto	u257
   731  008E  0BA5               	decfsz	??_main+2,f
   732  008F  288A               	goto	u257
   733  0090  2891               	nop2
   734                           
   735                           ;Main.c: 90:     LCD_SL();
   736  0091  120A  118A  226A  120A  118A  	fcall	_LCD_SL
   737  0096                     l1251:
   738                           
   739                           ;Main.c: 91:     _delay((unsigned long)((350)*(8000000/4000.0)));
   740  0096  3004               	movlw	4
   741  0097  1283               	bcf	3,5	;RP0=0, select bank0
   742  0098  1303               	bcf	3,6	;RP1=0, select bank0
   743  0099  00A5               	movwf	??_main+2
   744  009A  308E               	movlw	142
   745  009B  00A4               	movwf	??_main+1
   746  009C  3011               	movlw	17
   747  009D  00A3               	movwf	??_main
   748  009E                     u267:
   749  009E  0BA3               	decfsz	??_main,f
   750  009F  289E               	goto	u267
   751  00A0  0BA4               	decfsz	??_main+1,f
   752  00A1  289E               	goto	u267
   753  00A2  0BA5               	decfsz	??_main+2,f
   754  00A3  289E               	goto	u267
   755  00A4  28A5               	nop2
   756  00A5  2855               	goto	l42
   757  00A6  120A  118A  280C   	ljmp	start
   758  00A9                     __end_of_main:
   759                           
   760                           	psect	text1
   761  0222                     __ptext1:	
   762 ;; *************** function _setup *****************
   763 ;; Defined at:
   764 ;;		line 100 in file "Main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		status,2
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    1
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _setup
   794  0222                     _setup:
   795  0222                     l797:	
   796                           ;incstack = 0
   797                           ; Regs used in _setup: [status,2]
   798                           
   799                           
   800                           ;Main.c: 102:     ANSEL = 0;
   801  0222  1683               	bsf	3,5	;RP0=1, select bank3
   802  0223  1703               	bsf	3,6	;RP1=1, select bank3
   803  0224  0188               	clrf	8	;volatile
   804                           
   805                           ;Main.c: 103:     ANSELH = 0;
   806  0225  0189               	clrf	9	;volatile
   807                           
   808                           ;Main.c: 116:     PORTA = 0x00;
   809  0226  1283               	bcf	3,5	;RP0=0, select bank0
   810  0227  1303               	bcf	3,6	;RP1=0, select bank0
   811  0228  0185               	clrf	5	;volatile
   812                           
   813                           ;Main.c: 117:     PORTB = 0x00;
   814  0229  0186               	clrf	6	;volatile
   815                           
   816                           ;Main.c: 118:     PORTC = 0x00;
   817  022A  0187               	clrf	7	;volatile
   818                           
   819                           ;Main.c: 119:     PORTD = 0x00;
   820  022B  0188               	clrf	8	;volatile
   821                           
   822                           ;Main.c: 120:     PORTE = 0x00;
   823  022C  0189               	clrf	9	;volatile
   824  022D                     l799:
   825                           
   826                           ;Main.c: 123:     OSCCONbits.IRCF0 = 1;
   827  022D  1683               	bsf	3,5	;RP0=1, select bank1
   828  022E  1303               	bcf	3,6	;RP1=0, select bank1
   829  022F  160F               	bsf	15,4	;volatile
   830  0230                     l801:
   831                           
   832                           ;Main.c: 124:     OSCCONbits.IRCF1 = 1;
   833  0230  168F               	bsf	15,5	;volatile
   834  0231                     l803:
   835                           
   836                           ;Main.c: 125:     OSCCONbits.IRCF2 = 1;
   837  0231  170F               	bsf	15,6	;volatile
   838  0232                     l805:
   839                           
   840                           ;Main.c: 126:     OSCCONbits.SCS = 1;
   841  0232  140F               	bsf	15,0	;volatile
   842  0233                     l48:
   843  0233  0008               	return
   844  0234                     __end_of_setup:
   845                           
   846                           	psect	text2
   847  016F                     __ptext2:	
   848 ;; *************** function _LCD_Write_String *****************
   849 ;; Defined at:
   850 ;;		line 140 in file "I2C_LCD.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  Str             1    wreg     PTR unsigned char 
   853 ;;		 -> STR_2(13), STR_1(15), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  Str             1    2[BANK0 ] PTR unsigned char 
   856 ;;		 -> STR_2(13), STR_1(15), 
   857 ;;  i               2    0[BANK0 ] int 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       3       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       3       0       0       0
   871 ;;Total ram usage:        3 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    6
   874 ;; This function calls:
   875 ;;		_LCD_Write_Char
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _LCD_Write_String
   883  016F                     _LCD_Write_String:
   884                           
   885                           ;incstack = 0
   886                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   887                           ;LCD_Write_String@Str stored from wreg
   888  016F  1283               	bcf	3,5	;RP0=0, select bank0
   889  0170  1303               	bcf	3,6	;RP1=0, select bank0
   890  0171  00A2               	movwf	LCD_Write_String@Str
   891  0172                     l1211:
   892                           
   893                           ;I2C_LCD.c: 140: void LCD_Write_String(char* Str);I2C_LCD.c: 141: {;I2C_LCD.c: 142:     
      +                          for(int i=0; Str[i]!='\0'; i++)
   894  0172  01A0               	clrf	LCD_Write_String@i
   895  0173  01A1               	clrf	LCD_Write_String@i+1
   896  0174  298A               	goto	l1217
   897  0175                     l1213:
   898                           
   899                           ;I2C_LCD.c: 143:        LCD_Write_Char(Str[i]);
   900  0175  0820               	movf	LCD_Write_String@i,w
   901  0176  0722               	addwf	LCD_Write_String@Str,w
   902  0177  0084               	movwf	4
   903  0178  120A  118A  2198  120A  118A  	fcall	stringdir
   904  017D  120A  118A  21BA  120A  118A  	fcall	_LCD_Write_Char
   905  0182                     l1215:
   906  0182  3001               	movlw	1
   907  0183  1283               	bcf	3,5	;RP0=0, select bank0
   908  0184  1303               	bcf	3,6	;RP1=0, select bank0
   909  0185  07A0               	addwf	LCD_Write_String@i,f
   910  0186  1803               	skipnc
   911  0187  0AA1               	incf	LCD_Write_String@i+1,f
   912  0188  3000               	movlw	0
   913  0189  07A1               	addwf	LCD_Write_String@i+1,f
   914  018A                     l1217:
   915  018A  0820               	movf	LCD_Write_String@i,w
   916  018B  0722               	addwf	LCD_Write_String@Str,w
   917  018C  0084               	movwf	4
   918  018D  120A  118A  2198  120A  118A  	fcall	stringdir
   919  0192  3A00               	xorlw	0
   920  0193  1D03               	skipz
   921  0194  2996               	goto	u201
   922  0195  2997               	goto	u200
   923  0196                     u201:
   924  0196  2975               	goto	l1213
   925  0197                     u200:
   926  0197                     l147:
   927  0197  0008               	return
   928  0198                     __end_of_LCD_Write_String:
   929                           
   930                           	psect	text3
   931  01BA                     __ptext3:	
   932 ;; *************** function _LCD_Write_Char *****************
   933 ;; Defined at:
   934 ;;		line 133 in file "I2C_LCD.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  Data            1    wreg     unsigned char 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;  Data            1    7[COMMON] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         1       0       0       0       0
   950 ;;      Temps:          1       0       0       0       0
   951 ;;      Totals:         2       0       0       0       0
   952 ;;Total ram usage:        2 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    5
   955 ;; This function calls:
   956 ;;		_LCD_Write_4Bit
   957 ;; This function is called by:
   958 ;;		_LCD_Write_String
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _LCD_Write_Char
   964  01BA                     _LCD_Write_Char:
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   968                           ;LCD_Write_Char@Data stored from wreg
   969  01BA  00F7               	movwf	LCD_Write_Char@Data
   970  01BB                     l1165:
   971                           
   972                           ;I2C_LCD.c: 133: void LCD_Write_Char(char Data);I2C_LCD.c: 134: {;I2C_LCD.c: 135:   RS =
      +                           1;
   973  01BB  01FA               	clrf	_RS
   974  01BC  0AFA               	incf	_RS,f
   975  01BD                     l1167:
   976                           
   977                           ;I2C_LCD.c: 136:   LCD_Write_4Bit(Data & 0xF0);
   978  01BD  0877               	movf	LCD_Write_Char@Data,w
   979  01BE  39F0               	andlw	240
   980  01BF  120A  118A  220A  120A  118A  	fcall	_LCD_Write_4Bit
   981                           
   982                           ;I2C_LCD.c: 137:   LCD_Write_4Bit((Data << 4) & 0xF0);
   983  01C4  0877               	movf	LCD_Write_Char@Data,w
   984  01C5  00F6               	movwf	??_LCD_Write_Char
   985  01C6  3003               	movlw	3
   986  01C7                     u195:
   987  01C7  1003               	clrc
   988  01C8  0DF6               	rlf	??_LCD_Write_Char,f
   989  01C9  3EFF               	addlw	-1
   990  01CA  1D03               	skipz
   991  01CB  29C7               	goto	u195
   992  01CC  1003               	clrc
   993  01CD  0D76               	rlf	??_LCD_Write_Char,w
   994  01CE  39F0               	andlw	240
   995  01CF  120A  118A  220A  120A  118A  	fcall	_LCD_Write_4Bit
   996  01D4                     l141:
   997  01D4  0008               	return
   998  01D5                     __end_of_LCD_Write_Char:
   999                           
  1000                           	psect	text4
  1001  0137                     __ptext4:	
  1002 ;; *************** function _LCD_Set_Cursor *****************
  1003 ;; Defined at:
  1004 ;;		line 146 in file "I2C_LCD.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  ROW             1    wreg     unsigned char 
  1007 ;;  COL             1    8[COMMON] unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  ROW             1    9[COMMON] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         1       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0
  1021 ;;      Temps:          0       2       0       0       0
  1022 ;;      Totals:         2       2       0       0       0
  1023 ;;Total ram usage:        4 bytes
  1024 ;; Hardware stack levels used:    1
  1025 ;; Hardware stack levels required when called:    6
  1026 ;; This function calls:
  1027 ;;		_LCD_CMD
  1028 ;; This function is called by:
  1029 ;;		_main
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _LCD_Set_Cursor
  1035  0137                     _LCD_Set_Cursor:
  1036                           
  1037                           ;incstack = 0
  1038                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1039                           ;LCD_Set_Cursor@ROW stored from wreg
  1040  0137  00F9               	movwf	LCD_Set_Cursor@ROW
  1041  0138                     l1195:
  1042                           
  1043                           ;I2C_LCD.c: 146: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          7: {;I2C_LCD.c: 148:   switch(ROW)
  1044  0138  2959               	goto	l1205
  1045  0139                     l1197:
  1046                           
  1047                           ;I2C_LCD.c: 151:       LCD_CMD(0xC0 + COL-1);
  1048  0139  0878               	movf	LCD_Set_Cursor@COL,w
  1049  013A  3EBF               	addlw	191
  1050  013B  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1051                           
  1052                           ;I2C_LCD.c: 152:       break;
  1053  0140  296E               	goto	l156
  1054  0141                     l1199:
  1055                           
  1056                           ;I2C_LCD.c: 154:       LCD_CMD(0x94 + COL-1);
  1057  0141  0878               	movf	LCD_Set_Cursor@COL,w
  1058  0142  3E93               	addlw	147
  1059  0143  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1060                           
  1061                           ;I2C_LCD.c: 155:       break;
  1062  0148  296E               	goto	l156
  1063  0149                     l1201:
  1064                           
  1065                           ;I2C_LCD.c: 157:       LCD_CMD(0xD4 + COL-1);
  1066  0149  0878               	movf	LCD_Set_Cursor@COL,w
  1067  014A  3ED3               	addlw	211
  1068  014B  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1069                           
  1070                           ;I2C_LCD.c: 158:       break;
  1071  0150  296E               	goto	l156
  1072  0151                     l1203:
  1073                           
  1074                           ;I2C_LCD.c: 161:       LCD_CMD(0x80 + COL-1);
  1075  0151  0878               	movf	LCD_Set_Cursor@COL,w
  1076  0152  3E7F               	addlw	127
  1077  0153  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1078                           
  1079                           ;I2C_LCD.c: 162:   }
  1080  0158  296E               	goto	l156
  1081  0159                     l1205:
  1082  0159  0879               	movf	LCD_Set_Cursor@ROW,w
  1083  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1084  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1085  015C  00A0               	movwf	??_LCD_Set_Cursor
  1086  015D  01A1               	clrf	??_LCD_Set_Cursor+1
  1087                           
  1088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1089                           ; Switch size 1, requested type "simple"
  1090                           ; Number of cases is 1, Range of values is 0 to 0
  1091                           ; switch strategies available:
  1092                           ; Name         Instructions Cycles
  1093                           ; simple_byte            4     3 (average)
  1094                           ; direct_byte           11     8 (fixed)
  1095                           ; jumptable            260     6 (fixed)
  1096                           ;	Chosen strategy is simple_byte
  1097  015E  0821               	movf	??_LCD_Set_Cursor+1,w
  1098  015F  3A00               	xorlw	0	; case 0
  1099  0160  1903               	skipnz
  1100  0161  2963               	goto	l1311
  1101  0162  2951               	goto	l1203
  1102  0163                     l1311:
  1103                           
  1104                           ; Switch size 1, requested type "simple"
  1105                           ; Number of cases is 3, Range of values is 2 to 4
  1106                           ; switch strategies available:
  1107                           ; Name         Instructions Cycles
  1108                           ; simple_byte           10     6 (average)
  1109                           ; direct_byte           20    11 (fixed)
  1110                           ; jumptable            263     9 (fixed)
  1111                           ;	Chosen strategy is simple_byte
  1112  0163  0820               	movf	??_LCD_Set_Cursor,w
  1113  0164  3A02               	xorlw	2	; case 2
  1114  0165  1903               	skipnz
  1115  0166  2939               	goto	l1197
  1116  0167  3A01               	xorlw	1	; case 3
  1117  0168  1903               	skipnz
  1118  0169  2941               	goto	l1199
  1119  016A  3A07               	xorlw	7	; case 4
  1120  016B  1903               	skipnz
  1121  016C  2949               	goto	l1201
  1122  016D  2951               	goto	l1203
  1123  016E                     l156:
  1124  016E  0008               	return
  1125  016F                     __end_of_LCD_Set_Cursor:
  1126                           
  1127                           	psect	text5
  1128  025E                     __ptext5:	
  1129 ;; *************** function _LCD_SR *****************
  1130 ;; Defined at:
  1131 ;;		line 183 in file "I2C_LCD.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0
  1147 ;;      Temps:          1       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    6
  1152 ;; This function calls:
  1153 ;;		_LCD_CMD
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           
  1160                           ;psect for function _LCD_SR
  1161  025E                     _LCD_SR:
  1162  025E                     l1219:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _LCD_SR: [wreg+status,2+status,0+pclath+cstack]
  1165                           
  1166                           
  1167                           ;I2C_LCD.c: 185:   LCD_CMD(0x1C);
  1168  025E  301C               	movlw	28
  1169  025F  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1170  0264                     l1221:
  1171                           
  1172                           ;I2C_LCD.c: 186:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  1173  0264  301A               	movlw	26
  1174  0265  00F8               	movwf	??_LCD_SR
  1175  0266                     u277:
  1176  0266  0BF8               	decfsz	??_LCD_SR,f
  1177  0267  2A66               	goto	u277
  1178  0268  0000               	nop
  1179  0269                     l168:
  1180  0269  0008               	return
  1181  026A                     __end_of_LCD_SR:
  1182                           
  1183                           	psect	text6
  1184  026A                     __ptext6:	
  1185 ;; *************** function _LCD_SL *****************
  1186 ;; Defined at:
  1187 ;;		line 177 in file "I2C_LCD.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0
  1204 ;;      Totals:         1       0       0       0       0
  1205 ;;Total ram usage:        1 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    6
  1208 ;; This function calls:
  1209 ;;		_LCD_CMD
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           
  1216                           ;psect for function _LCD_SL
  1217  026A                     _LCD_SL:
  1218  026A                     l1223:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _LCD_SL: [wreg+status,2+status,0+pclath+cstack]
  1221                           
  1222                           
  1223                           ;I2C_LCD.c: 179:   LCD_CMD(0x18);
  1224  026A  3018               	movlw	24
  1225  026B  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1226  0270                     l1225:
  1227                           
  1228                           ;I2C_LCD.c: 180:   _delay((unsigned long)((40)*(8000000/4000000.0)));
  1229  0270  301A               	movlw	26
  1230  0271  00F8               	movwf	??_LCD_SL
  1231  0272                     u287:
  1232  0272  0BF8               	decfsz	??_LCD_SL,f
  1233  0273  2A72               	goto	u287
  1234  0274  0000               	nop
  1235  0275                     l165:
  1236  0275  0008               	return
  1237  0276                     __end_of_LCD_SL:
  1238                           
  1239                           	psect	text7
  1240  00A9                     __ptext7:	
  1241 ;; *************** function _LCD_Init *****************
  1242 ;; Defined at:
  1243 ;;		line 86 in file "I2C_LCD.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  I2C_Add         1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         0       1       0       0       0
  1259 ;;      Temps:          2       0       0       0       0
  1260 ;;      Totals:         2       1       0       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    6
  1264 ;; This function calls:
  1265 ;;		_IO_Expander_Write
  1266 ;;		_LCD_CMD
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           
  1273                           ;psect for function _LCD_Init
  1274  00A9                     _LCD_Init:
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1278                           ;LCD_Init@I2C_Add stored from wreg
  1279  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1280  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1281  00AB  00A0               	movwf	LCD_Init@I2C_Add
  1282  00AC                     l1169:
  1283                           
  1284                           ;I2C_LCD.c: 86: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 87: {;I2C_LCD.c: 88:   i
      +                          2c_add = I2C_Add;
  1285  00AC  0820               	movf	LCD_Init@I2C_Add,w
  1286  00AD  00F8               	movwf	??_LCD_Init
  1287  00AE  0878               	movf	??_LCD_Init,w
  1288  00AF  00A6               	movwf	_i2c_add
  1289  00B0                     l1171:
  1290                           
  1291                           ;I2C_LCD.c: 89:   IO_Expander_Write(0x00);
  1292  00B0  3000               	movlw	0
  1293  00B1  120A  118A  21D5  120A  118A  	fcall	_IO_Expander_Write
  1294  00B6                     l1173:
  1295                           
  1296                           ;I2C_LCD.c: 90:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1297  00B6  304E               	movlw	78
  1298  00B7  00F9               	movwf	??_LCD_Init+1
  1299  00B8  30EB               	movlw	235
  1300  00B9  00F8               	movwf	??_LCD_Init
  1301  00BA                     u297:
  1302  00BA  0BF8               	decfsz	??_LCD_Init,f
  1303  00BB  28BA               	goto	u297
  1304  00BC  0BF9               	decfsz	??_LCD_Init+1,f
  1305  00BD  28BA               	goto	u297
  1306                           
  1307                           ;I2C_LCD.c: 91:   LCD_CMD(0x03);
  1308  00BE  3003               	movlw	3
  1309  00BF  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1310  00C4                     l1175:
  1311                           
  1312                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1313  00C4  300D               	movlw	13
  1314  00C5  00F9               	movwf	??_LCD_Init+1
  1315  00C6  30FB               	movlw	251
  1316  00C7  00F8               	movwf	??_LCD_Init
  1317  00C8                     u307:
  1318  00C8  0BF8               	decfsz	??_LCD_Init,f
  1319  00C9  28C8               	goto	u307
  1320  00CA  0BF9               	decfsz	??_LCD_Init+1,f
  1321  00CB  28C8               	goto	u307
  1322  00CC  28CD               	nop2
  1323  00CD                     l1177:
  1324                           
  1325                           ;I2C_LCD.c: 93:   LCD_CMD(0x03);
  1326  00CD  3003               	movlw	3
  1327  00CE  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1328                           
  1329                           ;I2C_LCD.c: 94:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1330  00D3  300D               	movlw	13
  1331  00D4  00F9               	movwf	??_LCD_Init+1
  1332  00D5  30FB               	movlw	251
  1333  00D6  00F8               	movwf	??_LCD_Init
  1334  00D7                     u317:
  1335  00D7  0BF8               	decfsz	??_LCD_Init,f
  1336  00D8  28D7               	goto	u317
  1337  00D9  0BF9               	decfsz	??_LCD_Init+1,f
  1338  00DA  28D7               	goto	u317
  1339  00DB  28DC               	nop2
  1340  00DC                     l1179:
  1341                           
  1342                           ;I2C_LCD.c: 95:   LCD_CMD(0x03);
  1343  00DC  3003               	movlw	3
  1344  00DD  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1345  00E2                     l1181:
  1346                           
  1347                           ;I2C_LCD.c: 96:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1348  00E2  300D               	movlw	13
  1349  00E3  00F9               	movwf	??_LCD_Init+1
  1350  00E4  30FB               	movlw	251
  1351  00E5  00F8               	movwf	??_LCD_Init
  1352  00E6                     u327:
  1353  00E6  0BF8               	decfsz	??_LCD_Init,f
  1354  00E7  28E6               	goto	u327
  1355  00E8  0BF9               	decfsz	??_LCD_Init+1,f
  1356  00E9  28E6               	goto	u327
  1357  00EA  28EB               	nop2
  1358                           
  1359                           ;I2C_LCD.c: 97:   LCD_CMD(0x02);
  1360  00EB  3002               	movlw	2
  1361  00EC  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1362  00F1                     l1183:
  1363                           
  1364                           ;I2C_LCD.c: 98:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1365  00F1  300D               	movlw	13
  1366  00F2  00F9               	movwf	??_LCD_Init+1
  1367  00F3  30FB               	movlw	251
  1368  00F4  00F8               	movwf	??_LCD_Init
  1369  00F5                     u337:
  1370  00F5  0BF8               	decfsz	??_LCD_Init,f
  1371  00F6  28F5               	goto	u337
  1372  00F7  0BF9               	decfsz	??_LCD_Init+1,f
  1373  00F8  28F5               	goto	u337
  1374  00F9  28FA               	nop2
  1375  00FA                     l1185:
  1376                           
  1377                           ;I2C_LCD.c: 99:   LCD_CMD(0x20 | (2 << 2));
  1378  00FA  3028               	movlw	40
  1379  00FB  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1380                           
  1381                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1382  0100  3082               	movlw	130
  1383  0101  00F9               	movwf	??_LCD_Init+1
  1384  0102  30DD               	movlw	221
  1385  0103  00F8               	movwf	??_LCD_Init
  1386  0104                     u347:
  1387  0104  0BF8               	decfsz	??_LCD_Init,f
  1388  0105  2904               	goto	u347
  1389  0106  0BF9               	decfsz	??_LCD_Init+1,f
  1390  0107  2904               	goto	u347
  1391  0108  2909               	nop2
  1392  0109                     l1187:
  1393                           
  1394                           ;I2C_LCD.c: 101:   LCD_CMD(0x0C);
  1395  0109  300C               	movlw	12
  1396  010A  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1397  010F                     l1189:
  1398                           
  1399                           ;I2C_LCD.c: 102:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1400  010F  3082               	movlw	130
  1401  0110  00F9               	movwf	??_LCD_Init+1
  1402  0111  30DD               	movlw	221
  1403  0112  00F8               	movwf	??_LCD_Init
  1404  0113                     u357:
  1405  0113  0BF8               	decfsz	??_LCD_Init,f
  1406  0114  2913               	goto	u357
  1407  0115  0BF9               	decfsz	??_LCD_Init+1,f
  1408  0116  2913               	goto	u357
  1409  0117  2918               	nop2
  1410                           
  1411                           ;I2C_LCD.c: 103:   LCD_CMD(0x01);
  1412  0118  3001               	movlw	1
  1413  0119  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1414  011E                     l1191:
  1415                           
  1416                           ;I2C_LCD.c: 104:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1417  011E  3082               	movlw	130
  1418  011F  00F9               	movwf	??_LCD_Init+1
  1419  0120  30DD               	movlw	221
  1420  0121  00F8               	movwf	??_LCD_Init
  1421  0122                     u367:
  1422  0122  0BF8               	decfsz	??_LCD_Init,f
  1423  0123  2922               	goto	u367
  1424  0124  0BF9               	decfsz	??_LCD_Init+1,f
  1425  0125  2922               	goto	u367
  1426  0126  2927               	nop2
  1427  0127                     l1193:
  1428                           
  1429                           ;I2C_LCD.c: 105:   LCD_CMD(0x04 | 0x02);
  1430  0127  3006               	movlw	6
  1431  0128  120A  118A  21F0  120A  118A  	fcall	_LCD_CMD
  1432                           
  1433                           ;I2C_LCD.c: 106:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1434  012D  3082               	movlw	130
  1435  012E  00F9               	movwf	??_LCD_Init+1
  1436  012F  30DD               	movlw	221
  1437  0130  00F8               	movwf	??_LCD_Init
  1438  0131                     u377:
  1439  0131  0BF8               	decfsz	??_LCD_Init,f
  1440  0132  2931               	goto	u377
  1441  0133  0BF9               	decfsz	??_LCD_Init+1,f
  1442  0134  2931               	goto	u377
  1443  0135  2936               	nop2
  1444  0136                     l129:
  1445  0136  0008               	return
  1446  0137                     __end_of_LCD_Init:
  1447                           
  1448                           	psect	text8
  1449  01F0                     __ptext8:	
  1450 ;; *************** function _LCD_CMD *****************
  1451 ;; Defined at:
  1452 ;;		line 126 in file "I2C_LCD.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  CMD             1    wreg     unsigned char 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  CMD             1    7[COMMON] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1466 ;;      Params:         0       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0
  1468 ;;      Temps:          1       0       0       0       0
  1469 ;;      Totals:         2       0       0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		_LCD_Write_4Bit
  1475 ;; This function is called by:
  1476 ;;		_LCD_Init
  1477 ;;		_LCD_Set_Cursor
  1478 ;;		_LCD_SL
  1479 ;;		_LCD_SR
  1480 ;;		_LCD_Clear
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function _LCD_CMD
  1486  01F0                     _LCD_CMD:
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1490                           ;LCD_CMD@CMD stored from wreg
  1491  01F0  00F7               	movwf	LCD_CMD@CMD
  1492  01F1                     l1159:
  1493                           
  1494                           ;I2C_LCD.c: 126: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 127: {;I2C_LCD.c: 128:   RS 
      +                          = 0;
  1495  01F1  01FA               	clrf	_RS
  1496  01F2                     l1161:
  1497                           
  1498                           ;I2C_LCD.c: 129:   LCD_Write_4Bit(CMD & 0xF0);
  1499  01F2  0877               	movf	LCD_CMD@CMD,w
  1500  01F3  39F0               	andlw	240
  1501  01F4  120A  118A  220A  120A  118A  	fcall	_LCD_Write_4Bit
  1502  01F9                     l1163:
  1503                           
  1504                           ;I2C_LCD.c: 130:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  1505  01F9  0877               	movf	LCD_CMD@CMD,w
  1506  01FA  00F6               	movwf	??_LCD_CMD
  1507  01FB  3003               	movlw	3
  1508  01FC                     u185:
  1509  01FC  1003               	clrc
  1510  01FD  0DF6               	rlf	??_LCD_CMD,f
  1511  01FE  3EFF               	addlw	-1
  1512  01FF  1D03               	skipz
  1513  0200  29FC               	goto	u185
  1514  0201  1003               	clrc
  1515  0202  0D76               	rlf	??_LCD_CMD,w
  1516  0203  39F0               	andlw	240
  1517  0204  120A  118A  220A  120A  118A  	fcall	_LCD_Write_4Bit
  1518  0209                     l138:
  1519  0209  0008               	return
  1520  020A                     __end_of_LCD_CMD:
  1521                           
  1522                           	psect	text9
  1523  020A                     __ptext9:	
  1524 ;; *************** function _LCD_Write_4Bit *****************
  1525 ;; Defined at:
  1526 ;;		line 117 in file "I2C_LCD.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  Nibble          1    wreg     unsigned char 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  Nibble          1    5[COMMON] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0, pclath, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1540 ;;      Params:         0       0       0       0       0
  1541 ;;      Locals:         1       0       0       0       0
  1542 ;;      Temps:          1       0       0       0       0
  1543 ;;      Totals:         2       0       0       0       0
  1544 ;;Total ram usage:        2 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:    4
  1547 ;; This function calls:
  1548 ;;		_IO_Expander_Write
  1549 ;; This function is called by:
  1550 ;;		_LCD_CMD
  1551 ;;		_LCD_Write_Char
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           
  1556                           ;psect for function _LCD_Write_4Bit
  1557  020A                     _LCD_Write_4Bit:
  1558                           
  1559                           ;incstack = 0
  1560                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  1561                           ;LCD_Write_4Bit@Nibble stored from wreg
  1562  020A  00F5               	movwf	LCD_Write_4Bit@Nibble
  1563  020B                     l1153:
  1564                           
  1565                           ;I2C_LCD.c: 117: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 118: {;I2C_LCD.c: 
      +                          120:   Nibble |= RS;
  1566  020B  087A               	movf	_RS,w
  1567  020C  00F4               	movwf	??_LCD_Write_4Bit
  1568  020D  0874               	movf	??_LCD_Write_4Bit,w
  1569  020E  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  1570  020F                     l1155:
  1571                           
  1572                           ;I2C_LCD.c: 121:   IO_Expander_Write(Nibble | 0x04);
  1573  020F  0875               	movf	LCD_Write_4Bit@Nibble,w
  1574  0210  3804               	iorlw	4
  1575  0211  120A  118A  21D5  120A  118A  	fcall	_IO_Expander_Write
  1576  0216                     l1157:
  1577                           
  1578                           ;I2C_LCD.c: 122:   IO_Expander_Write(Nibble & 0xFB);
  1579  0216  0875               	movf	LCD_Write_4Bit@Nibble,w
  1580  0217  39FB               	andlw	251
  1581  0218  120A  118A  21D5  120A  118A  	fcall	_IO_Expander_Write
  1582                           
  1583                           ;I2C_LCD.c: 123:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  1584  021D  3021               	movlw	33
  1585  021E  00F4               	movwf	??_LCD_Write_4Bit
  1586  021F                     u387:
  1587  021F  0BF4               	decfsz	??_LCD_Write_4Bit,f
  1588  0220  2A1F               	goto	u387
  1589  0221                     l135:
  1590  0221  0008               	return
  1591  0222                     __end_of_LCD_Write_4Bit:
  1592                           
  1593                           	psect	text10
  1594  01D5                     __ptext10:	
  1595 ;; *************** function _IO_Expander_Write *****************
  1596 ;; Defined at:
  1597 ;;		line 109 in file "I2C_LCD.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;  Data            1    wreg     unsigned char 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  Data            1    3[COMMON] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0
  1614 ;;      Totals:         1       0       0       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		_I2C_Master_Start
  1620 ;;		_I2C_Master_Stop
  1621 ;;		_I2C_Master_Write
  1622 ;; This function is called by:
  1623 ;;		_LCD_Init
  1624 ;;		_LCD_Write_4Bit
  1625 ;;		_Backlight
  1626 ;;		_noBacklight
  1627 ;; This function uses a non-reentrant model
  1628 ;;
  1629                           
  1630                           
  1631                           ;psect for function _IO_Expander_Write
  1632  01D5                     _IO_Expander_Write:
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  1636                           ;IO_Expander_Write@Data stored from wreg
  1637  01D5  00F3               	movwf	IO_Expander_Write@Data
  1638  01D6                     l1151:
  1639                           
  1640                           ;I2C_LCD.c: 109: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 110: {;I2C_LCD.c:
      +                           111:   I2C_Master_Start();
  1641  01D6  120A  118A  227F  120A  118A  	fcall	_I2C_Master_Start
  1642                           
  1643                           ;I2C_LCD.c: 112:   I2C_Master_Write(i2c_add);
  1644  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1645  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1646  01DD  0826               	movf	_i2c_add,w
  1647  01DE  120A  118A  2234  120A  118A  	fcall	_I2C_Master_Write
  1648                           
  1649                           ;I2C_LCD.c: 113:   I2C_Master_Write(Data | BackLight_State);
  1650  01E3  0873               	movf	IO_Expander_Write@Data,w
  1651  01E4  047B               	iorwf	_BackLight_State,w
  1652  01E5  120A  118A  2234  120A  118A  	fcall	_I2C_Master_Write
  1653                           
  1654                           ;I2C_LCD.c: 114:   I2C_Master_Stop();
  1655  01EA  120A  118A  2276  120A  118A  	fcall	_I2C_Master_Stop
  1656  01EF                     l132:
  1657  01EF  0008               	return
  1658  01F0                     __end_of_IO_Expander_Write:
  1659                           
  1660                           	psect	text11
  1661  0234                     __ptext11:	
  1662 ;; *************** function _I2C_Master_Write *****************
  1663 ;; Defined at:
  1664 ;;		line 62 in file "I2C_LCD.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  data            1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  data            1    2[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         1       0       0       0       0
  1682 ;;Total ram usage:        1 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		_I2C_Master_Wait
  1687 ;; This function is called by:
  1688 ;;		_IO_Expander_Write
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _I2C_Master_Write
  1694  0234                     _I2C_Master_Write:
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1698                           ;I2C_Master_Write@data stored from wreg
  1699  0234  00F2               	movwf	I2C_Master_Write@data
  1700  0235                     l1147:
  1701                           
  1702                           ;I2C_LCD.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 63: {;I2C_
      +                          LCD.c: 64:     I2C_Master_Wait();
  1703  0235  120A  118A  2244  120A  118A  	fcall	_I2C_Master_Wait
  1704  023A                     l1149:
  1705                           
  1706                           ;I2C_LCD.c: 65:     SSPBUF = data;
  1707  023A  0872               	movf	I2C_Master_Write@data,w
  1708  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1709  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1710  023D  0093               	movwf	19	;volatile
  1711  023E                     l117:	
  1712                           ;I2C_LCD.c: 66:     while(!SSPIF);
  1713                           
  1714  023E  1D8C               	btfss	12,3	;volatile
  1715  023F  2A41               	goto	u171
  1716  0240  2A42               	goto	u170
  1717  0241                     u171:
  1718  0241  2A3E               	goto	l117
  1719  0242                     u170:
  1720  0242                     l119:
  1721                           
  1722                           ;I2C_LCD.c: 67:  SSPIF = 0;
  1723  0242  118C               	bcf	12,3	;volatile
  1724  0243                     l120:	
  1725                           ;I2C_LCD.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  1726                           
  1727  0243  0008               	return
  1728  0244                     __end_of_I2C_Master_Write:
  1729                           
  1730                           	psect	text12
  1731  0276                     __ptext12:	
  1732 ;; *************** function _I2C_Master_Stop *****************
  1733 ;; Defined at:
  1734 ;;		line 42 in file "I2C_LCD.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, status,2, status,0, pclath, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         0       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         0       0       0       0       0
  1752 ;;Total ram usage:        0 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; Hardware stack levels required when called:    2
  1755 ;; This function calls:
  1756 ;;		_I2C_Master_Wait
  1757 ;; This function is called by:
  1758 ;;		_IO_Expander_Write
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _I2C_Master_Stop
  1764  0276                     _I2C_Master_Stop:
  1765  0276                     l1143:	
  1766                           ;incstack = 0
  1767                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1768                           
  1769                           
  1770                           ;I2C_LCD.c: 44:     I2C_Master_Wait();
  1771  0276  120A  118A  2244  120A  118A  	fcall	_I2C_Master_Wait
  1772  027B                     l1145:
  1773                           
  1774                           ;I2C_LCD.c: 45:     PEN = 1;
  1775  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1776  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1777  027D  1511               	bsf	17,2	;volatile
  1778  027E                     l108:
  1779  027E  0008               	return
  1780  027F                     __end_of_I2C_Master_Stop:
  1781                           
  1782                           	psect	text13
  1783  027F                     __ptext13:	
  1784 ;; *************** function _I2C_Master_Start *****************
  1785 ;; Defined at:
  1786 ;;		line 30 in file "I2C_LCD.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    2
  1807 ;; This function calls:
  1808 ;;		_I2C_Master_Wait
  1809 ;; This function is called by:
  1810 ;;		_IO_Expander_Write
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _I2C_Master_Start
  1816  027F                     _I2C_Master_Start:
  1817  027F                     l1139:	
  1818                           ;incstack = 0
  1819                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1820                           
  1821                           
  1822                           ;I2C_LCD.c: 32:     I2C_Master_Wait();
  1823  027F  120A  118A  2244  120A  118A  	fcall	_I2C_Master_Wait
  1824  0284                     l1141:
  1825                           
  1826                           ;I2C_LCD.c: 33:     SEN = 1;
  1827  0284  1683               	bsf	3,5	;RP0=1, select bank1
  1828  0285  1303               	bcf	3,6	;RP1=0, select bank1
  1829  0286  1411               	bsf	17,0	;volatile
  1830  0287                     l102:
  1831  0287  0008               	return
  1832  0288                     __end_of_I2C_Master_Start:
  1833                           
  1834                           	psect	text14
  1835  0244                     __ptext14:	
  1836 ;; *************** function _I2C_Master_Wait *****************
  1837 ;; Defined at:
  1838 ;;		line 25 in file "I2C_LCD.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0
  1855 ;;      Totals:         0       0       0       0       0
  1856 ;;Total ram usage:        0 bytes
  1857 ;; Hardware stack levels used:    1
  1858 ;; Hardware stack levels required when called:    1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_I2C_Master_Start
  1863 ;;		_I2C_Master_Stop
  1864 ;;		_I2C_Master_Write
  1865 ;;		_I2C_Master_RepeatedStart
  1866 ;;		_I2C_ACK
  1867 ;;		_I2C_NACK
  1868 ;;		_I2C_Read_Byte
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _I2C_Master_Wait
  1874  0244                     _I2C_Master_Wait:
  1875  0244                     l1135:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1878                           
  1879  0244                     l96:	
  1880                           ;I2C_LCD.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1881                           
  1882  0244  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0246  1914               	btfsc	20,2	;volatile
  1885  0247  2A49               	goto	u151
  1886  0248  2A4A               	goto	u150
  1887  0249                     u151:
  1888  0249  2A44               	goto	l96
  1889  024A                     u150:
  1890  024A                     l1137:
  1891  024A  0811               	movf	17,w	;volatile
  1892  024B  391F               	andlw	31
  1893  024C  1D03               	btfss	3,2
  1894  024D  2A4F               	goto	u161
  1895  024E  2A50               	goto	u160
  1896  024F                     u161:
  1897  024F  2A44               	goto	l96
  1898  0250                     u160:
  1899  0250                     l99:
  1900  0250  0008               	return
  1901  0251                     __end_of_I2C_Master_Wait:
  1902                           
  1903                           	psect	text15
  1904  0251                     __ptext15:	
  1905 ;; *************** function _I2C_Master_Init *****************
  1906 ;; Defined at:
  1907 ;;		line 15 in file "I2C_LCD.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1921 ;;      Params:         0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0
  1924 ;;      Totals:         0       0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _I2C_Master_Init
  1937  0251                     _I2C_Master_Init:
  1938  0251                     l807:	
  1939                           ;incstack = 0
  1940                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1941                           
  1942                           
  1943                           ;I2C_LCD.c: 17:   SSPCON = 0x28;
  1944  0251  3028               	movlw	40
  1945  0252  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0253  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0254  0094               	movwf	20	;volatile
  1948  0255                     l809:
  1949                           
  1950                           ;I2C_LCD.c: 18:   SSPCON2 = 0x00;
  1951  0255  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0256  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0257  0191               	clrf	17	;volatile
  1954  0258                     l811:
  1955                           
  1956                           ;I2C_LCD.c: 19:   SSPSTAT = 0x00;
  1957  0258  0194               	clrf	20	;volatile
  1958                           
  1959                           ;I2C_LCD.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  1960  0259  30CF               	movlw	207
  1961  025A  0093               	movwf	19	;volatile
  1962  025B                     l813:
  1963                           
  1964                           ;I2C_LCD.c: 21:   TRISC3 = 1;
  1965  025B  1587               	bsf	7,3	;volatile
  1966  025C                     l815:
  1967                           
  1968                           ;I2C_LCD.c: 22:   TRISC4 = 1;
  1969  025C  1607               	bsf	7,4	;volatile
  1970  025D                     l93:
  1971  025D  0008               	return
  1972  025E                     __end_of_I2C_Master_Init:
  1973                           
  1974                           	psect	text16
  1975  0288                     __ptext16:	
  1976 ;; *************** function _isr *****************
  1977 ;; Defined at:
  1978 ;;		line 61 in file "Main.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;		None
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;		None
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		None
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       0       0       0
  1993 ;;      Locals:         0       0       0       0       0
  1994 ;;      Temps:          2       0       0       0       0
  1995 ;;      Totals:         2       0       0       0       0
  1996 ;;Total ram usage:        2 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		Interrupt level 1
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _isr
  2007  0288                     _isr:
  2008  0288                     i1l37:
  2009  0288  0871               	movf	??_isr+1,w
  2010  0289  008A               	movwf	10
  2011  028A  0E70               	swapf	??_isr,w
  2012  028B  0083               	movwf	3
  2013  028C  0EFE               	swapf	btemp,f
  2014  028D  0E7E               	swapf	btemp,w
  2015  028E  0009               	retfie
  2016  028F                     __end_of_isr:
  2017  007E                     btemp	set	126	;btemp
  2018  007E                     wtemp0	set	126
  2019                           
  2020                           	psect	intentry
  2021  0004                     __pintentry:	
  2022                           ;incstack = 0
  2023                           ; Regs used in _isr: []
  2024                           
  2025  0004                     interrupt_function:
  2026  007E                     saved_w	set	btemp
  2027  0004  00FE               	movwf	btemp
  2028  0005  0E03               	swapf	3,w
  2029  0006  00F0               	movwf	??_isr
  2030  0007  080A               	movf	10,w
  2031  0008  00F1               	movwf	??_isr+1
  2032  0009  120A  118A  2A88   	ljmp	_isr
  2033                           
  2034                           	psect	config
  2035                           
  2036                           ;Config register CONFIG1 @ 0x2007
  2037                           ;	Oscillator Selection bits
  2038                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2039                           ;	Watchdog Timer Enable bit
  2040                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2041                           ;	Power-up Timer Enable bit
  2042                           ;	PWRTE = OFF, PWRT disabled
  2043                           ;	RE3/MCLR pin function select bit
  2044                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2045                           ;	Code Protection bit
  2046                           ;	CP = OFF, Program memory code protection is disabled
  2047                           ;	Data Code Protection bit
  2048                           ;	CPD = OFF, Data memory code protection is disabled
  2049                           ;	Brown Out Reset Selection bits
  2050                           ;	BOREN = OFF, BOR disabled
  2051                           ;	Internal External Switchover bit
  2052                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2053                           ;	Fail-Safe Clock Monitor Enabled bit
  2054                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2055                           ;	Low Voltage Programming Enable bit
  2056                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2057                           ;	In-Circuit Debugger Mode bit
  2058                           ;	DEBUG = 0x1, unprogrammed default
  2059  2007                     	org	8199
  2060  2007  20D4               	dw	8404
  2061                           
  2062                           ;Config register CONFIG2 @ 0x2008
  2063                           ;	Brown-out Reset Selection bit
  2064                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2065                           ;	Flash Program Memory Self Write Enable bits
  2066                           ;	WRT = OFF, Write protection off
  2067  2008                     	org	8200
  2068  2008  3FFF               	dw	16383

Data Sizes:
    Strings     28
    Constant    0
    Data        1
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[13]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_SR->_LCD_CMD
    _LCD_SL->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Write_String

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1575
                                              3 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     391
                                              0 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     524
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SR                                               1     1      0     189
                                              8 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_SL                                               1     1      0     189
                                              8 COMMON     1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_SL
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_SR
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6       7       5        8.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      13      12        0.0%
ABS                  0      0      13       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Aug 27 00:45:17 2021

                         pc 0002                          l42 0055                          l48 0233  
                        l93 025D                          l96 0244                          l99 0250  
                        _RS 007A                          fsr 0004                         l102 0287  
                       l120 0243                         l108 027E                         l132 01EF  
                       l117 023E                         l141 01D4                         l119 0242  
                       l135 0221                         l129 0136                         l138 0209  
                       l147 0197                         l156 016E                         l165 0275  
                       l168 0269                         l801 0230                         l811 0258  
                       l803 0231                         l813 025B                         l805 0232  
                       l815 025C                         l807 0251                         l809 0255  
                       l797 0222                         l799 022D                         u200 0197  
                       u201 0196                         u150 024A                         u151 0249  
                       u160 0250                         u161 024F                         u170 0242  
                       u171 0241                         u307 00C8                         u227 004E  
                       u317 00D7                         u237 0062                         u327 00E6  
                       u247 0076                         _PEN 048A                         u185 01FC  
                       u337 00F5                         u257 008A                         u347 0104  
                       u195 01C7                         u267 009E                         u357 0113  
                       u277 0266                         u367 0122                         u287 0272  
                       u377 0131                         u297 00BA                         u387 021F  
                       _SEN 0488                         _isr 0288                         fsr0 0004  
           __end_of_LCD_CMD 020A         LCD_Write_String@Str 0022              _LCD_Set_Cursor 0137  
                      l1201 0149                        l1203 0151                        l1211 0172  
                      l1141 0284                        l1221 0264                        l1205 0159  
                      l1213 0175                        l1135 0244                        l1143 0276  
                      l1151 01D6                        l1223 026A                        l1311 0163  
                      l1215 0182                        l1231 0024                        l1137 024A  
                      l1145 027B                        l1153 020B                        l1161 01F2  
                      l1225 0270                        l1217 018A                        l1241 0046  
                      l1233 002A                        l1139 027F                        l1147 0235  
                      l1155 020F                        l1163 01F9                        l1171 00B0  
                      l1219 025E                        l1251 0096                        l1243 005A  
                      l1235 0032                        l1227 001A                        l1149 023A  
                      l1157 0216                        l1181 00E2                        l1173 00B6  
                      l1165 01BB                        l1245 0069                        l1237 0038  
                      l1229 001F                        l1159 01F1                        l1191 011E  
                      l1183 00F1                        l1175 00C4                        l1167 01BD  
                      l1247 007D                        l1239 0040                        l1193 0127  
                      l1185 00FA                        l1177 00CD                        l1169 00AC  
                      l1249 0082                        l1187 0109                        l1179 00DC  
                      l1195 0138                        l1189 010F                        l1197 0139  
                      l1199 0141                        ?_isr 0070                        STR_1 019E  
                      STR_2 01AD                        _RCEN 048B                        i1l37 0288  
                      _RSEN 0489           ?_LCD_Write_String 0070                        _main 001A  
                      btemp 007E                        start 000C          ??_LCD_Write_String 0078  
      LCD_Write_4Bit@Nibble 0075                       ??_isr 0070            __end_of_LCD_Init 0137  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
                     _ANSEL 0188                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _SSPIF 0063      __end_of_LCD_Set_Cursor 016F                       _setup 0222  
                     pclath 000A                       status 0003                       wtemp0 007E  
            _LCD_Write_4Bit 020A              _LCD_Write_Char 01BA             __initialization 000F  
              __end_of_main 00A9           _IO_Expander_Write 01D5          ?_IO_Expander_Write 0070  
                    ??_main 0023                   ??_LCD_CMD 0076           ?_I2C_Master_Start 0070  
         ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0073             ?_LCD_Set_Cursor 0078  
        ??_I2C_Master_Start 0072          ??_I2C_Master_Write 0072                      ?_setup 0070  
                    _ANSELH 0189                      _LCD_SL 026A                      _LCD_SR 025E  
                    _SSPADD 0093                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013      __end_of_LCD_Write_4Bit 0222  
    __end_of_LCD_Write_Char 01D5   __end_of_IO_Expander_Write 01F0                __pdataCOMMON 007B  
                    saved_w 007E     __end_of__initialization 0016                   ?_LCD_Init 0070  
           ?_LCD_Write_4Bit 0070             ?_LCD_Write_Char 0070              __pcstackCOMMON 0070  
             __end_of_setup 0234                     ??_setup 0072                     ?_LCD_SL 0070  
                   ?_LCD_SR 0070                  ??_LCD_Init 0078  __size_of_IO_Expander_Write 001B  
                __pmaintext 001A                  __pintentry 0004                     _ACKSTAT 048E  
 __size_of_LCD_Write_String 0029                     _LCD_CMD 01F0                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0198             __size_of_LCD_SL 000C  
           __size_of_LCD_SR 000C                     _i2c_add 0026            ??_LCD_Set_Cursor 0020  
                   __ptext1 0222                     __ptext2 016F                     __ptext3 01BA  
                   __ptext4 0137                     __ptext5 025E                     __ptext6 026A  
                   __ptext7 00A9                     __ptext8 01F0                     __ptext9 020A  
              __size_of_isr 0007    __size_of_I2C_Master_Init 000D    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009        end_of_initialization 0016   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010                  LCD_CMD@CMD 0077            ??_LCD_Write_4Bit 0074  
         LCD_Write_String@i 0020            ??_LCD_Write_Char 0076              __end_of_LCD_SL 0276  
            __end_of_LCD_SR 026A           __size_of_LCD_Init 008E            _LCD_Write_String 016F  
             __pidataCOMMON 028F         start_initialization 000F                 __end_of_isr 028F  
                  ??_LCD_SL 0078                    ??_LCD_SR 0078           ??_I2C_Master_Init 0072  
         ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072                    ?_LCD_CMD 0070  
               __pbssCOMMON 007A                   ___latbits 0002               __pcstackBANK0 0020  
                 __pnvBANK0 0026            _I2C_Master_Start 027F            _I2C_Master_Write 0234  
     IO_Expander_Write@Data 0073        I2C_Master_Write@data 0072                   __pstrings 0198  
            __size_of_setup 0012           interrupt_function 0004                    _LCD_Init 00A9  
               __stringbase 019D            __size_of_LCD_CMD 001A    __end_of_LCD_Write_String 0198  
        __end_of__stringtab 019E             _I2C_Master_Init 0251             _I2C_Master_Wait 0244  
           _I2C_Master_Stop 0276                    __ptext10 01D5                    __ptext11 0234  
                  __ptext12 0276                    __ptext13 027F                    __ptext14 0244  
                  __ptext15 0251                    __ptext16 0288     __size_of_LCD_Set_Cursor 0038  
           _BackLight_State 007B               __size_of_main 008F    __end_of_I2C_Master_Start 0288  
  __end_of_I2C_Master_Write 0244          LCD_Write_Char@Data 0077                    intlevel1 0000  
                 stringcode 0198                  _OSCCONbits 008F     __size_of_LCD_Write_4Bit 0018  
   __size_of_LCD_Write_Char 001B     __end_of_I2C_Master_Init 025E     __end_of_I2C_Master_Wait 0251  
   __end_of_I2C_Master_Stop 027F             LCD_Init@I2C_Add 0020                    stringdir 0198  
                  stringtab 0198           LCD_Set_Cursor@COL 0078           LCD_Set_Cursor@ROW 0079  
