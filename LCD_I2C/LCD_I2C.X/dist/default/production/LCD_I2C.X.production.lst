

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 31 01:03:00 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314                           
   315                           	psect	idataCOMMON
   316  07FF                     __pidataCOMMON:
   317                           
   318                           ;initializer for _BackLight_State
   319  07FF  3408               	retlw	8
   320                           
   321                           	psect	nvBANK1
   322  00BE                     __pnvBANK1:
   323  00BE                     _i2c_add:
   324  00BE                     	ds	1
   325  0013                     _SSPBUF	set	19
   326  0014                     _SSPCON	set	20
   327  0009                     _PORTE	set	9
   328  0008                     _PORTD	set	8
   329  0007                     _PORTC	set	7
   330  0006                     _PORTB	set	6
   331  0005                     _PORTA	set	5
   332  0063                     _SSPIF	set	99
   333  0037                     _RB7	set	55
   334  0028                     _RA0	set	40
   335  0093                     _SSPADD	set	147
   336  0094                     _SSPSTAT	set	148
   337  0091                     _SSPCON2	set	145
   338  008F                     _OSCCONbits	set	143
   339  0088                     _TRISD	set	136
   340  0086                     _TRISBbits	set	134
   341  048B                     _RCEN	set	1163
   342  048E                     _ACKSTAT	set	1166
   343  048C                     _ACKEN	set	1164
   344  048D                     _ACKDT	set	1165
   345  048A                     _PEN	set	1162
   346  0489                     _RSEN	set	1161
   347  0488                     _SEN	set	1160
   348  043C                     _TRISC4	set	1084
   349  043B                     _TRISC3	set	1083
   350  0430                     _TRISB0	set	1072
   351  0428                     _TRISA0	set	1064
   352  0189                     _ANSELH	set	393
   353  0188                     _ANSEL	set	392
   354                           
   355                           	psect	strings
   356  0800                     __pstrings:
   357  0800                     stringtab:
   358  0800                     __stringtab:
   359                           
   360                           ;	String table - string pointers are 1 byte each
   361  0800  1BFF               	btfsc	btemp+1,7
   362  0801  280A               	ljmp	stringcode
   363  0802  1383               	bcf	3,7
   364  0803  187F               	btfsc	btemp+1,0
   365  0804  1783               	bsf	3,7
   366  0805  0800               	movf	0,w
   367  0806  0A84               	incf	4,f
   368  0807  1903               	skipnz
   369  0808  0AFF               	incf	btemp+1,f
   370  0809  0008               	return
   371  080A                     stringcode:
   372  080A                     stringdir:
   373  080A  3008               	movlw	high stringdir
   374  080B  008A               	movwf	10
   375  080C  0804               	movf	4,w
   376  080D  0A84               	incf	4,f
   377  080E  0782               	addwf	2,f
   378  080F                     __stringbase:
   379  080F  3400               	retlw	0
   380  0810                     __end_of__stringtab:
   381  0810                     STR_2:
   382  0810  3420               	retlw	32	;' '
   383  0811  3420               	retlw	32	;' '
   384  0812  3420               	retlw	32	;' '
   385  0813  344D               	retlw	77	;'M'
   386  0814  346F               	retlw	111	;'o'
   387  0815  346E               	retlw	110	;'n'
   388  0816  3465               	retlw	101	;'e'
   389  0817  3464               	retlw	100	;'d'
   390  0818  3461               	retlw	97	;'a'
   391  0819  3473               	retlw	115	;'s'
   392  081A  3420               	retlw	32	;' '
   393  081B  343D               	retlw	61	;'='
   394  081C  3420               	retlw	32	;' '
   395  081D  3451               	retlw	81	;'Q'
   396  081E  3430               	retlw	48	;'0'
   397  081F  342E               	retlw	46	;'.'
   398  0820  3430               	retlw	48	;'0'
   399  0821  3430               	retlw	48	;'0'
   400  0822  3400               	retlw	0
   401  0823                     STR_3:
   402  0823  3420               	retlw	32	;' '
   403  0824  3431               	retlw	49	;'1'
   404  0825  342E               	retlw	46	;'.'
   405  0826  3430               	retlw	48	;'0'
   406  0827  3430               	retlw	48	;'0'
   407  0828  3420               	retlw	32	;' '
   408  0829  3420               	retlw	32	;' '
   409  082A  3430               	retlw	48	;'0'
   410  082B  342E               	retlw	46	;'.'
   411  082C  3435               	retlw	53	;'5'
   412  082D  3420               	retlw	32	;' '
   413  082E  3420               	retlw	32	;' '
   414  082F  3420               	retlw	32	;' '
   415  0830  3430               	retlw	48	;'0'
   416  0831  342E               	retlw	46	;'.'
   417  0832  3432               	retlw	50	;'2'
   418  0833  3435               	retlw	53	;'5'
   419  0834  3400               	retlw	0
   420  0835                     STR_1:
   421  0835  3420               	retlw	32	;' '
   422  0836  3420               	retlw	32	;' '
   423  0837  3420               	retlw	32	;' '
   424  0838  3420               	retlw	32	;' '
   425  0839  3420               	retlw	32	;' '
   426  083A  344D               	retlw	77	;'M'
   427  083B  346F               	retlw	111	;'o'
   428  083C  346E               	retlw	110	;'n'
   429  083D  3465               	retlw	101	;'e'
   430  083E  3464               	retlw	100	;'d'
   431  083F  3461               	retlw	97	;'a'
   432  0840  346E               	retlw	110	;'n'
   433  0841  3461               	retlw	97	;'a'
   434  0842  3469               	retlw	105	;'i'
   435  0843  3474               	retlw	116	;'t'
   436  0844  346F               	retlw	111	;'o'
   437  0845  3472               	retlw	114	;'r'
   438  0846  3400               	retlw	0
   439                           
   440                           	psect	cinit
   441  000F                     start_initialization:	
   442                           ; #config settings
   443                           
   444  000F                     __initialization:
   445                           
   446                           ; Initialize objects allocated to COMMON
   447  000F  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   448  0014  00FB               	movwf	__pdataCOMMON& (0+127)
   449                           
   450                           ; Clear objects allocated to BANK1
   451  0015  1683               	bsf	3,5	;RP0=1, select bank1
   452  0016  1303               	bcf	3,6	;RP1=0, select bank1
   453  0017  01A0               	clrf	__pbssBANK1& (0+127)
   454  0018  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   455  0019  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   456  001A  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   457  001B  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   458  001C  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   459  001D  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   460  001E  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   461  001F  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   462  0020  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   463  0021  01AA               	clrf	(__pbssBANK1+10)& (0+127)
   464  0022  01AB               	clrf	(__pbssBANK1+11)& (0+127)
   465  0023  01AC               	clrf	(__pbssBANK1+12)& (0+127)
   466  0024  01AD               	clrf	(__pbssBANK1+13)& (0+127)
   467  0025  01AE               	clrf	(__pbssBANK1+14)& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK0
   470  0026  1283               	bcf	3,5	;RP0=0, select bank0
   471  0027  1303               	bcf	3,6	;RP1=0, select bank0
   472  0028  01E9               	clrf	__pbssBANK0& (0+127)
   473                           
   474                           ; Clear objects allocated to COMMON
   475  0029  01FA               	clrf	__pbssCOMMON& (0+127)
   476  002A                     end_of_initialization:	
   477                           ;End of C runtime variable initialization code
   478                           
   479  002A                     __end_of__initialization:
   480  002A  0183               	clrf	3
   481  002B  120A  158A  2A39   	ljmp	_main	;jump to C main() function
   482                           
   483                           	psect	bssCOMMON
   484  007A                     __pbssCOMMON:
   485  007A                     _RS:
   486  007A                     	ds	1
   487                           
   488                           	psect	dataCOMMON
   489  007B                     __pdataCOMMON:
   490  007B                     _BackLight_State:
   491  007B                     	ds	1
   492                           
   493                           	psect	bssBANK0
   494  0069                     __pbssBANK0:
   495  0069                     _converted:
   496  0069                     	ds	1
   497                           
   498                           	psect	bssBANK1
   499  00A0                     __pbssBANK1:
   500  00A0                     _conv0:
   501  00A0                     	ds	4
   502  00A4                     _counter:
   503  00A4                     	ds	1
   504  00A5                     _converted02:
   505  00A5                     	ds	10
   506                           
   507                           	psect	cstackBANK1
   508  00AF                     __pcstackBANK1:
   509  00AF                     ADC_convert@temp:
   510                           
   511                           ; 2 bytes @ 0x0
   512  00AF                     	ds	2
   513  00B1                     ADC_convert@j:
   514                           
   515                           ; 2 bytes @ 0x2
   516  00B1                     	ds	2
   517  00B3                     ADC_convert@data:
   518                           
   519                           ; 1 bytes @ 0x4
   520  00B3                     	ds	1
   521  00B4                     ADC_convert@x:
   522                           
   523                           ; 4 bytes @ 0x5
   524  00B4                     	ds	4
   525  00B8                     ADC_convert@i:
   526                           
   527                           ; 2 bytes @ 0x9
   528  00B8                     	ds	2
   529  00BA                     ADC_convert@digits:
   530                           
   531                           ; 2 bytes @ 0xB
   532  00BA                     	ds	2
   533  00BC                     ADC_convert@mu:
   534                           
   535                           ; 2 bytes @ 0xD
   536  00BC                     	ds	2
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:
   540  0070                     ?_setup:
   541  0070                     ?_I2C_Master_Init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_LCD_Init:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_infrared:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_IO_Expander_Write:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_LCD_CMD:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_isr:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_isr:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_I2C_Master_Wait:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_I2C_Master_Start:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_I2C_Master_Stop:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_I2C_Master_Write:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_LCD_Write_4Bit:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_LCD_Write_Char:	
   581                           ; 1 bytes @ 0x0
   582                           
   583                           
   584                           ; 1 bytes @ 0x0
   585  0070                     	ds	2
   586  0072                     ?___flge:
   587  0072                     ??_setup:	
   588                           ; 1 bit 
   589                           
   590  0072                     ??_I2C_Master_Init:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     ??_infrared:	
   594                           ; 1 bytes @ 0x2
   595                           
   596  0072                     ??_I2C_Master_Wait:	
   597                           ; 1 bytes @ 0x2
   598                           
   599  0072                     ??_I2C_Master_Start:	
   600                           ; 1 bytes @ 0x2
   601                           
   602  0072                     ??_I2C_Master_Stop:	
   603                           ; 1 bytes @ 0x2
   604                           
   605  0072                     ??_I2C_Master_Write:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ?__Umul8_16:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ?___awdiv:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ?___fltol:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     ?___fladd:	
   618                           ; 4 bytes @ 0x2
   619                           
   620  0072                     I2C_Master_Write@data:	
   621                           ; 4 bytes @ 0x2
   622                           
   623  0072                     __Umul8_16@multiplicand:	
   624                           ; 1 bytes @ 0x2
   625                           
   626  0072                     ___awdiv@divisor:	
   627                           ; 1 bytes @ 0x2
   628                           
   629  0072                     ___flge@ff1:	
   630                           ; 2 bytes @ 0x2
   631                           
   632  0072                     ___fltol@f1:	
   633                           ; 4 bytes @ 0x2
   634                           
   635  0072                     ___fladd@b:	
   636                           ; 4 bytes @ 0x2
   637                           
   638                           
   639                           ; 4 bytes @ 0x2
   640  0072                     	ds	1
   641  0073                     ??_IO_Expander_Write:
   642  0073                     IO_Expander_Write@Data:	
   643                           ; 1 bytes @ 0x3
   644                           
   645                           
   646                           ; 1 bytes @ 0x3
   647  0073                     	ds	1
   648  0074                     ??__Umul8_16:
   649  0074                     ??_LCD_Write_4Bit:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ___awdiv@dividend:	
   653                           ; 1 bytes @ 0x4
   654                           
   655                           
   656                           ; 2 bytes @ 0x4
   657  0074                     	ds	1
   658  0075                     LCD_Write_4Bit@Nibble:
   659                           
   660                           ; 1 bytes @ 0x5
   661  0075                     	ds	1
   662  0076                     ??_LCD_CMD:
   663  0076                     ??_LCD_Write_Char:	
   664                           ; 1 bytes @ 0x6
   665                           
   666  0076                     ??___awdiv:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0076                     ___fltol@sign1:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     ___flge@ff2:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     ___fladd@a:	
   676                           ; 4 bytes @ 0x6
   677                           
   678                           
   679                           ; 4 bytes @ 0x6
   680  0076                     	ds	1
   681  0077                     LCD_CMD@CMD:
   682  0077                     LCD_Write_Char@Data:	
   683                           ; 1 bytes @ 0x7
   684                           
   685  0077                     ___fltol@exp1:	
   686                           ; 1 bytes @ 0x7
   687                           
   688                           
   689                           ; 1 bytes @ 0x7
   690  0077                     	ds	1
   691  0078                     ??_LCD_Init:
   692  0078                     ?_LCD_Set_Cursor:	
   693                           ; 1 bytes @ 0x8
   694                           
   695  0078                     ?_LCD_Write_String:	
   696                           ; 1 bytes @ 0x8
   697                           
   698  0078                     ??___wmul:	
   699                           ; 1 bytes @ 0x8
   700                           
   701  0078                     LCD_Set_Cursor@COL:	
   702                           ; 1 bytes @ 0x8
   703                           
   704  0078                     LCD_Write_String@Str:	
   705                           ; 1 bytes @ 0x8
   706                           
   707  0078                     ___wmul@product:	
   708                           ; 2 bytes @ 0x8
   709                           
   710                           
   711                           ; 2 bytes @ 0x8
   712  0078                     	ds	1
   713  0079                     LCD_Set_Cursor@ROW:
   714                           
   715                           ; 1 bytes @ 0x9
   716  0079                     	ds	1
   717  007A                     ??___flsub:
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721                           ; 1 bytes @ 0xA
   722                           
   723  0020                     ??_LCD_Set_Cursor:
   724  0020                     ??_LCD_Write_String:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     ??___flge:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     ??___fltol:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0020                     ??___fladd:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     LCD_Init@I2C_Add:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ___awdiv@counter:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     __Umul8_16@product:	
   743                           ; 1 bytes @ 0x0
   744                           
   745                           
   746                           ; 2 bytes @ 0x0
   747  0020                     	ds	1
   748  0021                     ___awdiv@sign:
   749                           
   750                           ; 1 bytes @ 0x1
   751  0021                     	ds	1
   752  0022                     ___awdiv@quotient:
   753  0022                     __Umul8_16@word_mpld:	
   754                           ; 2 bytes @ 0x2
   755                           
   756                           
   757                           ; 2 bytes @ 0x2
   758  0022                     	ds	1
   759  0023                     LCD_Write_String@i:
   760                           
   761                           ; 2 bytes @ 0x3
   762  0023                     	ds	1
   763  0024                     __Umul8_16@multiplier:
   764                           
   765                           ; 1 bytes @ 0x4
   766  0024                     	ds	1
   767  0025                     ?___wmul:
   768  0025                     ___wmul@multiplier:	
   769                           ; 2 bytes @ 0x5
   770                           
   771                           
   772                           ; 2 bytes @ 0x5
   773  0025                     	ds	2
   774  0027                     ___wmul@multiplicand:
   775                           
   776                           ; 2 bytes @ 0x7
   777  0027                     	ds	1
   778  0028                     ___fladd@signs:
   779                           
   780                           ; 1 bytes @ 0x8
   781  0028                     	ds	1
   782  0029                     ?___xxtofl:
   783  0029                     ___fladd@aexp:	
   784                           ; 4 bytes @ 0x9
   785                           
   786  0029                     ___xxtofl@val:	
   787                           ; 1 bytes @ 0x9
   788                           
   789                           
   790                           ; 4 bytes @ 0x9
   791  0029                     	ds	1
   792  002A                     ___fladd@bexp:
   793                           
   794                           ; 1 bytes @ 0xA
   795  002A                     	ds	1
   796  002B                     ___fladd@grs:
   797                           
   798                           ; 1 bytes @ 0xB
   799  002B                     	ds	2
   800  002D                     ??___xxtofl:
   801                           
   802                           ; 1 bytes @ 0xD
   803  002D                     	ds	4
   804  0031                     ___xxtofl@sign:
   805                           
   806                           ; 1 bytes @ 0x11
   807  0031                     	ds	1
   808  0032                     ___xxtofl@exp:
   809                           
   810                           ; 1 bytes @ 0x12
   811  0032                     	ds	1
   812  0033                     ___xxtofl@arg:
   813                           
   814                           ; 4 bytes @ 0x13
   815  0033                     	ds	4
   816  0037                     ?___flsub:
   817  0037                     ?___fldiv:	
   818                           ; 4 bytes @ 0x17
   819                           
   820  0037                     ___flsub@a:	
   821                           ; 4 bytes @ 0x17
   822                           
   823  0037                     ___fldiv@a:	
   824                           ; 4 bytes @ 0x17
   825                           
   826                           
   827                           ; 4 bytes @ 0x17
   828  0037                     	ds	4
   829  003B                     ___flsub@b:
   830  003B                     ___fldiv@b:	
   831                           ; 4 bytes @ 0x1B
   832                           
   833                           
   834                           ; 4 bytes @ 0x1B
   835  003B                     	ds	4
   836  003F                     ??___fldiv:
   837  003F                     ?___flmul:	
   838                           ; 1 bytes @ 0x1F
   839                           
   840  003F                     ___flmul@b:	
   841                           ; 4 bytes @ 0x1F
   842                           
   843                           
   844                           ; 4 bytes @ 0x1F
   845  003F                     	ds	4
   846  0043                     ___flmul@a:
   847                           
   848                           ; 4 bytes @ 0x23
   849  0043                     	ds	1
   850  0044                     ___fldiv@rem:
   851                           
   852                           ; 4 bytes @ 0x24
   853  0044                     	ds	3
   854  0047                     ??___flmul:
   855                           
   856                           ; 1 bytes @ 0x27
   857  0047                     	ds	1
   858  0048                     ___fldiv@sign:
   859                           
   860                           ; 1 bytes @ 0x28
   861  0048                     	ds	1
   862  0049                     ___fldiv@new_exp:
   863                           
   864                           ; 2 bytes @ 0x29
   865  0049                     	ds	2
   866  004B                     ___fldiv@grs:
   867                           
   868                           ; 4 bytes @ 0x2B
   869  004B                     	ds	1
   870  004C                     ___flmul@sign:
   871                           
   872                           ; 1 bytes @ 0x2C
   873  004C                     	ds	1
   874  004D                     ___flmul@aexp:
   875                           
   876                           ; 1 bytes @ 0x2D
   877  004D                     	ds	1
   878  004E                     ___flmul@grs:
   879                           
   880                           ; 4 bytes @ 0x2E
   881  004E                     	ds	1
   882  004F                     ___fldiv@bexp:
   883                           
   884                           ; 1 bytes @ 0x2F
   885  004F                     	ds	1
   886  0050                     ___fldiv@aexp:
   887                           
   888                           ; 1 bytes @ 0x30
   889  0050                     	ds	2
   890  0052                     ___flmul@bexp:
   891                           
   892                           ; 1 bytes @ 0x32
   893  0052                     	ds	1
   894  0053                     ___flmul@prod:
   895                           
   896                           ; 4 bytes @ 0x33
   897  0053                     	ds	4
   898  0057                     ___flmul@temp:
   899                           
   900                           ; 2 bytes @ 0x37
   901  0057                     	ds	2
   902  0059                     ?_ADC_convert:
   903  0059                     ADC_convert@a:	
   904                           ; 1 bytes @ 0x39
   905                           
   906                           
   907                           ; 4 bytes @ 0x39
   908  0059                     	ds	4
   909  005D                     ADC_convert@place:
   910                           
   911                           ; 2 bytes @ 0x3D
   912  005D                     	ds	2
   913  005F                     ??_ADC_convert:
   914                           
   915                           ; 1 bytes @ 0x3F
   916  005F                     	ds	2
   917  0061                     ??_main:
   918                           
   919                           ; 1 bytes @ 0x41
   920  0061                     	ds	4
   921  0065                     _main$877:
   922                           
   923                           ; 4 bytes @ 0x45
   924  0065                     	ds	4
   925                           
   926                           	psect	maintext
   927  0A39                     __pmaintext:	
   928 ;;
   929 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   930 ;;
   931 ;; *************** function _main *****************
   932 ;; Defined at:
   933 ;;		line 73 in file "Main.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;		None
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : B00/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         0       4       0       0       0
   949 ;;      Temps:          0       4       0       0       0
   950 ;;      Totals:         0       8       0       0       0
   951 ;;Total ram usage:        8 bytes
   952 ;; Hardware stack levels required when called: 7
   953 ;; This function calls:
   954 ;;		_ADC_convert
   955 ;;		_I2C_Master_Init
   956 ;;		_LCD_Init
   957 ;;		_LCD_Set_Cursor
   958 ;;		_LCD_Write_String
   959 ;;		___xxtofl
   960 ;;		_infrared
   961 ;;		_setup
   962 ;; This function is called by:
   963 ;;		Startup code after reset
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _main
   969  0A39                     _main:
   970  0A39                     l3658:	
   971                           ;incstack = 0
   972                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   973                           
   974                           
   975                           ;Main.c: 75: 
   976  0A39  160A  118A  26B8  120A  158A  	fcall	_setup
   977  0A3E                     l3660:
   978                           
   979                           ;Main.c: 76:     TRISD = 0;
   980  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
   981  0A3F  1303               	bcf	3,6	;RP1=0, select bank1
   982  0A40  01A4               	clrf	_counter^(0+128)
   983  0A41                     l3662:
   984                           
   985                           ;Main.c: 77: 
   986  0A41  160A  118A  269B  120A  158A  	fcall	_I2C_Master_Init
   987  0A46                     l3664:
   988                           
   989                           ;Main.c: 78: 
   990  0A46  304E               	movlw	78
   991  0A47  120A  158A  2105  120A  158A  	fcall	_LCD_Init
   992  0A4C                     l3666:
   993                           
   994                           ;Main.c: 80: 
   995  0A4C  01F8               	clrf	LCD_Set_Cursor@COL
   996  0A4D  0AF8               	incf	LCD_Set_Cursor@COL,f
   997  0A4E  3001               	movlw	1
   998  0A4F  160A  118A  27C8  120A  158A  	fcall	_LCD_Set_Cursor
   999  0A54                     l3668:
  1000                           
  1001                           ;Main.c: 81: 
  1002  0A54  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1003  0A55  00F8               	movwf	LCD_Write_String@Str
  1004  0A56  3080               	movlw	128
  1005  0A57  00F9               	movwf	LCD_Write_String@Str+1
  1006  0A58  120A  158A  2056  120A  158A  	fcall	_LCD_Write_String
  1007  0A5D                     l3670:
  1008                           
  1009                           ;Main.c: 82: 
  1010  0A5D  01F8               	clrf	LCD_Set_Cursor@COL
  1011  0A5E  0AF8               	incf	LCD_Set_Cursor@COL,f
  1012  0A5F  3002               	movlw	2
  1013  0A60  160A  118A  27C8  120A  158A  	fcall	_LCD_Set_Cursor
  1014  0A65                     l3672:
  1015                           
  1016                           ;Main.c: 83:     OSCCONbits.IRCF0 = 1;
  1017  0A65  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1018  0A66  00F8               	movwf	LCD_Write_String@Str
  1019  0A67  3080               	movlw	128
  1020  0A68  00F9               	movwf	LCD_Write_String@Str+1
  1021  0A69  120A  158A  2056  120A  158A  	fcall	_LCD_Write_String
  1022  0A6E                     l3674:
  1023                           
  1024                           ;Main.c: 84:     OSCCONbits.IRCF1 = 1;
  1025  0A6E  01F8               	clrf	LCD_Set_Cursor@COL
  1026  0A6F  0AF8               	incf	LCD_Set_Cursor@COL,f
  1027  0A70  3003               	movlw	3
  1028  0A71  160A  118A  27C8  120A  158A  	fcall	_LCD_Set_Cursor
  1029  0A76                     l3676:
  1030                           
  1031                           ;Main.c: 85:     OSCCONbits.IRCF2 = 1;
  1032  0A76  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1033  0A77  00F8               	movwf	LCD_Write_String@Str
  1034  0A78  3080               	movlw	128
  1035  0A79  00F9               	movwf	LCD_Write_String@Str+1
  1036  0A7A  120A  158A  2056  120A  158A  	fcall	_LCD_Write_String
  1037  0A7F                     l3678:
  1038                           
  1039                           ;Main.c: 88: 
  1040  0A7F  301A               	movlw	26
  1041  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0A82  00E3               	movwf	??_main+2
  1044  0A83  305E               	movlw	94
  1045  0A84  00E2               	movwf	??_main+1
  1046  0A85  306D               	movlw	109
  1047  0A86  00E1               	movwf	??_main
  1048  0A87                     u5387:
  1049  0A87  0BE1               	decfsz	??_main,f
  1050  0A88  2A87               	goto	u5387
  1051  0A89  0BE2               	decfsz	??_main+1,f
  1052  0A8A  2A87               	goto	u5387
  1053  0A8B  0BE3               	decfsz	??_main+2,f
  1054  0A8C  2A87               	goto	u5387
  1055  0A8D  2A8E               	nop2
  1056  0A8E                     l3680:
  1057                           
  1058                           ;Main.c: 91:     PORTC = 0x00;;Main.c: 92:     PORTD = 0x00;
  1059  0A8E  3002               	movlw	2
  1060  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  1061  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  1062  0A91  00E1               	movwf	??_main
  1063  0A92  0861               	movf	??_main,w
  1064  0A93  00F8               	movwf	LCD_Set_Cursor@COL
  1065  0A94  3004               	movlw	4
  1066  0A95  160A  118A  27C8  120A  158A  	fcall	_LCD_Set_Cursor
  1067  0A9A                     l3682:
  1068                           
  1069                           ;Main.c: 93:     PORTE = 0x00;
  1070  0A9A  30A5               	movlw	(low (_converted02| 0))& (0+255)
  1071  0A9B  00F8               	movwf	LCD_Write_String@Str
  1072  0A9C  3000               	movlw	0
  1073  0A9D  00F9               	movwf	LCD_Write_String@Str+1
  1074  0A9E  120A  158A  2056  120A  158A  	fcall	_LCD_Write_String
  1075  0AA3                     l3684:
  1076                           
  1077                           ;Main.c: 94: }
  1078  0AA3  160A  118A  2736  120A  158A  	fcall	_infrared
  1079  0AA8                     l3686:
  1080                           
  1081                           ;Main.c: 96: void infrared(void){
  1082  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0AA9  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0AAA  0824               	movf	_counter^(0+128),w
  1085  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0AAD  00E1               	movwf	??_main
  1088  0AAE  01E2               	clrf	??_main+1
  1089  0AAF  01E3               	clrf	??_main+2
  1090  0AB0  01E4               	clrf	??_main+3
  1091  0AB1  0864               	movf	??_main+3,w
  1092  0AB2  00AC               	movwf	___xxtofl@val+3
  1093  0AB3  0863               	movf	??_main+2,w
  1094  0AB4  00AB               	movwf	___xxtofl@val+2
  1095  0AB5  0862               	movf	??_main+1,w
  1096  0AB6  00AA               	movwf	___xxtofl@val+1
  1097  0AB7  0861               	movf	??_main,w
  1098  0AB8  00A9               	movwf	___xxtofl@val
  1099  0AB9  3000               	movlw	0
  1100  0ABA  120A  158A  22DF  120A  158A  	fcall	___xxtofl
  1101  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0AC1  082C               	movf	?___xxtofl+3,w
  1104  0AC2  00E8               	movwf	_main$877+3
  1105  0AC3  082B               	movf	?___xxtofl+2,w
  1106  0AC4  00E7               	movwf	_main$877+2
  1107  0AC5  082A               	movf	?___xxtofl+1,w
  1108  0AC6  00E6               	movwf	_main$877+1
  1109  0AC7  0829               	movf	?___xxtofl,w
  1110  0AC8  00E5               	movwf	_main$877
  1111  0AC9                     l3688:
  1112                           
  1113                           ;Main.c: 96: void infrared(void){
  1114  0AC9  0868               	movf	_main$877+3,w
  1115  0ACA  00DC               	movwf	ADC_convert@a+3
  1116  0ACB  0867               	movf	_main$877+2,w
  1117  0ACC  00DB               	movwf	ADC_convert@a+2
  1118  0ACD  0866               	movf	_main$877+1,w
  1119  0ACE  00DA               	movwf	ADC_convert@a+1
  1120  0ACF  0865               	movf	_main$877,w
  1121  0AD0  00D9               	movwf	ADC_convert@a
  1122  0AD1  3002               	movlw	2
  1123  0AD2  00DD               	movwf	ADC_convert@place
  1124  0AD3  3000               	movlw	0
  1125  0AD4  00DE               	movwf	ADC_convert@place+1
  1126  0AD5  30A5               	movlw	(low (_converted02| 0))& (0+255)
  1127  0AD6  120A  118A  202E  120A  158A  	fcall	_ADC_convert
  1128  0ADB  2A8E               	goto	l3680
  1129  0ADC  120A  118A  280C   	ljmp	start
  1130  0ADF                     __end_of_main:
  1131                           
  1132                           	psect	text1
  1133  16B8                     __ptext1:	
  1134 ;; *************** function _setup *****************
  1135 ;; Defined at:
  1136 ;;		line 105 in file "Main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		status,2
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _setup
  1166  16B8                     _setup:
  1167  16B8                     l3470:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _setup: [status,2]
  1170                           
  1171                           
  1172                           ;Main.c: 107: 
  1173  16B8  1683               	bsf	3,5	;RP0=1, select bank3
  1174  16B9  1703               	bsf	3,6	;RP1=1, select bank3
  1175  16BA  0188               	clrf	8	;volatile
  1176                           
  1177                           ;Main.c: 108: 
  1178  16BB  0189               	clrf	9	;volatile
  1179  16BC                     l3472:
  1180                           
  1181                           ;Main.c: 111: void ADC_convert(char *data,float a, int place)
  1182  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  1183  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  1184  16BE  1405               	bsf	5,0	;volatile
  1185  16BF                     l3474:
  1186                           
  1187                           ;Main.c: 114:      float x=0.0;
  1188  16BF  1406               	bsf	6,0	;volatile
  1189  16C0                     l3476:
  1190                           
  1191                           ;Main.c: 115:      int digits=0;
  1192  16C0  1386               	bcf	6,7	;volatile
  1193                           
  1194                           ;Main.c: 120:             a=a*-1;
  1195  16C1  0188               	clrf	8	;volatile
  1196  16C2                     l3478:
  1197                           
  1198                           ;Main.c: 127:          temp=temp/10;
  1199  16C2  160F               	bsf	15,4	;volatile
  1200  16C3                     l3480:
  1201                           
  1202                           ;Main.c: 128:          digits++;
  1203  16C3  168F               	bsf	15,5	;volatile
  1204  16C4                     l3482:
  1205                           
  1206                           ;Main.c: 129:      }
  1207  16C4  170F               	bsf	15,6	;volatile
  1208  16C5                     l3484:
  1209                           
  1210                           ;Main.c: 130:      while(digits!=0)
  1211  16C5  140F               	bsf	15,0	;volatile
  1212                           
  1213                           ;Main.c: 133:          else for(j=2;j<=digits;j++)mu=mu*10;
  1214  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  1215  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  1216  16C8  0185               	clrf	5	;volatile
  1217                           
  1218                           ;Main.c: 134: 
  1219  16C9  0186               	clrf	6	;volatile
  1220                           
  1221                           ;Main.c: 135:          x=a/mu;
  1222  16CA  0187               	clrf	7	;volatile
  1223                           
  1224                           ;Main.c: 136:          a=a-((int)x*mu);
  1225  16CB  0188               	clrf	8	;volatile
  1226                           
  1227                           ;Main.c: 137:          data[i]=0x30+((int)x);
  1228  16CC  0189               	clrf	9	;volatile
  1229  16CD                     l68:
  1230  16CD  0008               	return
  1231  16CE                     __end_of_setup:
  1232                           
  1233                           	psect	text2
  1234  1736                     __ptext2:	
  1235 ;; *************** function _infrared *****************
  1236 ;; Defined at:
  1237 ;;		line 140 in file "Main.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          3       0       0       0       0
  1254 ;;      Totals:         3       0       0       0       0
  1255 ;;Total ram usage:        3 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _infrared
  1267  1736                     _infrared:
  1268  1736                     l3546:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _infrared: [wreg+status,2+status,0]
  1271                           
  1272                           
  1273                           ;Main.c: 141:      }
  1274  1736  1283               	bcf	3,5	;RP0=0, select bank0
  1275  1737  1303               	bcf	3,6	;RP1=0, select bank0
  1276  1738  1C05               	btfss	5,0	;volatile
  1277  1739  2F3B               	goto	u5271
  1278  173A  2F3C               	goto	u5270
  1279  173B                     u5271:
  1280  173B  2F50               	goto	l3554
  1281  173C                     u5270:
  1282  173C                     l3548:
  1283                           
  1284                           ;Main.c: 142: 
  1285  173C  1786               	bsf	6,7	;volatile
  1286  173D                     l3550:
  1287                           
  1288                           ;Main.c: 143:      data[i]='.';
  1289  173D  3001               	movlw	1
  1290  173E  00F2               	movwf	??_infrared
  1291  173F  0872               	movf	??_infrared,w
  1292  1740  1683               	bsf	3,5	;RP0=1, select bank1
  1293  1741  1303               	bcf	3,6	;RP1=0, select bank1
  1294  1742  07A4               	addwf	_counter^(0+128),f
  1295  1743                     l3552:
  1296                           
  1297                           ;Main.c: 144:      i++;
  1298  1743  3006               	movlw	6
  1299  1744  00F4               	movwf	??_infrared+2
  1300  1745  3013               	movlw	19
  1301  1746  00F3               	movwf	??_infrared+1
  1302  1747  30AD               	movlw	173
  1303  1748  00F2               	movwf	??_infrared
  1304  1749                     u5397:
  1305  1749  0BF2               	decfsz	??_infrared,f
  1306  174A  2F49               	goto	u5397
  1307  174B  0BF3               	decfsz	??_infrared+1,f
  1308  174C  2F49               	goto	u5397
  1309  174D  0BF4               	decfsz	??_infrared+2,f
  1310  174E  2F49               	goto	u5397
  1311  174F  2F50               	nop2
  1312  1750                     l3554:
  1313                           
  1314                           ;Main.c: 145:      digits=0;
  1315  1750  1283               	bcf	3,5	;RP0=0, select bank0
  1316  1751  1303               	bcf	3,6	;RP1=0, select bank0
  1317  1752  1386               	bcf	6,7	;volatile
  1318  1753                     l73:	
  1319                           ;Main.c: 146:      for(j=1;j<=place;j++)mu=mu*10;
  1320                           
  1321  1753  0008               	return
  1322  1754                     __end_of_infrared:
  1323                           
  1324                           	psect	text3
  1325  0856                     __ptext3:	
  1326 ;; *************** function _LCD_Write_String *****************
  1327 ;; Defined at:
  1328 ;;		line 140 in file "I2C_LCD.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  Str             2    8[COMMON] PTR unsigned char 
  1331 ;;		 -> converted02(10), STR_3(18), STR_2(19), STR_1(18), 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  i               2    3[BANK0 ] int 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         2       0       0       0       0
  1344 ;;      Locals:         0       2       0       0       0
  1345 ;;      Temps:          0       3       0       0       0
  1346 ;;      Totals:         2       5       0       0       0
  1347 ;;Total ram usage:        7 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 6
  1350 ;; This function calls:
  1351 ;;		_LCD_Write_Char
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _LCD_Write_String
  1359  0856                     _LCD_Write_String:
  1360  0856                     l3538:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1363                           
  1364                           
  1365                           ;I2C_LCD.c: 140: void LCD_Write_String(char* Str);I2C_LCD.c: 141: {;I2C_LCD.c: 142:     
      +                          for(int i=0; Str[i]!='\0'; i++)
  1366  0856  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0857  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0858  01A3               	clrf	LCD_Write_String@i
  1369  0859  01A4               	clrf	LCD_Write_String@i+1
  1370  085A  287F               	goto	l3544
  1371  085B                     l3540:
  1372                           
  1373                           ;I2C_LCD.c: 143:        LCD_Write_Char(Str[i]);
  1374  085B  0823               	movf	LCD_Write_String@i,w
  1375  085C  0778               	addwf	LCD_Write_String@Str,w
  1376  085D  00A1               	movwf	??_LCD_Write_String+1
  1377  085E  0879               	movf	LCD_Write_String@Str+1,w
  1378  085F  00A0               	movwf	??_LCD_Write_String
  1379  0860  1803               	skipnc
  1380  0861  0AA0               	incf	??_LCD_Write_String,f
  1381  0862  1FA3               	btfss	LCD_Write_String@i,7
  1382  0863  2865               	goto	u5240
  1383  0864  03A0               	decf	??_LCD_Write_String,f
  1384  0865                     u5240:
  1385  0865  1283               	bcf	3,5	;RP0=0, select bank0
  1386  0866  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0867  0820               	movf	??_LCD_Write_String,w
  1388  0868  00A2               	movwf	??_LCD_Write_String+2
  1389  0869  0822               	movf	??_LCD_Write_String+2,w
  1390  086A  00FF               	movwf	btemp+1
  1391  086B  0821               	movf	??_LCD_Write_String+1,w
  1392  086C  0084               	movwf	4
  1393  086D  120A  158A  2000  120A  158A  	fcall	stringtab
  1394  0872  160A  118A  271B  120A  158A  	fcall	_LCD_Write_Char
  1395  0877                     l3542:
  1396  0877  3001               	movlw	1
  1397  0878  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0879  1303               	bcf	3,6	;RP1=0, select bank0
  1399  087A  07A3               	addwf	LCD_Write_String@i,f
  1400  087B  1803               	skipnc
  1401  087C  0AA4               	incf	LCD_Write_String@i+1,f
  1402  087D  3000               	movlw	0
  1403  087E  07A4               	addwf	LCD_Write_String@i+1,f
  1404  087F                     l3544:
  1405  087F  0823               	movf	LCD_Write_String@i,w
  1406  0880  0778               	addwf	LCD_Write_String@Str,w
  1407  0881  00A1               	movwf	??_LCD_Write_String+1
  1408  0882  0879               	movf	LCD_Write_String@Str+1,w
  1409  0883  00A0               	movwf	??_LCD_Write_String
  1410  0884  1803               	skipnc
  1411  0885  0AA0               	incf	??_LCD_Write_String,f
  1412  0886  1FA3               	btfss	LCD_Write_String@i,7
  1413  0887  2889               	goto	u5250
  1414  0888  03A0               	decf	??_LCD_Write_String,f
  1415  0889                     u5250:
  1416  0889  1283               	bcf	3,5	;RP0=0, select bank0
  1417  088A  1303               	bcf	3,6	;RP1=0, select bank0
  1418  088B  0820               	movf	??_LCD_Write_String,w
  1419  088C  00A2               	movwf	??_LCD_Write_String+2
  1420  088D  0822               	movf	??_LCD_Write_String+2,w
  1421  088E  00FF               	movwf	btemp+1
  1422  088F  0821               	movf	??_LCD_Write_String+1,w
  1423  0890  0084               	movwf	4
  1424  0891  120A  158A  2000  120A  158A  	fcall	stringtab
  1425  0896  3A00               	xorlw	0
  1426  0897  1D03               	skipz
  1427  0898  289A               	goto	u5261
  1428  0899  289B               	goto	u5260
  1429  089A                     u5261:
  1430  089A  285B               	goto	l3540
  1431  089B                     u5260:
  1432  089B                     l198:
  1433  089B  0008               	return
  1434  089C                     __end_of_LCD_Write_String:
  1435                           
  1436                           	psect	text4
  1437  171B                     __ptext4:	
  1438 ;; *************** function _LCD_Write_Char *****************
  1439 ;; Defined at:
  1440 ;;		line 133 in file "I2C_LCD.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;  Data            1    wreg     unsigned char 
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;  Data            1    7[COMMON] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, pclath, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         1       0       0       0       0
  1456 ;;      Temps:          1       0       0       0       0
  1457 ;;      Totals:         2       0       0       0       0
  1458 ;;Total ram usage:        2 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 5
  1461 ;; This function calls:
  1462 ;;		_LCD_Write_4Bit
  1463 ;; This function is called by:
  1464 ;;		_LCD_Write_String
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _LCD_Write_Char
  1470  171B                     _LCD_Write_Char:
  1471                           
  1472                           ;incstack = 0
  1473                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1474                           ;LCD_Write_Char@Data stored from wreg
  1475  171B  00F7               	movwf	LCD_Write_Char@Data
  1476  171C                     l3020:
  1477                           
  1478                           ;I2C_LCD.c: 133: void LCD_Write_Char(char Data);I2C_LCD.c: 134: {;I2C_LCD.c: 135:   RS =
      +                           1;
  1479  171C  01FA               	clrf	_RS
  1480  171D  0AFA               	incf	_RS,f
  1481  171E                     l3022:
  1482                           
  1483                           ;I2C_LCD.c: 136:   LCD_Write_4Bit(Data & 0xF0);
  1484  171E  0877               	movf	LCD_Write_Char@Data,w
  1485  171F  39F0               	andlw	240
  1486  1720  160A  118A  26CE  160A  118A  	fcall	_LCD_Write_4Bit
  1487                           
  1488                           ;I2C_LCD.c: 137:   LCD_Write_4Bit((Data << 4) & 0xF0);
  1489  1725  0877               	movf	LCD_Write_Char@Data,w
  1490  1726  00F6               	movwf	??_LCD_Write_Char
  1491  1727  3003               	movlw	3
  1492  1728                     u4125:
  1493  1728  1003               	clrc
  1494  1729  0DF6               	rlf	??_LCD_Write_Char,f
  1495  172A  3EFF               	addlw	-1
  1496  172B  1D03               	skipz
  1497  172C  2F28               	goto	u4125
  1498  172D  1003               	clrc
  1499  172E  0D76               	rlf	??_LCD_Write_Char,w
  1500  172F  39F0               	andlw	240
  1501  1730  160A  118A  26CE  160A  118A  	fcall	_LCD_Write_4Bit
  1502  1735                     l192:
  1503  1735  0008               	return
  1504  1736                     __end_of_LCD_Write_Char:
  1505                           
  1506                           	psect	text5
  1507  17C8                     __ptext5:	
  1508 ;; *************** function _LCD_Set_Cursor *****************
  1509 ;; Defined at:
  1510 ;;		line 146 in file "I2C_LCD.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  ROW             1    wreg     unsigned char 
  1513 ;;  COL             1    8[COMMON] unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  ROW             1    9[COMMON] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         1       0       0       0       0
  1526 ;;      Locals:         1       0       0       0       0
  1527 ;;      Temps:          0       2       0       0       0
  1528 ;;      Totals:         2       2       0       0       0
  1529 ;;Total ram usage:        4 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 6
  1532 ;; This function calls:
  1533 ;;		_LCD_CMD
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           
  1540                           ;psect for function _LCD_Set_Cursor
  1541  17C8                     _LCD_Set_Cursor:
  1542                           
  1543                           ;incstack = 0
  1544                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1545                           ;LCD_Set_Cursor@ROW stored from wreg
  1546  17C8  00F9               	movwf	LCD_Set_Cursor@ROW
  1547  17C9                     l3522:
  1548                           
  1549                           ;I2C_LCD.c: 146: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 14
      +                          7: {;I2C_LCD.c: 148:   switch(ROW)
  1550  17C9  2FEA               	goto	l3532
  1551  17CA                     l3524:
  1552                           
  1553                           ;I2C_LCD.c: 151:       LCD_CMD(0xC0 + COL-1);
  1554  17CA  0878               	movf	LCD_Set_Cursor@COL,w
  1555  17CB  3EBF               	addlw	191
  1556  17CC  160A  118A  26E6  160A  118A  	fcall	_LCD_CMD
  1557                           
  1558                           ;I2C_LCD.c: 152:       break;
  1559  17D1  2FFF               	goto	l207
  1560  17D2                     l3526:
  1561                           
  1562                           ;I2C_LCD.c: 154:       LCD_CMD(0x94 + COL-1);
  1563  17D2  0878               	movf	LCD_Set_Cursor@COL,w
  1564  17D3  3E93               	addlw	147
  1565  17D4  160A  118A  26E6  160A  118A  	fcall	_LCD_CMD
  1566                           
  1567                           ;I2C_LCD.c: 155:       break;
  1568  17D9  2FFF               	goto	l207
  1569  17DA                     l3528:
  1570                           
  1571                           ;I2C_LCD.c: 157:       LCD_CMD(0xD4 + COL-1);
  1572  17DA  0878               	movf	LCD_Set_Cursor@COL,w
  1573  17DB  3ED3               	addlw	211
  1574  17DC  160A  118A  26E6  160A  118A  	fcall	_LCD_CMD
  1575                           
  1576                           ;I2C_LCD.c: 158:       break;
  1577  17E1  2FFF               	goto	l207
  1578  17E2                     l3530:
  1579                           
  1580                           ;I2C_LCD.c: 161:       LCD_CMD(0x80 + COL-1);
  1581  17E2  0878               	movf	LCD_Set_Cursor@COL,w
  1582  17E3  3E7F               	addlw	127
  1583  17E4  160A  118A  26E6  160A  118A  	fcall	_LCD_CMD
  1584                           
  1585                           ;I2C_LCD.c: 162:   }
  1586  17E9  2FFF               	goto	l207
  1587  17EA                     l3532:
  1588  17EA  0879               	movf	LCD_Set_Cursor@ROW,w
  1589  17EB  1283               	bcf	3,5	;RP0=0, select bank0
  1590  17EC  1303               	bcf	3,6	;RP1=0, select bank0
  1591  17ED  00A0               	movwf	??_LCD_Set_Cursor
  1592  17EE  01A1               	clrf	??_LCD_Set_Cursor+1
  1593                           
  1594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 1, Range of values is 0 to 0
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            4     3 (average)
  1600                           ; direct_byte           11     8 (fixed)
  1601                           ; jumptable            260     6 (fixed)
  1602                           ;	Chosen strategy is simple_byte
  1603  17EF  0821               	movf	??_LCD_Set_Cursor+1,w
  1604  17F0  3A00               	xorlw	0	; case 0
  1605  17F1  1903               	skipnz
  1606  17F2  2FF4               	goto	l3756
  1607  17F3  2FE2               	goto	l3530
  1608  17F4                     l3756:
  1609                           
  1610                           ; Switch size 1, requested type "simple"
  1611                           ; Number of cases is 3, Range of values is 2 to 4
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte           10     6 (average)
  1615                           ; direct_byte           20    11 (fixed)
  1616                           ; jumptable            263     9 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618  17F4  0820               	movf	??_LCD_Set_Cursor,w
  1619  17F5  3A02               	xorlw	2	; case 2
  1620  17F6  1903               	skipnz
  1621  17F7  2FCA               	goto	l3524
  1622  17F8  3A01               	xorlw	1	; case 3
  1623  17F9  1903               	skipnz
  1624  17FA  2FD2               	goto	l3526
  1625  17FB  3A07               	xorlw	7	; case 4
  1626  17FC  1903               	skipnz
  1627  17FD  2FDA               	goto	l3528
  1628  17FE  2FE2               	goto	l3530
  1629  17FF                     l207:
  1630  17FF  0008               	return
  1631  1800                     __end_of_LCD_Set_Cursor:
  1632                           
  1633                           	psect	text6
  1634  0905                     __ptext6:	
  1635 ;; *************** function _LCD_Init *****************
  1636 ;; Defined at:
  1637 ;;		line 86 in file "I2C_LCD.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  I2C_Add         1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         0       1       0       0       0
  1653 ;;      Temps:          2       0       0       0       0
  1654 ;;      Totals:         2       1       0       0       0
  1655 ;;Total ram usage:        3 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 6
  1658 ;; This function calls:
  1659 ;;		_IO_Expander_Write
  1660 ;;		_LCD_CMD
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _LCD_Init
  1668  0905                     _LCD_Init:
  1669                           
  1670                           ;incstack = 0
  1671                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1672                           ;LCD_Init@I2C_Add stored from wreg
  1673  0905  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0906  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0907  00A0               	movwf	LCD_Init@I2C_Add
  1676  0908                     l3496:
  1677                           
  1678                           ;I2C_LCD.c: 86: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 87: {;I2C_LCD.c: 88:   i
      +                          2c_add = I2C_Add;
  1679  0908  0820               	movf	LCD_Init@I2C_Add,w
  1680  0909  00F8               	movwf	??_LCD_Init
  1681  090A  0878               	movf	??_LCD_Init,w
  1682  090B  1683               	bsf	3,5	;RP0=1, select bank1
  1683  090C  1303               	bcf	3,6	;RP1=0, select bank1
  1684  090D  00BE               	movwf	_i2c_add^(0+128)
  1685  090E                     l3498:
  1686                           
  1687                           ;I2C_LCD.c: 89:   IO_Expander_Write(0x00);
  1688  090E  3000               	movlw	0
  1689  090F  160A  118A  2700  120A  158A  	fcall	_IO_Expander_Write
  1690  0914                     l3500:
  1691                           
  1692                           ;I2C_LCD.c: 90:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1693  0914  304E               	movlw	78
  1694  0915  00F9               	movwf	??_LCD_Init+1
  1695  0916  30EB               	movlw	235
  1696  0917  00F8               	movwf	??_LCD_Init
  1697  0918                     u5407:
  1698  0918  0BF8               	decfsz	??_LCD_Init,f
  1699  0919  2918               	goto	u5407
  1700  091A  0BF9               	decfsz	??_LCD_Init+1,f
  1701  091B  2918               	goto	u5407
  1702                           
  1703                           ;I2C_LCD.c: 91:   LCD_CMD(0x03);
  1704  091C  3003               	movlw	3
  1705  091D  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1706  0922                     l3502:
  1707                           
  1708                           ;I2C_LCD.c: 92:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1709  0922  300D               	movlw	13
  1710  0923  00F9               	movwf	??_LCD_Init+1
  1711  0924  30FB               	movlw	251
  1712  0925  00F8               	movwf	??_LCD_Init
  1713  0926                     u5417:
  1714  0926  0BF8               	decfsz	??_LCD_Init,f
  1715  0927  2926               	goto	u5417
  1716  0928  0BF9               	decfsz	??_LCD_Init+1,f
  1717  0929  2926               	goto	u5417
  1718  092A  292B               	nop2
  1719  092B                     l3504:
  1720                           
  1721                           ;I2C_LCD.c: 93:   LCD_CMD(0x03);
  1722  092B  3003               	movlw	3
  1723  092C  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1724                           
  1725                           ;I2C_LCD.c: 94:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1726  0931  300D               	movlw	13
  1727  0932  00F9               	movwf	??_LCD_Init+1
  1728  0933  30FB               	movlw	251
  1729  0934  00F8               	movwf	??_LCD_Init
  1730  0935                     u5427:
  1731  0935  0BF8               	decfsz	??_LCD_Init,f
  1732  0936  2935               	goto	u5427
  1733  0937  0BF9               	decfsz	??_LCD_Init+1,f
  1734  0938  2935               	goto	u5427
  1735  0939  293A               	nop2
  1736  093A                     l3506:
  1737                           
  1738                           ;I2C_LCD.c: 95:   LCD_CMD(0x03);
  1739  093A  3003               	movlw	3
  1740  093B  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1741  0940                     l3508:
  1742                           
  1743                           ;I2C_LCD.c: 96:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1744  0940  300D               	movlw	13
  1745  0941  00F9               	movwf	??_LCD_Init+1
  1746  0942  30FB               	movlw	251
  1747  0943  00F8               	movwf	??_LCD_Init
  1748  0944                     u5437:
  1749  0944  0BF8               	decfsz	??_LCD_Init,f
  1750  0945  2944               	goto	u5437
  1751  0946  0BF9               	decfsz	??_LCD_Init+1,f
  1752  0947  2944               	goto	u5437
  1753  0948  2949               	nop2
  1754                           
  1755                           ;I2C_LCD.c: 97:   LCD_CMD(0x02);
  1756  0949  3002               	movlw	2
  1757  094A  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1758  094F                     l3510:
  1759                           
  1760                           ;I2C_LCD.c: 98:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1761  094F  300D               	movlw	13
  1762  0950  00F9               	movwf	??_LCD_Init+1
  1763  0951  30FB               	movlw	251
  1764  0952  00F8               	movwf	??_LCD_Init
  1765  0953                     u5447:
  1766  0953  0BF8               	decfsz	??_LCD_Init,f
  1767  0954  2953               	goto	u5447
  1768  0955  0BF9               	decfsz	??_LCD_Init+1,f
  1769  0956  2953               	goto	u5447
  1770  0957  2958               	nop2
  1771  0958                     l3512:
  1772                           
  1773                           ;I2C_LCD.c: 99:   LCD_CMD(0x20 | (2 << 2));
  1774  0958  3028               	movlw	40
  1775  0959  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1776                           
  1777                           ;I2C_LCD.c: 100:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1778  095E  3082               	movlw	130
  1779  095F  00F9               	movwf	??_LCD_Init+1
  1780  0960  30DD               	movlw	221
  1781  0961  00F8               	movwf	??_LCD_Init
  1782  0962                     u5457:
  1783  0962  0BF8               	decfsz	??_LCD_Init,f
  1784  0963  2962               	goto	u5457
  1785  0964  0BF9               	decfsz	??_LCD_Init+1,f
  1786  0965  2962               	goto	u5457
  1787  0966  2967               	nop2
  1788  0967                     l3514:
  1789                           
  1790                           ;I2C_LCD.c: 101:   LCD_CMD(0x0C);
  1791  0967  300C               	movlw	12
  1792  0968  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1793  096D                     l3516:
  1794                           
  1795                           ;I2C_LCD.c: 102:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1796  096D  3082               	movlw	130
  1797  096E  00F9               	movwf	??_LCD_Init+1
  1798  096F  30DD               	movlw	221
  1799  0970  00F8               	movwf	??_LCD_Init
  1800  0971                     u5467:
  1801  0971  0BF8               	decfsz	??_LCD_Init,f
  1802  0972  2971               	goto	u5467
  1803  0973  0BF9               	decfsz	??_LCD_Init+1,f
  1804  0974  2971               	goto	u5467
  1805  0975  2976               	nop2
  1806                           
  1807                           ;I2C_LCD.c: 103:   LCD_CMD(0x01);
  1808  0976  3001               	movlw	1
  1809  0977  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1810  097C                     l3518:
  1811                           
  1812                           ;I2C_LCD.c: 104:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1813  097C  3082               	movlw	130
  1814  097D  00F9               	movwf	??_LCD_Init+1
  1815  097E  30DD               	movlw	221
  1816  097F  00F8               	movwf	??_LCD_Init
  1817  0980                     u5477:
  1818  0980  0BF8               	decfsz	??_LCD_Init,f
  1819  0981  2980               	goto	u5477
  1820  0982  0BF9               	decfsz	??_LCD_Init+1,f
  1821  0983  2980               	goto	u5477
  1822  0984  2985               	nop2
  1823  0985                     l3520:
  1824                           
  1825                           ;I2C_LCD.c: 105:   LCD_CMD(0x04 | 0x02);
  1826  0985  3006               	movlw	6
  1827  0986  160A  118A  26E6  120A  158A  	fcall	_LCD_CMD
  1828                           
  1829                           ;I2C_LCD.c: 106:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1830  098B  3082               	movlw	130
  1831  098C  00F9               	movwf	??_LCD_Init+1
  1832  098D  30DD               	movlw	221
  1833  098E  00F8               	movwf	??_LCD_Init
  1834  098F                     u5487:
  1835  098F  0BF8               	decfsz	??_LCD_Init,f
  1836  0990  298F               	goto	u5487
  1837  0991  0BF9               	decfsz	??_LCD_Init+1,f
  1838  0992  298F               	goto	u5487
  1839  0993  2994               	nop2
  1840  0994                     l180:
  1841  0994  0008               	return
  1842  0995                     __end_of_LCD_Init:
  1843                           
  1844                           	psect	text7
  1845  16E6                     __ptext7:	
  1846 ;; *************** function _LCD_CMD *****************
  1847 ;; Defined at:
  1848 ;;		line 126 in file "I2C_LCD.c"
  1849 ;; Parameters:    Size  Location     Type
  1850 ;;  CMD             1    wreg     unsigned char 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  CMD             1    7[COMMON] unsigned char 
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, status,2, status,0, pclath, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1862 ;;      Params:         0       0       0       0       0
  1863 ;;      Locals:         1       0       0       0       0
  1864 ;;      Temps:          1       0       0       0       0
  1865 ;;      Totals:         2       0       0       0       0
  1866 ;;Total ram usage:        2 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 5
  1869 ;; This function calls:
  1870 ;;		_LCD_Write_4Bit
  1871 ;; This function is called by:
  1872 ;;		_LCD_Init
  1873 ;;		_LCD_Set_Cursor
  1874 ;;		_LCD_SL
  1875 ;;		_LCD_SR
  1876 ;;		_LCD_Clear
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _LCD_CMD
  1882  16E6                     _LCD_CMD:
  1883                           
  1884                           ;incstack = 0
  1885                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1886                           ;LCD_CMD@CMD stored from wreg
  1887  16E6  00F7               	movwf	LCD_CMD@CMD
  1888  16E7                     l3014:
  1889                           
  1890                           ;I2C_LCD.c: 126: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 127: {;I2C_LCD.c: 128:   RS 
      +                          = 0;
  1891  16E7  01FA               	clrf	_RS
  1892  16E8                     l3016:
  1893                           
  1894                           ;I2C_LCD.c: 129:   LCD_Write_4Bit(CMD & 0xF0);
  1895  16E8  0877               	movf	LCD_CMD@CMD,w
  1896  16E9  39F0               	andlw	240
  1897  16EA  160A  118A  26CE  160A  118A  	fcall	_LCD_Write_4Bit
  1898  16EF                     l3018:
  1899                           
  1900                           ;I2C_LCD.c: 130:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  1901  16EF  0877               	movf	LCD_CMD@CMD,w
  1902  16F0  00F6               	movwf	??_LCD_CMD
  1903  16F1  3003               	movlw	3
  1904  16F2                     u4115:
  1905  16F2  1003               	clrc
  1906  16F3  0DF6               	rlf	??_LCD_CMD,f
  1907  16F4  3EFF               	addlw	-1
  1908  16F5  1D03               	skipz
  1909  16F6  2EF2               	goto	u4115
  1910  16F7  1003               	clrc
  1911  16F8  0D76               	rlf	??_LCD_CMD,w
  1912  16F9  39F0               	andlw	240
  1913  16FA  160A  118A  26CE  160A  118A  	fcall	_LCD_Write_4Bit
  1914  16FF                     l189:
  1915  16FF  0008               	return
  1916  1700                     __end_of_LCD_CMD:
  1917                           
  1918                           	psect	text8
  1919  16CE                     __ptext8:	
  1920 ;; *************** function _LCD_Write_4Bit *****************
  1921 ;; Defined at:
  1922 ;;		line 117 in file "I2C_LCD.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  Nibble          1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  Nibble          1    5[COMMON] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;                  1    wreg      void 
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         1       0       0       0       0
  1938 ;;      Temps:          1       0       0       0       0
  1939 ;;      Totals:         2       0       0       0       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used: 1
  1942 ;; Hardware stack levels required when called: 4
  1943 ;; This function calls:
  1944 ;;		_IO_Expander_Write
  1945 ;; This function is called by:
  1946 ;;		_LCD_CMD
  1947 ;;		_LCD_Write_Char
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _LCD_Write_4Bit
  1953  16CE                     _LCD_Write_4Bit:
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  1957                           ;LCD_Write_4Bit@Nibble stored from wreg
  1958  16CE  00F5               	movwf	LCD_Write_4Bit@Nibble
  1959  16CF                     l2800:
  1960                           
  1961                           ;I2C_LCD.c: 117: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 118: {;I2C_LCD.c: 
      +                          120:   Nibble |= RS;
  1962  16CF  087A               	movf	_RS,w
  1963  16D0  00F4               	movwf	??_LCD_Write_4Bit
  1964  16D1  0874               	movf	??_LCD_Write_4Bit,w
  1965  16D2  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  1966  16D3                     l2802:
  1967                           
  1968                           ;I2C_LCD.c: 121:   IO_Expander_Write(Nibble | 0x04);
  1969  16D3  0875               	movf	LCD_Write_4Bit@Nibble,w
  1970  16D4  3804               	iorlw	4
  1971  16D5  160A  118A  2700  160A  118A  	fcall	_IO_Expander_Write
  1972  16DA                     l2804:
  1973                           
  1974                           ;I2C_LCD.c: 122:   IO_Expander_Write(Nibble & 0xFB);
  1975  16DA  0875               	movf	LCD_Write_4Bit@Nibble,w
  1976  16DB  39FB               	andlw	251
  1977  16DC  160A  118A  2700  160A  118A  	fcall	_IO_Expander_Write
  1978                           
  1979                           ;I2C_LCD.c: 123:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  1980  16E1  3021               	movlw	33
  1981  16E2  00F4               	movwf	??_LCD_Write_4Bit
  1982  16E3                     u5497:
  1983  16E3  0BF4               	decfsz	??_LCD_Write_4Bit,f
  1984  16E4  2EE3               	goto	u5497
  1985  16E5                     l186:
  1986  16E5  0008               	return
  1987  16E6                     __end_of_LCD_Write_4Bit:
  1988                           
  1989                           	psect	text9
  1990  1700                     __ptext9:	
  1991 ;; *************** function _IO_Expander_Write *****************
  1992 ;; Defined at:
  1993 ;;		line 109 in file "I2C_LCD.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  Data            1    wreg     unsigned char 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  Data            1    3[COMMON] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 3
  2014 ;; This function calls:
  2015 ;;		_I2C_Master_Start
  2016 ;;		_I2C_Master_Stop
  2017 ;;		_I2C_Master_Write
  2018 ;; This function is called by:
  2019 ;;		_LCD_Init
  2020 ;;		_LCD_Write_4Bit
  2021 ;;		_Backlight
  2022 ;;		_noBacklight
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _IO_Expander_Write
  2028  1700                     _IO_Expander_Write:
  2029                           
  2030                           ;incstack = 0
  2031                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2032                           ;IO_Expander_Write@Data stored from wreg
  2033  1700  00F3               	movwf	IO_Expander_Write@Data
  2034  1701                     l2798:
  2035                           
  2036                           ;I2C_LCD.c: 109: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 110: {;I2C_LCD.c:
      +                           111:   I2C_Master_Start();
  2037  1701  160A  118A  2689  160A  118A  	fcall	_I2C_Master_Start
  2038                           
  2039                           ;I2C_LCD.c: 112:   I2C_Master_Write(i2c_add);
  2040  1706  1683               	bsf	3,5	;RP0=1, select bank1
  2041  1707  1303               	bcf	3,6	;RP1=0, select bank1
  2042  1708  083E               	movf	_i2c_add^(0+128),w
  2043  1709  160A  118A  26A8  160A  118A  	fcall	_I2C_Master_Write
  2044                           
  2045                           ;I2C_LCD.c: 113:   I2C_Master_Write(Data | BackLight_State);
  2046  170E  0873               	movf	IO_Expander_Write@Data,w
  2047  170F  047B               	iorwf	_BackLight_State,w
  2048  1710  160A  118A  26A8  160A  118A  	fcall	_I2C_Master_Write
  2049                           
  2050                           ;I2C_LCD.c: 114:   I2C_Master_Stop();
  2051  1715  160A  118A  2692  160A  118A  	fcall	_I2C_Master_Stop
  2052  171A                     l183:
  2053  171A  0008               	return
  2054  171B                     __end_of_IO_Expander_Write:
  2055                           
  2056                           	psect	text10
  2057  16A8                     __ptext10:	
  2058 ;; *************** function _I2C_Master_Write *****************
  2059 ;; Defined at:
  2060 ;;		line 62 in file "I2C_LCD.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  data            1    wreg     unsigned char 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  data            1    2[COMMON] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      unsigned char 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         1       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         1       0       0       0       0
  2078 ;;Total ram usage:        1 bytes
  2079 ;; Hardware stack levels used: 1
  2080 ;; Hardware stack levels required when called: 2
  2081 ;; This function calls:
  2082 ;;		_I2C_Master_Wait
  2083 ;; This function is called by:
  2084 ;;		_IO_Expander_Write
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function _I2C_Master_Write
  2090  16A8                     _I2C_Master_Write:
  2091                           
  2092                           ;incstack = 0
  2093                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2094                           ;I2C_Master_Write@data stored from wreg
  2095  16A8  00F2               	movwf	I2C_Master_Write@data
  2096  16A9                     l2794:
  2097                           
  2098                           ;I2C_LCD.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 63: {;I2C_
      +                          LCD.c: 64:     I2C_Master_Wait();
  2099  16A9  120A  158A  2049  160A  118A  	fcall	_I2C_Master_Wait
  2100  16AE                     l2796:
  2101                           
  2102                           ;I2C_LCD.c: 65:     SSPBUF = data;
  2103  16AE  0872               	movf	I2C_Master_Write@data,w
  2104  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  2105  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  2106  16B1  0093               	movwf	19	;volatile
  2107  16B2                     l168:	
  2108                           ;I2C_LCD.c: 66:     while(!SSPIF);
  2109                           
  2110  16B2  1D8C               	btfss	12,3	;volatile
  2111  16B3  2EB5               	goto	u3611
  2112  16B4  2EB6               	goto	u3610
  2113  16B5                     u3611:
  2114  16B5  2EB2               	goto	l168
  2115  16B6                     u3610:
  2116  16B6                     l170:
  2117                           
  2118                           ;I2C_LCD.c: 67:  SSPIF = 0;
  2119  16B6  118C               	bcf	12,3	;volatile
  2120  16B7                     l171:	
  2121                           ;I2C_LCD.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2122                           
  2123  16B7  0008               	return
  2124  16B8                     __end_of_I2C_Master_Write:
  2125                           
  2126                           	psect	text11
  2127  1692                     __ptext11:	
  2128 ;; *************** function _I2C_Master_Stop *****************
  2129 ;; Defined at:
  2130 ;;		line 42 in file "I2C_LCD.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0
  2147 ;;      Totals:         0       0       0       0       0
  2148 ;;Total ram usage:        0 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 2
  2151 ;; This function calls:
  2152 ;;		_I2C_Master_Wait
  2153 ;; This function is called by:
  2154 ;;		_IO_Expander_Write
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _I2C_Master_Stop
  2160  1692                     _I2C_Master_Stop:
  2161  1692                     l2790:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2164                           
  2165                           
  2166                           ;I2C_LCD.c: 44:     I2C_Master_Wait();
  2167  1692  120A  158A  2049  160A  118A  	fcall	_I2C_Master_Wait
  2168  1697                     l2792:
  2169                           
  2170                           ;I2C_LCD.c: 45:     PEN = 1;
  2171  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2172  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2173  1699  1511               	bsf	17,2	;volatile
  2174  169A                     l159:
  2175  169A  0008               	return
  2176  169B                     __end_of_I2C_Master_Stop:
  2177                           
  2178                           	psect	text12
  2179  1689                     __ptext12:	
  2180 ;; *************** function _I2C_Master_Start *****************
  2181 ;; Defined at:
  2182 ;;		line 30 in file "I2C_LCD.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;		None
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0
  2199 ;;      Totals:         0       0       0       0       0
  2200 ;;Total ram usage:        0 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 2
  2203 ;; This function calls:
  2204 ;;		_I2C_Master_Wait
  2205 ;; This function is called by:
  2206 ;;		_IO_Expander_Write
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _I2C_Master_Start
  2212  1689                     _I2C_Master_Start:
  2213  1689                     l2786:	
  2214                           ;incstack = 0
  2215                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2216                           
  2217                           
  2218                           ;I2C_LCD.c: 32:     I2C_Master_Wait();
  2219  1689  120A  158A  2049  160A  118A  	fcall	_I2C_Master_Wait
  2220  168E                     l2788:
  2221                           
  2222                           ;I2C_LCD.c: 33:     SEN = 1;
  2223  168E  1683               	bsf	3,5	;RP0=1, select bank1
  2224  168F  1303               	bcf	3,6	;RP1=0, select bank1
  2225  1690  1411               	bsf	17,0	;volatile
  2226  1691                     l153:
  2227  1691  0008               	return
  2228  1692                     __end_of_I2C_Master_Start:
  2229                           
  2230                           	psect	text13
  2231  0849                     __ptext13:	
  2232 ;; *************** function _I2C_Master_Wait *****************
  2233 ;; Defined at:
  2234 ;;		line 25 in file "I2C_LCD.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 1
  2255 ;; This function calls:
  2256 ;;		Nothing
  2257 ;; This function is called by:
  2258 ;;		_I2C_Master_Start
  2259 ;;		_I2C_Master_Stop
  2260 ;;		_I2C_Master_Write
  2261 ;;		_I2C_Master_RepeatedStart
  2262 ;;		_I2C_ACK
  2263 ;;		_I2C_NACK
  2264 ;;		_I2C_Read_Byte
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _I2C_Master_Wait
  2270  0849                     _I2C_Master_Wait:
  2271  0849                     l2782:	
  2272                           ;incstack = 0
  2273                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2274                           
  2275  0849                     l147:	
  2276                           ;I2C_LCD.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2277                           
  2278  0849  1683               	bsf	3,5	;RP0=1, select bank1
  2279  084A  1303               	bcf	3,6	;RP1=0, select bank1
  2280  084B  1914               	btfsc	20,2	;volatile
  2281  084C  284E               	goto	u3591
  2282  084D  284F               	goto	u3590
  2283  084E                     u3591:
  2284  084E  2849               	goto	l147
  2285  084F                     u3590:
  2286  084F                     l2784:
  2287  084F  0811               	movf	17,w	;volatile
  2288  0850  391F               	andlw	31
  2289  0851  1D03               	btfss	3,2
  2290  0852  2854               	goto	u3601
  2291  0853  2855               	goto	u3600
  2292  0854                     u3601:
  2293  0854  2849               	goto	l147
  2294  0855                     u3600:
  2295  0855                     l150:
  2296  0855  0008               	return
  2297  0856                     __end_of_I2C_Master_Wait:
  2298                           
  2299                           	psect	text14
  2300  169B                     __ptext14:	
  2301 ;; *************** function _I2C_Master_Init *****************
  2302 ;; Defined at:
  2303 ;;		line 15 in file "I2C_LCD.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 1
  2324 ;; This function calls:
  2325 ;;		Nothing
  2326 ;; This function is called by:
  2327 ;;		_main
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _I2C_Master_Init
  2333  169B                     _I2C_Master_Init:
  2334  169B                     l3486:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2337                           
  2338                           
  2339                           ;I2C_LCD.c: 17:   SSPCON = 0x28;
  2340  169B  3028               	movlw	40
  2341  169C  1283               	bcf	3,5	;RP0=0, select bank0
  2342  169D  1303               	bcf	3,6	;RP1=0, select bank0
  2343  169E  0094               	movwf	20	;volatile
  2344  169F                     l3488:
  2345                           
  2346                           ;I2C_LCD.c: 18:   SSPCON2 = 0x00;
  2347  169F  1683               	bsf	3,5	;RP0=1, select bank1
  2348  16A0  1303               	bcf	3,6	;RP1=0, select bank1
  2349  16A1  0191               	clrf	17	;volatile
  2350  16A2                     l3490:
  2351                           
  2352                           ;I2C_LCD.c: 19:   SSPSTAT = 0x00;
  2353  16A2  0194               	clrf	20	;volatile
  2354                           
  2355                           ;I2C_LCD.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  2356  16A3  30CF               	movlw	207
  2357  16A4  0093               	movwf	19	;volatile
  2358  16A5                     l3492:
  2359                           
  2360                           ;I2C_LCD.c: 21:   TRISC3 = 1;
  2361  16A5  1587               	bsf	7,3	;volatile
  2362  16A6                     l3494:
  2363                           
  2364                           ;I2C_LCD.c: 22:   TRISC4 = 1;
  2365  16A6  1607               	bsf	7,4	;volatile
  2366  16A7                     l144:
  2367  16A7  0008               	return
  2368  16A8                     __end_of_I2C_Master_Init:
  2369                           
  2370                           	psect	text15
  2371  002E                     __ptext15:	
  2372 ;; *************** function _ADC_convert *****************
  2373 ;; Defined at:
  2374 ;;		line 155 in file "Main.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  data            1    wreg     PTR unsigned char 
  2377 ;;		 -> converted02(10), 
  2378 ;;  a               4   57[BANK0 ] float 
  2379 ;;  place           2   61[BANK0 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  data            1    4[BANK1 ] PTR unsigned char 
  2382 ;;		 -> converted02(10), 
  2383 ;;  x               4    5[BANK1 ] float 
  2384 ;;  mu              2   13[BANK1 ] int 
  2385 ;;  digits          2   11[BANK1 ] int 
  2386 ;;  i               2    9[BANK1 ] int 
  2387 ;;  j               2    2[BANK1 ] int 
  2388 ;;  temp            2    0[BANK1 ] int 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       6       0       0       0
  2399 ;;      Locals:         0       0      15       0       0
  2400 ;;      Temps:          0       2       0       0       0
  2401 ;;      Totals:         0       8      15       0       0
  2402 ;;Total ram usage:       23 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 3
  2405 ;; This function calls:
  2406 ;;		___awdiv
  2407 ;;		___fldiv
  2408 ;;		___flge
  2409 ;;		___flmul
  2410 ;;		___flsub
  2411 ;;		___fltol
  2412 ;;		___wmul
  2413 ;;		___xxtofl
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _ADC_convert
  2421  002E                     _ADC_convert:
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2425                           ;ADC_convert@data stored from wreg
  2426  002E  1683               	bsf	3,5	;RP0=1, select bank1
  2427  002F  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0030  00B3               	movwf	ADC_convert@data^(0+128)
  2429  0031                     l3556:
  2430                           
  2431                           ;Main.c: 155:          if(digits==1)mu=1;;Main.c: 156:          else for(j=2;j<=digits;j
      +                          ++)mu=mu*10;;Main.c: 157: 
  2432  0031  1283               	bcf	3,5	;RP0=0, select bank0
  2433  0032  1303               	bcf	3,6	;RP1=0, select bank0
  2434  0033  085C               	movf	ADC_convert@a+3,w
  2435  0034  00F5               	movwf	___fltol@f1+3
  2436  0035  085B               	movf	ADC_convert@a+2,w
  2437  0036  00F4               	movwf	___fltol@f1+2
  2438  0037  085A               	movf	ADC_convert@a+1,w
  2439  0038  00F3               	movwf	___fltol@f1+1
  2440  0039  0859               	movf	ADC_convert@a,w
  2441  003A  00F2               	movwf	___fltol@f1
  2442  003B  120A  118A  2783  120A  118A  	fcall	___fltol
  2443  0040  0873               	movf	?___fltol+1,w
  2444  0041  1683               	bsf	3,5	;RP0=1, select bank1
  2445  0042  1303               	bcf	3,6	;RP1=0, select bank1
  2446  0043  00B0               	movwf	(ADC_convert@temp+1)^(0+128)
  2447  0044  0872               	movf	?___fltol,w
  2448  0045  00AF               	movwf	ADC_convert@temp^(0+128)
  2449  0046                     l3558:
  2450  0046                     l3560:
  2451                           
  2452                           ;Main.c: 159:          a=a-((int)x*mu);
  2453  0046  01BA               	clrf	ADC_convert@digits^(0+128)
  2454  0047  01BB               	clrf	(ADC_convert@digits+1)^(0+128)
  2455  0048                     l3562:
  2456                           
  2457                           ;Main.c: 160:          data[i]=0x30+((int)x);
  2458  0048  01B8               	clrf	ADC_convert@i^(0+128)
  2459  0049  01B9               	clrf	(ADC_convert@i+1)^(0+128)
  2460  004A                     l3564:
  2461  004A  3001               	movlw	1
  2462  004B  00BC               	movwf	ADC_convert@mu^(0+128)
  2463  004C  3000               	movlw	0
  2464  004D  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  2465  004E                     l3566:
  2466  004E                     l3568:
  2467                           
  2468                           ;Main.c: 162:          digits--;
  2469  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2470  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2471  0050  085C               	movf	ADC_convert@a+3,w
  2472  0051  00F5               	movwf	___flge@ff1+3
  2473  0052  085B               	movf	ADC_convert@a+2,w
  2474  0053  00F4               	movwf	___flge@ff1+2
  2475  0054  085A               	movf	ADC_convert@a+1,w
  2476  0055  00F3               	movwf	___flge@ff1+1
  2477  0056  0859               	movf	ADC_convert@a,w
  2478  0057  00F2               	movwf	___flge@ff1
  2479  0058  3000               	movlw	0
  2480  0059  00F9               	movwf	___flge@ff2+3
  2481  005A  3000               	movlw	0
  2482  005B  00F8               	movwf	___flge@ff2+2
  2483  005C  3000               	movlw	0
  2484  005D  00F7               	movwf	___flge@ff2+1
  2485  005E  3000               	movlw	0
  2486  005F  00F6               	movwf	___flge@ff2
  2487  0060  120A  158A  2195  120A  118A  	fcall	___flge
  2488  0065  1803               	btfsc	3,0
  2489  0066  2868               	goto	u5281
  2490  0067  2869               	goto	u5280
  2491  0068                     u5281:
  2492  0068  28B7               	goto	l3580
  2493  0069                     u5280:
  2494  0069                     l3570:
  2495                           
  2496                           ;Main.c: 163:          mu=1;;Main.c: 164:      }
  2497  0069  30BF               	movlw	191
  2498  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2499  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2500  006C  00C2               	movwf	___flmul@b+3
  2501  006D  3080               	movlw	128
  2502  006E  00C1               	movwf	___flmul@b+2
  2503  006F  3000               	movlw	0
  2504  0070  00C0               	movwf	___flmul@b+1
  2505  0071  3000               	movlw	0
  2506  0072  00BF               	movwf	___flmul@b
  2507  0073  085C               	movf	ADC_convert@a+3,w
  2508  0074  00C6               	movwf	___flmul@a+3
  2509  0075  085B               	movf	ADC_convert@a+2,w
  2510  0076  00C5               	movwf	___flmul@a+2
  2511  0077  085A               	movf	ADC_convert@a+1,w
  2512  0078  00C4               	movwf	___flmul@a+1
  2513  0079  0859               	movf	ADC_convert@a,w
  2514  007A  00C3               	movwf	___flmul@a
  2515  007B  120A  118A  2422  120A  118A  	fcall	___flmul
  2516  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0082  0842               	movf	?___flmul+3,w
  2519  0083  00DC               	movwf	ADC_convert@a+3
  2520  0084  0841               	movf	?___flmul+2,w
  2521  0085  00DB               	movwf	ADC_convert@a+2
  2522  0086  0840               	movf	?___flmul+1,w
  2523  0087  00DA               	movwf	ADC_convert@a+1
  2524  0088  083F               	movf	?___flmul,w
  2525  0089  00D9               	movwf	ADC_convert@a
  2526  008A                     l3572:
  2527                           
  2528                           ;Main.c: 165: 
  2529  008A  302D               	movlw	45
  2530  008B  00DF               	movwf	??_ADC_convert
  2531  008C  1683               	bsf	3,5	;RP0=1, select bank1
  2532  008D  1303               	bcf	3,6	;RP1=0, select bank1
  2533  008E  0833               	movf	ADC_convert@data^(0+128),w
  2534  008F  0084               	movwf	4
  2535  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0091  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0092  085F               	movf	??_ADC_convert,w
  2538  0093  1383               	bcf	3,7	;select IRP bank0
  2539  0094  0080               	movwf	0
  2540  0095                     l3574:
  2541                           
  2542                           ;Main.c: 166:     data[i]='\n';
  2543  0095  3001               	movlw	1
  2544  0096  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0097  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0098  07B8               	addwf	ADC_convert@i^(0+128),f
  2547  0099  1803               	skipnc
  2548  009A  0AB9               	incf	(ADC_convert@i+1)^(0+128),f
  2549  009B  3000               	movlw	0
  2550  009C  07B9               	addwf	(ADC_convert@i+1)^(0+128),f
  2551  009D  28B7               	goto	l3580
  2552  009E                     l3576:
  2553  009E  300A               	movlw	10
  2554  009F  00F2               	movwf	___awdiv@divisor
  2555  00A0  3000               	movlw	0
  2556  00A1  00F3               	movwf	___awdiv@divisor+1
  2557  00A2  0830               	movf	(ADC_convert@temp+1)^(0+128),w
  2558  00A3  00F5               	movwf	___awdiv@dividend+1
  2559  00A4  082F               	movf	ADC_convert@temp^(0+128),w
  2560  00A5  00F4               	movwf	___awdiv@dividend
  2561  00A6  120A  158A  209C  120A  118A  	fcall	___awdiv
  2562  00AB  0873               	movf	?___awdiv+1,w
  2563  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  2564  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  2565  00AE  00B0               	movwf	(ADC_convert@temp+1)^(0+128)
  2566  00AF  0872               	movf	?___awdiv,w
  2567  00B0  00AF               	movwf	ADC_convert@temp^(0+128)
  2568  00B1                     l3578:
  2569  00B1  3001               	movlw	1
  2570  00B2  07BA               	addwf	ADC_convert@digits^(0+128),f
  2571  00B3  1803               	skipnc
  2572  00B4  0ABB               	incf	(ADC_convert@digits+1)^(0+128),f
  2573  00B5  3000               	movlw	0
  2574  00B6  07BB               	addwf	(ADC_convert@digits+1)^(0+128),f
  2575  00B7                     l3580:
  2576  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  2577  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  2578  00B9  082F               	movf	ADC_convert@temp^(0+128),w
  2579  00BA  0430               	iorwf	(ADC_convert@temp+1)^(0+128),w
  2580  00BB  1D03               	btfss	3,2
  2581  00BC  28BE               	goto	u5291
  2582  00BD  28BF               	goto	u5290
  2583  00BE                     u5291:
  2584  00BE  289E               	goto	l3576
  2585  00BF                     u5290:
  2586  00BF  29DB               	goto	l3604
  2587  00C0                     l3582:
  2588  00C0  033A               	decf	ADC_convert@digits^(0+128),w
  2589  00C1  043B               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2590  00C2  1D03               	btfss	3,2
  2591  00C3  28C5               	goto	u5301
  2592  00C4  28C6               	goto	u5300
  2593  00C5                     u5301:
  2594  00C5  28CB               	goto	l3586
  2595  00C6                     u5300:
  2596  00C6                     l3584:
  2597  00C6  3001               	movlw	1
  2598  00C7  00BC               	movwf	ADC_convert@mu^(0+128)
  2599  00C8  3000               	movlw	0
  2600  00C9  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  2601  00CA  290D               	goto	l3594
  2602  00CB                     l3586:
  2603  00CB  3002               	movlw	2
  2604  00CC  00B1               	movwf	ADC_convert@j^(0+128)
  2605  00CD  3000               	movlw	0
  2606  00CE  00B2               	movwf	(ADC_convert@j^(0+128)+1)
  2607  00CF  28F7               	goto	l3592
  2608  00D0                     l3588:
  2609  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  2610  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  2611  00D2  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  2612  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2613  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2614  00D5  00A6               	movwf	___wmul@multiplier+1
  2615  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  2616  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  2617  00D8  083C               	movf	ADC_convert@mu^(0+128),w
  2618  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  2619  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  2620  00DB  00A5               	movwf	___wmul@multiplier
  2621  00DC  300A               	movlw	10
  2622  00DD  00A7               	movwf	___wmul@multiplicand
  2623  00DE  3000               	movlw	0
  2624  00DF  00A8               	movwf	___wmul@multiplicand+1
  2625  00E0  160A  118A  2778  120A  118A  	fcall	___wmul
  2626  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2627  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2628  00E7  0826               	movf	?___wmul+1,w
  2629  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  2630  00E9  1303               	bcf	3,6	;RP1=0, select bank1
  2631  00EA  00BD               	movwf	(ADC_convert@mu+1)^(0+128)
  2632  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  2633  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  2634  00ED  0825               	movf	?___wmul,w
  2635  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  2636  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  2637  00F0  00BC               	movwf	ADC_convert@mu^(0+128)
  2638  00F1                     l3590:
  2639  00F1  3001               	movlw	1
  2640  00F2  07B1               	addwf	ADC_convert@j^(0+128),f
  2641  00F3  1803               	skipnc
  2642  00F4  0AB2               	incf	(ADC_convert@j+1)^(0+128),f
  2643  00F5  3000               	movlw	0
  2644  00F6  07B2               	addwf	(ADC_convert@j+1)^(0+128),f
  2645  00F7                     l3592:
  2646  00F7  083B               	movf	(ADC_convert@digits+1)^(0+128),w
  2647  00F8  3A80               	xorlw	128
  2648  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2649  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2650  00FB  00DF               	movwf	??_ADC_convert
  2651  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  2652  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  2653  00FE  0832               	movf	(ADC_convert@j+1)^(0+128),w
  2654  00FF  3A80               	xorlw	128
  2655  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0102  025F               	subwf	??_ADC_convert,w
  2658  0103  1D03               	skipz
  2659  0104  2909               	goto	u5315
  2660  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0106  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0107  0831               	movf	ADC_convert@j^(0+128),w
  2663  0108  023A               	subwf	ADC_convert@digits^(0+128),w
  2664  0109                     u5315:
  2665  0109  1803               	skipnc
  2666  010A  290C               	goto	u5311
  2667  010B  290D               	goto	u5310
  2668  010C                     u5311:
  2669  010C  28D0               	goto	l3588
  2670  010D                     u5310:
  2671  010D                     l3594:
  2672  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2673  010E  1303               	bcf	3,6	;RP1=0, select bank1
  2674  010F  083C               	movf	ADC_convert@mu^(0+128),w
  2675  0110  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0111  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0112  00A9               	movwf	___xxtofl@val
  2678  0113  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0114  1303               	bcf	3,6	;RP1=0, select bank1
  2680  0115  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  2681  0116  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0117  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0118  00AA               	movwf	___xxtofl@val+1
  2684  0119  3000               	movlw	0
  2685  011A  1BAA               	btfsc	___xxtofl@val+1,7
  2686  011B  30FF               	movlw	255
  2687  011C  00AB               	movwf	___xxtofl@val+2
  2688  011D  00AC               	movwf	___xxtofl@val+3
  2689  011E  3001               	movlw	1
  2690  011F  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2691  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0126  082C               	movf	?___xxtofl+3,w
  2694  0127  00BA               	movwf	___fldiv@a+3
  2695  0128  082B               	movf	?___xxtofl+2,w
  2696  0129  00B9               	movwf	___fldiv@a+2
  2697  012A  082A               	movf	?___xxtofl+1,w
  2698  012B  00B8               	movwf	___fldiv@a+1
  2699  012C  0829               	movf	?___xxtofl,w
  2700  012D  00B7               	movwf	___fldiv@a
  2701  012E  085C               	movf	ADC_convert@a+3,w
  2702  012F  00BE               	movwf	___fldiv@b+3
  2703  0130  085B               	movf	ADC_convert@a+2,w
  2704  0131  00BD               	movwf	___fldiv@b+2
  2705  0132  085A               	movf	ADC_convert@a+1,w
  2706  0133  00BC               	movwf	___fldiv@b+1
  2707  0134  0859               	movf	ADC_convert@a,w
  2708  0135  00BB               	movwf	___fldiv@b
  2709  0136  120A  158A  239B  120A  118A  	fcall	___fldiv
  2710  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2711  013C  1303               	bcf	3,6	;RP1=0, select bank0
  2712  013D  083A               	movf	?___fldiv+3,w
  2713  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2714  013F  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0140  00B7               	movwf	(ADC_convert@x+3)^(0+128)
  2716  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0143  0839               	movf	?___fldiv+2,w
  2719  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0145  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0146  00B6               	movwf	(ADC_convert@x+2)^(0+128)
  2722  0147  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0148  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0149  0838               	movf	?___fldiv+1,w
  2725  014A  1683               	bsf	3,5	;RP0=1, select bank1
  2726  014B  1303               	bcf	3,6	;RP1=0, select bank1
  2727  014C  00B5               	movwf	(ADC_convert@x+1)^(0+128)
  2728  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2729  014E  1303               	bcf	3,6	;RP1=0, select bank0
  2730  014F  0837               	movf	?___fldiv,w
  2731  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0151  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0152  00B4               	movwf	ADC_convert@x^(0+128)
  2734  0153  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  2735  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0156  00A8               	movwf	___wmul@multiplicand+1
  2738  0157  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0158  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0159  083C               	movf	ADC_convert@mu^(0+128),w
  2741  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2742  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2743  015C  00A7               	movwf	___wmul@multiplicand
  2744  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2745  015E  1303               	bcf	3,6	;RP1=0, select bank1
  2746  015F  0837               	movf	(ADC_convert@x+3)^(0+128),w
  2747  0160  00F5               	movwf	___fltol@f1+3
  2748  0161  0836               	movf	(ADC_convert@x+2)^(0+128),w
  2749  0162  00F4               	movwf	___fltol@f1+2
  2750  0163  0835               	movf	(ADC_convert@x+1)^(0+128),w
  2751  0164  00F3               	movwf	___fltol@f1+1
  2752  0165  0834               	movf	ADC_convert@x^(0+128),w
  2753  0166  00F2               	movwf	___fltol@f1
  2754  0167  120A  118A  2783  120A  118A  	fcall	___fltol
  2755  016C  0873               	movf	?___fltol+1,w
  2756  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2757  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2758  016F  00A6               	movwf	___wmul@multiplier+1
  2759  0170  0872               	movf	?___fltol,w
  2760  0171  00A5               	movwf	___wmul@multiplier
  2761  0172  160A  118A  2778  120A  118A  	fcall	___wmul
  2762  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0179  0825               	movf	?___wmul,w
  2765  017A  00A9               	movwf	___xxtofl@val
  2766  017B  0826               	movf	?___wmul+1,w
  2767  017C  00AA               	movwf	___xxtofl@val+1
  2768  017D  3000               	movlw	0
  2769  017E  1BAA               	btfsc	___xxtofl@val+1,7
  2770  017F  30FF               	movlw	255
  2771  0180  00AB               	movwf	___xxtofl@val+2
  2772  0181  00AC               	movwf	___xxtofl@val+3
  2773  0182  3001               	movlw	1
  2774  0183  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2775  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2777  018A  082C               	movf	?___xxtofl+3,w
  2778  018B  00BA               	movwf	___flsub@a+3
  2779  018C  082B               	movf	?___xxtofl+2,w
  2780  018D  00B9               	movwf	___flsub@a+2
  2781  018E  082A               	movf	?___xxtofl+1,w
  2782  018F  00B8               	movwf	___flsub@a+1
  2783  0190  0829               	movf	?___xxtofl,w
  2784  0191  00B7               	movwf	___flsub@a
  2785  0192  085C               	movf	ADC_convert@a+3,w
  2786  0193  00BE               	movwf	___flsub@b+3
  2787  0194  085B               	movf	ADC_convert@a+2,w
  2788  0195  00BD               	movwf	___flsub@b+2
  2789  0196  085A               	movf	ADC_convert@a+1,w
  2790  0197  00BC               	movwf	___flsub@b+1
  2791  0198  0859               	movf	ADC_convert@a,w
  2792  0199  00BB               	movwf	___flsub@b
  2793  019A  160A  118A  2754  120A  118A  	fcall	___flsub
  2794  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2795  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2796  01A1  083A               	movf	?___flsub+3,w
  2797  01A2  00DC               	movwf	ADC_convert@a+3
  2798  01A3  0839               	movf	?___flsub+2,w
  2799  01A4  00DB               	movwf	ADC_convert@a+2
  2800  01A5  0838               	movf	?___flsub+1,w
  2801  01A6  00DA               	movwf	ADC_convert@a+1
  2802  01A7  0837               	movf	?___flsub,w
  2803  01A8  00D9               	movwf	ADC_convert@a
  2804  01A9                     l3596:
  2805  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  2806  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  2807  01AB  0837               	movf	(ADC_convert@x+3)^(0+128),w
  2808  01AC  00F5               	movwf	___fltol@f1+3
  2809  01AD  0836               	movf	(ADC_convert@x+2)^(0+128),w
  2810  01AE  00F4               	movwf	___fltol@f1+2
  2811  01AF  0835               	movf	(ADC_convert@x+1)^(0+128),w
  2812  01B0  00F3               	movwf	___fltol@f1+1
  2813  01B1  0834               	movf	ADC_convert@x^(0+128),w
  2814  01B2  00F2               	movwf	___fltol@f1
  2815  01B3  120A  118A  2783  120A  118A  	fcall	___fltol
  2816  01B8  0872               	movf	?___fltol,w
  2817  01B9  3E30               	addlw	48
  2818  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2819  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2820  01BC  00DF               	movwf	??_ADC_convert
  2821  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2822  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  2823  01BF  0838               	movf	ADC_convert@i^(0+128),w
  2824  01C0  0733               	addwf	ADC_convert@data^(0+128),w
  2825  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2826  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2827  01C3  00E0               	movwf	??_ADC_convert+1
  2828  01C4  0860               	movf	??_ADC_convert+1,w
  2829  01C5  0084               	movwf	4
  2830  01C6  085F               	movf	??_ADC_convert,w
  2831  01C7  1383               	bcf	3,7	;select IRP bank0
  2832  01C8  0080               	movwf	0
  2833  01C9                     l3598:
  2834  01C9  3001               	movlw	1
  2835  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2836  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2837  01CC  07B8               	addwf	ADC_convert@i^(0+128),f
  2838  01CD  1803               	skipnc
  2839  01CE  0AB9               	incf	(ADC_convert@i+1)^(0+128),f
  2840  01CF  3000               	movlw	0
  2841  01D0  07B9               	addwf	(ADC_convert@i+1)^(0+128),f
  2842  01D1                     l3600:
  2843  01D1  30FF               	movlw	255
  2844  01D2  07BA               	addwf	ADC_convert@digits^(0+128),f
  2845  01D3  1803               	skipnc
  2846  01D4  0ABB               	incf	(ADC_convert@digits+1)^(0+128),f
  2847  01D5  30FF               	movlw	255
  2848  01D6  07BB               	addwf	(ADC_convert@digits+1)^(0+128),f
  2849  01D7                     l3602:
  2850  01D7  3001               	movlw	1
  2851  01D8  00BC               	movwf	ADC_convert@mu^(0+128)
  2852  01D9  3000               	movlw	0
  2853  01DA  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  2854  01DB                     l3604:
  2855  01DB  083A               	movf	ADC_convert@digits^(0+128),w
  2856  01DC  043B               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2857  01DD  1D03               	btfss	3,2
  2858  01DE  29E0               	goto	u5321
  2859  01DF  29E1               	goto	u5320
  2860  01E0                     u5321:
  2861  01E0  28C0               	goto	l3582
  2862  01E1                     u5320:
  2863  01E1                     l3606:
  2864  01E1  302E               	movlw	46
  2865  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2866  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2867  01E4  00DF               	movwf	??_ADC_convert
  2868  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2869  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2870  01E7  0838               	movf	ADC_convert@i^(0+128),w
  2871  01E8  0733               	addwf	ADC_convert@data^(0+128),w
  2872  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2873  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2874  01EB  00E0               	movwf	??_ADC_convert+1
  2875  01EC  0860               	movf	??_ADC_convert+1,w
  2876  01ED  0084               	movwf	4
  2877  01EE  085F               	movf	??_ADC_convert,w
  2878  01EF  1383               	bcf	3,7	;select IRP bank0
  2879  01F0  0080               	movwf	0
  2880  01F1                     l3608:
  2881  01F1  3001               	movlw	1
  2882  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2883  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  2884  01F4  07B8               	addwf	ADC_convert@i^(0+128),f
  2885  01F5  1803               	skipnc
  2886  01F6  0AB9               	incf	(ADC_convert@i+1)^(0+128),f
  2887  01F7  3000               	movlw	0
  2888  01F8  07B9               	addwf	(ADC_convert@i+1)^(0+128),f
  2889  01F9                     l3610:
  2890  01F9                     l3612:
  2891  01F9  3001               	movlw	1
  2892  01FA  00B1               	movwf	ADC_convert@j^(0+128)
  2893  01FB  3000               	movlw	0
  2894  01FC  00B2               	movwf	(ADC_convert@j^(0+128)+1)
  2895  01FD  2A25               	goto	l3618
  2896  01FE                     l3614:
  2897  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  2898  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0200  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  2900  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0203  00A6               	movwf	___wmul@multiplier+1
  2903  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2904  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2905  0206  083C               	movf	ADC_convert@mu^(0+128),w
  2906  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0209  00A5               	movwf	___wmul@multiplier
  2909  020A  300A               	movlw	10
  2910  020B  00A7               	movwf	___wmul@multiplicand
  2911  020C  3000               	movlw	0
  2912  020D  00A8               	movwf	___wmul@multiplicand+1
  2913  020E  160A  118A  2778  120A  118A  	fcall	___wmul
  2914  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0215  0826               	movf	?___wmul+1,w
  2917  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2918  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2919  0218  00BD               	movwf	(ADC_convert@mu+1)^(0+128)
  2920  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2921  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2922  021B  0825               	movf	?___wmul,w
  2923  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2924  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2925  021E  00BC               	movwf	ADC_convert@mu^(0+128)
  2926  021F                     l3616:
  2927  021F  3001               	movlw	1
  2928  0220  07B1               	addwf	ADC_convert@j^(0+128),f
  2929  0221  1803               	skipnc
  2930  0222  0AB2               	incf	(ADC_convert@j+1)^(0+128),f
  2931  0223  3000               	movlw	0
  2932  0224  07B2               	addwf	(ADC_convert@j+1)^(0+128),f
  2933  0225                     l3618:
  2934  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0227  085E               	movf	ADC_convert@place+1,w
  2937  0228  3A80               	xorlw	128
  2938  0229  00DF               	movwf	??_ADC_convert
  2939  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2940  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2941  022C  0832               	movf	(ADC_convert@j+1)^(0+128),w
  2942  022D  3A80               	xorlw	128
  2943  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2944  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0230  025F               	subwf	??_ADC_convert,w
  2946  0231  1D03               	skipz
  2947  0232  2A39               	goto	u5335
  2948  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0235  0831               	movf	ADC_convert@j^(0+128),w
  2951  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0238  025D               	subwf	ADC_convert@place,w
  2954  0239                     u5335:
  2955  0239  1803               	skipnc
  2956  023A  2A3C               	goto	u5331
  2957  023B  2A3D               	goto	u5330
  2958  023C                     u5331:
  2959  023C  29FE               	goto	l3614
  2960  023D                     u5330:
  2961  023D                     l3620:
  2962  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2963  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2964  023F  083C               	movf	ADC_convert@mu^(0+128),w
  2965  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0242  00A9               	movwf	___xxtofl@val
  2968  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2969  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2970  0245  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  2971  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0248  00AA               	movwf	___xxtofl@val+1
  2974  0249  3000               	movlw	0
  2975  024A  1BAA               	btfsc	___xxtofl@val+1,7
  2976  024B  30FF               	movlw	255
  2977  024C  00AB               	movwf	___xxtofl@val+2
  2978  024D  00AC               	movwf	___xxtofl@val+3
  2979  024E  3001               	movlw	1
  2980  024F  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2981  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2982  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2983  0256  082C               	movf	?___xxtofl+3,w
  2984  0257  00C2               	movwf	___flmul@b+3
  2985  0258  082B               	movf	?___xxtofl+2,w
  2986  0259  00C1               	movwf	___flmul@b+2
  2987  025A  082A               	movf	?___xxtofl+1,w
  2988  025B  00C0               	movwf	___flmul@b+1
  2989  025C  0829               	movf	?___xxtofl,w
  2990  025D  00BF               	movwf	___flmul@b
  2991  025E  085C               	movf	ADC_convert@a+3,w
  2992  025F  00F5               	movwf	___fltol@f1+3
  2993  0260  085B               	movf	ADC_convert@a+2,w
  2994  0261  00F4               	movwf	___fltol@f1+2
  2995  0262  085A               	movf	ADC_convert@a+1,w
  2996  0263  00F3               	movwf	___fltol@f1+1
  2997  0264  0859               	movf	ADC_convert@a,w
  2998  0265  00F2               	movwf	___fltol@f1
  2999  0266  120A  118A  2783  120A  118A  	fcall	___fltol
  3000  026B  0872               	movf	?___fltol,w
  3001  026C  1283               	bcf	3,5	;RP0=0, select bank0
  3002  026D  1303               	bcf	3,6	;RP1=0, select bank0
  3003  026E  00A9               	movwf	___xxtofl@val
  3004  026F  0873               	movf	?___fltol+1,w
  3005  0270  00AA               	movwf	___xxtofl@val+1
  3006  0271  3000               	movlw	0
  3007  0272  1BAA               	btfsc	___xxtofl@val+1,7
  3008  0273  30FF               	movlw	255
  3009  0274  00AB               	movwf	___xxtofl@val+2
  3010  0275  00AC               	movwf	___xxtofl@val+3
  3011  0276  3001               	movlw	1
  3012  0277  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  3013  027C  1283               	bcf	3,5	;RP0=0, select bank0
  3014  027D  1303               	bcf	3,6	;RP1=0, select bank0
  3015  027E  082C               	movf	?___xxtofl+3,w
  3016  027F  00BA               	movwf	___flsub@a+3
  3017  0280  082B               	movf	?___xxtofl+2,w
  3018  0281  00B9               	movwf	___flsub@a+2
  3019  0282  082A               	movf	?___xxtofl+1,w
  3020  0283  00B8               	movwf	___flsub@a+1
  3021  0284  0829               	movf	?___xxtofl,w
  3022  0285  00B7               	movwf	___flsub@a
  3023  0286  085C               	movf	ADC_convert@a+3,w
  3024  0287  00BE               	movwf	___flsub@b+3
  3025  0288  085B               	movf	ADC_convert@a+2,w
  3026  0289  00BD               	movwf	___flsub@b+2
  3027  028A  085A               	movf	ADC_convert@a+1,w
  3028  028B  00BC               	movwf	___flsub@b+1
  3029  028C  0859               	movf	ADC_convert@a,w
  3030  028D  00BB               	movwf	___flsub@b
  3031  028E  160A  118A  2754  120A  118A  	fcall	___flsub
  3032  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0295  083A               	movf	?___flsub+3,w
  3035  0296  00C6               	movwf	___flmul@a+3
  3036  0297  0839               	movf	?___flsub+2,w
  3037  0298  00C5               	movwf	___flmul@a+2
  3038  0299  0838               	movf	?___flsub+1,w
  3039  029A  00C4               	movwf	___flmul@a+1
  3040  029B  0837               	movf	?___flsub,w
  3041  029C  00C3               	movwf	___flmul@a
  3042  029D  120A  118A  2422  120A  118A  	fcall	___flmul
  3043  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3044  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3045  02A4  0842               	movf	?___flmul+3,w
  3046  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  3047  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  3048  02A7  00B7               	movwf	(ADC_convert@x+3)^(0+128)
  3049  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3050  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3051  02AA  0841               	movf	?___flmul+2,w
  3052  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  3053  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  3054  02AD  00B6               	movwf	(ADC_convert@x+2)^(0+128)
  3055  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3056  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3057  02B0  0840               	movf	?___flmul+1,w
  3058  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  3059  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  3060  02B3  00B5               	movwf	(ADC_convert@x+1)^(0+128)
  3061  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3062  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  3063  02B6  083F               	movf	?___flmul,w
  3064  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  3065  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  3066  02B9  00B4               	movwf	ADC_convert@x^(0+128)
  3067  02BA                     l3622:
  3068  02BA  0837               	movf	(ADC_convert@x+3)^(0+128),w
  3069  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  3070  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  3071  02BD  00DC               	movwf	ADC_convert@a+3
  3072  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  3073  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  3074  02C0  0836               	movf	(ADC_convert@x+2)^(0+128),w
  3075  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3076  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  3077  02C3  00DB               	movwf	ADC_convert@a+2
  3078  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3079  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3080  02C6  0835               	movf	(ADC_convert@x+1)^(0+128),w
  3081  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  3082  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  3083  02C9  00DA               	movwf	ADC_convert@a+1
  3084  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  3085  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  3086  02CC  0834               	movf	ADC_convert@x^(0+128),w
  3087  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3088  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3089  02CF  00D9               	movwf	ADC_convert@a
  3090  02D0                     l3624:
  3091  02D0  085C               	movf	ADC_convert@a+3,w
  3092  02D1  00F5               	movwf	___fltol@f1+3
  3093  02D2  085B               	movf	ADC_convert@a+2,w
  3094  02D3  00F4               	movwf	___fltol@f1+2
  3095  02D4  085A               	movf	ADC_convert@a+1,w
  3096  02D5  00F3               	movwf	___fltol@f1+1
  3097  02D6  0859               	movf	ADC_convert@a,w
  3098  02D7  00F2               	movwf	___fltol@f1
  3099  02D8  120A  118A  2783  120A  118A  	fcall	___fltol
  3100  02DD                     l3626:
  3101  02DD                     l3628:
  3102  02DD  3001               	movlw	1
  3103  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3104  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3105  02E0  00BC               	movwf	ADC_convert@mu^(0+128)
  3106  02E1  3000               	movlw	0
  3107  02E2  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  3108  02E3                     l3630:
  3109  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3111  02E5  085E               	movf	ADC_convert@place+1,w
  3112  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  3113  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  3114  02E8  00BB               	movwf	(ADC_convert@digits+1)^(0+128)
  3115  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3116  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3117  02EB  085D               	movf	ADC_convert@place,w
  3118  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  3119  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  3120  02EE  00BA               	movwf	ADC_convert@digits^(0+128)
  3121  02EF  2C0B               	goto	l3654
  3122  02F0                     l3632:
  3123  02F0  033A               	decf	ADC_convert@digits^(0+128),w
  3124  02F1  043B               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3125  02F2  1D03               	btfss	3,2
  3126  02F3  2AF5               	goto	u5341
  3127  02F4  2AF6               	goto	u5340
  3128  02F5                     u5341:
  3129  02F5  2AFB               	goto	l3636
  3130  02F6                     u5340:
  3131  02F6                     l3634:
  3132  02F6  3001               	movlw	1
  3133  02F7  00BC               	movwf	ADC_convert@mu^(0+128)
  3134  02F8  3000               	movlw	0
  3135  02F9  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  3136  02FA  2B3D               	goto	l3644
  3137  02FB                     l3636:
  3138  02FB  3002               	movlw	2
  3139  02FC  00B1               	movwf	ADC_convert@j^(0+128)
  3140  02FD  3000               	movlw	0
  3141  02FE  00B2               	movwf	(ADC_convert@j^(0+128)+1)
  3142  02FF  2B27               	goto	l3642
  3143  0300                     l3638:
  3144  0300  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0301  1303               	bcf	3,6	;RP1=0, select bank1
  3146  0302  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  3147  0303  1283               	bcf	3,5	;RP0=0, select bank0
  3148  0304  1303               	bcf	3,6	;RP1=0, select bank0
  3149  0305  00A6               	movwf	___wmul@multiplier+1
  3150  0306  1683               	bsf	3,5	;RP0=1, select bank1
  3151  0307  1303               	bcf	3,6	;RP1=0, select bank1
  3152  0308  083C               	movf	ADC_convert@mu^(0+128),w
  3153  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3154  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3155  030B  00A5               	movwf	___wmul@multiplier
  3156  030C  300A               	movlw	10
  3157  030D  00A7               	movwf	___wmul@multiplicand
  3158  030E  3000               	movlw	0
  3159  030F  00A8               	movwf	___wmul@multiplicand+1
  3160  0310  160A  118A  2778  120A  118A  	fcall	___wmul
  3161  0315  1283               	bcf	3,5	;RP0=0, select bank0
  3162  0316  1303               	bcf	3,6	;RP1=0, select bank0
  3163  0317  0826               	movf	?___wmul+1,w
  3164  0318  1683               	bsf	3,5	;RP0=1, select bank1
  3165  0319  1303               	bcf	3,6	;RP1=0, select bank1
  3166  031A  00BD               	movwf	(ADC_convert@mu+1)^(0+128)
  3167  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3168  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3169  031D  0825               	movf	?___wmul,w
  3170  031E  1683               	bsf	3,5	;RP0=1, select bank1
  3171  031F  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0320  00BC               	movwf	ADC_convert@mu^(0+128)
  3173  0321                     l3640:
  3174  0321  3001               	movlw	1
  3175  0322  07B1               	addwf	ADC_convert@j^(0+128),f
  3176  0323  1803               	skipnc
  3177  0324  0AB2               	incf	(ADC_convert@j+1)^(0+128),f
  3178  0325  3000               	movlw	0
  3179  0326  07B2               	addwf	(ADC_convert@j+1)^(0+128),f
  3180  0327                     l3642:
  3181  0327  083B               	movf	(ADC_convert@digits+1)^(0+128),w
  3182  0328  3A80               	xorlw	128
  3183  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3184  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3185  032B  00DF               	movwf	??_ADC_convert
  3186  032C  1683               	bsf	3,5	;RP0=1, select bank1
  3187  032D  1303               	bcf	3,6	;RP1=0, select bank1
  3188  032E  0832               	movf	(ADC_convert@j+1)^(0+128),w
  3189  032F  3A80               	xorlw	128
  3190  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0332  025F               	subwf	??_ADC_convert,w
  3193  0333  1D03               	skipz
  3194  0334  2B39               	goto	u5355
  3195  0335  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0336  1303               	bcf	3,6	;RP1=0, select bank1
  3197  0337  0831               	movf	ADC_convert@j^(0+128),w
  3198  0338  023A               	subwf	ADC_convert@digits^(0+128),w
  3199  0339                     u5355:
  3200  0339  1803               	skipnc
  3201  033A  2B3C               	goto	u5351
  3202  033B  2B3D               	goto	u5350
  3203  033C                     u5351:
  3204  033C  2B00               	goto	l3638
  3205  033D                     u5350:
  3206  033D                     l3644:
  3207  033D  1683               	bsf	3,5	;RP0=1, select bank1
  3208  033E  1303               	bcf	3,6	;RP1=0, select bank1
  3209  033F  083C               	movf	ADC_convert@mu^(0+128),w
  3210  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0342  00A9               	movwf	___xxtofl@val
  3213  0343  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0344  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0345  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  3216  0346  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0347  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0348  00AA               	movwf	___xxtofl@val+1
  3219  0349  3000               	movlw	0
  3220  034A  1BAA               	btfsc	___xxtofl@val+1,7
  3221  034B  30FF               	movlw	255
  3222  034C  00AB               	movwf	___xxtofl@val+2
  3223  034D  00AC               	movwf	___xxtofl@val+3
  3224  034E  3001               	movlw	1
  3225  034F  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  3226  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0356  082C               	movf	?___xxtofl+3,w
  3229  0357  00BA               	movwf	___fldiv@a+3
  3230  0358  082B               	movf	?___xxtofl+2,w
  3231  0359  00B9               	movwf	___fldiv@a+2
  3232  035A  082A               	movf	?___xxtofl+1,w
  3233  035B  00B8               	movwf	___fldiv@a+1
  3234  035C  0829               	movf	?___xxtofl,w
  3235  035D  00B7               	movwf	___fldiv@a
  3236  035E  085C               	movf	ADC_convert@a+3,w
  3237  035F  00BE               	movwf	___fldiv@b+3
  3238  0360  085B               	movf	ADC_convert@a+2,w
  3239  0361  00BD               	movwf	___fldiv@b+2
  3240  0362  085A               	movf	ADC_convert@a+1,w
  3241  0363  00BC               	movwf	___fldiv@b+1
  3242  0364  0859               	movf	ADC_convert@a,w
  3243  0365  00BB               	movwf	___fldiv@b
  3244  0366  120A  158A  239B  120A  118A  	fcall	___fldiv
  3245  036B  1283               	bcf	3,5	;RP0=0, select bank0
  3246  036C  1303               	bcf	3,6	;RP1=0, select bank0
  3247  036D  083A               	movf	?___fldiv+3,w
  3248  036E  1683               	bsf	3,5	;RP0=1, select bank1
  3249  036F  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0370  00B7               	movwf	(ADC_convert@x+3)^(0+128)
  3251  0371  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0372  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0373  0839               	movf	?___fldiv+2,w
  3254  0374  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0375  1303               	bcf	3,6	;RP1=0, select bank1
  3256  0376  00B6               	movwf	(ADC_convert@x+2)^(0+128)
  3257  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0379  0838               	movf	?___fldiv+1,w
  3260  037A  1683               	bsf	3,5	;RP0=1, select bank1
  3261  037B  1303               	bcf	3,6	;RP1=0, select bank1
  3262  037C  00B5               	movwf	(ADC_convert@x+1)^(0+128)
  3263  037D  1283               	bcf	3,5	;RP0=0, select bank0
  3264  037E  1303               	bcf	3,6	;RP1=0, select bank0
  3265  037F  0837               	movf	?___fldiv,w
  3266  0380  1683               	bsf	3,5	;RP0=1, select bank1
  3267  0381  1303               	bcf	3,6	;RP1=0, select bank1
  3268  0382  00B4               	movwf	ADC_convert@x^(0+128)
  3269  0383  083D               	movf	(ADC_convert@mu+1)^(0+128),w
  3270  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0386  00A8               	movwf	___wmul@multiplicand+1
  3273  0387  1683               	bsf	3,5	;RP0=1, select bank1
  3274  0388  1303               	bcf	3,6	;RP1=0, select bank1
  3275  0389  083C               	movf	ADC_convert@mu^(0+128),w
  3276  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3277  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3278  038C  00A7               	movwf	___wmul@multiplicand
  3279  038D  1683               	bsf	3,5	;RP0=1, select bank1
  3280  038E  1303               	bcf	3,6	;RP1=0, select bank1
  3281  038F  0837               	movf	(ADC_convert@x+3)^(0+128),w
  3282  0390  00F5               	movwf	___fltol@f1+3
  3283  0391  0836               	movf	(ADC_convert@x+2)^(0+128),w
  3284  0392  00F4               	movwf	___fltol@f1+2
  3285  0393  0835               	movf	(ADC_convert@x+1)^(0+128),w
  3286  0394  00F3               	movwf	___fltol@f1+1
  3287  0395  0834               	movf	ADC_convert@x^(0+128),w
  3288  0396  00F2               	movwf	___fltol@f1
  3289  0397  120A  118A  2783  120A  118A  	fcall	___fltol
  3290  039C  0873               	movf	?___fltol+1,w
  3291  039D  1283               	bcf	3,5	;RP0=0, select bank0
  3292  039E  1303               	bcf	3,6	;RP1=0, select bank0
  3293  039F  00A6               	movwf	___wmul@multiplier+1
  3294  03A0  0872               	movf	?___fltol,w
  3295  03A1  00A5               	movwf	___wmul@multiplier
  3296  03A2  160A  118A  2778  120A  118A  	fcall	___wmul
  3297  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  3298  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  3299  03A9  0825               	movf	?___wmul,w
  3300  03AA  00A9               	movwf	___xxtofl@val
  3301  03AB  0826               	movf	?___wmul+1,w
  3302  03AC  00AA               	movwf	___xxtofl@val+1
  3303  03AD  3000               	movlw	0
  3304  03AE  1BAA               	btfsc	___xxtofl@val+1,7
  3305  03AF  30FF               	movlw	255
  3306  03B0  00AB               	movwf	___xxtofl@val+2
  3307  03B1  00AC               	movwf	___xxtofl@val+3
  3308  03B2  3001               	movlw	1
  3309  03B3  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  3310  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3311  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3312  03BA  082C               	movf	?___xxtofl+3,w
  3313  03BB  00BA               	movwf	___flsub@a+3
  3314  03BC  082B               	movf	?___xxtofl+2,w
  3315  03BD  00B9               	movwf	___flsub@a+2
  3316  03BE  082A               	movf	?___xxtofl+1,w
  3317  03BF  00B8               	movwf	___flsub@a+1
  3318  03C0  0829               	movf	?___xxtofl,w
  3319  03C1  00B7               	movwf	___flsub@a
  3320  03C2  085C               	movf	ADC_convert@a+3,w
  3321  03C3  00BE               	movwf	___flsub@b+3
  3322  03C4  085B               	movf	ADC_convert@a+2,w
  3323  03C5  00BD               	movwf	___flsub@b+2
  3324  03C6  085A               	movf	ADC_convert@a+1,w
  3325  03C7  00BC               	movwf	___flsub@b+1
  3326  03C8  0859               	movf	ADC_convert@a,w
  3327  03C9  00BB               	movwf	___flsub@b
  3328  03CA  160A  118A  2754  120A  118A  	fcall	___flsub
  3329  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3330  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3331  03D1  083A               	movf	?___flsub+3,w
  3332  03D2  00DC               	movwf	ADC_convert@a+3
  3333  03D3  0839               	movf	?___flsub+2,w
  3334  03D4  00DB               	movwf	ADC_convert@a+2
  3335  03D5  0838               	movf	?___flsub+1,w
  3336  03D6  00DA               	movwf	ADC_convert@a+1
  3337  03D7  0837               	movf	?___flsub,w
  3338  03D8  00D9               	movwf	ADC_convert@a
  3339  03D9                     l3646:
  3340  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  3341  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  3342  03DB  0837               	movf	(ADC_convert@x+3)^(0+128),w
  3343  03DC  00F5               	movwf	___fltol@f1+3
  3344  03DD  0836               	movf	(ADC_convert@x+2)^(0+128),w
  3345  03DE  00F4               	movwf	___fltol@f1+2
  3346  03DF  0835               	movf	(ADC_convert@x+1)^(0+128),w
  3347  03E0  00F3               	movwf	___fltol@f1+1
  3348  03E1  0834               	movf	ADC_convert@x^(0+128),w
  3349  03E2  00F2               	movwf	___fltol@f1
  3350  03E3  120A  118A  2783  120A  118A  	fcall	___fltol
  3351  03E8  0872               	movf	?___fltol,w
  3352  03E9  3E30               	addlw	48
  3353  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3354  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3355  03EC  00DF               	movwf	??_ADC_convert
  3356  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  3357  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  3358  03EF  0838               	movf	ADC_convert@i^(0+128),w
  3359  03F0  0733               	addwf	ADC_convert@data^(0+128),w
  3360  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3361  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3362  03F3  00E0               	movwf	??_ADC_convert+1
  3363  03F4  0860               	movf	??_ADC_convert+1,w
  3364  03F5  0084               	movwf	4
  3365  03F6  085F               	movf	??_ADC_convert,w
  3366  03F7  1383               	bcf	3,7	;select IRP bank0
  3367  03F8  0080               	movwf	0
  3368  03F9                     l3648:
  3369  03F9  3001               	movlw	1
  3370  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3371  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3372  03FC  07B8               	addwf	ADC_convert@i^(0+128),f
  3373  03FD  1803               	skipnc
  3374  03FE  0AB9               	incf	(ADC_convert@i+1)^(0+128),f
  3375  03FF  3000               	movlw	0
  3376  0400  07B9               	addwf	(ADC_convert@i+1)^(0+128),f
  3377  0401                     l3650:
  3378  0401  30FF               	movlw	255
  3379  0402  07BA               	addwf	ADC_convert@digits^(0+128),f
  3380  0403  1803               	skipnc
  3381  0404  0ABB               	incf	(ADC_convert@digits+1)^(0+128),f
  3382  0405  30FF               	movlw	255
  3383  0406  07BB               	addwf	(ADC_convert@digits+1)^(0+128),f
  3384  0407                     l3652:
  3385  0407  3001               	movlw	1
  3386  0408  00BC               	movwf	ADC_convert@mu^(0+128)
  3387  0409  3000               	movlw	0
  3388  040A  00BD               	movwf	(ADC_convert@mu^(0+128)+1)
  3389  040B                     l3654:
  3390  040B  083A               	movf	ADC_convert@digits^(0+128),w
  3391  040C  043B               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3392  040D  1D03               	btfss	3,2
  3393  040E  2C10               	goto	u5361
  3394  040F  2C11               	goto	u5360
  3395  0410                     u5361:
  3396  0410  2AF0               	goto	l3632
  3397  0411                     u5360:
  3398  0411                     l3656:
  3399  0411  300A               	movlw	10
  3400  0412  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0413  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0414  00DF               	movwf	??_ADC_convert
  3403  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0417  0838               	movf	ADC_convert@i^(0+128),w
  3406  0418  0733               	addwf	ADC_convert@data^(0+128),w
  3407  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3408  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3409  041B  00E0               	movwf	??_ADC_convert+1
  3410  041C  0860               	movf	??_ADC_convert+1,w
  3411  041D  0084               	movwf	4
  3412  041E  085F               	movf	??_ADC_convert,w
  3413  041F  1383               	bcf	3,7	;select IRP bank0
  3414  0420  0080               	movwf	0
  3415  0421                     l99:
  3416  0421  0008               	return
  3417  0422                     __end_of_ADC_convert:
  3418                           
  3419                           	psect	text16
  3420  0ADF                     __ptext16:	
  3421 ;; *************** function ___xxtofl *****************
  3422 ;; Defined at:
  3423 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  sign            1    wreg     unsigned char 
  3426 ;;  val             4    9[BANK0 ] long 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  sign            1   17[BANK0 ] unsigned char 
  3429 ;;  arg             4   19[BANK0 ] unsigned long 
  3430 ;;  exp             1   18[BANK0 ] unsigned char 
  3431 ;; Return value:  Size  Location     Type
  3432 ;;                  4    9[BANK0 ] unsigned char 
  3433 ;; Registers used:
  3434 ;;		wreg, status,2, status,0
  3435 ;; Tracked objects:
  3436 ;;		On entry : 0/0
  3437 ;;		On exit  : 0/0
  3438 ;;		Unchanged: 0/0
  3439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3440 ;;      Params:         0       4       0       0       0
  3441 ;;      Locals:         0       6       0       0       0
  3442 ;;      Temps:          0       4       0       0       0
  3443 ;;      Totals:         0      14       0       0       0
  3444 ;;Total ram usage:       14 bytes
  3445 ;; Hardware stack levels used: 1
  3446 ;; Hardware stack levels required when called: 1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;;		_ADC_convert
  3452 ;; This function uses a non-reentrant model
  3453 ;;
  3454                           
  3455                           
  3456                           ;psect for function ___xxtofl
  3457  0ADF                     ___xxtofl:
  3458                           
  3459                           ;incstack = 0
  3460                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3461                           ;___xxtofl@sign stored from wreg
  3462  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0AE1  00B1               	movwf	___xxtofl@sign
  3465  0AE2                     l3426:
  3466  0AE2  0831               	movf	___xxtofl@sign,w
  3467  0AE3  1903               	btfsc	3,2
  3468  0AE4  2AE6               	goto	u5101
  3469  0AE5  2AE7               	goto	u5100
  3470  0AE6                     u5101:
  3471  0AE6  2AFB               	goto	l3432
  3472  0AE7                     u5100:
  3473  0AE7                     l3428:
  3474  0AE7  1FAC               	btfss	___xxtofl@val+3,7
  3475  0AE8  2AEA               	goto	u5111
  3476  0AE9  2AEB               	goto	u5110
  3477  0AEA                     u5111:
  3478  0AEA  2AFB               	goto	l3432
  3479  0AEB                     u5110:
  3480  0AEB                     l3430:
  3481  0AEB  0929               	comf	___xxtofl@val,w
  3482  0AEC  00B3               	movwf	___xxtofl@arg
  3483  0AED  092A               	comf	___xxtofl@val+1,w
  3484  0AEE  00B4               	movwf	___xxtofl@arg+1
  3485  0AEF  092B               	comf	___xxtofl@val+2,w
  3486  0AF0  00B5               	movwf	___xxtofl@arg+2
  3487  0AF1  092C               	comf	___xxtofl@val+3,w
  3488  0AF2  00B6               	movwf	___xxtofl@arg+3
  3489  0AF3  0AB3               	incf	___xxtofl@arg,f
  3490  0AF4  1903               	skipnz
  3491  0AF5  0AB4               	incf	___xxtofl@arg+1,f
  3492  0AF6  1903               	skipnz
  3493  0AF7  0AB5               	incf	___xxtofl@arg+2,f
  3494  0AF8  1903               	skipnz
  3495  0AF9  0AB6               	incf	___xxtofl@arg+3,f
  3496  0AFA  2B03               	goto	l741
  3497  0AFB                     l3432:
  3498  0AFB  082C               	movf	___xxtofl@val+3,w
  3499  0AFC  00B6               	movwf	___xxtofl@arg+3
  3500  0AFD  082B               	movf	___xxtofl@val+2,w
  3501  0AFE  00B5               	movwf	___xxtofl@arg+2
  3502  0AFF  082A               	movf	___xxtofl@val+1,w
  3503  0B00  00B4               	movwf	___xxtofl@arg+1
  3504  0B01  0829               	movf	___xxtofl@val,w
  3505  0B02  00B3               	movwf	___xxtofl@arg
  3506  0B03                     l741:
  3507  0B03  082C               	movf	___xxtofl@val+3,w
  3508  0B04  042B               	iorwf	___xxtofl@val+2,w
  3509  0B05  042A               	iorwf	___xxtofl@val+1,w
  3510  0B06  0429               	iorwf	___xxtofl@val,w
  3511  0B07  1D03               	skipz
  3512  0B08  2B0A               	goto	u5121
  3513  0B09  2B0B               	goto	u5120
  3514  0B0A                     u5121:
  3515  0B0A  2B14               	goto	l3438
  3516  0B0B                     u5120:
  3517  0B0B                     l3434:
  3518  0B0B  3000               	movlw	0
  3519  0B0C  00AC               	movwf	?___xxtofl+3
  3520  0B0D  3000               	movlw	0
  3521  0B0E  00AB               	movwf	?___xxtofl+2
  3522  0B0F  3000               	movlw	0
  3523  0B10  00AA               	movwf	?___xxtofl+1
  3524  0B11  3000               	movlw	0
  3525  0B12  00A9               	movwf	?___xxtofl
  3526  0B13  2B9A               	goto	l743
  3527  0B14                     l3438:
  3528  0B14  3096               	movlw	150
  3529  0B15  00AD               	movwf	??___xxtofl
  3530  0B16  082D               	movf	??___xxtofl,w
  3531  0B17  00B2               	movwf	___xxtofl@exp
  3532  0B18  2B26               	goto	l3442
  3533  0B19                     l3440:
  3534  0B19  3001               	movlw	1
  3535  0B1A  00AD               	movwf	??___xxtofl
  3536  0B1B  082D               	movf	??___xxtofl,w
  3537  0B1C  07B2               	addwf	___xxtofl@exp,f
  3538  0B1D  3001               	movlw	1
  3539  0B1E                     u5135:
  3540  0B1E  1003               	clrc
  3541  0B1F  0CB6               	rrf	___xxtofl@arg+3,f
  3542  0B20  0CB5               	rrf	___xxtofl@arg+2,f
  3543  0B21  0CB4               	rrf	___xxtofl@arg+1,f
  3544  0B22  0CB3               	rrf	___xxtofl@arg,f
  3545  0B23  3EFF               	addlw	-1
  3546  0B24  1D03               	skipz
  3547  0B25  2B1E               	goto	u5135
  3548  0B26                     l3442:
  3549  0B26  30FE               	movlw	254
  3550  0B27  0536               	andwf	___xxtofl@arg+3,w
  3551  0B28  1D03               	btfss	3,2
  3552  0B29  2B2B               	goto	u5141
  3553  0B2A  2B2C               	goto	u5140
  3554  0B2B                     u5141:
  3555  0B2B  2B19               	goto	l3440
  3556  0B2C                     u5140:
  3557  0B2C  2B48               	goto	l747
  3558  0B2D                     l3444:
  3559  0B2D  3001               	movlw	1
  3560  0B2E  00AD               	movwf	??___xxtofl
  3561  0B2F  082D               	movf	??___xxtofl,w
  3562  0B30  07B2               	addwf	___xxtofl@exp,f
  3563  0B31                     l3446:
  3564  0B31  3001               	movlw	1
  3565  0B32  07B3               	addwf	___xxtofl@arg,f
  3566  0B33  3000               	movlw	0
  3567  0B34  1803               	skipnc
  3568  0B35  3001               	movlw	1
  3569  0B36  07B4               	addwf	___xxtofl@arg+1,f
  3570  0B37  3000               	movlw	0
  3571  0B38  1803               	skipnc
  3572  0B39  3001               	movlw	1
  3573  0B3A  07B5               	addwf	___xxtofl@arg+2,f
  3574  0B3B  3000               	movlw	0
  3575  0B3C  1803               	skipnc
  3576  0B3D  3001               	movlw	1
  3577  0B3E  07B6               	addwf	___xxtofl@arg+3,f
  3578  0B3F                     l3448:
  3579  0B3F  3001               	movlw	1
  3580  0B40                     u5155:
  3581  0B40  1003               	clrc
  3582  0B41  0CB6               	rrf	___xxtofl@arg+3,f
  3583  0B42  0CB5               	rrf	___xxtofl@arg+2,f
  3584  0B43  0CB4               	rrf	___xxtofl@arg+1,f
  3585  0B44  0CB3               	rrf	___xxtofl@arg,f
  3586  0B45  3EFF               	addlw	-1
  3587  0B46  1D03               	skipz
  3588  0B47  2B40               	goto	u5155
  3589  0B48                     l747:
  3590  0B48  30FF               	movlw	255
  3591  0B49  0536               	andwf	___xxtofl@arg+3,w
  3592  0B4A  1D03               	btfss	3,2
  3593  0B4B  2B4D               	goto	u5161
  3594  0B4C  2B4E               	goto	u5160
  3595  0B4D                     u5161:
  3596  0B4D  2B2D               	goto	l3444
  3597  0B4E                     u5160:
  3598  0B4E  2B5A               	goto	l3452
  3599  0B4F                     l3450:
  3600  0B4F  3001               	movlw	1
  3601  0B50  02B2               	subwf	___xxtofl@exp,f
  3602  0B51  3001               	movlw	1
  3603  0B52  00AD               	movwf	??___xxtofl
  3604  0B53                     u5175:
  3605  0B53  1003               	clrc
  3606  0B54  0DB3               	rlf	___xxtofl@arg,f
  3607  0B55  0DB4               	rlf	___xxtofl@arg+1,f
  3608  0B56  0DB5               	rlf	___xxtofl@arg+2,f
  3609  0B57  0DB6               	rlf	___xxtofl@arg+3,f
  3610  0B58  0BAD               	decfsz	??___xxtofl,f
  3611  0B59  2B53               	goto	u5175
  3612  0B5A                     l3452:
  3613  0B5A  1BB5               	btfsc	___xxtofl@arg+2,7
  3614  0B5B  2B5D               	goto	u5181
  3615  0B5C  2B5E               	goto	u5180
  3616  0B5D                     u5181:
  3617  0B5D  2B64               	goto	l754
  3618  0B5E                     u5180:
  3619  0B5E                     l3454:
  3620  0B5E  3002               	movlw	2
  3621  0B5F  0232               	subwf	___xxtofl@exp,w
  3622  0B60  1803               	skipnc
  3623  0B61  2B63               	goto	u5191
  3624  0B62  2B64               	goto	u5190
  3625  0B63                     u5191:
  3626  0B63  2B4F               	goto	l3450
  3627  0B64                     u5190:
  3628  0B64                     l754:
  3629  0B64  1832               	btfsc	___xxtofl@exp,0
  3630  0B65  2B67               	goto	u5201
  3631  0B66  2B68               	goto	u5200
  3632  0B67                     u5201:
  3633  0B67  2B70               	goto	l755
  3634  0B68                     u5200:
  3635  0B68                     l3456:
  3636  0B68  30FF               	movlw	255
  3637  0B69  05B3               	andwf	___xxtofl@arg,f
  3638  0B6A  30FF               	movlw	255
  3639  0B6B  05B4               	andwf	___xxtofl@arg+1,f
  3640  0B6C  307F               	movlw	127
  3641  0B6D  05B5               	andwf	___xxtofl@arg+2,f
  3642  0B6E  30FF               	movlw	255
  3643  0B6F  05B6               	andwf	___xxtofl@arg+3,f
  3644  0B70                     l755:
  3645  0B70  1003               	clrc
  3646  0B71  0CB2               	rrf	___xxtofl@exp,f
  3647  0B72                     l3458:
  3648  0B72  0832               	movf	___xxtofl@exp,w
  3649  0B73  00AD               	movwf	??___xxtofl
  3650  0B74  01AE               	clrf	??___xxtofl+1
  3651  0B75  01AF               	clrf	??___xxtofl+2
  3652  0B76  01B0               	clrf	??___xxtofl+3
  3653  0B77  3018               	movlw	24
  3654  0B78                     u5215:
  3655  0B78  1003               	clrc
  3656  0B79  0DAD               	rlf	??___xxtofl,f
  3657  0B7A  0DAE               	rlf	??___xxtofl+1,f
  3658  0B7B  0DAF               	rlf	??___xxtofl+2,f
  3659  0B7C  0DB0               	rlf	??___xxtofl+3,f
  3660  0B7D                     u5210:
  3661  0B7D  3EFF               	addlw	-1
  3662  0B7E  1D03               	skipz
  3663  0B7F  2B78               	goto	u5215
  3664  0B80  082D               	movf	??___xxtofl,w
  3665  0B81  04B3               	iorwf	___xxtofl@arg,f
  3666  0B82  082E               	movf	??___xxtofl+1,w
  3667  0B83  04B4               	iorwf	___xxtofl@arg+1,f
  3668  0B84  082F               	movf	??___xxtofl+2,w
  3669  0B85  04B5               	iorwf	___xxtofl@arg+2,f
  3670  0B86  0830               	movf	??___xxtofl+3,w
  3671  0B87  04B6               	iorwf	___xxtofl@arg+3,f
  3672  0B88                     l3460:
  3673  0B88  0831               	movf	___xxtofl@sign,w
  3674  0B89  1903               	btfsc	3,2
  3675  0B8A  2B8C               	goto	u5221
  3676  0B8B  2B8D               	goto	u5220
  3677  0B8C                     u5221:
  3678  0B8C  2B92               	goto	l3466
  3679  0B8D                     u5220:
  3680  0B8D                     l3462:
  3681  0B8D  1FAC               	btfss	___xxtofl@val+3,7
  3682  0B8E  2B90               	goto	u5231
  3683  0B8F  2B91               	goto	u5230
  3684  0B90                     u5231:
  3685  0B90  2B92               	goto	l3466
  3686  0B91                     u5230:
  3687  0B91                     l3464:
  3688  0B91  17B6               	bsf	___xxtofl@arg+3,7
  3689  0B92                     l3466:
  3690  0B92  0836               	movf	___xxtofl@arg+3,w
  3691  0B93  00AC               	movwf	?___xxtofl+3
  3692  0B94  0835               	movf	___xxtofl@arg+2,w
  3693  0B95  00AB               	movwf	?___xxtofl+2
  3694  0B96  0834               	movf	___xxtofl@arg+1,w
  3695  0B97  00AA               	movwf	?___xxtofl+1
  3696  0B98  0833               	movf	___xxtofl@arg,w
  3697  0B99  00A9               	movwf	?___xxtofl
  3698  0B9A                     l743:
  3699  0B9A  0008               	return
  3700  0B9B                     __end_of___xxtofl:
  3701                           
  3702                           	psect	text17
  3703  1778                     __ptext17:	
  3704 ;; *************** function ___wmul *****************
  3705 ;; Defined at:
  3706 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  multiplier      2    5[BANK0 ] unsigned int 
  3709 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  3710 ;; Auto vars:     Size  Location     Type
  3711 ;;  product         2    8[COMMON] unsigned int 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  2    5[BANK0 ] unsigned int 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3721 ;;      Params:         0       4       0       0       0
  3722 ;;      Locals:         2       0       0       0       0
  3723 ;;      Temps:          0       0       0       0       0
  3724 ;;      Totals:         2       4       0       0       0
  3725 ;;Total ram usage:        6 bytes
  3726 ;; Hardware stack levels used: 1
  3727 ;; Hardware stack levels required when called: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_ADC_convert
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           
  3736                           ;psect for function ___wmul
  3737  1778                     ___wmul:
  3738  1778                     l3024:	
  3739                           ;incstack = 0
  3740                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3741                           
  3742  1778  01F8               	clrf	___wmul@product
  3743  1779  01F9               	clrf	___wmul@product+1
  3744  177A                     l3026:
  3745  177A  1283               	bcf	3,5	;RP0=0, select bank0
  3746  177B  1303               	bcf	3,6	;RP1=0, select bank0
  3747  177C  1C25               	btfss	___wmul@multiplier,0
  3748  177D  2F7F               	goto	u4131
  3749  177E  2F80               	goto	u4130
  3750  177F                     u4131:
  3751  177F  2F86               	goto	l308
  3752  1780                     u4130:
  3753  1780                     l3028:
  3754  1780  0827               	movf	___wmul@multiplicand,w
  3755  1781  07F8               	addwf	___wmul@product,f
  3756  1782  1803               	skipnc
  3757  1783  0AF9               	incf	___wmul@product+1,f
  3758  1784  0828               	movf	___wmul@multiplicand+1,w
  3759  1785  07F9               	addwf	___wmul@product+1,f
  3760  1786                     l308:
  3761  1786  3001               	movlw	1
  3762  1787                     u4145:
  3763  1787  1003               	clrc
  3764  1788  0DA7               	rlf	___wmul@multiplicand,f
  3765  1789  0DA8               	rlf	___wmul@multiplicand+1,f
  3766  178A  3EFF               	addlw	-1
  3767  178B  1D03               	skipz
  3768  178C  2F87               	goto	u4145
  3769  178D                     l3030:
  3770  178D  3001               	movlw	1
  3771  178E                     u4155:
  3772  178E  1003               	clrc
  3773  178F  0CA6               	rrf	___wmul@multiplier+1,f
  3774  1790  0CA5               	rrf	___wmul@multiplier,f
  3775  1791  3EFF               	addlw	-1
  3776  1792  1D03               	skipz
  3777  1793  2F8E               	goto	u4155
  3778  1794                     l3032:
  3779  1794  0825               	movf	___wmul@multiplier,w
  3780  1795  0426               	iorwf	___wmul@multiplier+1,w
  3781  1796  1D03               	btfss	3,2
  3782  1797  2F99               	goto	u4161
  3783  1798  2F9A               	goto	u4160
  3784  1799                     u4161:
  3785  1799  2F7A               	goto	l3026
  3786  179A                     u4160:
  3787  179A                     l3034:
  3788  179A  0879               	movf	___wmul@product+1,w
  3789  179B  00A6               	movwf	?___wmul+1
  3790  179C  0878               	movf	___wmul@product,w
  3791  179D  00A5               	movwf	?___wmul
  3792  179E                     l310:
  3793  179E  0008               	return
  3794  179F                     __end_of___wmul:
  3795                           
  3796                           	psect	text18
  3797  0783                     __ptext18:	
  3798 ;; *************** function ___fltol *****************
  3799 ;; Defined at:
  3800 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  f1              4    2[COMMON] unsigned int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  exp1            1    7[COMMON] unsigned char 
  3805 ;;  sign1           1    6[COMMON] unsigned char 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  4    2[COMMON] long 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3815 ;;      Params:         4       0       0       0       0
  3816 ;;      Locals:         2       0       0       0       0
  3817 ;;      Temps:          0       5       0       0       0
  3818 ;;      Totals:         6       5       0       0       0
  3819 ;;Total ram usage:       11 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_ADC_convert
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           
  3830                           ;psect for function ___fltol
  3831  0783                     ___fltol:
  3832  0783                     l3102:	
  3833                           ;incstack = 0
  3834                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3835                           
  3836  0783  1003               	clrc
  3837  0784  0D74               	rlf	___fltol@f1+2,w
  3838  0785  0D75               	rlf	___fltol@f1+3,w
  3839  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0787  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0788  00A0               	movwf	??___fltol
  3842  0789  0820               	movf	??___fltol,w
  3843  078A  00F7               	movwf	___fltol@exp1
  3844  078B  0877               	movf	___fltol@exp1,w
  3845  078C  1D03               	btfss	3,2
  3846  078D  2F8F               	goto	u4341
  3847  078E  2F90               	goto	u4340
  3848  078F                     u4341:
  3849  078F  2F99               	goto	l3108
  3850  0790                     u4340:
  3851  0790                     l3104:
  3852  0790  3000               	movlw	0
  3853  0791  00F5               	movwf	?___fltol+3
  3854  0792  3000               	movlw	0
  3855  0793  00F4               	movwf	?___fltol+2
  3856  0794  3000               	movlw	0
  3857  0795  00F3               	movwf	?___fltol+1
  3858  0796  3000               	movlw	0
  3859  0797  00F2               	movwf	?___fltol
  3860  0798  2FFE               	goto	l494
  3861  0799                     l3108:
  3862  0799  0872               	movf	___fltol@f1,w
  3863  079A  00A0               	movwf	??___fltol
  3864  079B  0873               	movf	___fltol@f1+1,w
  3865  079C  00A1               	movwf	??___fltol+1
  3866  079D  0874               	movf	___fltol@f1+2,w
  3867  079E  00A2               	movwf	??___fltol+2
  3868  079F  0875               	movf	___fltol@f1+3,w
  3869  07A0  00A3               	movwf	??___fltol+3
  3870  07A1  301F               	movlw	31
  3871  07A2                     u4355:
  3872  07A2  1003               	clrc
  3873  07A3  0CA3               	rrf	??___fltol+3,f
  3874  07A4  0CA2               	rrf	??___fltol+2,f
  3875  07A5  0CA1               	rrf	??___fltol+1,f
  3876  07A6  0CA0               	rrf	??___fltol,f
  3877  07A7                     u4350:
  3878  07A7  3EFF               	addlw	-1
  3879  07A8  1D03               	skipz
  3880  07A9  2FA2               	goto	u4355
  3881  07AA  0820               	movf	??___fltol,w
  3882  07AB  00A4               	movwf	??___fltol+4
  3883  07AC  0824               	movf	??___fltol+4,w
  3884  07AD  00F6               	movwf	___fltol@sign1
  3885  07AE                     l3110:
  3886  07AE  17F4               	bsf	___fltol@f1+2,7
  3887  07AF                     l3112:
  3888  07AF  30FF               	movlw	255
  3889  07B0  05F2               	andwf	___fltol@f1,f
  3890  07B1  30FF               	movlw	255
  3891  07B2  05F3               	andwf	___fltol@f1+1,f
  3892  07B3  30FF               	movlw	255
  3893  07B4  05F4               	andwf	___fltol@f1+2,f
  3894  07B5  3000               	movlw	0
  3895  07B6  05F5               	andwf	___fltol@f1+3,f
  3896  07B7                     l3114:
  3897  07B7  3096               	movlw	150
  3898  07B8  02F7               	subwf	___fltol@exp1,f
  3899  07B9                     l3116:
  3900  07B9  1FF7               	btfss	___fltol@exp1,7
  3901  07BA  2FBC               	goto	u4361
  3902  07BB  2FBD               	goto	u4360
  3903  07BC                     u4361:
  3904  07BC  2FD7               	goto	l3126
  3905  07BD                     u4360:
  3906  07BD                     l3118:
  3907  07BD  0877               	movf	___fltol@exp1,w
  3908  07BE  3A80               	xorlw	128
  3909  07BF  3E97               	addlw	151
  3910  07C0  1803               	skipnc
  3911  07C1  2FC3               	goto	u4371
  3912  07C2  2FC4               	goto	u4370
  3913  07C3                     u4371:
  3914  07C3  2FC5               	goto	l3124
  3915  07C4                     u4370:
  3916  07C4  2F90               	goto	l3104
  3917  07C5                     l3124:
  3918  07C5  3001               	movlw	1
  3919  07C6                     u4385:
  3920  07C6  1003               	clrc
  3921  07C7  0CF5               	rrf	___fltol@f1+3,f
  3922  07C8  0CF4               	rrf	___fltol@f1+2,f
  3923  07C9  0CF3               	rrf	___fltol@f1+1,f
  3924  07CA  0CF2               	rrf	___fltol@f1,f
  3925  07CB  3EFF               	addlw	-1
  3926  07CC  1D03               	skipz
  3927  07CD  2FC6               	goto	u4385
  3928  07CE  3001               	movlw	1
  3929  07CF  00A0               	movwf	??___fltol
  3930  07D0  0820               	movf	??___fltol,w
  3931  07D1  07F7               	addwf	___fltol@exp1,f
  3932  07D2  1D03               	btfss	3,2
  3933  07D3  2FD5               	goto	u4391
  3934  07D4  2FD6               	goto	u4390
  3935  07D5                     u4391:
  3936  07D5  2FC5               	goto	l3124
  3937  07D6                     u4390:
  3938  07D6  2FEE               	goto	l3134
  3939  07D7                     l3126:
  3940  07D7  3020               	movlw	32
  3941  07D8  0277               	subwf	___fltol@exp1,w
  3942  07D9  1C03               	skipc
  3943  07DA  2FDC               	goto	u4401
  3944  07DB  2FDD               	goto	u4400
  3945  07DC                     u4401:
  3946  07DC  2FE9               	goto	l501
  3947  07DD                     u4400:
  3948  07DD  2F90               	goto	l3104
  3949  07DE                     l3132:
  3950  07DE  3001               	movlw	1
  3951  07DF  00A0               	movwf	??___fltol
  3952  07E0                     u4415:
  3953  07E0  1003               	clrc
  3954  07E1  0DF2               	rlf	___fltol@f1,f
  3955  07E2  0DF3               	rlf	___fltol@f1+1,f
  3956  07E3  0DF4               	rlf	___fltol@f1+2,f
  3957  07E4  0DF5               	rlf	___fltol@f1+3,f
  3958  07E5  0BA0               	decfsz	??___fltol,f
  3959  07E6  2FE0               	goto	u4415
  3960  07E7  3001               	movlw	1
  3961  07E8  02F7               	subwf	___fltol@exp1,f
  3962  07E9                     l501:
  3963  07E9  0877               	movf	___fltol@exp1,w
  3964  07EA  1D03               	btfss	3,2
  3965  07EB  2FED               	goto	u4421
  3966  07EC  2FEE               	goto	u4420
  3967  07ED                     u4421:
  3968  07ED  2FDE               	goto	l3132
  3969  07EE                     u4420:
  3970  07EE                     l3134:
  3971  07EE  0876               	movf	___fltol@sign1,w
  3972  07EF  1903               	btfsc	3,2
  3973  07F0  2FF2               	goto	u4431
  3974  07F1  2FF3               	goto	u4430
  3975  07F2                     u4431:
  3976  07F2  2FFE               	goto	l504
  3977  07F3                     u4430:
  3978  07F3                     l3136:
  3979  07F3  09F2               	comf	___fltol@f1,f
  3980  07F4  09F3               	comf	___fltol@f1+1,f
  3981  07F5  09F4               	comf	___fltol@f1+2,f
  3982  07F6  09F5               	comf	___fltol@f1+3,f
  3983  07F7  0AF2               	incf	___fltol@f1,f
  3984  07F8  1903               	skipnz
  3985  07F9  0AF3               	incf	___fltol@f1+1,f
  3986  07FA  1903               	skipnz
  3987  07FB  0AF4               	incf	___fltol@f1+2,f
  3988  07FC  1903               	skipnz
  3989  07FD  0AF5               	incf	___fltol@f1+3,f
  3990  07FE                     l504:
  3991  07FE                     l494:
  3992  07FE  0008               	return
  3993  07FF                     __end_of___fltol:
  3994                           
  3995                           	psect	text19
  3996  1754                     __ptext19:	
  3997 ;; *************** function ___flsub *****************
  3998 ;; Defined at:
  3999 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  a               4   23[BANK0 ] long 
  4002 ;;  b               4   27[BANK0 ] long 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  4   23[BANK0 ] long 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4014 ;;      Params:         0       8       0       0       0
  4015 ;;      Locals:         0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       8       0       0       0
  4018 ;;Total ram usage:        8 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 2
  4021 ;; This function calls:
  4022 ;;		___fladd
  4023 ;; This function is called by:
  4024 ;;		_ADC_convert
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function ___flsub
  4030  1754                     ___flsub:
  4031  1754                     l3138:	
  4032                           ;incstack = 0
  4033                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4034                           
  4035  1754  3080               	movlw	128
  4036  1755  1283               	bcf	3,5	;RP0=0, select bank0
  4037  1756  1303               	bcf	3,6	;RP1=0, select bank0
  4038  1757  06BA               	xorwf	___flsub@a+3,f
  4039  1758                     l3140:
  4040  1758  083E               	movf	___flsub@b+3,w
  4041  1759  00F5               	movwf	___fladd@b+3
  4042  175A  083D               	movf	___flsub@b+2,w
  4043  175B  00F4               	movwf	___fladd@b+2
  4044  175C  083C               	movf	___flsub@b+1,w
  4045  175D  00F3               	movwf	___fladd@b+1
  4046  175E  083B               	movf	___flsub@b,w
  4047  175F  00F2               	movwf	___fladd@b
  4048  1760  083A               	movf	___flsub@a+3,w
  4049  1761  00F9               	movwf	___fladd@a+3
  4050  1762  0839               	movf	___flsub@a+2,w
  4051  1763  00F8               	movwf	___fladd@a+2
  4052  1764  0838               	movf	___flsub@a+1,w
  4053  1765  00F7               	movwf	___fladd@a+1
  4054  1766  0837               	movf	___flsub@a,w
  4055  1767  00F6               	movwf	___fladd@a
  4056  1768  120A  158A  2578  160A  118A  	fcall	___fladd
  4057  176D  0875               	movf	?___fladd+3,w
  4058  176E  1283               	bcf	3,5	;RP0=0, select bank0
  4059  176F  1303               	bcf	3,6	;RP1=0, select bank0
  4060  1770  00BA               	movwf	?___flsub+3
  4061  1771  0874               	movf	?___fladd+2,w
  4062  1772  00B9               	movwf	?___flsub+2
  4063  1773  0873               	movf	?___fladd+1,w
  4064  1774  00B8               	movwf	?___flsub+1
  4065  1775  0872               	movf	?___fladd,w
  4066  1776  00B7               	movwf	?___flsub
  4067  1777                     l647:
  4068  1777  0008               	return
  4069  1778                     __end_of___flsub:
  4070                           
  4071                           	psect	text20
  4072  0D78                     __ptext20:	
  4073 ;; *************** function ___fladd *****************
  4074 ;; Defined at:
  4075 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;  b               4    2[COMMON] long 
  4078 ;;  a               4    6[COMMON] long 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  grs             1   11[BANK0 ] unsigned char 
  4081 ;;  bexp            1   10[BANK0 ] unsigned char 
  4082 ;;  aexp            1    9[BANK0 ] unsigned char 
  4083 ;;  signs           1    8[BANK0 ] unsigned char 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  4    2[COMMON] unsigned char 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, btemp+1
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         8       0       0       0       0
  4094 ;;      Locals:         0       4       0       0       0
  4095 ;;      Temps:          0       8       0       0       0
  4096 ;;      Totals:         8      12       0       0       0
  4097 ;;Total ram usage:       20 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 1
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		___flsub
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function ___fladd
  4109  0D78                     ___fladd:
  4110  0D78                     l2806:	
  4111                           ;incstack = 0
  4112                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4113                           
  4114  0D78  0875               	movf	___fladd@b+3,w
  4115  0D79  3980               	andlw	128
  4116  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0D7C  00A0               	movwf	??___fladd
  4119  0D7D  0820               	movf	??___fladd,w
  4120  0D7E  00A8               	movwf	___fladd@signs
  4121  0D7F                     l2808:
  4122  0D7F  0875               	movf	___fladd@b+3,w
  4123  0D80  00A0               	movwf	??___fladd
  4124  0D81  0720               	addwf	??___fladd,w
  4125  0D82  00A1               	movwf	??___fladd+1
  4126  0D83  0821               	movf	??___fladd+1,w
  4127  0D84  00AA               	movwf	___fladd@bexp
  4128  0D85                     l2810:
  4129  0D85  1FF4               	btfss	___fladd@b+2,7
  4130  0D86  2D88               	goto	u3621
  4131  0D87  2D89               	goto	u3620
  4132  0D88                     u3621:
  4133  0D88  2D8A               	goto	l2814
  4134  0D89                     u3620:
  4135  0D89                     l2812:
  4136  0D89  142A               	bsf	___fladd@bexp,0
  4137  0D8A                     l2814:
  4138  0D8A  082A               	movf	___fladd@bexp,w
  4139  0D8B  1903               	btfsc	3,2
  4140  0D8C  2D8E               	goto	u3631
  4141  0D8D  2D8F               	goto	u3630
  4142  0D8E                     u3631:
  4143  0D8E  2D9F               	goto	l2824
  4144  0D8F                     u3630:
  4145  0D8F                     l2816:
  4146  0D8F  0A2A               	incf	___fladd@bexp,w
  4147  0D90  1D03               	btfss	3,2
  4148  0D91  2D93               	goto	u3641
  4149  0D92  2D94               	goto	u3640
  4150  0D93                     u3641:
  4151  0D93  2D9C               	goto	l2820
  4152  0D94                     u3640:
  4153  0D94                     l2818:
  4154  0D94  3000               	movlw	0
  4155  0D95  00F5               	movwf	___fladd@b+3
  4156  0D96  3000               	movlw	0
  4157  0D97  00F4               	movwf	___fladd@b+2
  4158  0D98  3000               	movlw	0
  4159  0D99  00F3               	movwf	___fladd@b+1
  4160  0D9A  3000               	movlw	0
  4161  0D9B  00F2               	movwf	___fladd@b
  4162  0D9C                     l2820:
  4163  0D9C  17F4               	bsf	___fladd@b+2,7
  4164  0D9D                     l2822:
  4165  0D9D  01F5               	clrf	___fladd@b+3
  4166  0D9E  2DA7               	goto	l2826
  4167  0D9F                     l2824:
  4168  0D9F  3000               	movlw	0
  4169  0DA0  00F5               	movwf	___fladd@b+3
  4170  0DA1  3000               	movlw	0
  4171  0DA2  00F4               	movwf	___fladd@b+2
  4172  0DA3  3000               	movlw	0
  4173  0DA4  00F3               	movwf	___fladd@b+1
  4174  0DA5  3000               	movlw	0
  4175  0DA6  00F2               	movwf	___fladd@b
  4176  0DA7                     l2826:
  4177  0DA7  0879               	movf	___fladd@a+3,w
  4178  0DA8  3980               	andlw	128
  4179  0DA9  00A0               	movwf	??___fladd
  4180  0DAA  0820               	movf	??___fladd,w
  4181  0DAB  00A9               	movwf	___fladd@aexp
  4182  0DAC                     l2828:
  4183  0DAC  0829               	movf	___fladd@aexp,w
  4184  0DAD  0628               	xorwf	___fladd@signs,w
  4185  0DAE  1903               	skipnz
  4186  0DAF  2DB1               	goto	u3651
  4187  0DB0  2DB2               	goto	u3650
  4188  0DB1                     u3651:
  4189  0DB1  2DB3               	goto	l2832
  4190  0DB2                     u3650:
  4191  0DB2                     l2830:
  4192  0DB2  1728               	bsf	___fladd@signs,6
  4193  0DB3                     l2832:
  4194  0DB3  0879               	movf	___fladd@a+3,w
  4195  0DB4  00A0               	movwf	??___fladd
  4196  0DB5  0720               	addwf	??___fladd,w
  4197  0DB6  00A1               	movwf	??___fladd+1
  4198  0DB7  0821               	movf	??___fladd+1,w
  4199  0DB8  00A9               	movwf	___fladd@aexp
  4200  0DB9                     l2834:
  4201  0DB9  1FF8               	btfss	___fladd@a+2,7
  4202  0DBA  2DBC               	goto	u3661
  4203  0DBB  2DBD               	goto	u3660
  4204  0DBC                     u3661:
  4205  0DBC  2DBE               	goto	l2838
  4206  0DBD                     u3660:
  4207  0DBD                     l2836:
  4208  0DBD  1429               	bsf	___fladd@aexp,0
  4209  0DBE                     l2838:
  4210  0DBE  0829               	movf	___fladd@aexp,w
  4211  0DBF  1903               	btfsc	3,2
  4212  0DC0  2DC2               	goto	u3671
  4213  0DC1  2DC3               	goto	u3670
  4214  0DC2                     u3671:
  4215  0DC2  2DD3               	goto	l2848
  4216  0DC3                     u3670:
  4217  0DC3                     l2840:
  4218  0DC3  0A29               	incf	___fladd@aexp,w
  4219  0DC4  1D03               	btfss	3,2
  4220  0DC5  2DC7               	goto	u3681
  4221  0DC6  2DC8               	goto	u3680
  4222  0DC7                     u3681:
  4223  0DC7  2DD0               	goto	l2844
  4224  0DC8                     u3680:
  4225  0DC8                     l2842:
  4226  0DC8  3000               	movlw	0
  4227  0DC9  00F9               	movwf	___fladd@a+3
  4228  0DCA  3000               	movlw	0
  4229  0DCB  00F8               	movwf	___fladd@a+2
  4230  0DCC  3000               	movlw	0
  4231  0DCD  00F7               	movwf	___fladd@a+1
  4232  0DCE  3000               	movlw	0
  4233  0DCF  00F6               	movwf	___fladd@a
  4234  0DD0                     l2844:
  4235  0DD0  17F8               	bsf	___fladd@a+2,7
  4236  0DD1                     l2846:
  4237  0DD1  01F9               	clrf	___fladd@a+3
  4238  0DD2  2DDB               	goto	l601
  4239  0DD3                     l2848:
  4240  0DD3  3000               	movlw	0
  4241  0DD4  00F9               	movwf	___fladd@a+3
  4242  0DD5  3000               	movlw	0
  4243  0DD6  00F8               	movwf	___fladd@a+2
  4244  0DD7  3000               	movlw	0
  4245  0DD8  00F7               	movwf	___fladd@a+1
  4246  0DD9  3000               	movlw	0
  4247  0DDA  00F6               	movwf	___fladd@a
  4248  0DDB                     l601:
  4249  0DDB  082A               	movf	___fladd@bexp,w
  4250  0DDC  0229               	subwf	___fladd@aexp,w
  4251  0DDD  1803               	skipnc
  4252  0DDE  2DE0               	goto	u3691
  4253  0DDF  2DE1               	goto	u3690
  4254  0DE0                     u3691:
  4255  0DE0  2E25               	goto	l2884
  4256  0DE1                     u3690:
  4257  0DE1                     l2850:
  4258  0DE1  1F28               	btfss	___fladd@signs,6
  4259  0DE2  2DE4               	goto	u3701
  4260  0DE3  2DE5               	goto	u3700
  4261  0DE4                     u3701:
  4262  0DE4  2DE9               	goto	l2854
  4263  0DE5                     u3700:
  4264  0DE5                     l2852:
  4265  0DE5  3080               	movlw	128
  4266  0DE6  00A0               	movwf	??___fladd
  4267  0DE7  0820               	movf	??___fladd,w
  4268  0DE8  06A8               	xorwf	___fladd@signs,f
  4269  0DE9                     l2854:
  4270  0DE9  082A               	movf	___fladd@bexp,w
  4271  0DEA  00A0               	movwf	??___fladd
  4272  0DEB  0820               	movf	??___fladd,w
  4273  0DEC  00AB               	movwf	___fladd@grs
  4274  0DED                     l2856:
  4275  0DED  0829               	movf	___fladd@aexp,w
  4276  0DEE  00A0               	movwf	??___fladd
  4277  0DEF  0820               	movf	??___fladd,w
  4278  0DF0  00AA               	movwf	___fladd@bexp
  4279  0DF1                     l2858:
  4280  0DF1  082B               	movf	___fladd@grs,w
  4281  0DF2  00A0               	movwf	??___fladd
  4282  0DF3  0820               	movf	??___fladd,w
  4283  0DF4  00A9               	movwf	___fladd@aexp
  4284  0DF5                     l2860:
  4285  0DF5  0872               	movf	___fladd@b,w
  4286  0DF6  00A0               	movwf	??___fladd
  4287  0DF7  0820               	movf	??___fladd,w
  4288  0DF8  00AB               	movwf	___fladd@grs
  4289  0DF9                     l2862:
  4290  0DF9  0876               	movf	___fladd@a,w
  4291  0DFA  00A0               	movwf	??___fladd
  4292  0DFB  0820               	movf	??___fladd,w
  4293  0DFC  00F2               	movwf	___fladd@b
  4294  0DFD                     l2864:
  4295  0DFD  082B               	movf	___fladd@grs,w
  4296  0DFE  00A0               	movwf	??___fladd
  4297  0DFF  0820               	movf	??___fladd,w
  4298  0E00  00F6               	movwf	___fladd@a
  4299  0E01                     l2866:
  4300  0E01  0873               	movf	___fladd@b+1,w
  4301  0E02  00A0               	movwf	??___fladd
  4302  0E03  0820               	movf	??___fladd,w
  4303  0E04  00AB               	movwf	___fladd@grs
  4304  0E05                     l2868:
  4305  0E05  0877               	movf	___fladd@a+1,w
  4306  0E06  00A0               	movwf	??___fladd
  4307  0E07  0820               	movf	??___fladd,w
  4308  0E08  00F3               	movwf	___fladd@b+1
  4309  0E09                     l2870:
  4310  0E09  082B               	movf	___fladd@grs,w
  4311  0E0A  00A0               	movwf	??___fladd
  4312  0E0B  0820               	movf	??___fladd,w
  4313  0E0C  00F7               	movwf	___fladd@a+1
  4314  0E0D                     l2872:
  4315  0E0D  0874               	movf	___fladd@b+2,w
  4316  0E0E  00A0               	movwf	??___fladd
  4317  0E0F  0820               	movf	??___fladd,w
  4318  0E10  00AB               	movwf	___fladd@grs
  4319  0E11                     l2874:
  4320  0E11  0878               	movf	___fladd@a+2,w
  4321  0E12  00A0               	movwf	??___fladd
  4322  0E13  0820               	movf	??___fladd,w
  4323  0E14  00F4               	movwf	___fladd@b+2
  4324  0E15                     l2876:
  4325  0E15  082B               	movf	___fladd@grs,w
  4326  0E16  00A0               	movwf	??___fladd
  4327  0E17  0820               	movf	??___fladd,w
  4328  0E18  00F8               	movwf	___fladd@a+2
  4329  0E19                     l2878:
  4330  0E19  0875               	movf	___fladd@b+3,w
  4331  0E1A  00A0               	movwf	??___fladd
  4332  0E1B  0820               	movf	??___fladd,w
  4333  0E1C  00AB               	movwf	___fladd@grs
  4334  0E1D                     l2880:
  4335  0E1D  0879               	movf	___fladd@a+3,w
  4336  0E1E  00A0               	movwf	??___fladd
  4337  0E1F  0820               	movf	??___fladd,w
  4338  0E20  00F5               	movwf	___fladd@b+3
  4339  0E21                     l2882:
  4340  0E21  082B               	movf	___fladd@grs,w
  4341  0E22  00A0               	movwf	??___fladd
  4342  0E23  0820               	movf	??___fladd,w
  4343  0E24  00F9               	movwf	___fladd@a+3
  4344  0E25                     l2884:
  4345  0E25  01AB               	clrf	___fladd@grs
  4346  0E26                     l2886:
  4347  0E26  0829               	movf	___fladd@aexp,w
  4348  0E27  00A0               	movwf	??___fladd
  4349  0E28  01A1               	clrf	??___fladd+1
  4350  0E29  0821               	movf	??___fladd+1,w
  4351  0E2A  00A3               	movwf	??___fladd+3
  4352  0E2B  082A               	movf	___fladd@bexp,w
  4353  0E2C  0220               	subwf	??___fladd,w
  4354  0E2D  00A2               	movwf	??___fladd+2
  4355  0E2E  1C03               	skipc
  4356  0E2F  03A3               	decf	??___fladd+3,f
  4357  0E30  0823               	movf	??___fladd+3,w
  4358  0E31  3A80               	xorlw	128
  4359  0E32  00FF               	movwf	btemp+1
  4360  0E33  3080               	movlw	128
  4361  0E34  027F               	subwf	btemp+1,w
  4362  0E35  1D03               	skipz
  4363  0E36  2E39               	goto	u3715
  4364  0E37  301A               	movlw	26
  4365  0E38  0222               	subwf	??___fladd+2,w
  4366  0E39                     u3715:
  4367  0E39  1C03               	skipc
  4368  0E3A  2E3C               	goto	u3711
  4369  0E3B  2E3D               	goto	u3710
  4370  0E3C                     u3711:
  4371  0E3C  2E7A               	goto	l2902
  4372  0E3D                     u3710:
  4373  0E3D                     l2888:
  4374  0E3D  0875               	movf	___fladd@b+3,w
  4375  0E3E  0474               	iorwf	___fladd@b+2,w
  4376  0E3F  0473               	iorwf	___fladd@b+1,w
  4377  0E40  0472               	iorwf	___fladd@b,w
  4378  0E41  1D03               	skipz
  4379  0E42  2E44               	goto	u3721
  4380  0E43  2E46               	goto	u3720
  4381  0E44                     u3721:
  4382  0E44  3001               	movlw	1
  4383  0E45  2E47               	goto	u3730
  4384  0E46                     u3720:
  4385  0E46  3000               	movlw	0
  4386  0E47                     u3730:
  4387  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4388  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4389  0E49  00A0               	movwf	??___fladd
  4390  0E4A  0820               	movf	??___fladd,w
  4391  0E4B  00AB               	movwf	___fladd@grs
  4392  0E4C  3000               	movlw	0
  4393  0E4D  00F5               	movwf	___fladd@b+3
  4394  0E4E  3000               	movlw	0
  4395  0E4F  00F4               	movwf	___fladd@b+2
  4396  0E50  3000               	movlw	0
  4397  0E51  00F3               	movwf	___fladd@b+1
  4398  0E52  3000               	movlw	0
  4399  0E53  00F2               	movwf	___fladd@b
  4400  0E54  0829               	movf	___fladd@aexp,w
  4401  0E55  00A0               	movwf	??___fladd
  4402  0E56  0820               	movf	??___fladd,w
  4403  0E57  00AA               	movwf	___fladd@bexp
  4404  0E58  2E82               	goto	l605
  4405  0E59                     l607:
  4406  0E59  1C2B               	btfss	___fladd@grs,0
  4407  0E5A  2E5C               	goto	u3741
  4408  0E5B  2E5D               	goto	u3740
  4409  0E5C                     u3741:
  4410  0E5C  2E66               	goto	l2892
  4411  0E5D                     u3740:
  4412  0E5D                     l2890:
  4413  0E5D  082B               	movf	___fladd@grs,w
  4414  0E5E  00A0               	movwf	??___fladd
  4415  0E5F  1003               	clrc
  4416  0E60  0C20               	rrf	??___fladd,w
  4417  0E61  3801               	iorlw	1
  4418  0E62  00A1               	movwf	??___fladd+1
  4419  0E63  0821               	movf	??___fladd+1,w
  4420  0E64  00AB               	movwf	___fladd@grs
  4421  0E65  2E68               	goto	l2894
  4422  0E66                     l2892:
  4423  0E66  1003               	clrc
  4424  0E67  0CAB               	rrf	___fladd@grs,f
  4425  0E68                     l2894:
  4426  0E68  1C72               	btfss	___fladd@b,0
  4427  0E69  2E6B               	goto	u3751
  4428  0E6A  2E6C               	goto	u3750
  4429  0E6B                     u3751:
  4430  0E6B  2E6D               	goto	l2898
  4431  0E6C                     u3750:
  4432  0E6C                     l2896:
  4433  0E6C  17AB               	bsf	___fladd@grs,7
  4434  0E6D                     l2898:
  4435  0E6D  3001               	movlw	1
  4436  0E6E  00A0               	movwf	??___fladd
  4437  0E6F                     u3765:
  4438  0E6F  0D75               	rlf	___fladd@b+3,w
  4439  0E70  0CF5               	rrf	___fladd@b+3,f
  4440  0E71  0CF4               	rrf	___fladd@b+2,f
  4441  0E72  0CF3               	rrf	___fladd@b+1,f
  4442  0E73  0CF2               	rrf	___fladd@b,f
  4443  0E74  0BA0               	decfsz	??___fladd& (0+127),f
  4444  0E75  2E6F               	goto	u3765
  4445  0E76                     l2900:
  4446  0E76  3001               	movlw	1
  4447  0E77  00A0               	movwf	??___fladd
  4448  0E78  0820               	movf	??___fladd,w
  4449  0E79  07AA               	addwf	___fladd@bexp,f
  4450  0E7A                     l2902:
  4451  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4452  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4453  0E7C  0829               	movf	___fladd@aexp,w
  4454  0E7D  022A               	subwf	___fladd@bexp,w
  4455  0E7E  1C03               	skipc
  4456  0E7F  2E81               	goto	u3771
  4457  0E80  2E82               	goto	u3770
  4458  0E81                     u3771:
  4459  0E81  2E59               	goto	l607
  4460  0E82                     u3770:
  4461  0E82                     l605:
  4462  0E82  1B28               	btfsc	___fladd@signs,6
  4463  0E83  2E85               	goto	u3781
  4464  0E84  2E86               	goto	u3780
  4465  0E85                     u3781:
  4466  0E85  2ED1               	goto	l2928
  4467  0E86                     u3780:
  4468  0E86                     l2904:
  4469  0E86  082A               	movf	___fladd@bexp,w
  4470  0E87  1D03               	btfss	3,2
  4471  0E88  2E8A               	goto	u3791
  4472  0E89  2E8B               	goto	u3790
  4473  0E8A                     u3791:
  4474  0E8A  2E94               	goto	l2910
  4475  0E8B                     u3790:
  4476  0E8B                     l2906:
  4477  0E8B  3000               	movlw	0
  4478  0E8C  00F5               	movwf	?___fladd+3
  4479  0E8D  3000               	movlw	0
  4480  0E8E  00F4               	movwf	?___fladd+2
  4481  0E8F  3000               	movlw	0
  4482  0E90  00F3               	movwf	?___fladd+1
  4483  0E91  3000               	movlw	0
  4484  0E92  00F2               	movwf	?___fladd
  4485  0E93  2FFF               	goto	l614
  4486  0E94                     l2910:
  4487  0E94  0876               	movf	___fladd@a,w
  4488  0E95  07F2               	addwf	___fladd@b,f
  4489  0E96  0877               	movf	___fladd@a+1,w
  4490  0E97  1103               	clrz
  4491  0E98  1803               	skipnc
  4492  0E99  3E01               	addlw	1
  4493  0E9A  1903               	skipnz
  4494  0E9B  2E9D               	goto	u3801
  4495  0E9C  07F3               	addwf	___fladd@b+1,f
  4496  0E9D                     u3801:
  4497  0E9D  0878               	movf	___fladd@a+2,w
  4498  0E9E  1103               	clrz
  4499  0E9F  1803               	skipnc
  4500  0EA0  3E01               	addlw	1
  4501  0EA1  1903               	skipnz
  4502  0EA2  2EA4               	goto	u3802
  4503  0EA3  07F4               	addwf	___fladd@b+2,f
  4504  0EA4                     u3802:
  4505  0EA4  0879               	movf	___fladd@a+3,w
  4506  0EA5  1103               	clrz
  4507  0EA6  1803               	skipnc
  4508  0EA7  3E01               	addlw	1
  4509  0EA8  1903               	skipnz
  4510  0EA9  2EAB               	goto	u3803
  4511  0EAA  07F5               	addwf	___fladd@b+3,f
  4512  0EAB                     u3803:
  4513  0EAB                     l2912:
  4514  0EAB  1C75               	btfss	___fladd@b+3,0
  4515  0EAC  2EAE               	goto	u3811
  4516  0EAD  2EAF               	goto	u3810
  4517  0EAE                     u3811:
  4518  0EAE  2F85               	goto	l2962
  4519  0EAF                     u3810:
  4520  0EAF                     l2914:
  4521  0EAF  1C2B               	btfss	___fladd@grs,0
  4522  0EB0  2EB2               	goto	u3821
  4523  0EB1  2EB3               	goto	u3820
  4524  0EB2                     u3821:
  4525  0EB2  2EBC               	goto	l2918
  4526  0EB3                     u3820:
  4527  0EB3                     l2916:
  4528  0EB3  082B               	movf	___fladd@grs,w
  4529  0EB4  00A0               	movwf	??___fladd
  4530  0EB5  1003               	clrc
  4531  0EB6  0C20               	rrf	??___fladd,w
  4532  0EB7  3801               	iorlw	1
  4533  0EB8  00A1               	movwf	??___fladd+1
  4534  0EB9  0821               	movf	??___fladd+1,w
  4535  0EBA  00AB               	movwf	___fladd@grs
  4536  0EBB  2EBE               	goto	l2920
  4537  0EBC                     l2918:
  4538  0EBC  1003               	clrc
  4539  0EBD  0CAB               	rrf	___fladd@grs,f
  4540  0EBE                     l2920:
  4541  0EBE  1C72               	btfss	___fladd@b,0
  4542  0EBF  2EC1               	goto	u3831
  4543  0EC0  2EC2               	goto	u3830
  4544  0EC1                     u3831:
  4545  0EC1  2EC3               	goto	l2924
  4546  0EC2                     u3830:
  4547  0EC2                     l2922:
  4548  0EC2  17AB               	bsf	___fladd@grs,7
  4549  0EC3                     l2924:
  4550  0EC3  3001               	movlw	1
  4551  0EC4  00A0               	movwf	??___fladd
  4552  0EC5                     u3845:
  4553  0EC5  0D75               	rlf	___fladd@b+3,w
  4554  0EC6  0CF5               	rrf	___fladd@b+3,f
  4555  0EC7  0CF4               	rrf	___fladd@b+2,f
  4556  0EC8  0CF3               	rrf	___fladd@b+1,f
  4557  0EC9  0CF2               	rrf	___fladd@b,f
  4558  0ECA  0BA0               	decfsz	??___fladd& (0+127),f
  4559  0ECB  2EC5               	goto	u3845
  4560  0ECC                     l2926:
  4561  0ECC  3001               	movlw	1
  4562  0ECD  00A0               	movwf	??___fladd
  4563  0ECE  0820               	movf	??___fladd,w
  4564  0ECF  07AA               	addwf	___fladd@bexp,f
  4565  0ED0  2F85               	goto	l2962
  4566  0ED1                     l2928:
  4567  0ED1  0875               	movf	___fladd@b+3,w
  4568  0ED2  3A80               	xorlw	128
  4569  0ED3  00FF               	movwf	btemp+1
  4570  0ED4  0879               	movf	___fladd@a+3,w
  4571  0ED5  3A80               	xorlw	128
  4572  0ED6  027F               	subwf	btemp+1,w
  4573  0ED7  1D03               	skipz
  4574  0ED8  2EE3               	goto	u3853
  4575  0ED9  0878               	movf	___fladd@a+2,w
  4576  0EDA  0274               	subwf	___fladd@b+2,w
  4577  0EDB  1D03               	skipz
  4578  0EDC  2EE3               	goto	u3853
  4579  0EDD  0877               	movf	___fladd@a+1,w
  4580  0EDE  0273               	subwf	___fladd@b+1,w
  4581  0EDF  1D03               	skipz
  4582  0EE0  2EE3               	goto	u3853
  4583  0EE1  0876               	movf	___fladd@a,w
  4584  0EE2  0272               	subwf	___fladd@b,w
  4585  0EE3                     u3853:
  4586  0EE3  1803               	skipnc
  4587  0EE4  2EE6               	goto	u3851
  4588  0EE5  2EE7               	goto	u3850
  4589  0EE6                     u3851:
  4590  0EE6  2F3F               	goto	l2938
  4591  0EE7                     u3850:
  4592  0EE7                     l2930:
  4593  0EE7  30FF               	movlw	255
  4594  0EE8  00A0               	movwf	??___fladd
  4595  0EE9  30FF               	movlw	255
  4596  0EEA  00A1               	movwf	??___fladd+1
  4597  0EEB  30FF               	movlw	255
  4598  0EEC  00A2               	movwf	??___fladd+2
  4599  0EED  30FF               	movlw	255
  4600  0EEE  00A3               	movwf	??___fladd+3
  4601  0EEF  0876               	movf	___fladd@a,w
  4602  0EF0  00A4               	movwf	??___fladd+4
  4603  0EF1  0877               	movf	___fladd@a+1,w
  4604  0EF2  00A5               	movwf	??___fladd+5
  4605  0EF3  0878               	movf	___fladd@a+2,w
  4606  0EF4  00A6               	movwf	??___fladd+6
  4607  0EF5  0879               	movf	___fladd@a+3,w
  4608  0EF6  00A7               	movwf	??___fladd+7
  4609  0EF7  0872               	movf	___fladd@b,w
  4610  0EF8  02A4               	subwf	??___fladd+4,f
  4611  0EF9  0873               	movf	___fladd@b+1,w
  4612  0EFA  1C03               	skipc
  4613  0EFB  0F73               	incfsz	___fladd@b+1,w
  4614  0EFC  2EFE               	goto	u3861
  4615  0EFD  2EFF               	goto	u3862
  4616  0EFE                     u3861:
  4617  0EFE  02A5               	subwf	??___fladd+5,f
  4618  0EFF                     u3862:
  4619  0EFF  0874               	movf	___fladd@b+2,w
  4620  0F00  1C03               	skipc
  4621  0F01  0F74               	incfsz	___fladd@b+2,w
  4622  0F02  2F04               	goto	u3863
  4623  0F03  2F05               	goto	u3864
  4624  0F04                     u3863:
  4625  0F04  02A6               	subwf	??___fladd+6,f
  4626  0F05                     u3864:
  4627  0F05  0875               	movf	___fladd@b+3,w
  4628  0F06  1C03               	skipc
  4629  0F07  0F75               	incfsz	___fladd@b+3,w
  4630  0F08  2F0A               	goto	u3865
  4631  0F09  2F0B               	goto	u3866
  4632  0F0A                     u3865:
  4633  0F0A  02A7               	subwf	??___fladd+7,f
  4634  0F0B                     u3866:
  4635  0F0B  0824               	movf	??___fladd+4,w
  4636  0F0C  07A0               	addwf	??___fladd,f
  4637  0F0D  0825               	movf	??___fladd+5,w
  4638  0F0E  1803               	skipnc
  4639  0F0F  0F25               	incfsz	??___fladd+5,w
  4640  0F10  2F12               	goto	u3870
  4641  0F11  2F13               	goto	u3871
  4642  0F12                     u3870:
  4643  0F12  07A1               	addwf	??___fladd+1,f
  4644  0F13                     u3871:
  4645  0F13  0826               	movf	??___fladd+6,w
  4646  0F14  1803               	skipnc
  4647  0F15  0F26               	incfsz	??___fladd+6,w
  4648  0F16  2F18               	goto	u3872
  4649  0F17  2F19               	goto	u3873
  4650  0F18                     u3872:
  4651  0F18  07A2               	addwf	??___fladd+2,f
  4652  0F19                     u3873:
  4653  0F19  0827               	movf	??___fladd+7,w
  4654  0F1A  1803               	skipnc
  4655  0F1B  0A27               	incf	??___fladd+7,w
  4656  0F1C  07A3               	addwf	??___fladd+3,f
  4657  0F1D  0823               	movf	??___fladd+3,w
  4658  0F1E  00F5               	movwf	___fladd@b+3
  4659  0F1F  0822               	movf	??___fladd+2,w
  4660  0F20  00F4               	movwf	___fladd@b+2
  4661  0F21  0821               	movf	??___fladd+1,w
  4662  0F22  00F3               	movwf	___fladd@b+1
  4663  0F23  0820               	movf	??___fladd,w
  4664  0F24  00F2               	movwf	___fladd@b
  4665  0F25                     l2932:
  4666  0F25  3080               	movlw	128
  4667  0F26  00A0               	movwf	??___fladd
  4668  0F27  0820               	movf	??___fladd,w
  4669  0F28  06A8               	xorwf	___fladd@signs,f
  4670  0F29  09AB               	comf	___fladd@grs,f
  4671  0F2A  0AAB               	incf	___fladd@grs,f
  4672  0F2B                     l2934:
  4673  0F2B  082B               	movf	___fladd@grs,w
  4674  0F2C  1D03               	btfss	3,2
  4675  0F2D  2F2F               	goto	u3881
  4676  0F2E  2F30               	goto	u3880
  4677  0F2F                     u3881:
  4678  0F2F  2F4D               	goto	l622
  4679  0F30                     u3880:
  4680  0F30                     l2936:
  4681  0F30  3001               	movlw	1
  4682  0F31  07F2               	addwf	___fladd@b,f
  4683  0F32  3000               	movlw	0
  4684  0F33  1803               	skipnc
  4685  0F34  3001               	movlw	1
  4686  0F35  07F3               	addwf	___fladd@b+1,f
  4687  0F36  3000               	movlw	0
  4688  0F37  1803               	skipnc
  4689  0F38  3001               	movlw	1
  4690  0F39  07F4               	addwf	___fladd@b+2,f
  4691  0F3A  3000               	movlw	0
  4692  0F3B  1803               	skipnc
  4693  0F3C  3001               	movlw	1
  4694  0F3D  07F5               	addwf	___fladd@b+3,f
  4695  0F3E  2F4D               	goto	l622
  4696  0F3F                     l2938:
  4697  0F3F  0876               	movf	___fladd@a,w
  4698  0F40  02F2               	subwf	___fladd@b,f
  4699  0F41  0877               	movf	___fladd@a+1,w
  4700  0F42  1C03               	skipc
  4701  0F43  0F77               	incfsz	___fladd@a+1,w
  4702  0F44  02F3               	subwf	___fladd@b+1,f
  4703  0F45  0878               	movf	___fladd@a+2,w
  4704  0F46  1C03               	skipc
  4705  0F47  0F78               	incfsz	___fladd@a+2,w
  4706  0F48  02F4               	subwf	___fladd@b+2,f
  4707  0F49  0879               	movf	___fladd@a+3,w
  4708  0F4A  1C03               	skipc
  4709  0F4B  0F79               	incfsz	___fladd@a+3,w
  4710  0F4C  02F5               	subwf	___fladd@b+3,f
  4711  0F4D                     l622:
  4712  0F4D  0875               	movf	___fladd@b+3,w
  4713  0F4E  0474               	iorwf	___fladd@b+2,w
  4714  0F4F  0473               	iorwf	___fladd@b+1,w
  4715  0F50  0472               	iorwf	___fladd@b,w
  4716  0F51  1D03               	skipz
  4717  0F52  2F54               	goto	u3891
  4718  0F53  2F55               	goto	u3890
  4719  0F54                     u3891:
  4720  0F54  2F81               	goto	l2960
  4721  0F55                     u3890:
  4722  0F55                     l2940:
  4723  0F55  082B               	movf	___fladd@grs,w
  4724  0F56  1D03               	btfss	3,2
  4725  0F57  2F59               	goto	u3901
  4726  0F58  2F5A               	goto	u3900
  4727  0F59                     u3901:
  4728  0F59  2F81               	goto	l2960
  4729  0F5A                     u3900:
  4730  0F5A                     l2942:
  4731  0F5A  3000               	movlw	0
  4732  0F5B  00F5               	movwf	?___fladd+3
  4733  0F5C  3000               	movlw	0
  4734  0F5D  00F4               	movwf	?___fladd+2
  4735  0F5E  3000               	movlw	0
  4736  0F5F  00F3               	movwf	?___fladd+1
  4737  0F60  3000               	movlw	0
  4738  0F61  00F2               	movwf	?___fladd
  4739  0F62  2FFF               	goto	l614
  4740  0F63                     l2946:
  4741  0F63  3001               	movlw	1
  4742  0F64  00A0               	movwf	??___fladd
  4743  0F65                     u3915:
  4744  0F65  1003               	clrc
  4745  0F66  0DF2               	rlf	___fladd@b,f
  4746  0F67  0DF3               	rlf	___fladd@b+1,f
  4747  0F68  0DF4               	rlf	___fladd@b+2,f
  4748  0F69  0DF5               	rlf	___fladd@b+3,f
  4749  0F6A  0BA0               	decfsz	??___fladd,f
  4750  0F6B  2F65               	goto	u3915
  4751  0F6C                     l2948:
  4752  0F6C  1FAB               	btfss	___fladd@grs,7
  4753  0F6D  2F6F               	goto	u3921
  4754  0F6E  2F70               	goto	u3920
  4755  0F6F                     u3921:
  4756  0F6F  2F71               	goto	l626
  4757  0F70                     u3920:
  4758  0F70                     l2950:
  4759  0F70  1472               	bsf	___fladd@b,0
  4760  0F71                     l626:
  4761  0F71  1C2B               	btfss	___fladd@grs,0
  4762  0F72  2F74               	goto	u3931
  4763  0F73  2F75               	goto	u3930
  4764  0F74                     u3931:
  4765  0F74  2F78               	goto	l2954
  4766  0F75                     u3930:
  4767  0F75                     l2952:
  4768  0F75  1403               	setc
  4769  0F76  0DAB               	rlf	___fladd@grs,f
  4770  0F77  2F7A               	goto	l2956
  4771  0F78                     l2954:
  4772  0F78  1003               	clrc
  4773  0F79  0DAB               	rlf	___fladd@grs,f
  4774  0F7A                     l2956:
  4775  0F7A  082A               	movf	___fladd@bexp,w
  4776  0F7B  1903               	btfsc	3,2
  4777  0F7C  2F7E               	goto	u3941
  4778  0F7D  2F7F               	goto	u3940
  4779  0F7E                     u3941:
  4780  0F7E  2F81               	goto	l2960
  4781  0F7F                     u3940:
  4782  0F7F                     l2958:
  4783  0F7F  3001               	movlw	1
  4784  0F80  02AA               	subwf	___fladd@bexp,f
  4785  0F81                     l2960:
  4786  0F81  1FF4               	btfss	___fladd@b+2,7
  4787  0F82  2F84               	goto	u3951
  4788  0F83  2F85               	goto	u3950
  4789  0F84                     u3951:
  4790  0F84  2F63               	goto	l2946
  4791  0F85                     u3950:
  4792  0F85                     l2962:
  4793  0F85  01A9               	clrf	___fladd@aexp
  4794  0F86                     l2964:
  4795  0F86  1FAB               	btfss	___fladd@grs,7
  4796  0F87  2F89               	goto	u3961
  4797  0F88  2F8A               	goto	u3960
  4798  0F89                     u3961:
  4799  0F89  2F98               	goto	l2972
  4800  0F8A                     u3960:
  4801  0F8A                     l2966:
  4802  0F8A  082B               	movf	___fladd@grs,w
  4803  0F8B  397F               	andlw	127
  4804  0F8C  1903               	btfsc	3,2
  4805  0F8D  2F8F               	goto	u3971
  4806  0F8E  2F90               	goto	u3970
  4807  0F8F                     u3971:
  4808  0F8F  2F93               	goto	l632
  4809  0F90                     u3970:
  4810  0F90                     l2968:
  4811  0F90  01A9               	clrf	___fladd@aexp
  4812  0F91  0AA9               	incf	___fladd@aexp,f
  4813  0F92  2F98               	goto	l2972
  4814  0F93                     l632:
  4815  0F93  1C72               	btfss	___fladd@b,0
  4816  0F94  2F96               	goto	u3981
  4817  0F95  2F97               	goto	u3980
  4818  0F96                     u3981:
  4819  0F96  2F98               	goto	l2972
  4820  0F97                     u3980:
  4821  0F97  2F90               	goto	l2968
  4822  0F98                     l2972:
  4823  0F98  0829               	movf	___fladd@aexp,w
  4824  0F99  1903               	btfsc	3,2
  4825  0F9A  2F9C               	goto	u3991
  4826  0F9B  2F9D               	goto	u3990
  4827  0F9C                     u3991:
  4828  0F9C  2FD1               	goto	l635
  4829  0F9D                     u3990:
  4830  0F9D                     l2974:
  4831  0F9D  3001               	movlw	1
  4832  0F9E  07F2               	addwf	___fladd@b,f
  4833  0F9F  3000               	movlw	0
  4834  0FA0  1803               	skipnc
  4835  0FA1  3001               	movlw	1
  4836  0FA2  07F3               	addwf	___fladd@b+1,f
  4837  0FA3  3000               	movlw	0
  4838  0FA4  1803               	skipnc
  4839  0FA5  3001               	movlw	1
  4840  0FA6  07F4               	addwf	___fladd@b+2,f
  4841  0FA7  3000               	movlw	0
  4842  0FA8  1803               	skipnc
  4843  0FA9  3001               	movlw	1
  4844  0FAA  07F5               	addwf	___fladd@b+3,f
  4845  0FAB                     l2976:
  4846  0FAB  1C75               	btfss	___fladd@b+3,0
  4847  0FAC  2FAE               	goto	u4001
  4848  0FAD  2FAF               	goto	u4000
  4849  0FAE                     u4001:
  4850  0FAE  2FD1               	goto	l635
  4851  0FAF                     u4000:
  4852  0FAF                     l2978:
  4853  0FAF  0872               	movf	___fladd@b,w
  4854  0FB0  00A0               	movwf	??___fladd
  4855  0FB1  0873               	movf	___fladd@b+1,w
  4856  0FB2  00A1               	movwf	??___fladd+1
  4857  0FB3  0874               	movf	___fladd@b+2,w
  4858  0FB4  00A2               	movwf	??___fladd+2
  4859  0FB5  0875               	movf	___fladd@b+3,w
  4860  0FB6  00A3               	movwf	??___fladd+3
  4861  0FB7  3001               	movlw	1
  4862  0FB8  00A4               	movwf	??___fladd+4
  4863  0FB9                     u4015:
  4864  0FB9  0D23               	rlf	??___fladd+3,w
  4865  0FBA  0CA3               	rrf	??___fladd+3,f
  4866  0FBB  0CA2               	rrf	??___fladd+2,f
  4867  0FBC  0CA1               	rrf	??___fladd+1,f
  4868  0FBD  0CA0               	rrf	??___fladd,f
  4869  0FBE                     u4010:
  4870  0FBE  0BA4               	decfsz	??___fladd+4,f
  4871  0FBF  2FB9               	goto	u4015
  4872  0FC0  0823               	movf	??___fladd+3,w
  4873  0FC1  00F5               	movwf	___fladd@b+3
  4874  0FC2  0822               	movf	??___fladd+2,w
  4875  0FC3  00F4               	movwf	___fladd@b+2
  4876  0FC4  0821               	movf	??___fladd+1,w
  4877  0FC5  00F3               	movwf	___fladd@b+1
  4878  0FC6  0820               	movf	??___fladd,w
  4879  0FC7  00F2               	movwf	___fladd@b
  4880  0FC8  0A2A               	incf	___fladd@bexp,w
  4881  0FC9  1903               	btfsc	3,2
  4882  0FCA  2FCC               	goto	u4021
  4883  0FCB  2FCD               	goto	u4020
  4884  0FCC                     u4021:
  4885  0FCC  2FD1               	goto	l635
  4886  0FCD                     u4020:
  4887  0FCD                     l2980:
  4888  0FCD  3001               	movlw	1
  4889  0FCE  00A0               	movwf	??___fladd
  4890  0FCF  0820               	movf	??___fladd,w
  4891  0FD0  07AA               	addwf	___fladd@bexp,f
  4892  0FD1                     l635:
  4893  0FD1  0A2A               	incf	___fladd@bexp,w
  4894  0FD2  1903               	btfsc	3,2
  4895  0FD3  2FD5               	goto	u4031
  4896  0FD4  2FD6               	goto	u4030
  4897  0FD5                     u4031:
  4898  0FD5  2FDB               	goto	l2984
  4899  0FD6                     u4030:
  4900  0FD6                     l2982:
  4901  0FD6  082A               	movf	___fladd@bexp,w
  4902  0FD7  1D03               	btfss	3,2
  4903  0FD8  2FDA               	goto	u4041
  4904  0FD9  2FDB               	goto	u4040
  4905  0FDA                     u4041:
  4906  0FDA  2FE9               	goto	l2990
  4907  0FDB                     u4040:
  4908  0FDB                     l2984:
  4909  0FDB  3000               	movlw	0
  4910  0FDC  00F5               	movwf	___fladd@b+3
  4911  0FDD  3000               	movlw	0
  4912  0FDE  00F4               	movwf	___fladd@b+2
  4913  0FDF  3000               	movlw	0
  4914  0FE0  00F3               	movwf	___fladd@b+1
  4915  0FE1  3000               	movlw	0
  4916  0FE2  00F2               	movwf	___fladd@b
  4917  0FE3                     l2986:
  4918  0FE3  082A               	movf	___fladd@bexp,w
  4919  0FE4  1D03               	btfss	3,2
  4920  0FE5  2FE7               	goto	u4051
  4921  0FE6  2FE8               	goto	u4050
  4922  0FE7                     u4051:
  4923  0FE7  2FE9               	goto	l2990
  4924  0FE8                     u4050:
  4925  0FE8                     l2988:
  4926  0FE8  01A8               	clrf	___fladd@signs
  4927  0FE9                     l2990:
  4928  0FE9  1C2A               	btfss	___fladd@bexp,0
  4929  0FEA  2FEC               	goto	u4061
  4930  0FEB  2FED               	goto	u4060
  4931  0FEC                     u4061:
  4932  0FEC  2FEF               	goto	l2994
  4933  0FED                     u4060:
  4934  0FED                     l2992:
  4935  0FED  17F4               	bsf	___fladd@b+2,7
  4936  0FEE  2FF3               	goto	l643
  4937  0FEF                     l2994:
  4938  0FEF  307F               	movlw	127
  4939  0FF0  00A0               	movwf	??___fladd
  4940  0FF1  0820               	movf	??___fladd,w
  4941  0FF2  05F4               	andwf	___fladd@b+2,f
  4942  0FF3                     l643:
  4943  0FF3  082A               	movf	___fladd@bexp,w
  4944  0FF4  00A0               	movwf	??___fladd
  4945  0FF5  1003               	clrc
  4946  0FF6  0C20               	rrf	??___fladd,w
  4947  0FF7  00A1               	movwf	??___fladd+1
  4948  0FF8  0821               	movf	??___fladd+1,w
  4949  0FF9  00F5               	movwf	___fladd@b+3
  4950  0FFA                     l2996:
  4951  0FFA  1FA8               	btfss	___fladd@signs,7
  4952  0FFB  2FFD               	goto	u4071
  4953  0FFC  2FFE               	goto	u4070
  4954  0FFD                     u4071:
  4955  0FFD  2FFF               	goto	l644
  4956  0FFE                     u4070:
  4957  0FFE                     l2998:
  4958  0FFE  17F5               	bsf	___fladd@b+3,7
  4959  0FFF                     l644:
  4960  0FFF                     l614:
  4961  0FFF  0008               	return
  4962  1000                     __end_of___fladd:
  4963                           
  4964                           	psect	text21
  4965  0422                     __ptext21:	
  4966 ;; *************** function ___flmul *****************
  4967 ;; Defined at:
  4968 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;  b               4   31[BANK0 ] unsigned char 
  4971 ;;  a               4   35[BANK0 ] unsigned char 
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  prod            4   51[BANK0 ] struct .
  4974 ;;  grs             4   46[BANK0 ] unsigned long 
  4975 ;;  temp            2   55[BANK0 ] struct .
  4976 ;;  bexp            1   50[BANK0 ] unsigned char 
  4977 ;;  aexp            1   45[BANK0 ] unsigned char 
  4978 ;;  sign            1   44[BANK0 ] unsigned char 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  4   31[BANK0 ] unsigned char 
  4981 ;; Registers used:
  4982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 0/0
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4988 ;;      Params:         0       8       0       0       0
  4989 ;;      Locals:         0      13       0       0       0
  4990 ;;      Temps:          0       5       0       0       0
  4991 ;;      Totals:         0      26       0       0       0
  4992 ;;Total ram usage:       26 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 2
  4995 ;; This function calls:
  4996 ;;		__Umul8_16
  4997 ;; This function is called by:
  4998 ;;		_ADC_convert
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function ___flmul
  5004  0422                     ___flmul:
  5005  0422                     l3286:	
  5006                           ;incstack = 0
  5007                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5008                           
  5009  0422  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0423  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0424  0842               	movf	___flmul@b+3,w
  5012  0425  3980               	andlw	128
  5013  0426  00C7               	movwf	??___flmul
  5014  0427  0847               	movf	??___flmul,w
  5015  0428  00CC               	movwf	___flmul@sign
  5016  0429                     l3288:
  5017  0429  0842               	movf	___flmul@b+3,w
  5018  042A  00C7               	movwf	??___flmul
  5019  042B  0747               	addwf	??___flmul,w
  5020  042C  00C8               	movwf	??___flmul+1
  5021  042D  0848               	movf	??___flmul+1,w
  5022  042E  00D2               	movwf	___flmul@bexp
  5023  042F                     l3290:
  5024  042F  1FC1               	btfss	___flmul@b+2,7
  5025  0430  2C32               	goto	u4731
  5026  0431  2C33               	goto	u4730
  5027  0432                     u4731:
  5028  0432  2C34               	goto	l3294
  5029  0433                     u4730:
  5030  0433                     l3292:
  5031  0433  1452               	bsf	___flmul@bexp,0
  5032  0434                     l3294:
  5033  0434  0852               	movf	___flmul@bexp,w
  5034  0435  1903               	btfsc	3,2
  5035  0436  2C38               	goto	u4741
  5036  0437  2C39               	goto	u4740
  5037  0438                     u4741:
  5038  0438  2C48               	goto	l3302
  5039  0439                     u4740:
  5040  0439                     l3296:
  5041  0439  0A52               	incf	___flmul@bexp,w
  5042  043A  1D03               	btfss	3,2
  5043  043B  2C3D               	goto	u4751
  5044  043C  2C3E               	goto	u4750
  5045  043D                     u4751:
  5046  043D  2C46               	goto	l3300
  5047  043E                     u4750:
  5048  043E                     l3298:
  5049  043E  3000               	movlw	0
  5050  043F  00C2               	movwf	___flmul@b+3
  5051  0440  3000               	movlw	0
  5052  0441  00C1               	movwf	___flmul@b+2
  5053  0442  3000               	movlw	0
  5054  0443  00C0               	movwf	___flmul@b+1
  5055  0444  3000               	movlw	0
  5056  0445  00BF               	movwf	___flmul@b
  5057  0446                     l3300:
  5058  0446  17C1               	bsf	___flmul@b+2,7
  5059  0447  2C50               	goto	l3304
  5060  0448                     l3302:
  5061  0448  3000               	movlw	0
  5062  0449  00C2               	movwf	___flmul@b+3
  5063  044A  3000               	movlw	0
  5064  044B  00C1               	movwf	___flmul@b+2
  5065  044C  3000               	movlw	0
  5066  044D  00C0               	movwf	___flmul@b+1
  5067  044E  3000               	movlw	0
  5068  044F  00BF               	movwf	___flmul@b
  5069  0450                     l3304:
  5070  0450  0846               	movf	___flmul@a+3,w
  5071  0451  3980               	andlw	128
  5072  0452  00C7               	movwf	??___flmul
  5073  0453  0847               	movf	??___flmul,w
  5074  0454  06CC               	xorwf	___flmul@sign,f
  5075  0455                     l3306:
  5076  0455  0846               	movf	___flmul@a+3,w
  5077  0456  00C7               	movwf	??___flmul
  5078  0457  0747               	addwf	??___flmul,w
  5079  0458  00C8               	movwf	??___flmul+1
  5080  0459  0848               	movf	??___flmul+1,w
  5081  045A  00CD               	movwf	___flmul@aexp
  5082  045B                     l3308:
  5083  045B  1FC5               	btfss	___flmul@a+2,7
  5084  045C  2C5E               	goto	u4761
  5085  045D  2C5F               	goto	u4760
  5086  045E                     u4761:
  5087  045E  2C60               	goto	l3312
  5088  045F                     u4760:
  5089  045F                     l3310:
  5090  045F  144D               	bsf	___flmul@aexp,0
  5091  0460                     l3312:
  5092  0460  084D               	movf	___flmul@aexp,w
  5093  0461  1903               	btfsc	3,2
  5094  0462  2C64               	goto	u4771
  5095  0463  2C65               	goto	u4770
  5096  0464                     u4771:
  5097  0464  2C74               	goto	l3320
  5098  0465                     u4770:
  5099  0465                     l3314:
  5100  0465  0A4D               	incf	___flmul@aexp,w
  5101  0466  1D03               	btfss	3,2
  5102  0467  2C69               	goto	u4781
  5103  0468  2C6A               	goto	u4780
  5104  0469                     u4781:
  5105  0469  2C72               	goto	l3318
  5106  046A                     u4780:
  5107  046A                     l3316:
  5108  046A  3000               	movlw	0
  5109  046B  00C6               	movwf	___flmul@a+3
  5110  046C  3000               	movlw	0
  5111  046D  00C5               	movwf	___flmul@a+2
  5112  046E  3000               	movlw	0
  5113  046F  00C4               	movwf	___flmul@a+1
  5114  0470  3000               	movlw	0
  5115  0471  00C3               	movwf	___flmul@a
  5116  0472                     l3318:
  5117  0472  17C5               	bsf	___flmul@a+2,7
  5118  0473  2C7C               	goto	l3322
  5119  0474                     l3320:
  5120  0474  3000               	movlw	0
  5121  0475  00C6               	movwf	___flmul@a+3
  5122  0476  3000               	movlw	0
  5123  0477  00C5               	movwf	___flmul@a+2
  5124  0478  3000               	movlw	0
  5125  0479  00C4               	movwf	___flmul@a+1
  5126  047A  3000               	movlw	0
  5127  047B  00C3               	movwf	___flmul@a
  5128  047C                     l3322:
  5129  047C  084D               	movf	___flmul@aexp,w
  5130  047D  1903               	btfsc	3,2
  5131  047E  2C80               	goto	u4791
  5132  047F  2C81               	goto	u4790
  5133  0480                     u4791:
  5134  0480  2C86               	goto	l3326
  5135  0481                     u4790:
  5136  0481                     l3324:
  5137  0481  0852               	movf	___flmul@bexp,w
  5138  0482  1D03               	btfss	3,2
  5139  0483  2C85               	goto	u4801
  5140  0484  2C86               	goto	u4800
  5141  0485                     u4801:
  5142  0485  2C8F               	goto	l3330
  5143  0486                     u4800:
  5144  0486                     l3326:
  5145  0486  3000               	movlw	0
  5146  0487  00C2               	movwf	?___flmul+3
  5147  0488  3000               	movlw	0
  5148  0489  00C1               	movwf	?___flmul+2
  5149  048A  3000               	movlw	0
  5150  048B  00C0               	movwf	?___flmul+1
  5151  048C  3000               	movlw	0
  5152  048D  00BF               	movwf	?___flmul
  5153  048E  2F82               	goto	l697
  5154  048F                     l3330:
  5155  048F  083F               	movf	___flmul@b,w
  5156  0490  00C7               	movwf	??___flmul
  5157  0491  0847               	movf	??___flmul,w
  5158  0492  00F2               	movwf	__Umul8_16@multiplicand
  5159  0493  0845               	movf	___flmul@a+2,w
  5160  0494  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5161  0499  0873               	movf	?__Umul8_16+1,w
  5162  049A  1283               	bcf	3,5	;RP0=0, select bank0
  5163  049B  1303               	bcf	3,6	;RP1=0, select bank0
  5164  049C  00D8               	movwf	___flmul@temp+1
  5165  049D  0872               	movf	?__Umul8_16,w
  5166  049E  00D7               	movwf	___flmul@temp
  5167  049F                     l3332:
  5168  049F  0857               	movf	___flmul@temp,w
  5169  04A0  00C7               	movwf	??___flmul
  5170  04A1  01C8               	clrf	??___flmul+1
  5171  04A2  01C9               	clrf	??___flmul+2
  5172  04A3  01CA               	clrf	??___flmul+3
  5173  04A4  084A               	movf	??___flmul+3,w
  5174  04A5  00D1               	movwf	___flmul@grs+3
  5175  04A6  0849               	movf	??___flmul+2,w
  5176  04A7  00D0               	movwf	___flmul@grs+2
  5177  04A8  0848               	movf	??___flmul+1,w
  5178  04A9  00CF               	movwf	___flmul@grs+1
  5179  04AA  0847               	movf	??___flmul,w
  5180  04AB  00CE               	movwf	___flmul@grs
  5181  04AC                     l3334:
  5182  04AC  0858               	movf	___flmul@temp+1,w
  5183  04AD  00C7               	movwf	??___flmul
  5184  04AE  01C8               	clrf	??___flmul+1
  5185  04AF  01C9               	clrf	??___flmul+2
  5186  04B0  01CA               	clrf	??___flmul+3
  5187  04B1  084A               	movf	??___flmul+3,w
  5188  04B2  00D6               	movwf	___flmul@prod+3
  5189  04B3  0849               	movf	??___flmul+2,w
  5190  04B4  00D5               	movwf	___flmul@prod+2
  5191  04B5  0848               	movf	??___flmul+1,w
  5192  04B6  00D4               	movwf	___flmul@prod+1
  5193  04B7  0847               	movf	??___flmul,w
  5194  04B8  00D3               	movwf	___flmul@prod
  5195  04B9  0840               	movf	___flmul@b+1,w
  5196  04BA  00C7               	movwf	??___flmul
  5197  04BB  0847               	movf	??___flmul,w
  5198  04BC  00F2               	movwf	__Umul8_16@multiplicand
  5199  04BD  0844               	movf	___flmul@a+1,w
  5200  04BE  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5201  04C3  0873               	movf	?__Umul8_16+1,w
  5202  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  5203  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  5204  04C6  00D8               	movwf	___flmul@temp+1
  5205  04C7  0872               	movf	?__Umul8_16,w
  5206  04C8  00D7               	movwf	___flmul@temp
  5207  04C9                     l3336:
  5208  04C9  0857               	movf	___flmul@temp,w
  5209  04CA  00C7               	movwf	??___flmul
  5210  04CB  01C8               	clrf	??___flmul+1
  5211  04CC  01C9               	clrf	??___flmul+2
  5212  04CD  01CA               	clrf	??___flmul+3
  5213  04CE  0847               	movf	??___flmul,w
  5214  04CF  07CE               	addwf	___flmul@grs,f
  5215  04D0  0848               	movf	??___flmul+1,w
  5216  04D1  1103               	clrz
  5217  04D2  1803               	skipnc
  5218  04D3  3E01               	addlw	1
  5219  04D4  1903               	skipnz
  5220  04D5  2CD7               	goto	u4811
  5221  04D6  07CF               	addwf	___flmul@grs+1,f
  5222  04D7                     u4811:
  5223  04D7  0849               	movf	??___flmul+2,w
  5224  04D8  1103               	clrz
  5225  04D9  1803               	skipnc
  5226  04DA  3E01               	addlw	1
  5227  04DB  1903               	skipnz
  5228  04DC  2CDE               	goto	u4812
  5229  04DD  07D0               	addwf	___flmul@grs+2,f
  5230  04DE                     u4812:
  5231  04DE  084A               	movf	??___flmul+3,w
  5232  04DF  1103               	clrz
  5233  04E0  1803               	skipnc
  5234  04E1  3E01               	addlw	1
  5235  04E2  1903               	skipnz
  5236  04E3  2CE5               	goto	u4813
  5237  04E4  07D1               	addwf	___flmul@grs+3,f
  5238  04E5                     u4813:
  5239  04E5                     l3338:
  5240  04E5  0858               	movf	___flmul@temp+1,w
  5241  04E6  00C7               	movwf	??___flmul
  5242  04E7  01C8               	clrf	??___flmul+1
  5243  04E8  01C9               	clrf	??___flmul+2
  5244  04E9  01CA               	clrf	??___flmul+3
  5245  04EA  0847               	movf	??___flmul,w
  5246  04EB  07D3               	addwf	___flmul@prod,f
  5247  04EC  0848               	movf	??___flmul+1,w
  5248  04ED  1103               	clrz
  5249  04EE  1803               	skipnc
  5250  04EF  3E01               	addlw	1
  5251  04F0  1903               	skipnz
  5252  04F1  2CF3               	goto	u4821
  5253  04F2  07D4               	addwf	___flmul@prod+1,f
  5254  04F3                     u4821:
  5255  04F3  0849               	movf	??___flmul+2,w
  5256  04F4  1103               	clrz
  5257  04F5  1803               	skipnc
  5258  04F6  3E01               	addlw	1
  5259  04F7  1903               	skipnz
  5260  04F8  2CFA               	goto	u4822
  5261  04F9  07D5               	addwf	___flmul@prod+2,f
  5262  04FA                     u4822:
  5263  04FA  084A               	movf	??___flmul+3,w
  5264  04FB  1103               	clrz
  5265  04FC  1803               	skipnc
  5266  04FD  3E01               	addlw	1
  5267  04FE  1903               	skipnz
  5268  04FF  2D01               	goto	u4823
  5269  0500  07D6               	addwf	___flmul@prod+3,f
  5270  0501                     u4823:
  5271  0501  0841               	movf	___flmul@b+2,w
  5272  0502  00C7               	movwf	??___flmul
  5273  0503  0847               	movf	??___flmul,w
  5274  0504  00F2               	movwf	__Umul8_16@multiplicand
  5275  0505  0843               	movf	___flmul@a,w
  5276  0506  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5277  050B  0873               	movf	?__Umul8_16+1,w
  5278  050C  1283               	bcf	3,5	;RP0=0, select bank0
  5279  050D  1303               	bcf	3,6	;RP1=0, select bank0
  5280  050E  00D8               	movwf	___flmul@temp+1
  5281  050F  0872               	movf	?__Umul8_16,w
  5282  0510  00D7               	movwf	___flmul@temp
  5283  0511                     l3340:
  5284  0511  0857               	movf	___flmul@temp,w
  5285  0512  00C7               	movwf	??___flmul
  5286  0513  01C8               	clrf	??___flmul+1
  5287  0514  01C9               	clrf	??___flmul+2
  5288  0515  01CA               	clrf	??___flmul+3
  5289  0516  0847               	movf	??___flmul,w
  5290  0517  07CE               	addwf	___flmul@grs,f
  5291  0518  0848               	movf	??___flmul+1,w
  5292  0519  1103               	clrz
  5293  051A  1803               	skipnc
  5294  051B  3E01               	addlw	1
  5295  051C  1903               	skipnz
  5296  051D  2D1F               	goto	u4831
  5297  051E  07CF               	addwf	___flmul@grs+1,f
  5298  051F                     u4831:
  5299  051F  0849               	movf	??___flmul+2,w
  5300  0520  1103               	clrz
  5301  0521  1803               	skipnc
  5302  0522  3E01               	addlw	1
  5303  0523  1903               	skipnz
  5304  0524  2D26               	goto	u4832
  5305  0525  07D0               	addwf	___flmul@grs+2,f
  5306  0526                     u4832:
  5307  0526  084A               	movf	??___flmul+3,w
  5308  0527  1103               	clrz
  5309  0528  1803               	skipnc
  5310  0529  3E01               	addlw	1
  5311  052A  1903               	skipnz
  5312  052B  2D2D               	goto	u4833
  5313  052C  07D1               	addwf	___flmul@grs+3,f
  5314  052D                     u4833:
  5315  052D                     l3342:
  5316  052D  0858               	movf	___flmul@temp+1,w
  5317  052E  00C7               	movwf	??___flmul
  5318  052F  01C8               	clrf	??___flmul+1
  5319  0530  01C9               	clrf	??___flmul+2
  5320  0531  01CA               	clrf	??___flmul+3
  5321  0532  0847               	movf	??___flmul,w
  5322  0533  07D3               	addwf	___flmul@prod,f
  5323  0534  0848               	movf	??___flmul+1,w
  5324  0535  1103               	clrz
  5325  0536  1803               	skipnc
  5326  0537  3E01               	addlw	1
  5327  0538  1903               	skipnz
  5328  0539  2D3B               	goto	u4841
  5329  053A  07D4               	addwf	___flmul@prod+1,f
  5330  053B                     u4841:
  5331  053B  0849               	movf	??___flmul+2,w
  5332  053C  1103               	clrz
  5333  053D  1803               	skipnc
  5334  053E  3E01               	addlw	1
  5335  053F  1903               	skipnz
  5336  0540  2D42               	goto	u4842
  5337  0541  07D5               	addwf	___flmul@prod+2,f
  5338  0542                     u4842:
  5339  0542  084A               	movf	??___flmul+3,w
  5340  0543  1103               	clrz
  5341  0544  1803               	skipnc
  5342  0545  3E01               	addlw	1
  5343  0546  1903               	skipnz
  5344  0547  2D49               	goto	u4843
  5345  0548  07D6               	addwf	___flmul@prod+3,f
  5346  0549                     u4843:
  5347  0549                     l3344:
  5348  0549  3008               	movlw	8
  5349  054A  00C7               	movwf	??___flmul
  5350  054B                     u4855:
  5351  054B  1003               	clrc
  5352  054C  0DCE               	rlf	___flmul@grs,f
  5353  054D  0DCF               	rlf	___flmul@grs+1,f
  5354  054E  0DD0               	rlf	___flmul@grs+2,f
  5355  054F  0DD1               	rlf	___flmul@grs+3,f
  5356  0550  0BC7               	decfsz	??___flmul,f
  5357  0551  2D4B               	goto	u4855
  5358  0552                     l3346:
  5359  0552  0840               	movf	___flmul@b+1,w
  5360  0553  00C7               	movwf	??___flmul
  5361  0554  0847               	movf	??___flmul,w
  5362  0555  00F2               	movwf	__Umul8_16@multiplicand
  5363  0556  0843               	movf	___flmul@a,w
  5364  0557  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5365  055C  0873               	movf	?__Umul8_16+1,w
  5366  055D  1283               	bcf	3,5	;RP0=0, select bank0
  5367  055E  1303               	bcf	3,6	;RP1=0, select bank0
  5368  055F  00D8               	movwf	___flmul@temp+1
  5369  0560  0872               	movf	?__Umul8_16,w
  5370  0561  00D7               	movwf	___flmul@temp
  5371  0562                     l3348:
  5372  0562  0857               	movf	___flmul@temp,w
  5373  0563  00C7               	movwf	??___flmul
  5374  0564  0858               	movf	___flmul@temp+1,w
  5375  0565  00C8               	movwf	??___flmul+1
  5376  0566  01C9               	clrf	??___flmul+2
  5377  0567  01CA               	clrf	??___flmul+3
  5378  0568  0847               	movf	??___flmul,w
  5379  0569  07CE               	addwf	___flmul@grs,f
  5380  056A  0848               	movf	??___flmul+1,w
  5381  056B  1103               	clrz
  5382  056C  1803               	skipnc
  5383  056D  3E01               	addlw	1
  5384  056E  1903               	skipnz
  5385  056F  2D71               	goto	u4861
  5386  0570  07CF               	addwf	___flmul@grs+1,f
  5387  0571                     u4861:
  5388  0571  0849               	movf	??___flmul+2,w
  5389  0572  1103               	clrz
  5390  0573  1803               	skipnc
  5391  0574  3E01               	addlw	1
  5392  0575  1903               	skipnz
  5393  0576  2D78               	goto	u4862
  5394  0577  07D0               	addwf	___flmul@grs+2,f
  5395  0578                     u4862:
  5396  0578  084A               	movf	??___flmul+3,w
  5397  0579  1103               	clrz
  5398  057A  1803               	skipnc
  5399  057B  3E01               	addlw	1
  5400  057C  1903               	skipnz
  5401  057D  2D7F               	goto	u4863
  5402  057E  07D1               	addwf	___flmul@grs+3,f
  5403  057F                     u4863:
  5404  057F                     l3350:
  5405  057F  083F               	movf	___flmul@b,w
  5406  0580  00C7               	movwf	??___flmul
  5407  0581  0847               	movf	??___flmul,w
  5408  0582  00F2               	movwf	__Umul8_16@multiplicand
  5409  0583  0844               	movf	___flmul@a+1,w
  5410  0584  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5411  0589  0873               	movf	?__Umul8_16+1,w
  5412  058A  1283               	bcf	3,5	;RP0=0, select bank0
  5413  058B  1303               	bcf	3,6	;RP1=0, select bank0
  5414  058C  00D8               	movwf	___flmul@temp+1
  5415  058D  0872               	movf	?__Umul8_16,w
  5416  058E  00D7               	movwf	___flmul@temp
  5417  058F                     l3352:
  5418  058F  0857               	movf	___flmul@temp,w
  5419  0590  00C7               	movwf	??___flmul
  5420  0591  0858               	movf	___flmul@temp+1,w
  5421  0592  00C8               	movwf	??___flmul+1
  5422  0593  01C9               	clrf	??___flmul+2
  5423  0594  01CA               	clrf	??___flmul+3
  5424  0595  0847               	movf	??___flmul,w
  5425  0596  07CE               	addwf	___flmul@grs,f
  5426  0597  0848               	movf	??___flmul+1,w
  5427  0598  1103               	clrz
  5428  0599  1803               	skipnc
  5429  059A  3E01               	addlw	1
  5430  059B  1903               	skipnz
  5431  059C  2D9E               	goto	u4871
  5432  059D  07CF               	addwf	___flmul@grs+1,f
  5433  059E                     u4871:
  5434  059E  0849               	movf	??___flmul+2,w
  5435  059F  1103               	clrz
  5436  05A0  1803               	skipnc
  5437  05A1  3E01               	addlw	1
  5438  05A2  1903               	skipnz
  5439  05A3  2DA5               	goto	u4872
  5440  05A4  07D0               	addwf	___flmul@grs+2,f
  5441  05A5                     u4872:
  5442  05A5  084A               	movf	??___flmul+3,w
  5443  05A6  1103               	clrz
  5444  05A7  1803               	skipnc
  5445  05A8  3E01               	addlw	1
  5446  05A9  1903               	skipnz
  5447  05AA  2DAC               	goto	u4873
  5448  05AB  07D1               	addwf	___flmul@grs+3,f
  5449  05AC                     u4873:
  5450  05AC                     l3354:
  5451  05AC  3008               	movlw	8
  5452  05AD  00C7               	movwf	??___flmul
  5453  05AE                     u4885:
  5454  05AE  1003               	clrc
  5455  05AF  0DCE               	rlf	___flmul@grs,f
  5456  05B0  0DCF               	rlf	___flmul@grs+1,f
  5457  05B1  0DD0               	rlf	___flmul@grs+2,f
  5458  05B2  0DD1               	rlf	___flmul@grs+3,f
  5459  05B3  0BC7               	decfsz	??___flmul,f
  5460  05B4  2DAE               	goto	u4885
  5461  05B5  083F               	movf	___flmul@b,w
  5462  05B6  00C7               	movwf	??___flmul
  5463  05B7  0847               	movf	??___flmul,w
  5464  05B8  00F2               	movwf	__Umul8_16@multiplicand
  5465  05B9  0843               	movf	___flmul@a,w
  5466  05BA  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5467  05BF  0873               	movf	?__Umul8_16+1,w
  5468  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  5469  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  5470  05C2  00D8               	movwf	___flmul@temp+1
  5471  05C3  0872               	movf	?__Umul8_16,w
  5472  05C4  00D7               	movwf	___flmul@temp
  5473  05C5                     l3356:
  5474  05C5  0857               	movf	___flmul@temp,w
  5475  05C6  00C7               	movwf	??___flmul
  5476  05C7  0858               	movf	___flmul@temp+1,w
  5477  05C8  00C8               	movwf	??___flmul+1
  5478  05C9  01C9               	clrf	??___flmul+2
  5479  05CA  01CA               	clrf	??___flmul+3
  5480  05CB  0847               	movf	??___flmul,w
  5481  05CC  07CE               	addwf	___flmul@grs,f
  5482  05CD  0848               	movf	??___flmul+1,w
  5483  05CE  1103               	clrz
  5484  05CF  1803               	skipnc
  5485  05D0  3E01               	addlw	1
  5486  05D1  1903               	skipnz
  5487  05D2  2DD4               	goto	u4891
  5488  05D3  07CF               	addwf	___flmul@grs+1,f
  5489  05D4                     u4891:
  5490  05D4  0849               	movf	??___flmul+2,w
  5491  05D5  1103               	clrz
  5492  05D6  1803               	skipnc
  5493  05D7  3E01               	addlw	1
  5494  05D8  1903               	skipnz
  5495  05D9  2DDB               	goto	u4892
  5496  05DA  07D0               	addwf	___flmul@grs+2,f
  5497  05DB                     u4892:
  5498  05DB  084A               	movf	??___flmul+3,w
  5499  05DC  1103               	clrz
  5500  05DD  1803               	skipnc
  5501  05DE  3E01               	addlw	1
  5502  05DF  1903               	skipnz
  5503  05E0  2DE2               	goto	u4893
  5504  05E1  07D1               	addwf	___flmul@grs+3,f
  5505  05E2                     u4893:
  5506  05E2                     l3358:
  5507  05E2  0840               	movf	___flmul@b+1,w
  5508  05E3  00C7               	movwf	??___flmul
  5509  05E4  0847               	movf	??___flmul,w
  5510  05E5  00F2               	movwf	__Umul8_16@multiplicand
  5511  05E6  0845               	movf	___flmul@a+2,w
  5512  05E7  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5513  05EC  0873               	movf	?__Umul8_16+1,w
  5514  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  5515  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  5516  05EF  00D8               	movwf	___flmul@temp+1
  5517  05F0  0872               	movf	?__Umul8_16,w
  5518  05F1  00D7               	movwf	___flmul@temp
  5519  05F2  0857               	movf	___flmul@temp,w
  5520  05F3  00C7               	movwf	??___flmul
  5521  05F4  0858               	movf	___flmul@temp+1,w
  5522  05F5  00C8               	movwf	??___flmul+1
  5523  05F6  01C9               	clrf	??___flmul+2
  5524  05F7  01CA               	clrf	??___flmul+3
  5525  05F8  0847               	movf	??___flmul,w
  5526  05F9  07D3               	addwf	___flmul@prod,f
  5527  05FA  0848               	movf	??___flmul+1,w
  5528  05FB  1103               	clrz
  5529  05FC  1803               	skipnc
  5530  05FD  3E01               	addlw	1
  5531  05FE  1903               	skipnz
  5532  05FF  2E01               	goto	u4901
  5533  0600  07D4               	addwf	___flmul@prod+1,f
  5534  0601                     u4901:
  5535  0601  0849               	movf	??___flmul+2,w
  5536  0602  1103               	clrz
  5537  0603  1803               	skipnc
  5538  0604  3E01               	addlw	1
  5539  0605  1903               	skipnz
  5540  0606  2E08               	goto	u4902
  5541  0607  07D5               	addwf	___flmul@prod+2,f
  5542  0608                     u4902:
  5543  0608  084A               	movf	??___flmul+3,w
  5544  0609  1103               	clrz
  5545  060A  1803               	skipnc
  5546  060B  3E01               	addlw	1
  5547  060C  1903               	skipnz
  5548  060D  2E0F               	goto	u4903
  5549  060E  07D6               	addwf	___flmul@prod+3,f
  5550  060F                     u4903:
  5551  060F                     l3360:
  5552  060F  0841               	movf	___flmul@b+2,w
  5553  0610  00C7               	movwf	??___flmul
  5554  0611  0847               	movf	??___flmul,w
  5555  0612  00F2               	movwf	__Umul8_16@multiplicand
  5556  0613  0844               	movf	___flmul@a+1,w
  5557  0614  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5558  0619  0873               	movf	?__Umul8_16+1,w
  5559  061A  1283               	bcf	3,5	;RP0=0, select bank0
  5560  061B  1303               	bcf	3,6	;RP1=0, select bank0
  5561  061C  00D8               	movwf	___flmul@temp+1
  5562  061D  0872               	movf	?__Umul8_16,w
  5563  061E  00D7               	movwf	___flmul@temp
  5564  061F                     l3362:
  5565  061F  0857               	movf	___flmul@temp,w
  5566  0620  00C7               	movwf	??___flmul
  5567  0621  0858               	movf	___flmul@temp+1,w
  5568  0622  00C8               	movwf	??___flmul+1
  5569  0623  01C9               	clrf	??___flmul+2
  5570  0624  01CA               	clrf	??___flmul+3
  5571  0625  0847               	movf	??___flmul,w
  5572  0626  07D3               	addwf	___flmul@prod,f
  5573  0627  0848               	movf	??___flmul+1,w
  5574  0628  1103               	clrz
  5575  0629  1803               	skipnc
  5576  062A  3E01               	addlw	1
  5577  062B  1903               	skipnz
  5578  062C  2E2E               	goto	u4911
  5579  062D  07D4               	addwf	___flmul@prod+1,f
  5580  062E                     u4911:
  5581  062E  0849               	movf	??___flmul+2,w
  5582  062F  1103               	clrz
  5583  0630  1803               	skipnc
  5584  0631  3E01               	addlw	1
  5585  0632  1903               	skipnz
  5586  0633  2E35               	goto	u4912
  5587  0634  07D5               	addwf	___flmul@prod+2,f
  5588  0635                     u4912:
  5589  0635  084A               	movf	??___flmul+3,w
  5590  0636  1103               	clrz
  5591  0637  1803               	skipnc
  5592  0638  3E01               	addlw	1
  5593  0639  1903               	skipnz
  5594  063A  2E3C               	goto	u4913
  5595  063B  07D6               	addwf	___flmul@prod+3,f
  5596  063C                     u4913:
  5597  063C  0841               	movf	___flmul@b+2,w
  5598  063D  00C7               	movwf	??___flmul
  5599  063E  0847               	movf	??___flmul,w
  5600  063F  00F2               	movwf	__Umul8_16@multiplicand
  5601  0640  0845               	movf	___flmul@a+2,w
  5602  0641  160A  118A  279F  120A  118A  	fcall	__Umul8_16
  5603  0646  0873               	movf	?__Umul8_16+1,w
  5604  0647  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0648  1303               	bcf	3,6	;RP1=0, select bank0
  5606  0649  00D8               	movwf	___flmul@temp+1
  5607  064A  0872               	movf	?__Umul8_16,w
  5608  064B  00D7               	movwf	___flmul@temp
  5609  064C                     l3364:
  5610  064C  0857               	movf	___flmul@temp,w
  5611  064D  00C7               	movwf	??___flmul
  5612  064E  0858               	movf	___flmul@temp+1,w
  5613  064F  00C8               	movwf	??___flmul+1
  5614  0650  01C9               	clrf	??___flmul+2
  5615  0651  01CA               	clrf	??___flmul+3
  5616  0652  3008               	movlw	8
  5617  0653                     u4925:
  5618  0653  1003               	clrc
  5619  0654  0DC7               	rlf	??___flmul,f
  5620  0655  0DC8               	rlf	??___flmul+1,f
  5621  0656  0DC9               	rlf	??___flmul+2,f
  5622  0657  0DCA               	rlf	??___flmul+3,f
  5623  0658                     u4920:
  5624  0658  3EFF               	addlw	-1
  5625  0659  1D03               	skipz
  5626  065A  2E53               	goto	u4925
  5627  065B  0847               	movf	??___flmul,w
  5628  065C  07D3               	addwf	___flmul@prod,f
  5629  065D  0848               	movf	??___flmul+1,w
  5630  065E  1103               	clrz
  5631  065F  1803               	skipnc
  5632  0660  3E01               	addlw	1
  5633  0661  1903               	skipnz
  5634  0662  2E64               	goto	u4931
  5635  0663  07D4               	addwf	___flmul@prod+1,f
  5636  0664                     u4931:
  5637  0664  0849               	movf	??___flmul+2,w
  5638  0665  1103               	clrz
  5639  0666  1803               	skipnc
  5640  0667  3E01               	addlw	1
  5641  0668  1903               	skipnz
  5642  0669  2E6B               	goto	u4932
  5643  066A  07D5               	addwf	___flmul@prod+2,f
  5644  066B                     u4932:
  5645  066B  084A               	movf	??___flmul+3,w
  5646  066C  1103               	clrz
  5647  066D  1803               	skipnc
  5648  066E  3E01               	addlw	1
  5649  066F  1903               	skipnz
  5650  0670  2E72               	goto	u4933
  5651  0671  07D6               	addwf	___flmul@prod+3,f
  5652  0672                     u4933:
  5653  0672                     l3366:
  5654  0672  084E               	movf	___flmul@grs,w
  5655  0673  00C7               	movwf	??___flmul
  5656  0674  084F               	movf	___flmul@grs+1,w
  5657  0675  00C8               	movwf	??___flmul+1
  5658  0676  0850               	movf	___flmul@grs+2,w
  5659  0677  00C9               	movwf	??___flmul+2
  5660  0678  0851               	movf	___flmul@grs+3,w
  5661  0679  00CA               	movwf	??___flmul+3
  5662  067A  3018               	movlw	24
  5663  067B                     u4945:
  5664  067B  1003               	clrc
  5665  067C  0CCA               	rrf	??___flmul+3,f
  5666  067D  0CC9               	rrf	??___flmul+2,f
  5667  067E  0CC8               	rrf	??___flmul+1,f
  5668  067F  0CC7               	rrf	??___flmul,f
  5669  0680                     u4940:
  5670  0680  3EFF               	addlw	-1
  5671  0681  1D03               	skipz
  5672  0682  2E7B               	goto	u4945
  5673  0683  0847               	movf	??___flmul,w
  5674  0684  07D3               	addwf	___flmul@prod,f
  5675  0685  0848               	movf	??___flmul+1,w
  5676  0686  1103               	clrz
  5677  0687  1803               	skipnc
  5678  0688  3E01               	addlw	1
  5679  0689  1903               	skipnz
  5680  068A  2E8C               	goto	u4951
  5681  068B  07D4               	addwf	___flmul@prod+1,f
  5682  068C                     u4951:
  5683  068C  0849               	movf	??___flmul+2,w
  5684  068D  1103               	clrz
  5685  068E  1803               	skipnc
  5686  068F  3E01               	addlw	1
  5687  0690  1903               	skipnz
  5688  0691  2E93               	goto	u4952
  5689  0692  07D5               	addwf	___flmul@prod+2,f
  5690  0693                     u4952:
  5691  0693  084A               	movf	??___flmul+3,w
  5692  0694  1103               	clrz
  5693  0695  1803               	skipnc
  5694  0696  3E01               	addlw	1
  5695  0697  1903               	skipnz
  5696  0698  2E9A               	goto	u4953
  5697  0699  07D6               	addwf	___flmul@prod+3,f
  5698  069A                     u4953:
  5699  069A                     l3368:
  5700  069A  3008               	movlw	8
  5701  069B  00C7               	movwf	??___flmul
  5702  069C                     u4965:
  5703  069C  1003               	clrc
  5704  069D  0DCE               	rlf	___flmul@grs,f
  5705  069E  0DCF               	rlf	___flmul@grs+1,f
  5706  069F  0DD0               	rlf	___flmul@grs+2,f
  5707  06A0  0DD1               	rlf	___flmul@grs+3,f
  5708  06A1  0BC7               	decfsz	??___flmul,f
  5709  06A2  2E9C               	goto	u4965
  5710  06A3                     l3370:
  5711  06A3  0852               	movf	___flmul@bexp,w
  5712  06A4  074D               	addwf	___flmul@aexp,w
  5713  06A5  00C7               	movwf	??___flmul
  5714  06A6  01C8               	clrf	??___flmul+1
  5715  06A7  0DC8               	rlf	??___flmul+1,f
  5716  06A8  0847               	movf	??___flmul,w
  5717  06A9  3E82               	addlw	130
  5718  06AA  00D7               	movwf	___flmul@temp
  5719  06AB  0848               	movf	??___flmul+1,w
  5720  06AC  1803               	skipnc
  5721  06AD  3E01               	addlw	1
  5722  06AE  3EFF               	addlw	255
  5723  06AF  00D8               	movwf	___flmul@temp+1
  5724  06B0  2ECE               	goto	l3382
  5725  06B1                     l3372:
  5726  06B1  3001               	movlw	1
  5727  06B2  00C7               	movwf	??___flmul
  5728  06B3                     u4975:
  5729  06B3  1003               	clrc
  5730  06B4  0DD3               	rlf	___flmul@prod,f
  5731  06B5  0DD4               	rlf	___flmul@prod+1,f
  5732  06B6  0DD5               	rlf	___flmul@prod+2,f
  5733  06B7  0DD6               	rlf	___flmul@prod+3,f
  5734  06B8  0BC7               	decfsz	??___flmul,f
  5735  06B9  2EB3               	goto	u4975
  5736  06BA                     l3374:
  5737  06BA  1FD1               	btfss	___flmul@grs+3,7
  5738  06BB  2EBD               	goto	u4981
  5739  06BC  2EBE               	goto	u4980
  5740  06BD                     u4981:
  5741  06BD  2EBF               	goto	l3378
  5742  06BE                     u4980:
  5743  06BE                     l3376:
  5744  06BE  1453               	bsf	___flmul@prod,0
  5745  06BF                     l3378:
  5746  06BF  3001               	movlw	1
  5747  06C0  00C7               	movwf	??___flmul
  5748  06C1                     u4995:
  5749  06C1  1003               	clrc
  5750  06C2  0DCE               	rlf	___flmul@grs,f
  5751  06C3  0DCF               	rlf	___flmul@grs+1,f
  5752  06C4  0DD0               	rlf	___flmul@grs+2,f
  5753  06C5  0DD1               	rlf	___flmul@grs+3,f
  5754  06C6  0BC7               	decfsz	??___flmul,f
  5755  06C7  2EC1               	goto	u4995
  5756  06C8                     l3380:
  5757  06C8  30FF               	movlw	255
  5758  06C9  07D7               	addwf	___flmul@temp,f
  5759  06CA  1803               	skipnc
  5760  06CB  0AD8               	incf	___flmul@temp+1,f
  5761  06CC  30FF               	movlw	255
  5762  06CD  07D8               	addwf	___flmul@temp+1,f
  5763  06CE                     l3382:
  5764  06CE  1FD5               	btfss	___flmul@prod+2,7
  5765  06CF  2ED1               	goto	u5001
  5766  06D0  2ED2               	goto	u5000
  5767  06D1                     u5001:
  5768  06D1  2EB1               	goto	l3372
  5769  06D2                     u5000:
  5770  06D2                     l3384:
  5771  06D2  01CD               	clrf	___flmul@aexp
  5772  06D3                     l3386:
  5773  06D3  1FD1               	btfss	___flmul@grs+3,7
  5774  06D4  2ED6               	goto	u5011
  5775  06D5  2ED7               	goto	u5010
  5776  06D6                     u5011:
  5777  06D6  2EF3               	goto	l3394
  5778  06D7                     u5010:
  5779  06D7                     l3388:
  5780  06D7  30FF               	movlw	255
  5781  06D8  054E               	andwf	___flmul@grs,w
  5782  06D9  00C7               	movwf	??___flmul
  5783  06DA  30FF               	movlw	255
  5784  06DB  054F               	andwf	___flmul@grs+1,w
  5785  06DC  00C8               	movwf	??___flmul+1
  5786  06DD  30FF               	movlw	255
  5787  06DE  0550               	andwf	___flmul@grs+2,w
  5788  06DF  00C9               	movwf	??___flmul+2
  5789  06E0  307F               	movlw	127
  5790  06E1  0551               	andwf	___flmul@grs+3,w
  5791  06E2  00CA               	movwf	??___flmul+3
  5792  06E3  084A               	movf	??___flmul+3,w
  5793  06E4  0449               	iorwf	??___flmul+2,w
  5794  06E5  0448               	iorwf	??___flmul+1,w
  5795  06E6  0447               	iorwf	??___flmul,w
  5796  06E7  1903               	skipnz
  5797  06E8  2EEA               	goto	u5021
  5798  06E9  2EEB               	goto	u5020
  5799  06EA                     u5021:
  5800  06EA  2EEE               	goto	l703
  5801  06EB                     u5020:
  5802  06EB                     l3390:
  5803  06EB  01CD               	clrf	___flmul@aexp
  5804  06EC  0ACD               	incf	___flmul@aexp,f
  5805  06ED  2EF3               	goto	l3394
  5806  06EE                     l703:
  5807  06EE  1C53               	btfss	___flmul@prod,0
  5808  06EF  2EF1               	goto	u5031
  5809  06F0  2EF2               	goto	u5030
  5810  06F1                     u5031:
  5811  06F1  2EF3               	goto	l3394
  5812  06F2                     u5030:
  5813  06F2  2EEB               	goto	l3390
  5814  06F3                     l3394:
  5815  06F3  084D               	movf	___flmul@aexp,w
  5816  06F4  1903               	btfsc	3,2
  5817  06F5  2EF7               	goto	u5041
  5818  06F6  2EF8               	goto	u5040
  5819  06F7                     u5041:
  5820  06F7  2F29               	goto	l3404
  5821  06F8                     u5040:
  5822  06F8                     l3396:
  5823  06F8  3001               	movlw	1
  5824  06F9  07D3               	addwf	___flmul@prod,f
  5825  06FA  3000               	movlw	0
  5826  06FB  1803               	skipnc
  5827  06FC  3001               	movlw	1
  5828  06FD  07D4               	addwf	___flmul@prod+1,f
  5829  06FE  3000               	movlw	0
  5830  06FF  1803               	skipnc
  5831  0700  3001               	movlw	1
  5832  0701  07D5               	addwf	___flmul@prod+2,f
  5833  0702  3000               	movlw	0
  5834  0703  1803               	skipnc
  5835  0704  3001               	movlw	1
  5836  0705  07D6               	addwf	___flmul@prod+3,f
  5837  0706                     l3398:
  5838  0706  1C56               	btfss	___flmul@prod+3,0
  5839  0707  2F09               	goto	u5051
  5840  0708  2F0A               	goto	u5050
  5841  0709                     u5051:
  5842  0709  2F29               	goto	l3404
  5843  070A                     u5050:
  5844  070A                     l3400:
  5845  070A  0853               	movf	___flmul@prod,w
  5846  070B  00C7               	movwf	??___flmul
  5847  070C  0854               	movf	___flmul@prod+1,w
  5848  070D  00C8               	movwf	??___flmul+1
  5849  070E  0855               	movf	___flmul@prod+2,w
  5850  070F  00C9               	movwf	??___flmul+2
  5851  0710  0856               	movf	___flmul@prod+3,w
  5852  0711  00CA               	movwf	??___flmul+3
  5853  0712  3001               	movlw	1
  5854  0713  00CB               	movwf	??___flmul+4
  5855  0714                     u5065:
  5856  0714  0D4A               	rlf	??___flmul+3,w
  5857  0715  0CCA               	rrf	??___flmul+3,f
  5858  0716  0CC9               	rrf	??___flmul+2,f
  5859  0717  0CC8               	rrf	??___flmul+1,f
  5860  0718  0CC7               	rrf	??___flmul,f
  5861  0719                     u5060:
  5862  0719  0BCB               	decfsz	??___flmul+4,f
  5863  071A  2F14               	goto	u5065
  5864  071B  084A               	movf	??___flmul+3,w
  5865  071C  00D6               	movwf	___flmul@prod+3
  5866  071D  0849               	movf	??___flmul+2,w
  5867  071E  00D5               	movwf	___flmul@prod+2
  5868  071F  0848               	movf	??___flmul+1,w
  5869  0720  00D4               	movwf	___flmul@prod+1
  5870  0721  0847               	movf	??___flmul,w
  5871  0722  00D3               	movwf	___flmul@prod
  5872  0723                     l3402:
  5873  0723  3001               	movlw	1
  5874  0724  07D7               	addwf	___flmul@temp,f
  5875  0725  1803               	skipnc
  5876  0726  0AD8               	incf	___flmul@temp+1,f
  5877  0727  3000               	movlw	0
  5878  0728  07D8               	addwf	___flmul@temp+1,f
  5879  0729                     l3404:
  5880  0729  0858               	movf	___flmul@temp+1,w
  5881  072A  3A80               	xorlw	128
  5882  072B  00FF               	movwf	btemp+1
  5883  072C  3080               	movlw	128
  5884  072D  027F               	subwf	btemp+1,w
  5885  072E  1D03               	skipz
  5886  072F  2F32               	goto	u5075
  5887  0730  30FF               	movlw	255
  5888  0731  0257               	subwf	___flmul@temp,w
  5889  0732                     u5075:
  5890  0732  1C03               	skipc
  5891  0733  2F35               	goto	u5071
  5892  0734  2F36               	goto	u5070
  5893  0735                     u5071:
  5894  0735  2F41               	goto	l3408
  5895  0736                     u5070:
  5896  0736                     l3406:
  5897  0736  307F               	movlw	127
  5898  0737  1283               	bcf	3,5	;RP0=0, select bank0
  5899  0738  1303               	bcf	3,6	;RP1=0, select bank0
  5900  0739  00D6               	movwf	___flmul@prod+3
  5901  073A  3080               	movlw	128
  5902  073B  00D5               	movwf	___flmul@prod+2
  5903  073C  3000               	movlw	0
  5904  073D  00D4               	movwf	___flmul@prod+1
  5905  073E  3000               	movlw	0
  5906  073F  00D3               	movwf	___flmul@prod
  5907  0740  2F76               	goto	l709
  5908  0741                     l3408:
  5909  0741  1283               	bcf	3,5	;RP0=0, select bank0
  5910  0742  1303               	bcf	3,6	;RP1=0, select bank0
  5911  0743  0858               	movf	___flmul@temp+1,w
  5912  0744  3A80               	xorlw	128
  5913  0745  00FF               	movwf	btemp+1
  5914  0746  3080               	movlw	128
  5915  0747  027F               	subwf	btemp+1,w
  5916  0748  1D03               	skipz
  5917  0749  2F4C               	goto	u5085
  5918  074A  3001               	movlw	1
  5919  074B  0257               	subwf	___flmul@temp,w
  5920  074C                     u5085:
  5921  074C  1803               	skipnc
  5922  074D  2F4F               	goto	u5081
  5923  074E  2F50               	goto	u5080
  5924  074F                     u5081:
  5925  074F  2F5C               	goto	l3414
  5926  0750                     u5080:
  5927  0750                     l3410:
  5928  0750  3000               	movlw	0
  5929  0751  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0752  1303               	bcf	3,6	;RP1=0, select bank0
  5931  0753  00D6               	movwf	___flmul@prod+3
  5932  0754  3000               	movlw	0
  5933  0755  00D5               	movwf	___flmul@prod+2
  5934  0756  3000               	movlw	0
  5935  0757  00D4               	movwf	___flmul@prod+1
  5936  0758  3000               	movlw	0
  5937  0759  00D3               	movwf	___flmul@prod
  5938  075A                     l3412:
  5939  075A  01CC               	clrf	___flmul@sign
  5940  075B  2F76               	goto	l709
  5941  075C                     l3414:
  5942  075C  1283               	bcf	3,5	;RP0=0, select bank0
  5943  075D  1303               	bcf	3,6	;RP1=0, select bank0
  5944  075E  0857               	movf	___flmul@temp,w
  5945  075F  00C7               	movwf	??___flmul
  5946  0760  0847               	movf	??___flmul,w
  5947  0761  00D2               	movwf	___flmul@bexp
  5948  0762  30FF               	movlw	255
  5949  0763  05D3               	andwf	___flmul@prod,f
  5950  0764  30FF               	movlw	255
  5951  0765  05D4               	andwf	___flmul@prod+1,f
  5952  0766  307F               	movlw	127
  5953  0767  05D5               	andwf	___flmul@prod+2,f
  5954  0768  3000               	movlw	0
  5955  0769  05D6               	andwf	___flmul@prod+3,f
  5956  076A                     l3416:
  5957  076A  1C52               	btfss	___flmul@bexp,0
  5958  076B  2F6D               	goto	u5091
  5959  076C  2F6E               	goto	u5090
  5960  076D                     u5091:
  5961  076D  2F6F               	goto	l3420
  5962  076E                     u5090:
  5963  076E                     l3418:
  5964  076E  17D5               	bsf	___flmul@prod+2,7
  5965  076F                     l3420:
  5966  076F  0852               	movf	___flmul@bexp,w
  5967  0770  00C7               	movwf	??___flmul
  5968  0771  1003               	clrc
  5969  0772  0C47               	rrf	??___flmul,w
  5970  0773  00C8               	movwf	??___flmul+1
  5971  0774  0848               	movf	??___flmul+1,w
  5972  0775  00D6               	movwf	___flmul@prod+3
  5973  0776                     l709:
  5974  0776  084C               	movf	___flmul@sign,w
  5975  0777  00C7               	movwf	??___flmul
  5976  0778  0847               	movf	??___flmul,w
  5977  0779  04D6               	iorwf	___flmul@prod+3,f
  5978  077A                     l3422:
  5979  077A  0856               	movf	___flmul@prod+3,w
  5980  077B  00C2               	movwf	?___flmul+3
  5981  077C  0855               	movf	___flmul@prod+2,w
  5982  077D  00C1               	movwf	?___flmul+2
  5983  077E  0854               	movf	___flmul@prod+1,w
  5984  077F  00C0               	movwf	?___flmul+1
  5985  0780  0853               	movf	___flmul@prod,w
  5986  0781  00BF               	movwf	?___flmul
  5987  0782                     l697:
  5988  0782  0008               	return
  5989  0783                     __end_of___flmul:
  5990                           
  5991                           	psect	text22
  5992  179F                     __ptext22:	
  5993 ;; *************** function __Umul8_16 *****************
  5994 ;; Defined at:
  5995 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  multiplier      1    wreg     unsigned char 
  5998 ;;  multiplicand    1    2[COMMON] unsigned char 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6001 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6002 ;;  product         2    0[BANK0 ] unsigned int 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  2    2[COMMON] unsigned int 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6012 ;;      Params:         2       0       0       0       0
  6013 ;;      Locals:         0       5       0       0       0
  6014 ;;      Temps:          2       0       0       0       0
  6015 ;;      Totals:         4       5       0       0       0
  6016 ;;Total ram usage:        9 bytes
  6017 ;; Hardware stack levels used: 1
  6018 ;; Hardware stack levels required when called: 1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		___flmul
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           
  6027                           ;psect for function __Umul8_16
  6028  179F                     __Umul8_16:
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6032                           ;__Umul8_16@multiplier stored from wreg
  6033  179F  1283               	bcf	3,5	;RP0=0, select bank0
  6034  17A0  1303               	bcf	3,6	;RP1=0, select bank0
  6035  17A1  00A4               	movwf	__Umul8_16@multiplier
  6036  17A2                     l3000:
  6037  17A2  01A0               	clrf	__Umul8_16@product
  6038  17A3  01A1               	clrf	__Umul8_16@product+1
  6039  17A4                     l3002:
  6040  17A4  0872               	movf	__Umul8_16@multiplicand,w
  6041  17A5  00F4               	movwf	??__Umul8_16
  6042  17A6  01F5               	clrf	??__Umul8_16+1
  6043  17A7  0874               	movf	??__Umul8_16,w
  6044  17A8  00A2               	movwf	__Umul8_16@word_mpld
  6045  17A9  0875               	movf	??__Umul8_16+1,w
  6046  17AA  00A3               	movwf	__Umul8_16@word_mpld+1
  6047  17AB                     l3004:
  6048  17AB  1C24               	btfss	__Umul8_16@multiplier,0
  6049  17AC  2FAE               	goto	u4081
  6050  17AD  2FAF               	goto	u4080
  6051  17AE                     u4081:
  6052  17AE  2FB5               	goto	l716
  6053  17AF                     u4080:
  6054  17AF                     l3006:
  6055  17AF  0822               	movf	__Umul8_16@word_mpld,w
  6056  17B0  07A0               	addwf	__Umul8_16@product,f
  6057  17B1  1803               	skipnc
  6058  17B2  0AA1               	incf	__Umul8_16@product+1,f
  6059  17B3  0823               	movf	__Umul8_16@word_mpld+1,w
  6060  17B4  07A1               	addwf	__Umul8_16@product+1,f
  6061  17B5                     l716:
  6062  17B5  3001               	movlw	1
  6063  17B6                     u4095:
  6064  17B6  1003               	clrc
  6065  17B7  0DA2               	rlf	__Umul8_16@word_mpld,f
  6066  17B8  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6067  17B9  3EFF               	addlw	-1
  6068  17BA  1D03               	skipz
  6069  17BB  2FB6               	goto	u4095
  6070  17BC  1003               	clrc
  6071  17BD  0CA4               	rrf	__Umul8_16@multiplier,f
  6072  17BE                     l3008:
  6073  17BE  0824               	movf	__Umul8_16@multiplier,w
  6074  17BF  1D03               	btfss	3,2
  6075  17C0  2FC2               	goto	u4101
  6076  17C1  2FC3               	goto	u4100
  6077  17C2                     u4101:
  6078  17C2  2FAB               	goto	l3004
  6079  17C3                     u4100:
  6080  17C3                     l3010:
  6081  17C3  0821               	movf	__Umul8_16@product+1,w
  6082  17C4  00F3               	movwf	?__Umul8_16+1
  6083  17C5  0820               	movf	__Umul8_16@product,w
  6084  17C6  00F2               	movwf	?__Umul8_16
  6085  17C7                     l718:
  6086  17C7  0008               	return
  6087  17C8                     __end_of__Umul8_16:
  6088                           
  6089                           	psect	text23
  6090  0995                     __ptext23:	
  6091 ;; *************** function ___flge *****************
  6092 ;; Defined at:
  6093 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  ff1             4    2[COMMON] unsigned int 
  6096 ;;  ff2             4    6[COMMON] unsigned int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;		None               void
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6108 ;;      Params:         8       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0
  6110 ;;      Temps:          0       4       0       0       0
  6111 ;;      Totals:         8       4       0       0       0
  6112 ;;Total ram usage:       12 bytes
  6113 ;; Hardware stack levels used: 1
  6114 ;; Hardware stack levels required when called: 1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_ADC_convert
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function ___flge
  6124  0995                     ___flge:
  6125  0995                     l3082:	
  6126                           ;incstack = 0
  6127                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6128                           
  6129  0995  3000               	movlw	0
  6130  0996  0572               	andwf	___flge@ff1,w
  6131  0997  1283               	bcf	3,5	;RP0=0, select bank0
  6132  0998  1303               	bcf	3,6	;RP1=0, select bank0
  6133  0999  00A0               	movwf	??___flge
  6134  099A  3000               	movlw	0
  6135  099B  0573               	andwf	___flge@ff1+1,w
  6136  099C  00A1               	movwf	??___flge+1
  6137  099D  3080               	movlw	128
  6138  099E  0574               	andwf	___flge@ff1+2,w
  6139  099F  00A2               	movwf	??___flge+2
  6140  09A0  307F               	movlw	127
  6141  09A1  0575               	andwf	___flge@ff1+3,w
  6142  09A2  00A3               	movwf	??___flge+3
  6143  09A3  0823               	movf	??___flge+3,w
  6144  09A4  0422               	iorwf	??___flge+2,w
  6145  09A5  0421               	iorwf	??___flge+1,w
  6146  09A6  0420               	iorwf	??___flge,w
  6147  09A7  1D03               	skipz
  6148  09A8  29AA               	goto	u4271
  6149  09A9  29AB               	goto	u4270
  6150  09AA                     u4271:
  6151  09AA  29B3               	goto	l482
  6152  09AB                     u4270:
  6153  09AB                     l3084:
  6154  09AB  3000               	movlw	0
  6155  09AC  00F5               	movwf	___flge@ff1+3
  6156  09AD  3000               	movlw	0
  6157  09AE  00F4               	movwf	___flge@ff1+2
  6158  09AF  3000               	movlw	0
  6159  09B0  00F3               	movwf	___flge@ff1+1
  6160  09B1  3000               	movlw	0
  6161  09B2  00F2               	movwf	___flge@ff1
  6162  09B3                     l482:
  6163  09B3  3000               	movlw	0
  6164  09B4  0576               	andwf	___flge@ff2,w
  6165  09B5  00A0               	movwf	??___flge
  6166  09B6  3000               	movlw	0
  6167  09B7  0577               	andwf	___flge@ff2+1,w
  6168  09B8  00A1               	movwf	??___flge+1
  6169  09B9  3080               	movlw	128
  6170  09BA  0578               	andwf	___flge@ff2+2,w
  6171  09BB  00A2               	movwf	??___flge+2
  6172  09BC  307F               	movlw	127
  6173  09BD  0579               	andwf	___flge@ff2+3,w
  6174  09BE  00A3               	movwf	??___flge+3
  6175  09BF  0823               	movf	??___flge+3,w
  6176  09C0  0422               	iorwf	??___flge+2,w
  6177  09C1  0421               	iorwf	??___flge+1,w
  6178  09C2  0420               	iorwf	??___flge,w
  6179  09C3  1D03               	skipz
  6180  09C4  29C6               	goto	u4281
  6181  09C5  29C7               	goto	u4280
  6182  09C6                     u4281:
  6183  09C6  29CF               	goto	l3088
  6184  09C7                     u4280:
  6185  09C7                     l3086:
  6186  09C7  3000               	movlw	0
  6187  09C8  00F9               	movwf	___flge@ff2+3
  6188  09C9  3000               	movlw	0
  6189  09CA  00F8               	movwf	___flge@ff2+2
  6190  09CB  3000               	movlw	0
  6191  09CC  00F7               	movwf	___flge@ff2+1
  6192  09CD  3000               	movlw	0
  6193  09CE  00F6               	movwf	___flge@ff2
  6194  09CF                     l3088:
  6195  09CF  1FF5               	btfss	___flge@ff1+3,7
  6196  09D0  29D2               	goto	u4291
  6197  09D1  29D3               	goto	u4290
  6198  09D2                     u4291:
  6199  09D2  29F7               	goto	l3092
  6200  09D3                     u4290:
  6201  09D3                     l3090:
  6202  09D3  3000               	movlw	0
  6203  09D4  00A0               	movwf	??___flge
  6204  09D5  3000               	movlw	0
  6205  09D6  00A1               	movwf	??___flge+1
  6206  09D7  3000               	movlw	0
  6207  09D8  00A2               	movwf	??___flge+2
  6208  09D9  3080               	movlw	128
  6209  09DA  00A3               	movwf	??___flge+3
  6210  09DB  0872               	movf	___flge@ff1,w
  6211  09DC  02A0               	subwf	??___flge,f
  6212  09DD  0873               	movf	___flge@ff1+1,w
  6213  09DE  1C03               	skipc
  6214  09DF  0F73               	incfsz	___flge@ff1+1,w
  6215  09E0  29E2               	goto	u4301
  6216  09E1  29E3               	goto	u4302
  6217  09E2                     u4301:
  6218  09E2  02A1               	subwf	??___flge+1,f
  6219  09E3                     u4302:
  6220  09E3  0874               	movf	___flge@ff1+2,w
  6221  09E4  1C03               	skipc
  6222  09E5  0F74               	incfsz	___flge@ff1+2,w
  6223  09E6  29E8               	goto	u4303
  6224  09E7  29E9               	goto	u4304
  6225  09E8                     u4303:
  6226  09E8  02A2               	subwf	??___flge+2,f
  6227  09E9                     u4304:
  6228  09E9  0875               	movf	___flge@ff1+3,w
  6229  09EA  1C03               	skipc
  6230  09EB  0F75               	incfsz	___flge@ff1+3,w
  6231  09EC  29EE               	goto	u4305
  6232  09ED  29EF               	goto	u4306
  6233  09EE                     u4305:
  6234  09EE  02A3               	subwf	??___flge+3,f
  6235  09EF                     u4306:
  6236  09EF  0823               	movf	??___flge+3,w
  6237  09F0  00F5               	movwf	___flge@ff1+3
  6238  09F1  0822               	movf	??___flge+2,w
  6239  09F2  00F4               	movwf	___flge@ff1+2
  6240  09F3  0821               	movf	??___flge+1,w
  6241  09F4  00F3               	movwf	___flge@ff1+1
  6242  09F5  0820               	movf	??___flge,w
  6243  09F6  00F2               	movwf	___flge@ff1
  6244  09F7                     l3092:
  6245  09F7  1FF9               	btfss	___flge@ff2+3,7
  6246  09F8  29FA               	goto	u4311
  6247  09F9  29FB               	goto	u4310
  6248  09FA                     u4311:
  6249  09FA  2A1F               	goto	l485
  6250  09FB                     u4310:
  6251  09FB                     l3094:
  6252  09FB  3000               	movlw	0
  6253  09FC  00A0               	movwf	??___flge
  6254  09FD  3000               	movlw	0
  6255  09FE  00A1               	movwf	??___flge+1
  6256  09FF  3000               	movlw	0
  6257  0A00  00A2               	movwf	??___flge+2
  6258  0A01  3080               	movlw	128
  6259  0A02  00A3               	movwf	??___flge+3
  6260  0A03  0876               	movf	___flge@ff2,w
  6261  0A04  02A0               	subwf	??___flge,f
  6262  0A05  0877               	movf	___flge@ff2+1,w
  6263  0A06  1C03               	skipc
  6264  0A07  0F77               	incfsz	___flge@ff2+1,w
  6265  0A08  2A0A               	goto	u4321
  6266  0A09  2A0B               	goto	u4322
  6267  0A0A                     u4321:
  6268  0A0A  02A1               	subwf	??___flge+1,f
  6269  0A0B                     u4322:
  6270  0A0B  0878               	movf	___flge@ff2+2,w
  6271  0A0C  1C03               	skipc
  6272  0A0D  0F78               	incfsz	___flge@ff2+2,w
  6273  0A0E  2A10               	goto	u4323
  6274  0A0F  2A11               	goto	u4324
  6275  0A10                     u4323:
  6276  0A10  02A2               	subwf	??___flge+2,f
  6277  0A11                     u4324:
  6278  0A11  0879               	movf	___flge@ff2+3,w
  6279  0A12  1C03               	skipc
  6280  0A13  0F79               	incfsz	___flge@ff2+3,w
  6281  0A14  2A16               	goto	u4325
  6282  0A15  2A17               	goto	u4326
  6283  0A16                     u4325:
  6284  0A16  02A3               	subwf	??___flge+3,f
  6285  0A17                     u4326:
  6286  0A17  0823               	movf	??___flge+3,w
  6287  0A18  00F9               	movwf	___flge@ff2+3
  6288  0A19  0822               	movf	??___flge+2,w
  6289  0A1A  00F8               	movwf	___flge@ff2+2
  6290  0A1B  0821               	movf	??___flge+1,w
  6291  0A1C  00F7               	movwf	___flge@ff2+1
  6292  0A1D  0820               	movf	??___flge,w
  6293  0A1E  00F6               	movwf	___flge@ff2
  6294  0A1F                     l485:
  6295  0A1F  3080               	movlw	128
  6296  0A20  06F5               	xorwf	___flge@ff1+3,f
  6297  0A21  3080               	movlw	128
  6298  0A22  06F9               	xorwf	___flge@ff2+3,f
  6299  0A23  0879               	movf	___flge@ff2+3,w
  6300  0A24  0275               	subwf	___flge@ff1+3,w
  6301  0A25  1D03               	skipz
  6302  0A26  2A31               	goto	u4335
  6303  0A27  0878               	movf	___flge@ff2+2,w
  6304  0A28  0274               	subwf	___flge@ff1+2,w
  6305  0A29  1D03               	skipz
  6306  0A2A  2A31               	goto	u4335
  6307  0A2B  0877               	movf	___flge@ff2+1,w
  6308  0A2C  0273               	subwf	___flge@ff1+1,w
  6309  0A2D  1D03               	skipz
  6310  0A2E  2A31               	goto	u4335
  6311  0A2F  0876               	movf	___flge@ff2,w
  6312  0A30  0272               	subwf	___flge@ff1,w
  6313  0A31                     u4335:
  6314  0A31  1803               	skipnc
  6315  0A32  2A34               	goto	u4331
  6316  0A33  2A35               	goto	u4330
  6317  0A34                     u4331:
  6318  0A34  2A37               	goto	l3098
  6319  0A35                     u4330:
  6320  0A35                     l3096:
  6321  0A35  1003               	clrc
  6322  0A36  2A38               	goto	l486
  6323  0A37                     l3098:
  6324  0A37  1403               	setc
  6325  0A38                     l486:
  6326  0A38  0008               	return
  6327  0A39                     __end_of___flge:
  6328                           
  6329                           	psect	text24
  6330  0B9B                     __ptext24:	
  6331 ;; *************** function ___fldiv *****************
  6332 ;; Defined at:
  6333 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  a               4   23[BANK0 ] unsigned int 
  6336 ;;  b               4   27[BANK0 ] unsigned int 
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  grs             4   43[BANK0 ] unsigned long 
  6339 ;;  rem             4   36[BANK0 ] unsigned long 
  6340 ;;  new_exp         2   41[BANK0 ] int 
  6341 ;;  aexp            1   48[BANK0 ] unsigned char 
  6342 ;;  bexp            1   47[BANK0 ] unsigned char 
  6343 ;;  sign            1   40[BANK0 ] unsigned char 
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  4   23[BANK0 ] unsigned char 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0, btemp+1
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6353 ;;      Params:         0       8       0       0       0
  6354 ;;      Locals:         0      13       0       0       0
  6355 ;;      Temps:          0       5       0       0       0
  6356 ;;      Totals:         0      26       0       0       0
  6357 ;;Total ram usage:       26 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; Hardware stack levels required when called: 1
  6360 ;; This function calls:
  6361 ;;		Nothing
  6362 ;; This function is called by:
  6363 ;;		_ADC_convert
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function ___fldiv
  6369  0B9B                     ___fldiv:
  6370  0B9B                     l3144:	
  6371                           ;incstack = 0
  6372                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6373                           
  6374  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  6375  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  6376  0B9D  083E               	movf	___fldiv@b+3,w
  6377  0B9E  3980               	andlw	128
  6378  0B9F  00BF               	movwf	??___fldiv
  6379  0BA0  083F               	movf	??___fldiv,w
  6380  0BA1  00C8               	movwf	___fldiv@sign
  6381  0BA2                     l3146:
  6382  0BA2  083E               	movf	___fldiv@b+3,w
  6383  0BA3  00BF               	movwf	??___fldiv
  6384  0BA4  073F               	addwf	??___fldiv,w
  6385  0BA5  00C0               	movwf	??___fldiv+1
  6386  0BA6  0840               	movf	??___fldiv+1,w
  6387  0BA7  00CF               	movwf	___fldiv@bexp
  6388  0BA8                     l3148:
  6389  0BA8  1FBD               	btfss	___fldiv@b+2,7
  6390  0BA9  2BAB               	goto	u4441
  6391  0BAA  2BAC               	goto	u4440
  6392  0BAB                     u4441:
  6393  0BAB  2BAD               	goto	l3152
  6394  0BAC                     u4440:
  6395  0BAC                     l3150:
  6396  0BAC  144F               	bsf	___fldiv@bexp,0
  6397  0BAD                     l3152:
  6398  0BAD  084F               	movf	___fldiv@bexp,w
  6399  0BAE  1903               	btfsc	3,2
  6400  0BAF  2BB1               	goto	u4451
  6401  0BB0  2BB2               	goto	u4450
  6402  0BB1                     u4451:
  6403  0BB1  2BC2               	goto	l3162
  6404  0BB2                     u4450:
  6405  0BB2                     l3154:
  6406  0BB2  0A4F               	incf	___fldiv@bexp,w
  6407  0BB3  1D03               	btfss	3,2
  6408  0BB4  2BB6               	goto	u4461
  6409  0BB5  2BB7               	goto	u4460
  6410  0BB6                     u4461:
  6411  0BB6  2BBF               	goto	l3158
  6412  0BB7                     u4460:
  6413  0BB7                     l3156:
  6414  0BB7  3000               	movlw	0
  6415  0BB8  00BE               	movwf	___fldiv@b+3
  6416  0BB9  3000               	movlw	0
  6417  0BBA  00BD               	movwf	___fldiv@b+2
  6418  0BBB  3000               	movlw	0
  6419  0BBC  00BC               	movwf	___fldiv@b+1
  6420  0BBD  3000               	movlw	0
  6421  0BBE  00BB               	movwf	___fldiv@b
  6422  0BBF                     l3158:
  6423  0BBF  17BD               	bsf	___fldiv@b+2,7
  6424  0BC0                     l3160:
  6425  0BC0  01BE               	clrf	___fldiv@b+3
  6426  0BC1  2BCA               	goto	l3164
  6427  0BC2                     l3162:
  6428  0BC2  3000               	movlw	0
  6429  0BC3  00BE               	movwf	___fldiv@b+3
  6430  0BC4  3000               	movlw	0
  6431  0BC5  00BD               	movwf	___fldiv@b+2
  6432  0BC6  3000               	movlw	0
  6433  0BC7  00BC               	movwf	___fldiv@b+1
  6434  0BC8  3000               	movlw	0
  6435  0BC9  00BB               	movwf	___fldiv@b
  6436  0BCA                     l3164:
  6437  0BCA  083A               	movf	___fldiv@a+3,w
  6438  0BCB  3980               	andlw	128
  6439  0BCC  00BF               	movwf	??___fldiv
  6440  0BCD  083F               	movf	??___fldiv,w
  6441  0BCE  06C8               	xorwf	___fldiv@sign,f
  6442  0BCF                     l3166:
  6443  0BCF  083A               	movf	___fldiv@a+3,w
  6444  0BD0  00BF               	movwf	??___fldiv
  6445  0BD1  073F               	addwf	??___fldiv,w
  6446  0BD2  00C0               	movwf	??___fldiv+1
  6447  0BD3  0840               	movf	??___fldiv+1,w
  6448  0BD4  00D0               	movwf	___fldiv@aexp
  6449  0BD5                     l3168:
  6450  0BD5  1FB9               	btfss	___fldiv@a+2,7
  6451  0BD6  2BD8               	goto	u4471
  6452  0BD7  2BD9               	goto	u4470
  6453  0BD8                     u4471:
  6454  0BD8  2BDA               	goto	l3172
  6455  0BD9                     u4470:
  6456  0BD9                     l3170:
  6457  0BD9  1450               	bsf	___fldiv@aexp,0
  6458  0BDA                     l3172:
  6459  0BDA  0850               	movf	___fldiv@aexp,w
  6460  0BDB  1903               	btfsc	3,2
  6461  0BDC  2BDE               	goto	u4481
  6462  0BDD  2BDF               	goto	u4480
  6463  0BDE                     u4481:
  6464  0BDE  2BEF               	goto	l3182
  6465  0BDF                     u4480:
  6466  0BDF                     l3174:
  6467  0BDF  0A50               	incf	___fldiv@aexp,w
  6468  0BE0  1D03               	btfss	3,2
  6469  0BE1  2BE3               	goto	u4491
  6470  0BE2  2BE4               	goto	u4490
  6471  0BE3                     u4491:
  6472  0BE3  2BEC               	goto	l3178
  6473  0BE4                     u4490:
  6474  0BE4                     l3176:
  6475  0BE4  3000               	movlw	0
  6476  0BE5  00BA               	movwf	___fldiv@a+3
  6477  0BE6  3000               	movlw	0
  6478  0BE7  00B9               	movwf	___fldiv@a+2
  6479  0BE8  3000               	movlw	0
  6480  0BE9  00B8               	movwf	___fldiv@a+1
  6481  0BEA  3000               	movlw	0
  6482  0BEB  00B7               	movwf	___fldiv@a
  6483  0BEC                     l3178:
  6484  0BEC  17B9               	bsf	___fldiv@a+2,7
  6485  0BED                     l3180:
  6486  0BED  01BA               	clrf	___fldiv@a+3
  6487  0BEE  2BF7               	goto	l657
  6488  0BEF                     l3182:
  6489  0BEF  3000               	movlw	0
  6490  0BF0  00BA               	movwf	___fldiv@a+3
  6491  0BF1  3000               	movlw	0
  6492  0BF2  00B9               	movwf	___fldiv@a+2
  6493  0BF3  3000               	movlw	0
  6494  0BF4  00B8               	movwf	___fldiv@a+1
  6495  0BF5  3000               	movlw	0
  6496  0BF6  00B7               	movwf	___fldiv@a
  6497  0BF7                     l657:
  6498  0BF7  083A               	movf	___fldiv@a+3,w
  6499  0BF8  0439               	iorwf	___fldiv@a+2,w
  6500  0BF9  0438               	iorwf	___fldiv@a+1,w
  6501  0BFA  0437               	iorwf	___fldiv@a,w
  6502  0BFB  1D03               	skipz
  6503  0BFC  2BFE               	goto	u4501
  6504  0BFD  2BFF               	goto	u4500
  6505  0BFE                     u4501:
  6506  0BFE  2C18               	goto	l3192
  6507  0BFF                     u4500:
  6508  0BFF                     l3184:
  6509  0BFF  3000               	movlw	0
  6510  0C00  00BE               	movwf	___fldiv@b+3
  6511  0C01  3000               	movlw	0
  6512  0C02  00BD               	movwf	___fldiv@b+2
  6513  0C03  3000               	movlw	0
  6514  0C04  00BC               	movwf	___fldiv@b+1
  6515  0C05  3000               	movlw	0
  6516  0C06  00BB               	movwf	___fldiv@b
  6517  0C07  3080               	movlw	128
  6518  0C08  04BD               	iorwf	___fldiv@b+2,f
  6519  0C09  307F               	movlw	127
  6520  0C0A  04BE               	iorwf	___fldiv@b+3,f
  6521  0C0B                     l3186:
  6522  0C0B  0848               	movf	___fldiv@sign,w
  6523  0C0C  00BF               	movwf	??___fldiv
  6524  0C0D  083F               	movf	??___fldiv,w
  6525  0C0E  04BE               	iorwf	___fldiv@b+3,f
  6526  0C0F                     l3188:
  6527  0C0F  083E               	movf	___fldiv@b+3,w
  6528  0C10  00BA               	movwf	?___fldiv+3
  6529  0C11  083D               	movf	___fldiv@b+2,w
  6530  0C12  00B9               	movwf	?___fldiv+2
  6531  0C13  083C               	movf	___fldiv@b+1,w
  6532  0C14  00B8               	movwf	?___fldiv+1
  6533  0C15  083B               	movf	___fldiv@b,w
  6534  0C16  00B7               	movwf	?___fldiv
  6535  0C17  2D77               	goto	l659
  6536  0C18                     l3192:
  6537  0C18  084F               	movf	___fldiv@bexp,w
  6538  0C19  1D03               	btfss	3,2
  6539  0C1A  2C1C               	goto	u4511
  6540  0C1B  2C1D               	goto	u4510
  6541  0C1C                     u4511:
  6542  0C1C  2C26               	goto	l3198
  6543  0C1D                     u4510:
  6544  0C1D                     l3194:
  6545  0C1D  3000               	movlw	0
  6546  0C1E  00BA               	movwf	?___fldiv+3
  6547  0C1F  3000               	movlw	0
  6548  0C20  00B9               	movwf	?___fldiv+2
  6549  0C21  3000               	movlw	0
  6550  0C22  00B8               	movwf	?___fldiv+1
  6551  0C23  3000               	movlw	0
  6552  0C24  00B7               	movwf	?___fldiv
  6553  0C25  2D77               	goto	l659
  6554  0C26                     l3198:
  6555  0C26  084F               	movf	___fldiv@bexp,w
  6556  0C27  00BF               	movwf	??___fldiv
  6557  0C28  01C0               	clrf	??___fldiv+1
  6558  0C29  0840               	movf	??___fldiv+1,w
  6559  0C2A  00C2               	movwf	??___fldiv+3
  6560  0C2B  0850               	movf	___fldiv@aexp,w
  6561  0C2C  023F               	subwf	??___fldiv,w
  6562  0C2D  00C1               	movwf	??___fldiv+2
  6563  0C2E  1C03               	skipc
  6564  0C2F  03C2               	decf	??___fldiv+3,f
  6565  0C30  0841               	movf	??___fldiv+2,w
  6566  0C31  3E7F               	addlw	127
  6567  0C32  00C9               	movwf	___fldiv@new_exp
  6568  0C33  0842               	movf	??___fldiv+3,w
  6569  0C34  1803               	skipnc
  6570  0C35  3E01               	addlw	1
  6571  0C36  3E00               	addlw	0
  6572  0C37  00CA               	movwf	___fldiv@new_exp+1
  6573  0C38                     l3200:
  6574  0C38  083E               	movf	___fldiv@b+3,w
  6575  0C39  00C7               	movwf	___fldiv@rem+3
  6576  0C3A  083D               	movf	___fldiv@b+2,w
  6577  0C3B  00C6               	movwf	___fldiv@rem+2
  6578  0C3C  083C               	movf	___fldiv@b+1,w
  6579  0C3D  00C5               	movwf	___fldiv@rem+1
  6580  0C3E  083B               	movf	___fldiv@b,w
  6581  0C3F  00C4               	movwf	___fldiv@rem
  6582  0C40                     l3202:
  6583  0C40  3000               	movlw	0
  6584  0C41  00BE               	movwf	___fldiv@b+3
  6585  0C42  3000               	movlw	0
  6586  0C43  00BD               	movwf	___fldiv@b+2
  6587  0C44  3000               	movlw	0
  6588  0C45  00BC               	movwf	___fldiv@b+1
  6589  0C46  3000               	movlw	0
  6590  0C47  00BB               	movwf	___fldiv@b
  6591  0C48                     l3204:
  6592  0C48  3000               	movlw	0
  6593  0C49  00CE               	movwf	___fldiv@grs+3
  6594  0C4A  3000               	movlw	0
  6595  0C4B  00CD               	movwf	___fldiv@grs+2
  6596  0C4C  3000               	movlw	0
  6597  0C4D  00CC               	movwf	___fldiv@grs+1
  6598  0C4E  3000               	movlw	0
  6599  0C4F  00CB               	movwf	___fldiv@grs
  6600  0C50                     l3206:
  6601  0C50  01D0               	clrf	___fldiv@aexp
  6602  0C51  2C9C               	goto	l3226
  6603  0C52                     l3208:
  6604  0C52  0850               	movf	___fldiv@aexp,w
  6605  0C53  1903               	btfsc	3,2
  6606  0C54  2C56               	goto	u4521
  6607  0C55  2C57               	goto	u4520
  6608  0C56                     u4521:
  6609  0C56  2C77               	goto	l3218
  6610  0C57                     u4520:
  6611  0C57                     l3210:
  6612  0C57  3001               	movlw	1
  6613  0C58  00BF               	movwf	??___fldiv
  6614  0C59                     u4535:
  6615  0C59  1003               	clrc
  6616  0C5A  0DC4               	rlf	___fldiv@rem,f
  6617  0C5B  0DC5               	rlf	___fldiv@rem+1,f
  6618  0C5C  0DC6               	rlf	___fldiv@rem+2,f
  6619  0C5D  0DC7               	rlf	___fldiv@rem+3,f
  6620  0C5E  0BBF               	decfsz	??___fldiv,f
  6621  0C5F  2C59               	goto	u4535
  6622  0C60  3001               	movlw	1
  6623  0C61  00BF               	movwf	??___fldiv
  6624  0C62                     u4545:
  6625  0C62  1003               	clrc
  6626  0C63  0DBB               	rlf	___fldiv@b,f
  6627  0C64  0DBC               	rlf	___fldiv@b+1,f
  6628  0C65  0DBD               	rlf	___fldiv@b+2,f
  6629  0C66  0DBE               	rlf	___fldiv@b+3,f
  6630  0C67  0BBF               	decfsz	??___fldiv,f
  6631  0C68  2C62               	goto	u4545
  6632  0C69                     l3212:
  6633  0C69  1FCE               	btfss	___fldiv@grs+3,7
  6634  0C6A  2C6C               	goto	u4551
  6635  0C6B  2C6D               	goto	u4550
  6636  0C6C                     u4551:
  6637  0C6C  2C6E               	goto	l3216
  6638  0C6D                     u4550:
  6639  0C6D                     l3214:
  6640  0C6D  143B               	bsf	___fldiv@b,0
  6641  0C6E                     l3216:
  6642  0C6E  3001               	movlw	1
  6643  0C6F  00BF               	movwf	??___fldiv
  6644  0C70                     u4565:
  6645  0C70  1003               	clrc
  6646  0C71  0DCB               	rlf	___fldiv@grs,f
  6647  0C72  0DCC               	rlf	___fldiv@grs+1,f
  6648  0C73  0DCD               	rlf	___fldiv@grs+2,f
  6649  0C74  0DCE               	rlf	___fldiv@grs+3,f
  6650  0C75  0BBF               	decfsz	??___fldiv,f
  6651  0C76  2C70               	goto	u4565
  6652  0C77                     l3218:
  6653  0C77  083A               	movf	___fldiv@a+3,w
  6654  0C78  0247               	subwf	___fldiv@rem+3,w
  6655  0C79  1D03               	skipz
  6656  0C7A  2C85               	goto	u4575
  6657  0C7B  0839               	movf	___fldiv@a+2,w
  6658  0C7C  0246               	subwf	___fldiv@rem+2,w
  6659  0C7D  1D03               	skipz
  6660  0C7E  2C85               	goto	u4575
  6661  0C7F  0838               	movf	___fldiv@a+1,w
  6662  0C80  0245               	subwf	___fldiv@rem+1,w
  6663  0C81  1D03               	skipz
  6664  0C82  2C85               	goto	u4575
  6665  0C83  0837               	movf	___fldiv@a,w
  6666  0C84  0244               	subwf	___fldiv@rem,w
  6667  0C85                     u4575:
  6668  0C85  1C03               	skipc
  6669  0C86  2C88               	goto	u4571
  6670  0C87  2C89               	goto	u4570
  6671  0C88                     u4571:
  6672  0C88  2C98               	goto	l3224
  6673  0C89                     u4570:
  6674  0C89                     l3220:
  6675  0C89  174E               	bsf	___fldiv@grs+3,6
  6676  0C8A                     l3222:
  6677  0C8A  0837               	movf	___fldiv@a,w
  6678  0C8B  02C4               	subwf	___fldiv@rem,f
  6679  0C8C  0838               	movf	___fldiv@a+1,w
  6680  0C8D  1C03               	skipc
  6681  0C8E  0F38               	incfsz	___fldiv@a+1,w
  6682  0C8F  02C5               	subwf	___fldiv@rem+1,f
  6683  0C90  0839               	movf	___fldiv@a+2,w
  6684  0C91  1C03               	skipc
  6685  0C92  0F39               	incfsz	___fldiv@a+2,w
  6686  0C93  02C6               	subwf	___fldiv@rem+2,f
  6687  0C94  083A               	movf	___fldiv@a+3,w
  6688  0C95  1C03               	skipc
  6689  0C96  0F3A               	incfsz	___fldiv@a+3,w
  6690  0C97  02C7               	subwf	___fldiv@rem+3,f
  6691  0C98                     l3224:
  6692  0C98  3001               	movlw	1
  6693  0C99  00BF               	movwf	??___fldiv
  6694  0C9A  083F               	movf	??___fldiv,w
  6695  0C9B  07D0               	addwf	___fldiv@aexp,f
  6696  0C9C                     l3226:
  6697  0C9C  301A               	movlw	26
  6698  0C9D  0250               	subwf	___fldiv@aexp,w
  6699  0C9E  1C03               	skipc
  6700  0C9F  2CA1               	goto	u4581
  6701  0CA0  2CA2               	goto	u4580
  6702  0CA1                     u4581:
  6703  0CA1  2C52               	goto	l3208
  6704  0CA2                     u4580:
  6705  0CA2                     l3228:
  6706  0CA2  0847               	movf	___fldiv@rem+3,w
  6707  0CA3  0446               	iorwf	___fldiv@rem+2,w
  6708  0CA4  0445               	iorwf	___fldiv@rem+1,w
  6709  0CA5  0444               	iorwf	___fldiv@rem,w
  6710  0CA6  1903               	skipnz
  6711  0CA7  2CA9               	goto	u4591
  6712  0CA8  2CAA               	goto	u4590
  6713  0CA9                     u4591:
  6714  0CA9  2CC9               	goto	l3242
  6715  0CAA                     u4590:
  6716  0CAA                     l3230:
  6717  0CAA  144B               	bsf	___fldiv@grs,0
  6718  0CAB  2CC9               	goto	l3242
  6719  0CAC                     l3232:
  6720  0CAC  3001               	movlw	1
  6721  0CAD  00BF               	movwf	??___fldiv
  6722  0CAE                     u4605:
  6723  0CAE  1003               	clrc
  6724  0CAF  0DBB               	rlf	___fldiv@b,f
  6725  0CB0  0DBC               	rlf	___fldiv@b+1,f
  6726  0CB1  0DBD               	rlf	___fldiv@b+2,f
  6727  0CB2  0DBE               	rlf	___fldiv@b+3,f
  6728  0CB3  0BBF               	decfsz	??___fldiv,f
  6729  0CB4  2CAE               	goto	u4605
  6730  0CB5                     l3234:
  6731  0CB5  1FCE               	btfss	___fldiv@grs+3,7
  6732  0CB6  2CB8               	goto	u4611
  6733  0CB7  2CB9               	goto	u4610
  6734  0CB8                     u4611:
  6735  0CB8  2CBA               	goto	l3238
  6736  0CB9                     u4610:
  6737  0CB9                     l3236:
  6738  0CB9  143B               	bsf	___fldiv@b,0
  6739  0CBA                     l3238:
  6740  0CBA  3001               	movlw	1
  6741  0CBB  00BF               	movwf	??___fldiv
  6742  0CBC                     u4625:
  6743  0CBC  1003               	clrc
  6744  0CBD  0DCB               	rlf	___fldiv@grs,f
  6745  0CBE  0DCC               	rlf	___fldiv@grs+1,f
  6746  0CBF  0DCD               	rlf	___fldiv@grs+2,f
  6747  0CC0  0DCE               	rlf	___fldiv@grs+3,f
  6748  0CC1  0BBF               	decfsz	??___fldiv,f
  6749  0CC2  2CBC               	goto	u4625
  6750  0CC3                     l3240:
  6751  0CC3  30FF               	movlw	255
  6752  0CC4  07C9               	addwf	___fldiv@new_exp,f
  6753  0CC5  1803               	skipnc
  6754  0CC6  0ACA               	incf	___fldiv@new_exp+1,f
  6755  0CC7  30FF               	movlw	255
  6756  0CC8  07CA               	addwf	___fldiv@new_exp+1,f
  6757  0CC9                     l3242:
  6758  0CC9  1FBD               	btfss	___fldiv@b+2,7
  6759  0CCA  2CCC               	goto	u4631
  6760  0CCB  2CCD               	goto	u4630
  6761  0CCC                     u4631:
  6762  0CCC  2CAC               	goto	l3232
  6763  0CCD                     u4630:
  6764  0CCD                     l3244:
  6765  0CCD  01D0               	clrf	___fldiv@aexp
  6766  0CCE                     l3246:
  6767  0CCE  1FCE               	btfss	___fldiv@grs+3,7
  6768  0CCF  2CD1               	goto	u4641
  6769  0CD0  2CD2               	goto	u4640
  6770  0CD1                     u4641:
  6771  0CD1  2CEE               	goto	l3254
  6772  0CD2                     u4640:
  6773  0CD2                     l3248:
  6774  0CD2  30FF               	movlw	255
  6775  0CD3  054B               	andwf	___fldiv@grs,w
  6776  0CD4  00BF               	movwf	??___fldiv
  6777  0CD5  30FF               	movlw	255
  6778  0CD6  054C               	andwf	___fldiv@grs+1,w
  6779  0CD7  00C0               	movwf	??___fldiv+1
  6780  0CD8  30FF               	movlw	255
  6781  0CD9  054D               	andwf	___fldiv@grs+2,w
  6782  0CDA  00C1               	movwf	??___fldiv+2
  6783  0CDB  307F               	movlw	127
  6784  0CDC  054E               	andwf	___fldiv@grs+3,w
  6785  0CDD  00C2               	movwf	??___fldiv+3
  6786  0CDE  0842               	movf	??___fldiv+3,w
  6787  0CDF  0441               	iorwf	??___fldiv+2,w
  6788  0CE0  0440               	iorwf	??___fldiv+1,w
  6789  0CE1  043F               	iorwf	??___fldiv,w
  6790  0CE2  1903               	skipnz
  6791  0CE3  2CE5               	goto	u4651
  6792  0CE4  2CE6               	goto	u4650
  6793  0CE5                     u4651:
  6794  0CE5  2CE9               	goto	l673
  6795  0CE6                     u4650:
  6796  0CE6                     l3250:
  6797  0CE6  01D0               	clrf	___fldiv@aexp
  6798  0CE7  0AD0               	incf	___fldiv@aexp,f
  6799  0CE8  2CEE               	goto	l3254
  6800  0CE9                     l673:
  6801  0CE9  1C3B               	btfss	___fldiv@b,0
  6802  0CEA  2CEC               	goto	u4661
  6803  0CEB  2CED               	goto	u4660
  6804  0CEC                     u4661:
  6805  0CEC  2CEE               	goto	l3254
  6806  0CED                     u4660:
  6807  0CED  2CE6               	goto	l3250
  6808  0CEE                     l3254:
  6809  0CEE  0850               	movf	___fldiv@aexp,w
  6810  0CEF  1903               	btfsc	3,2
  6811  0CF0  2CF2               	goto	u4671
  6812  0CF1  2CF3               	goto	u4670
  6813  0CF2                     u4671:
  6814  0CF2  2D24               	goto	l3264
  6815  0CF3                     u4670:
  6816  0CF3                     l3256:
  6817  0CF3  3001               	movlw	1
  6818  0CF4  07BB               	addwf	___fldiv@b,f
  6819  0CF5  3000               	movlw	0
  6820  0CF6  1803               	skipnc
  6821  0CF7  3001               	movlw	1
  6822  0CF8  07BC               	addwf	___fldiv@b+1,f
  6823  0CF9  3000               	movlw	0
  6824  0CFA  1803               	skipnc
  6825  0CFB  3001               	movlw	1
  6826  0CFC  07BD               	addwf	___fldiv@b+2,f
  6827  0CFD  3000               	movlw	0
  6828  0CFE  1803               	skipnc
  6829  0CFF  3001               	movlw	1
  6830  0D00  07BE               	addwf	___fldiv@b+3,f
  6831  0D01                     l3258:
  6832  0D01  1C3E               	btfss	___fldiv@b+3,0
  6833  0D02  2D04               	goto	u4681
  6834  0D03  2D05               	goto	u4680
  6835  0D04                     u4681:
  6836  0D04  2D24               	goto	l3264
  6837  0D05                     u4680:
  6838  0D05                     l3260:
  6839  0D05  083B               	movf	___fldiv@b,w
  6840  0D06  00BF               	movwf	??___fldiv
  6841  0D07  083C               	movf	___fldiv@b+1,w
  6842  0D08  00C0               	movwf	??___fldiv+1
  6843  0D09  083D               	movf	___fldiv@b+2,w
  6844  0D0A  00C1               	movwf	??___fldiv+2
  6845  0D0B  083E               	movf	___fldiv@b+3,w
  6846  0D0C  00C2               	movwf	??___fldiv+3
  6847  0D0D  3001               	movlw	1
  6848  0D0E  00C3               	movwf	??___fldiv+4
  6849  0D0F                     u4695:
  6850  0D0F  0D42               	rlf	??___fldiv+3,w
  6851  0D10  0CC2               	rrf	??___fldiv+3,f
  6852  0D11  0CC1               	rrf	??___fldiv+2,f
  6853  0D12  0CC0               	rrf	??___fldiv+1,f
  6854  0D13  0CBF               	rrf	??___fldiv,f
  6855  0D14                     u4690:
  6856  0D14  0BC3               	decfsz	??___fldiv+4,f
  6857  0D15  2D0F               	goto	u4695
  6858  0D16  0842               	movf	??___fldiv+3,w
  6859  0D17  00BE               	movwf	___fldiv@b+3
  6860  0D18  0841               	movf	??___fldiv+2,w
  6861  0D19  00BD               	movwf	___fldiv@b+2
  6862  0D1A  0840               	movf	??___fldiv+1,w
  6863  0D1B  00BC               	movwf	___fldiv@b+1
  6864  0D1C  083F               	movf	??___fldiv,w
  6865  0D1D  00BB               	movwf	___fldiv@b
  6866  0D1E                     l3262:
  6867  0D1E  3001               	movlw	1
  6868  0D1F  07C9               	addwf	___fldiv@new_exp,f
  6869  0D20  1803               	skipnc
  6870  0D21  0ACA               	incf	___fldiv@new_exp+1,f
  6871  0D22  3000               	movlw	0
  6872  0D23  07CA               	addwf	___fldiv@new_exp+1,f
  6873  0D24                     l3264:
  6874  0D24  084A               	movf	___fldiv@new_exp+1,w
  6875  0D25  3A80               	xorlw	128
  6876  0D26  00FF               	movwf	btemp+1
  6877  0D27  3080               	movlw	128
  6878  0D28  027F               	subwf	btemp+1,w
  6879  0D29  1D03               	skipz
  6880  0D2A  2D2D               	goto	u4705
  6881  0D2B  30FF               	movlw	255
  6882  0D2C  0249               	subwf	___fldiv@new_exp,w
  6883  0D2D                     u4705:
  6884  0D2D  1C03               	skipc
  6885  0D2E  2D30               	goto	u4701
  6886  0D2F  2D31               	goto	u4700
  6887  0D30                     u4701:
  6888  0D30  2D3F               	goto	l3268
  6889  0D31                     u4700:
  6890  0D31                     l3266:
  6891  0D31  30FF               	movlw	255
  6892  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  6894  0D34  00C9               	movwf	___fldiv@new_exp
  6895  0D35  3000               	movlw	0
  6896  0D36  00CA               	movwf	___fldiv@new_exp+1
  6897  0D37  3000               	movlw	0
  6898  0D38  00BE               	movwf	___fldiv@b+3
  6899  0D39  3000               	movlw	0
  6900  0D3A  00BD               	movwf	___fldiv@b+2
  6901  0D3B  3000               	movlw	0
  6902  0D3C  00BC               	movwf	___fldiv@b+1
  6903  0D3D  3000               	movlw	0
  6904  0D3E  00BB               	movwf	___fldiv@b
  6905  0D3F                     l3268:
  6906  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  6907  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  6908  0D41  084A               	movf	___fldiv@new_exp+1,w
  6909  0D42  3A80               	xorlw	128
  6910  0D43  00FF               	movwf	btemp+1
  6911  0D44  3080               	movlw	128
  6912  0D45  027F               	subwf	btemp+1,w
  6913  0D46  1D03               	skipz
  6914  0D47  2D4A               	goto	u4715
  6915  0D48  3001               	movlw	1
  6916  0D49  0249               	subwf	___fldiv@new_exp,w
  6917  0D4A                     u4715:
  6918  0D4A  1803               	skipnc
  6919  0D4B  2D4D               	goto	u4711
  6920  0D4C  2D4E               	goto	u4710
  6921  0D4D                     u4711:
  6922  0D4D  2D5B               	goto	l679
  6923  0D4E                     u4710:
  6924  0D4E                     l3270:
  6925  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  6926  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  6927  0D50  01C9               	clrf	___fldiv@new_exp
  6928  0D51  01CA               	clrf	___fldiv@new_exp+1
  6929  0D52                     l3272:
  6930  0D52  3000               	movlw	0
  6931  0D53  00BE               	movwf	___fldiv@b+3
  6932  0D54  3000               	movlw	0
  6933  0D55  00BD               	movwf	___fldiv@b+2
  6934  0D56  3000               	movlw	0
  6935  0D57  00BC               	movwf	___fldiv@b+1
  6936  0D58  3000               	movlw	0
  6937  0D59  00BB               	movwf	___fldiv@b
  6938  0D5A                     l3274:
  6939  0D5A  01C8               	clrf	___fldiv@sign
  6940  0D5B                     l679:
  6941  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  6942  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  6943  0D5D  0849               	movf	___fldiv@new_exp,w
  6944  0D5E  00BF               	movwf	??___fldiv
  6945  0D5F  083F               	movf	??___fldiv,w
  6946  0D60  00CF               	movwf	___fldiv@bexp
  6947  0D61                     l3276:
  6948  0D61  1C4F               	btfss	___fldiv@bexp,0
  6949  0D62  2D64               	goto	u4721
  6950  0D63  2D65               	goto	u4720
  6951  0D64                     u4721:
  6952  0D64  2D67               	goto	l3280
  6953  0D65                     u4720:
  6954  0D65                     l3278:
  6955  0D65  17BD               	bsf	___fldiv@b+2,7
  6956  0D66  2D6B               	goto	l681
  6957  0D67                     l3280:
  6958  0D67  307F               	movlw	127
  6959  0D68  00BF               	movwf	??___fldiv
  6960  0D69  083F               	movf	??___fldiv,w
  6961  0D6A  05BD               	andwf	___fldiv@b+2,f
  6962  0D6B                     l681:
  6963  0D6B  084F               	movf	___fldiv@bexp,w
  6964  0D6C  00BF               	movwf	??___fldiv
  6965  0D6D  1003               	clrc
  6966  0D6E  0C3F               	rrf	??___fldiv,w
  6967  0D6F  00C0               	movwf	??___fldiv+1
  6968  0D70  0840               	movf	??___fldiv+1,w
  6969  0D71  00BE               	movwf	___fldiv@b+3
  6970  0D72  0848               	movf	___fldiv@sign,w
  6971  0D73  00BF               	movwf	??___fldiv
  6972  0D74  083F               	movf	??___fldiv,w
  6973  0D75  04BE               	iorwf	___fldiv@b+3,f
  6974  0D76  2C0F               	goto	l3188
  6975  0D77                     l659:
  6976  0D77  0008               	return
  6977  0D78                     __end_of___fldiv:
  6978                           
  6979                           	psect	text25
  6980  089C                     __ptext25:	
  6981 ;; *************** function ___awdiv *****************
  6982 ;; Defined at:
  6983 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  divisor         2    2[COMMON] int 
  6986 ;;  dividend        2    4[COMMON] int 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  quotient        2    2[BANK0 ] int 
  6989 ;;  sign            1    1[BANK0 ] unsigned char 
  6990 ;;  counter         1    0[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  2    2[COMMON] int 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         4       0       0       0       0
  7001 ;;      Locals:         0       4       0       0       0
  7002 ;;      Temps:          1       0       0       0       0
  7003 ;;      Totals:         5       4       0       0       0
  7004 ;;Total ram usage:        9 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 1
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_ADC_convert
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function ___awdiv
  7016  089C                     ___awdiv:
  7017  089C                     l3038:	
  7018                           ;incstack = 0
  7019                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7020                           
  7021  089C  1283               	bcf	3,5	;RP0=0, select bank0
  7022  089D  1303               	bcf	3,6	;RP1=0, select bank0
  7023  089E  01A1               	clrf	___awdiv@sign
  7024  089F                     l3040:
  7025  089F  1FF3               	btfss	___awdiv@divisor+1,7
  7026  08A0  28A2               	goto	u4171
  7027  08A1  28A3               	goto	u4170
  7028  08A2                     u4171:
  7029  08A2  28AA               	goto	l3046
  7030  08A3                     u4170:
  7031  08A3                     l3042:
  7032  08A3  09F2               	comf	___awdiv@divisor,f
  7033  08A4  09F3               	comf	___awdiv@divisor+1,f
  7034  08A5  0AF2               	incf	___awdiv@divisor,f
  7035  08A6  1903               	skipnz
  7036  08A7  0AF3               	incf	___awdiv@divisor+1,f
  7037  08A8                     l3044:
  7038  08A8  01A1               	clrf	___awdiv@sign
  7039  08A9  0AA1               	incf	___awdiv@sign,f
  7040  08AA                     l3046:
  7041  08AA  1FF5               	btfss	___awdiv@dividend+1,7
  7042  08AB  28AD               	goto	u4181
  7043  08AC  28AE               	goto	u4180
  7044  08AD                     u4181:
  7045  08AD  28B7               	goto	l3052
  7046  08AE                     u4180:
  7047  08AE                     l3048:
  7048  08AE  09F4               	comf	___awdiv@dividend,f
  7049  08AF  09F5               	comf	___awdiv@dividend+1,f
  7050  08B0  0AF4               	incf	___awdiv@dividend,f
  7051  08B1  1903               	skipnz
  7052  08B2  0AF5               	incf	___awdiv@dividend+1,f
  7053  08B3                     l3050:
  7054  08B3  3001               	movlw	1
  7055  08B4  00F6               	movwf	??___awdiv
  7056  08B5  0876               	movf	??___awdiv,w
  7057  08B6  06A1               	xorwf	___awdiv@sign,f
  7058  08B7                     l3052:
  7059  08B7  01A2               	clrf	___awdiv@quotient
  7060  08B8  01A3               	clrf	___awdiv@quotient+1
  7061  08B9                     l3054:
  7062  08B9  0872               	movf	___awdiv@divisor,w
  7063  08BA  0473               	iorwf	___awdiv@divisor+1,w
  7064  08BB  1903               	btfsc	3,2
  7065  08BC  28BE               	goto	u4191
  7066  08BD  28BF               	goto	u4190
  7067  08BE                     u4191:
  7068  08BE  28F6               	goto	l3074
  7069  08BF                     u4190:
  7070  08BF                     l3056:
  7071  08BF  01A0               	clrf	___awdiv@counter
  7072  08C0  0AA0               	incf	___awdiv@counter,f
  7073  08C1  28CD               	goto	l3062
  7074  08C2                     l3058:
  7075  08C2  3001               	movlw	1
  7076  08C3                     u4205:
  7077  08C3  1003               	clrc
  7078  08C4  0DF2               	rlf	___awdiv@divisor,f
  7079  08C5  0DF3               	rlf	___awdiv@divisor+1,f
  7080  08C6  3EFF               	addlw	-1
  7081  08C7  1D03               	skipz
  7082  08C8  28C3               	goto	u4205
  7083  08C9                     l3060:
  7084  08C9  3001               	movlw	1
  7085  08CA  00F6               	movwf	??___awdiv
  7086  08CB  0876               	movf	??___awdiv,w
  7087  08CC  07A0               	addwf	___awdiv@counter,f
  7088  08CD                     l3062:
  7089  08CD  1FF3               	btfss	___awdiv@divisor+1,7
  7090  08CE  28D0               	goto	u4211
  7091  08CF  28D1               	goto	u4210
  7092  08D0                     u4211:
  7093  08D0  28C2               	goto	l3058
  7094  08D1                     u4210:
  7095  08D1                     l3064:
  7096  08D1  3001               	movlw	1
  7097  08D2                     u4225:
  7098  08D2  1003               	clrc
  7099  08D3  0DA2               	rlf	___awdiv@quotient,f
  7100  08D4  0DA3               	rlf	___awdiv@quotient+1,f
  7101  08D5  3EFF               	addlw	-1
  7102  08D6  1D03               	skipz
  7103  08D7  28D2               	goto	u4225
  7104  08D8  0873               	movf	___awdiv@divisor+1,w
  7105  08D9  0275               	subwf	___awdiv@dividend+1,w
  7106  08DA  1D03               	skipz
  7107  08DB  28DE               	goto	u4235
  7108  08DC  0872               	movf	___awdiv@divisor,w
  7109  08DD  0274               	subwf	___awdiv@dividend,w
  7110  08DE                     u4235:
  7111  08DE  1C03               	skipc
  7112  08DF  28E1               	goto	u4231
  7113  08E0  28E2               	goto	u4230
  7114  08E1                     u4231:
  7115  08E1  28E9               	goto	l3070
  7116  08E2                     u4230:
  7117  08E2                     l3066:
  7118  08E2  0872               	movf	___awdiv@divisor,w
  7119  08E3  02F4               	subwf	___awdiv@dividend,f
  7120  08E4  0873               	movf	___awdiv@divisor+1,w
  7121  08E5  1C03               	skipc
  7122  08E6  03F5               	decf	___awdiv@dividend+1,f
  7123  08E7  02F5               	subwf	___awdiv@dividend+1,f
  7124  08E8                     l3068:
  7125  08E8  1422               	bsf	___awdiv@quotient,0
  7126  08E9                     l3070:
  7127  08E9  3001               	movlw	1
  7128  08EA                     u4245:
  7129  08EA  1003               	clrc
  7130  08EB  0CF3               	rrf	___awdiv@divisor+1,f
  7131  08EC  0CF2               	rrf	___awdiv@divisor,f
  7132  08ED  3EFF               	addlw	-1
  7133  08EE  1D03               	skipz
  7134  08EF  28EA               	goto	u4245
  7135  08F0                     l3072:
  7136  08F0  3001               	movlw	1
  7137  08F1  02A0               	subwf	___awdiv@counter,f
  7138  08F2  1D03               	btfss	3,2
  7139  08F3  28F5               	goto	u4251
  7140  08F4  28F6               	goto	u4250
  7141  08F5                     u4251:
  7142  08F5  28D1               	goto	l3064
  7143  08F6                     u4250:
  7144  08F6                     l3074:
  7145  08F6  0821               	movf	___awdiv@sign,w
  7146  08F7  1903               	btfsc	3,2
  7147  08F8  28FA               	goto	u4261
  7148  08F9  28FB               	goto	u4260
  7149  08FA                     u4261:
  7150  08FA  2900               	goto	l3078
  7151  08FB                     u4260:
  7152  08FB                     l3076:
  7153  08FB  09A2               	comf	___awdiv@quotient,f
  7154  08FC  09A3               	comf	___awdiv@quotient+1,f
  7155  08FD  0AA2               	incf	___awdiv@quotient,f
  7156  08FE  1903               	skipnz
  7157  08FF  0AA3               	incf	___awdiv@quotient+1,f
  7158  0900                     l3078:
  7159  0900  0823               	movf	___awdiv@quotient+1,w
  7160  0901  00F3               	movwf	?___awdiv+1
  7161  0902  0822               	movf	___awdiv@quotient,w
  7162  0903  00F2               	movwf	?___awdiv
  7163  0904                     l461:
  7164  0904  0008               	return
  7165  0905                     __end_of___awdiv:
  7166                           
  7167                           	psect	text26
  7168  1682                     __ptext26:	
  7169 ;; *************** function _isr *****************
  7170 ;; Defined at:
  7171 ;;		line 65 in file "Main.c"
  7172 ;; Parameters:    Size  Location     Type
  7173 ;;		None
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;		None
  7176 ;; Return value:  Size  Location     Type
  7177 ;;                  1    wreg      void 
  7178 ;; Registers used:
  7179 ;;		None
  7180 ;; Tracked objects:
  7181 ;;		On entry : 0/0
  7182 ;;		On exit  : 0/0
  7183 ;;		Unchanged: 0/0
  7184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7185 ;;      Params:         0       0       0       0       0
  7186 ;;      Locals:         0       0       0       0       0
  7187 ;;      Temps:          2       0       0       0       0
  7188 ;;      Totals:         2       0       0       0       0
  7189 ;;Total ram usage:        2 bytes
  7190 ;; Hardware stack levels used: 1
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		Interrupt level 1
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           
  7199                           ;psect for function _isr
  7200  1682                     _isr:
  7201  1682                     i1l57:
  7202  1682  0871               	movf	??_isr+1,w
  7203  1683  008A               	movwf	10
  7204  1684  0E70               	swapf	??_isr,w
  7205  1685  0083               	movwf	3
  7206  1686  0EFE               	swapf	btemp,f
  7207  1687  0E7E               	swapf	btemp,w
  7208  1688  0009               	retfie
  7209  1689                     __end_of_isr:
  7210  007E                     btemp	set	126	;btemp
  7211  007E                     wtemp0	set	126
  7212                           
  7213                           	psect	intentry
  7214  0004                     __pintentry:	
  7215                           ;incstack = 0
  7216                           ; Regs used in _isr: []
  7217                           
  7218  0004                     interrupt_function:
  7219  007E                     saved_w	set	btemp
  7220  0004  00FE               	movwf	btemp
  7221  0005  0E03               	swapf	3,w
  7222  0006  00F0               	movwf	??_isr
  7223  0007  080A               	movf	10,w
  7224  0008  00F1               	movwf	??_isr+1
  7225  0009  160A  118A  2E82   	ljmp	_isr
  7226                           
  7227                           	psect	config
  7228                           
  7229                           ;Config register CONFIG1 @ 0x2007
  7230                           ;	Oscillator Selection bits
  7231                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7232                           ;	Watchdog Timer Enable bit
  7233                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7234                           ;	Power-up Timer Enable bit
  7235                           ;	PWRTE = OFF, PWRT disabled
  7236                           ;	RE3/MCLR pin function select bit
  7237                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7238                           ;	Code Protection bit
  7239                           ;	CP = OFF, Program memory code protection is disabled
  7240                           ;	Data Code Protection bit
  7241                           ;	CPD = OFF, Data memory code protection is disabled
  7242                           ;	Brown Out Reset Selection bits
  7243                           ;	BOREN = OFF, BOR disabled
  7244                           ;	Internal External Switchover bit
  7245                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7246                           ;	Fail-Safe Clock Monitor Enabled bit
  7247                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7248                           ;	Low Voltage Programming Enable bit
  7249                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7250                           ;	In-Circuit Debugger Mode bit
  7251                           ;	DEBUG = 0x1, unprogrammed default
  7252  2007                     	org	8199
  7253  2007  20D4               	dw	8404
  7254                           
  7255                           ;Config register CONFIG2 @ 0x2008
  7256                           ;	Brown-out Reset Selection bit
  7257                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7258                           ;	Flash Program Memory Self Write Enable bits
  7259                           ;	WRT = OFF, Write protection off
  7260  2008                     	org	8200
  7261  2008  3FFF               	dw	16383

Data Sizes:
    Strings     55
    Constant    0
    Data        1
    BSS         17
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      74
    BANK1            80     15      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 19
		 -> converted02(BANK1[10]), STR_3(CODE[18]), STR_2(CODE[19]), STR_1(CODE[18]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted02(BANK1[10]), 


Critical Paths under _main in COMMON

    _main->_LCD_Init
    _main->_LCD_Set_Cursor
    _main->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___flge
    _ADC_convert->___wmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___fladd
    ___flsub->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_ADC_convert
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   18047
                                             65 BANK0      8     8      0
                        _ADC_convert
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           ___xxtofl
                           _infrared
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _infrared                                             3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     7     5      2     679
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (1) _LCD_Set_Cursor                                       4     3      1     704
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_convert                                         23    17      6   15242
                                             57 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1106
                                              9 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1036
                                              8 COMMON     2     2      0
                                              5 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     967
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3727
                                             23 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3122
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3533
                                             31 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     446
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2043
                                             23 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_convert
     ___awdiv
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
         ___wmul (ARG)
           ___fltol (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___flsub (ARG)
         ___fladd
         ___fltol (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
     ___flsub
     ___fltol
     ___wmul
     ___xxtofl
   _I2C_Master_Init
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   ___xxtofl
   _infrared
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      75      12        0.0%
ABS                  0      0      75       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 31 01:03:00 2021

              ___fldiv@aexp 0050                ___fldiv@bexp 004F                           pc 0002  
              ___fldiv@sign 0048                          l73 1753                          l68 16CD  
                        l99 0421                          _RS 007A                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0027         __Umul8_16@word_mpld 0022  
                       l310 179E                         l150 0855                         l207 17FF  
                       l144 16A7                         l153 1691                         l170 16B6  
                       l147 0849                         l171 16B7                         l308 1786  
                       l180 0994                         l501 07E9                         l159 169A  
                       l183 171A                         l504 07FE                         l168 16B2  
                       l192 1735                         l601 0DDB                         l186 16E5  
                       l461 0904                         l605 0E82                         l189 16FF  
                       l622 0F4D                         l614 0FFF                         l198 089B  
                       l703 06EE                         l607 0E59                         l632 0F93  
                       l482 09B3                         l626 0F71                         l643 0FF3  
                       l635 0FD1                         l716 17B5                         l644 0FFF  
                       l485 0A1F                         l709 0776                         l741 0B03  
                       l486 0A38                         l718 17C7                         l494 07FE  
                       l647 1777                         l743 0B9A                         l681 0D6B  
                       l673 0CE9                         l657 0BF7                         l754 0B64  
                       l659 0D77                         l755 0B70                         l747 0B48  
                       l679 0D5B                         l697 0782                         _RA0 0028  
                       _RB7 0037                         _PEN 048A                         _SEN 0488  
                       _isr 1682                         fsr0 0004                         indf 0000  
              ___flmul@aexp 004D                ___flmul@bexp 0052                ___flmul@sign 004C  
              ___flmul@temp 0057                ___flmul@prod 0053             __end_of_LCD_CMD 1700  
       LCD_Write_String@Str 0078              _LCD_Set_Cursor 17C8                ___fltol@exp1 0077  
                      l3000 17A2                        l3010 17C3                        l3002 17A4  
                      l3004 17AB                        l3020 171C                        l3006 17AF  
                      l3110 07AE                        l3102 0783                        l3030 178D  
                      l3014 16E7                        l3022 171E                        l3040 089F  
                      l3200 0C38                        l3008 17BE                        l3112 07AF  
                      l3104 0790                        l3032 1794                        l3024 1778  
                      l3016 16E8                        l3050 08B3                        l3042 08A3  
                      l3210 0C57                        l3202 0C40                        l3114 07B7  
                      l3034 179A                        l3026 177A                        l3018 16EF  
                      l3060 08C9                        l3052 08B7                        l3044 08A8  
                      l3220 0C89                        l3212 0C69                        l3204 0C48  
                      l3300 0446                        l3140 1758                        l3132 07DE  
                      l3124 07C5                        l3116 07B9                        l3108 0799  
                      l3028 1780                        l3070 08E9                        l3062 08CD  
                      l3054 08B9                        l3046 08AA                        l3038 089C  
                      l3230 0CAA                        l3222 0C8A                        l3214 0C6D  
                      l3206 0C50                        l3150 0BAC                        l3310 045F  
                      l3302 0448                        l3134 07EE                        l3118 07BD  
                      l3126 07D7                        l3072 08F0                        l3064 08D1  
                      l3056 08BF                        l3048 08AE                        l3240 0CC3  
                      l3232 0CAC                        l3224 0C98                        l3216 0C6E  
                      l3208 0C52                        l3160 0BC0                        l3152 0BAD  
                      l3144 0B9B                        l3400 070A                        l3320 0474  
                      l3312 0460                        l3304 0450                        l3136 07F3  
                      l3066 08E2                        l3058 08C2                        l3074 08F6  
                      l3250 0CE6                        l3234 0CB5                        l3242 0CC9  
                      l3218 0C77                        l3226 0C9C                        l3170 0BD9  
                      l3154 0BB2                        l3162 0BC2                        l3146 0BA2  
                      l3090 09D3                        l3082 0995                        l3410 0750  
                      l3402 0723                        l3330 048F                        l3322 047C  
                      l3314 0465                        l3306 0455                        l3138 1754  
                      l3076 08FB                        l3068 08E8                        l3260 0D05  
                      l3244 0CCD                        l3236 0CB9                        l3228 0CA2  
                      l3180 0BED                        l3172 0BDA                        l3164 0BCA  
                      l3156 0BB7                        l3148 0BA8                        l3092 09F7  
                      l3084 09AB                        l3420 076F                        l3412 075A  
                      l3404 0729                        l3340 0511                        l3332 049F  
                      l3324 0481                        l3316 046A                        l3308 045B  
                      l3500 0914                        l3078 0900                        l3270 0D4E  
                      l3262 0D1E                        l3254 0CEE                        l3246 0CCE  
                      l3238 0CBA                        l3174 0BDF                        l3182 0BEF  
                      l3166 0BCF                        l3158 0BBF                        l3094 09FB  
                      l3086 09C7                        l3422 077A                        l3414 075C  
                      l3406 0736                        l3350 057F                        l3342 052D  
                      l3334 04AC                        l3326 0486                        l3318 0472  
                      l3430 0AEB                        l3510 094F                        l3502 0922  
                      l3280 0D67                        l3272 0D52                        l3256 0CF3  
                      l3264 0D24                        l3248 0CD2                        l3184 0BFF  
                      l3192 0C18                        l3176 0BE4                        l3168 0BD5  
                      l3096 0A35                        l3088 09CF                        l3416 076A  
                      l3408 0741                        l3360 060F                        l3352 058F  
                      l3344 0549                        l3336 04C9                        l3440 0B19  
                      l3432 0AFB                        l3600 01D1                        l2800 16CF  
                      l3520 0985                        l3512 0958                        l3504 092B  
                      l3274 0D5A                        l3266 0D31                        l3258 0D01  
                      l3194 0C1D                        l3186 0C0B                        l3178 0BEC  
                      l3098 0A37                        l3418 076E                        l3370 06A3  
                      l3362 061F                        l3354 05AC                        l3346 0552  
                      l3338 04E5                        l3290 042F                        l2810 0D85  
                      l3450 0B4F                        l3442 0B26                        l3434 0B0B  
                      l3426 0AE2                        l3610 01F9                        l3602 01D7  
                      l2802 16D3                        l3514 0967                        l3506 093A  
                      l3530 17E2                        l3522 17C9                        l3276 0D61  
                      l3268 0D3F                        l3188 0C0F                        l3380 06C8  
                      l3372 06B1                        l3364 064C                        l3356 05C5  
                      l3348 0562                        l3292 0433                        l2900 0E76  
                      l2820 0D9C                        l2812 0D89                        l3460 0B88  
                      l3452 0B5A                        l3444 0B2D                        l3428 0AE7  
                      l3620 023D                        l3612 01F9                        l3604 01DB  
                      l2804 16DA                        l3516 096D                        l3508 0940  
                      l3524 17CA                        l3532 17EA                        l3540 085B  
                      l3278 0D65                        l3198 0C26                        l3390 06EB  
                      l3374 06BA                        l3382 06CE                        l3366 0672  
                      l3358 05E2                        l3294 0434                        l3286 0422  
                      l2910 0E94                        l2902 0E7A                        l2830 0DB2  
                      l2822 0D9D                        l2814 0D8A                        l2806 0D78  
                      l3462 0B8D                        l3454 0B5E                        l3446 0B31  
                      l3438 0B14                        l3630 02E3                        l3622 02BA  
                      l3614 01FE                        l3606 01E1                        l3518 097C  
                      l3526 17D2                        l3542 0877                        l3550 173D  
                      l3470 16B8                        l3384 06D2                        l3376 06BE  
                      l3368 069A                        l3296 0439                        l3288 0429  
                      l2920 0EBE                        l2912 0EAB                        l2904 0E86  
                      l2840 0DC3                        l2832 0DB3                        l2816 0D8F  
                      l2824 0D9F                        l2808 0D7F                        l3464 0B91  
                      l3456 0B68                        l3448 0B3F                        l3640 0321  
                      l3632 02F0                        l3624 02D0                        l3616 021F  
                      l3608 01F1                        l3560 0046                        l3528 17DA  
                      l3544 087F                        l3552 1743                        l3480 16C3  
                      l3472 16BC                        l3394 06F3                        l3386 06D3  
                      l3378 06BF                        l3298 043E                        l2930 0EE7  
                      l2922 0EC2                        l2914 0EAF                        l2906 0E8B  
                      l2850 0DE1                        l2842 0DC8                        l2834 0DB9  
                      l2826 0DA7                        l2818 0D94                        l3466 0B92  
                      l3458 0B72                        l3650 0401                        l3642 0327  
                      l3634 02F6                        l3626 02DD                        l3618 0225  
                      l3570 0069                        l3562 0048                        l3490 16A2  
                      l3538 0856                        l3554 1750                        l3546 1736  
                      l3482 16C4                        l3474 16BF                        l3396 06F8  
                      l3388 06D7                        l2940 0F55                        l2932 0F25  
                      l2924 0EC3                        l2916 0EB3                        l2860 0DF5  
                      l2852 0DE5                        l2844 0DD0                        l2836 0DBD  
                      l2828 0DAC                        l3652 0407                        l3644 033D  
                      l3636 02FB                        l3628 02DD                        l3572 008A  
                      l3580 00B7                        l3564 004A                        l3556 0031  
                      l3492 16A5                        l3548 173C                        l3484 16C5  
                      l3476 16C0                        l3660 0A3E                        l3398 0706  
                      l2950 0F70                        l2942 0F5A                        l2934 0F2B  
                      l2926 0ECC                        l2918 0EBC                        l2870 0E09  
                      l2862 0DF9                        l2854 0DE9                        l2846 0DD1  
                      l2838 0DBE                        l3646 03D9                        l3638 0300  
                      l3654 040B                        l3590 00F1                        l3582 00C0  
                      l3574 0095                        l3566 004E                        l3558 0046  
                      l3494 16A6                        l3486 169B                        l2782 0849  
                      l2790 1692                        l3478 16C2                        l3670 0A5D  
                      l3662 0A41                        l2952 0F75                        l2960 0F81  
                      l2936 0F30                        l2928 0ED1                        l2880 0E1D  
                      l2872 0E0D                        l2864 0DFD                        l2856 0DED  
                      l2848 0DD3                        l3656 0411                        l3648 03F9  
                      l3592 00F7                        l3584 00C6                        l3576 009E  
                      l3568 004E                        l3488 169F                        l2784 084F  
                      l2792 1697                        l3496 0908                        l3680 0A8E  
                      l3672 0A65                        l3664 0A46                        l2954 0F78  
                      l2946 0F63                        l2938 0F3F                        l2962 0F85  
                      l2890 0E5D                        l2882 0E21                        l2874 0E11  
                      l2866 0E01                        l2858 0DF1                        l3594 010D  
                      l3586 00CB                        l3578 00B1                        l2786 1689  
                      l2794 16A9                        l3498 090E                        l3682 0A9A  
                      l3674 0A6E                        l3666 0A4C                        l3658 0A39  
                      l2980 0FCD                        l2972 0F98                        l2964 0F86  
                      l2956 0F7A                        l2948 0F6C                        l2892 0E66  
                      l2876 0E15                        l2868 0E05                        l2884 0E25  
                      l3596 01A9                        l3588 00D0                        l2788 168E  
                      l2796 16AE                        l3756 17F4                        l3684 0AA3  
                      l3676 0A76                        l3668 0A54                        l2990 0FE9  
                      l2982 0FD6                        l2974 0F9D                        l2966 0F8A  
                      l2958 0F7F                        l2894 0E68                        l2886 0E26  
                      l2878 0E19                        l3598 01C9                        l2798 1701  
                      l3686 0AA8                        l3678 0A7F                        l2992 0FED  
                      l2984 0FDB                        l2976 0FAB                        l2968 0F90  
                      l2896 0E6C                        l2888 0E3D                        l3688 0AC9  
                      l2994 0FEF                        l2986 0FE3                        l2978 0FAF  
                      l2898 0E6D                        l2996 0FFA                        l2988 0FE8  
                      l2998 0FFE                        ?_isr 0070                        STR_1 0835  
                      STR_2 0810                        STR_3 0823                        u4000 0FAF  
                      u4001 0FAE                        u4010 0FBE                        u4100 17C3  
                      u4020 0FCD                        u4101 17C2                        u4021 0FCC  
                      u4030 0FD6                        u4031 0FD5                        u4015 0FB9  
                      u5000 06D2                        u4040 0FDB                        u5001 06D1  
                      u4041 0FDA                        u4210 08D1                        u5010 06D7  
                      u4050 0FE8                        u4130 1780                        u4211 08D0  
                      u5011 06D6                        u4051 0FE7                        u4131 177F  
                      u4115 16F2                        u5020 06EB                        u4060 0FED  
                      u5100 0AE7                        u4205 08C3                        u4301 09E2  
                      u5021 06EA                        u4061 0FEC                        u5101 0AE6  
                      u4125 1728                        u4230 08E2                        u4310 09FB  
                      u4302 09E3                        u5030 06F2                        u4070 0FFE  
                      u5110 0AEB                        u4231 08E1                        u4311 09FA  
                      u4303 09E8                        u5031 06F1                        u4071 0FFD  
                      u5111 0AEA                        u4304 09E9                        u4080 17AF  
                      u5040 06F8                        u4400 07DD                        u4160 179A  
                      u5200 0B68                        u5120 0B0B                        u3600 0855  
                      u4225 08D2                        u4321 0A0A                        u4305 09EE  
                      u4081 17AE                        u5041 06F7                        u4401 07DC  
                      u4161 1799                        u4145 1787                        u5201 0B67  
                      u5121 0B0A                        u3601 0854                        u4250 08F6  
                      u4170 08A3                        u4330 0A35                        u4322 0A0B  
                      u4306 09EF                        u5050 070A                        u5210 0B7D  
                      u3610 16B6                        u4251 08F5                        u4235 08DE  
                      u4171 08A2                        u4331 0A34                        u4323 0A10  
                      u5051 0709                        u4155 178E                        u3611 16B5  
                      u4260 08FB                        u4180 08AE                        u4500 0BFF  
                      u4324 0A11                        u5060 0719                        u3700 0DE5  
                      u3620 0D89                        u4420 07EE                        u4340 0790  
                      u5220 0B8D                        u5140 0B2C                        u5300 00C6  
                      u4261 08FA                        u4245 08EA                        u4181 08AD  
                      u4501 0BFE                        u4325 0A16                        u3701 0DE4  
                      u3621 0D88                        u4421 07ED                        u4341 078F  
                      u5221 0B8C                        u5141 0B2B                        u5301 00C5  
                      u4190 08BF                        u4510 0C1D                        u4326 0A17  
                      u4270 09AB                        u5070 0736                        u3710 0E3D  
                      u3630 0D8F                        u4430 07F3                        u4350 07A7  
                      u5230 0B91                        u5310 010D                        u4191 08BE  
                      u4511 0C1C                        u4335 0A31                        u4271 09AA  
                      u4095 17B6                        u5071 0735                        u3711 0E3C  
                      u3631 0D8E                        u4431 07F2                        u4415 07E0  
                      u5231 0B90                        u5215 0B78                        u5135 0B1E  
                      u5311 010C                        u4520 0C57                        u4440 0BAC  
                      u4280 09C7                        u5080 0750                        u3720 0E46  
                      u3640 0D94                        u4360 07BD                        u5160 0B4E  
                      u5320 01E1                        u5240 0865                        u4521 0C56  
                      u4441 0BAB                        u4281 09C6                        u5081 074F  
                      u5065 0714                        u3801 0E9D                        u3721 0E44  
                      u3641 0D93                        u4361 07BC                        u5161 0B4D  
                      u5321 01E0                        u4610 0CB9                        u4450 0BB2  
                      u4290 09D3                        u5090 076E                        u3810 0EAF  
                      u3802 0EA4                        u3730 0E47                        u3650 0DB2  
                      u4370 07C4                        u5330 023D                        u5250 0889  
                      u4611 0CB8                        u4451 0BB1                        u4291 09D2  
                      u5091 076D                        u5075 0732                        u3811 0EAE  
                      u3803 0EAB                        u3715 0E39                        u3651 0DB1  
                      u4371 07C3                        u4355 07A2                        u5155 0B40  
                      u5331 023C                        u5315 0109                        u4700 0D31  
                      u4460 0BB7                        u3900 0F5A                        u3820 0EB3  
                      u3740 0E5D                        u3660 0DBD                        u5180 0B5E  
                      u5340 02F6                        u5260 089B                        u4701 0D30  
                      u4605 0CAE                        u4461 0BB6                        u5085 074C  
                      u3901 0F59                        u3821 0EB2                        u3741 0E5C  
                      u3661 0DBC                        u5181 0B5D                        u5341 02F5  
                      u5261 089A                        u4710 0D4E                        u4630 0CCD  
                      u4550 0C6D                        u4470 0BD9                        u3830 0EC2  
                      u3750 0E6C                        u3670 0DC3                        u4390 07D6  
                      u5190 0B64                        u5350 033D                        u3590 084F  
                      u5270 173C                        u4711 0D4D                        u4631 0CCC  
                      u4551 0C6C                        u4535 0C59                        u4471 0BD8  
                      u3831 0EC1                        u3751 0E6B                        u3671 0DC2  
                      u4391 07D5                        u5191 0B63                        u5175 0B53  
                      u5351 033C                        u5335 0239                        u3591 084E  
                      u5407 0918                        u5271 173B                        u4720 0D65  
                      u4640 0CD2                        u4480 0BDF                        u4800 0486  
                      u3920 0F70                        u3680 0DC8                        u5360 0411  
                      u5280 0069                        u4721 0D64                        u4705 0D2D  
                      u4641 0CD1                        u4625 0CBC                        u4545 0C62  
                      u4481 0BDE                        u4801 0485                        u3921 0F6F  
                      u3681 0DC7                        u4385 07C6                        u5361 0410  
                      u5281 0068                        u5417 0926                        u4650 0CE6  
                      u4570 0C89                        u4490 0BE4                        u4730 0433  
                      u3930 0F75                        u3850 0EE7                        u3770 0E82  
                      u3690 0DE1                        u5290 00BF                        u4715 0D4A  
                      u4651 0CE5                        u4571 0C88                        u4491 0BE3  
                      u4811 04D7                        u4731 0432                        u3931 0F74  
                      u3915 0F65                        u3851 0EE6                        u3771 0E81  
                      u3691 0DE0                        u5355 0339                        u5291 00BE  
                      u5427 0935                        u4660 0CED                        u4580 0CA2  
                      u4812 04DE                        u4740 0439                        u3940 0F7F  
                      u3780 0E86                        _RCEN 048B                        u4661 0CEC  
                      u4581 0CA1                        u4565 0C70                        u4901 0601  
                      u4821 04F3                        u4813 04E5                        u4741 0438  
                      u3941 0F7E                        u3861 0EFE                        u3853 0EE3  
                      u3845 0EC5                        u3781 0E85                        u3765 0E6F  
                      u5437 0944                        u4670 0CF3                        u4590 0CAA  
                      u4902 0608                        u4822 04FA                        u4750 043E  
                      u3950 0F85                        u3870 0F12                        u3862 0EFF  
                      u3790 0E8B                        u4671 0CF2                        u4591 0CA9  
                      u4575 0C85                        u4911 062E                        u4903 060F  
                      u4831 051F                        u4823 0501                        u4751 043D  
                      u3951 0F84                        u3871 0F13                        u3863 0F04  
                      u3791 0E8A                        u5447 0953                        u4680 0D05  
                      u4920 0658                        u4912 0635                        u4832 0526  
                      u4760 045F                        u3960 0F8A                        u3880 0F30  
                      u3872 0F18                        u3864 0F05                        i1l57 1682  
                      u4681 0D04                        u4913 063C                        u4841 053B  
                      u4833 052D                        u4761 045E                        u3961 0F89  
                      u3881 0F2F                        u3873 0F19                        u3865 0F0A  
                      u5457 0962                        u4690 0D14                        u4842 0542  
                      u4770 0465                        u3970 0F90                        u3890 0F55  
                      u3866 0F0B                        u4931 0664                        u4843 0549  
                      u4771 0464                        u3971 0F8F                        u3891 0F54  
                      u5467 0971                        u5387 0A87                        u4940 0680  
                      u4932 066B                        u4780 046A                        u3980 0F97  
                      u4933 0672                        u4925 0653                        u4861 0571  
                      u4781 0469                        u3981 0F96                        u5477 0980  
                      u5397 1749                        u4862 0578                        u4790 0481  
                      u3990 0F9D                        u4695 0D0F                        u4951 068C  
                      u4871 059E                        u4863 057F                        u4855 054B  
                      u4791 0480                        u3991 0F9C                        u5487 098F  
                      u4952 0693                        u4872 05A5                        u4953 069A  
                      u4945 067B                        u4873 05AC                        u5497 16E3  
                      u4891 05D4                        u4980 06BE                        u4892 05DB  
                      u4981 06BD                        u4965 069C                        u4893 05E2  
                      u4885 05AE                        u4975 06B3                        u4995 06C1  
                      _RSEN 0489           ?_LCD_Write_String 0078                        _main 0A39  
                      btemp 007E               ADC_convert@mu 00BC                        start 000C  
        ??_LCD_Write_String 0020             ___fldiv@new_exp 0049        LCD_Write_4Bit@Nibble 0075  
      __size_of_ADC_convert 03F4                       ??_isr 0070            __end_of_LCD_Init 0995  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
             ___fltol@sign1 0076             __end_of___fladd 1000                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___fldiv 0D78  
           __end_of___awdiv 0905             __end_of___flmul 0783             __end_of___flsub 1778  
           __end_of___fltol 07FF                       _ANSEL 0188             ___awdiv@divisor 0072  
           ___awdiv@counter 0020                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _TRISD 0088                       _SSPIF 0063      __end_of_LCD_Set_Cursor 1800  
                     _conv0 00A0                       _setup 16B8                       pclath 000A  
                     status 0003                       wtemp0 007E              _LCD_Write_4Bit 16CE  
            _LCD_Write_Char 171B             __initialization 000F                __end_of_main 0ADF  
         _IO_Expander_Write 1700          ?_IO_Expander_Write 0070                      ??_main 0061  
                 ??_LCD_CMD 0076           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0073             ?_LCD_Set_Cursor 0078          ??_I2C_Master_Start 0072  
        ??_I2C_Master_Write 0072            ___awdiv@dividend 0074                      ?_setup 0070  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISA0 0428  
                    _TRISB0 0430                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013      __end_of_LCD_Write_4Bit 16E6  
          __end_of___xxtofl 0B9B      __end_of_LCD_Write_Char 1736   __end_of_IO_Expander_Write 171B  
                    ___flge 0995                   ??___fladd 0020                      ___wmul 1778  
                 ??___fldiv 003F                   ??___awdiv 0076                   ??___flmul 0047  
                 ??___flsub 007A                   ??___fltol 0020            __end_of_infrared 1754  
          ___awdiv@quotient 0022                __pdataCOMMON 007B          __size_of__Umul8_16 0029  
                    saved_w 007E             ADC_convert@data 00B3             ADC_convert@temp 00AF  
                ___flge@ff1 0072                  ___flge@ff2 0076                ___xxtofl@arg 0033  
              ___xxtofl@exp 0032                ___xxtofl@val 0029     __end_of__initialization 002A  
                 ?_LCD_Init 0070             ?_LCD_Write_4Bit 0070                  ___fltol@f1 0072  
           ?_LCD_Write_Char 0070              __pcstackCOMMON 0070               __end_of_setup 16CE  
                   ??_setup 0072                  __pbssBANK0 0069                  __pbssBANK1 00A0  
                ??_LCD_Init 0078           __end_of__Umul8_16 17C8  __size_of_IO_Expander_Write 001B  
                __pmaintext 0A39                     ?___flge 0072                     ?___wmul 0025  
                __pintentry 0004                     _ACKSTAT 048E   __size_of_LCD_Write_String 0046  
                   _LCD_CMD 16E6                   ?___xxtofl 0029                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0800                   ?_infrared 0070  
                   _i2c_add 00BE               ??_ADC_convert 005F             __size_of___flge 00A4  
                   ___fladd 0D78                     ___fldiv 0B9B                     ___awdiv 089C  
                   ___flmul 0422                     ___flsub 1754                     ___fltol 0783  
           __size_of___wmul 0027            ??_LCD_Set_Cursor 0020                     __ptext1 16B8  
                   __ptext2 1736                     __ptext3 0856                     __ptext4 171B  
                   __ptext5 17C8                     __ptext6 0905                     __ptext7 16E6  
                   __ptext8 16CE                     __ptext9 1700                     _counter 00A4  
              __size_of_isr 0007                  ??___xxtofl 002D    __size_of_I2C_Master_Init 000D  
  __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009        end_of_initialization 002A  
                ??_infrared 0072   __size_of_I2C_Master_Start 0009   __size_of_I2C_Master_Write 0010  
          ADC_convert@place 005D         __end_of_ADC_convert 0422                  LCD_CMD@CMD 0077  
               ___fladd@grs 002B               ___xxtofl@sign 0031                   _TRISBbits 0086  
               ___fldiv@grs 004B                 ___fldiv@rem 0044            ??_LCD_Write_4Bit 0074  
         LCD_Write_String@i 0023            ??_LCD_Write_Char 0076                 ___flmul@grs 004E  
         __size_of_LCD_Init 0090                ADC_convert@a 0059                ADC_convert@i 00B8  
              ADC_convert@j 00B1                ADC_convert@x 00B4              __end_of___flge 0A39  
            __end_of___wmul 179F            _LCD_Write_String 0856               __pidataCOMMON 07FF  
       start_initialization 000F                 __end_of_isr 1689           ??_I2C_Master_Init 0072  
         ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072                 _ADC_convert 002E  
                  ??___flge 0020                    ??___wmul 0078                   __Umul8_16 179F  
                 ___fladd@a 0076                   ___fladd@b 0072                    ?_LCD_CMD 0070  
                 ___fldiv@a 0037                   ___fldiv@b 003B                   ___flmul@a 0043  
                 ___flmul@b 003F                 __pbssCOMMON 007A                   ___flsub@a 0037  
                 ___flsub@b 003B                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00AF           __size_of___xxtofl 00BC                   __pnvBANK1 00BE  
          _I2C_Master_Start 1689            _I2C_Master_Write 16A8           __size_of_infrared 001E  
     IO_Expander_Write@Data 0073                    ?___fladd 0072                    ?___fldiv 0037  
                  ?___awdiv 0072                    ?___flmul 003F                    ?___flsub 0037  
                  ?___fltol 0072                  ?__Umul8_16 0072        I2C_Master_Write@data 0072  
                 __pstrings 0800                   _converted 0069              __size_of_setup 0016  
         interrupt_function 0004                    _LCD_Init 0905              ___wmul@product 0078  
               __stringbase 080F           ___wmul@multiplier 0025            __size_of_LCD_CMD 001A  
               _converted02 00A5    __end_of_LCD_Write_String 089C                 ??__Umul8_16 0074  
          __size_of___fladd 0288            __size_of___fldiv 01DD            __size_of___awdiv 0069  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
        __end_of__stringtab 0810             _I2C_Master_Init 169B                    ___xxtofl 0ADF  
           _I2C_Master_Wait 0849             _I2C_Master_Stop 1692                    _main$877 0065  
                  __ptext10 16A8                    __ptext11 1692                    __ptext20 0D78  
                  __ptext12 1689                    __ptext21 0422                    __ptext13 0849  
                  __ptext22 179F                    __ptext14 169B                    __ptext23 0995  
                  __ptext15 002E                    __ptext24 0B9B                    __ptext16 0ADF  
                  __ptext25 089C                    __ptext17 1778                    __ptext26 1682  
                  __ptext18 0783                    __ptext19 1754     __size_of_LCD_Set_Cursor 0038  
                  _infrared 1736             _BackLight_State 007B               __size_of_main 00A6  
              ?_ADC_convert 0059    __end_of_I2C_Master_Start 1692    __end_of_I2C_Master_Write 16B8  
        LCD_Write_Char@Data 0077                    intlevel1 0000                   stringcode 080A  
                _OSCCONbits 008F     __size_of_LCD_Write_4Bit 0018           ADC_convert@digits 00BA  
   __size_of_LCD_Write_Char 001B     __end_of_I2C_Master_Init 16A8     __end_of_I2C_Master_Wait 0856  
   __end_of_I2C_Master_Stop 169B             LCD_Init@I2C_Add 0020      __Umul8_16@multiplicand 0072  
                  stringdir 080A                    stringtab 0800           LCD_Set_Cursor@COL 0078  
         LCD_Set_Cursor@ROW 0079               ___fladd@signs 0028                ___fladd@aexp 0029  
              ___fladd@bexp 002A        __Umul8_16@multiplier 0024           __Umul8_16@product 0020  
