

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 05 01:28:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321                           
   322                           	psect	idataBANK1
   323  07FE                     __pidataBANK1:
   324                           
   325                           ;initializer for _BackLight_State
   326  07FE  3408               	retlw	8
   327  0013                     _SSPBUF	set	19
   328  0014                     _SSPCON	set	20
   329  0019                     _TXREG	set	25
   330  001A                     _RCREG	set	26
   331  0009                     _PORTE	set	9
   332  0008                     _PORTD	set	8
   333  0007                     _PORTC	set	7
   334  0006                     _PORTB	set	6
   335  0005                     _PORTA	set	5
   336  0012                     _T2CONbits	set	18
   337  000C                     _PIR1bits	set	12
   338  001B                     _CCPR2L	set	27
   339  001D                     _CCP2CONbits	set	29
   340  0017                     _CCP1CONbits	set	23
   341  001E                     _ADRESH	set	30
   342  0015                     _CCPR1L	set	21
   343  001F                     _ADCON0bits	set	31
   344  005E                     _PEIE	set	94
   345  005F                     _GIE	set	95
   346  0063                     _SSPIF	set	99
   347  0064                     _TXIF	set	100
   348  0037                     _RB7	set	55
   349  0028                     _RA0	set	40
   350  0066                     _ADIF	set	102
   351  0091                     _SSPCON2bits	set	145
   352  0093                     _SSPADD	set	147
   353  0094                     _SSPSTAT	set	148
   354  0091                     _SSPCON2	set	145
   355  008C                     _PIE1bits	set	140
   356  0092                     _PR2	set	146
   357  0087                     _TRISCbits	set	135
   358  009F                     _ADCON1bits	set	159
   359  008F                     _OSCCONbits	set	143
   360  0088                     _TRISD	set	136
   361  0086                     _TRISBbits	set	134
   362  009E                     _ADRESL	set	158
   363  0463                     _SSPIE	set	1123
   364  048B                     _RCEN	set	1163
   365  048E                     _ACKSTAT	set	1166
   366  048C                     _ACKEN	set	1164
   367  048D                     _ACKDT	set	1165
   368  048A                     _PEN	set	1162
   369  0489                     _RSEN	set	1161
   370  0488                     _SEN	set	1160
   371  043C                     _TRISC4	set	1084
   372  043B                     _TRISC3	set	1083
   373  0430                     _TRISB0	set	1072
   374  0428                     _TRISA0	set	1064
   375  0189                     _ANSELH	set	393
   376  0188                     _ANSEL	set	392
   377                           
   378                           	psect	strings
   379  1000                     __pstrings:
   380  1000                     stringtab:
   381  1000                     __stringtab:
   382                           
   383                           ;	String table - string pointers are 1 byte each
   384  1000  1BFF               	btfsc	btemp+1,7
   385  1001  280A               	ljmp	stringcode
   386  1002  1383               	bcf	3,7
   387  1003  187F               	btfsc	btemp+1,0
   388  1004  1783               	bsf	3,7
   389  1005  0800               	movf	0,w
   390  1006  0A84               	incf	4,f
   391  1007  1903               	skipnz
   392  1008  0AFF               	incf	btemp+1,f
   393  1009  0008               	return
   394  100A                     stringcode:
   395  100A                     stringdir:
   396  100A  3010               	movlw	high stringdir
   397  100B  008A               	movwf	10
   398  100C  0804               	movf	4,w
   399  100D  0A84               	incf	4,f
   400  100E  0782               	addwf	2,f
   401  100F                     __stringbase:
   402  100F  3400               	retlw	0
   403  1010                     __end_of__stringtab:
   404  1010                     STR_4:
   405  1010  3420               	retlw	32	;' '
   406  1011  3454               	retlw	84	;'T'
   407  1012  346F               	retlw	111	;'o'
   408  1013  3474               	retlw	116	;'t'
   409  1014  3461               	retlw	97	;'a'
   410  1015  346C               	retlw	108	;'l'
   411  1016  343A               	retlw	58	;':'
   412  1017  3451               	retlw	81	;'Q'
   413  1018  3400               	retlw	0
   414  1019                     STR_1:
   415  1019  3420               	retlw	32	;' '
   416  101A  3451               	retlw	81	;'Q'
   417  101B  3431               	retlw	49	;'1'
   418  101C  342E               	retlw	46	;'.'
   419  101D  3430               	retlw	48	;'0'
   420  101E  3430               	retlw	48	;'0'
   421  101F  343A               	retlw	58	;':'
   422  1020  3400               	retlw	0
   423  1021                     STR_2:
   424  1021  3420               	retlw	32	;' '
   425  1022  3451               	retlw	81	;'Q'
   426  1023  3430               	retlw	48	;'0'
   427  1024  342E               	retlw	46	;'.'
   428  1025  3435               	retlw	53	;'5'
   429  1026  3430               	retlw	48	;'0'
   430  1027  343A               	retlw	58	;':'
   431  1028  3400               	retlw	0
   432  1029                     STR_3:
   433  1029  3420               	retlw	32	;' '
   434  102A  3451               	retlw	81	;'Q'
   435  102B  3430               	retlw	48	;'0'
   436  102C  342E               	retlw	46	;'.'
   437  102D  3432               	retlw	50	;'2'
   438  102E  3435               	retlw	53	;'5'
   439  102F  343A               	retlw	58	;':'
   440  1030  3400               	retlw	0
   441  1031                     STR_5:
   442  1031  3425               	retlw	37	;'%'
   443  1032  3464               	retlw	100	;'d'
   444  1033  3400               	retlw	0
   445  1031                     
   446                           	psect	cinit
   447  000F                     start_initialization:	
   448                           ; #config settings
   449                           
   450  000F                     __initialization:
   451                           
   452                           ; Initialize objects allocated to BANK1
   453  000F  1683               	bsf	3,5	;RP0=1, select bank1
   454  0010  1303               	bcf	3,6	;RP1=0, select bank1
   455  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   456  0016  00E8               	movwf	__pdataBANK1& (0+127)
   457                           
   458                           ; Clear objects allocated to BANK3
   459  0017  1783               	bsf	3,7	;select IRP bank2
   460  0018  3090               	movlw	low __pbssBANK3
   461  0019  0084               	movwf	4
   462  001A  30B8               	movlw	low (__pbssBANK3+40)
   463  001B  160A  118A  22B4  120A  118A  	fcall	clear_ram0
   464                           
   465                           ; Clear objects allocated to BANK1
   466  0020  1383               	bcf	3,7	;select IRP bank0
   467  0021  30A0               	movlw	low __pbssBANK1
   468  0022  0084               	movwf	4
   469  0023  30D5               	movlw	low (__pbssBANK1+53)
   470  0024  160A  118A  22B4  120A  118A  	fcall	clear_ram0
   471                           
   472                           ; Clear objects allocated to BANK0
   473  0029  1283               	bcf	3,5	;RP0=0, select bank0
   474  002A  1303               	bcf	3,6	;RP1=0, select bank0
   475  002B  01EC               	clrf	__pbssBANK0& (0+127)
   476  002C  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   477  002D  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   478  002E  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   479                           
   480                           ; Clear objects allocated to COMMON
   481  002F  01F6               	clrf	__pbssCOMMON& (0+127)
   482  0030  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   483  0031  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   484  0032  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   485  0033                     end_of_initialization:	
   486                           ;End of C runtime variable initialization code
   487                           
   488  0033                     __end_of__initialization:
   489  0033  0183               	clrf	3
   490  0034  160A  118A  2B65   	ljmp	_main	;jump to C main() function
   491                           
   492                           	psect	bssCOMMON
   493  0076                     __pbssCOMMON:
   494  0076                     _residuo:
   495  0076                     	ds	1
   496  0077                     _counter:
   497  0077                     	ds	1
   498  0078                     _slave03:
   499  0078                     	ds	1
   500  0079                     _slave02:
   501  0079                     	ds	1
   502                           
   503                           	psect	bssBANK0
   504  006C                     __pbssBANK0:
   505  006C                     _units:
   506  006C                     	ds	1
   507  006D                     _tens:
   508  006D                     	ds	1
   509  006E                     _hundreds:
   510  006E                     	ds	1
   511  006F                     _slave01:
   512  006F                     	ds	1
   513                           
   514                           	psect	bssBANK1
   515  00A0                     __pbssBANK1:
   516  00A0                     _conv2:
   517  00A0                     	ds	4
   518  00A4                     _conv1:
   519  00A4                     	ds	4
   520  00A8                     _conv0:
   521  00A8                     	ds	4
   522  00AC                     _temp:
   523  00AC                     	ds	2
   524  00AE                     _i2c_add:
   525  00AE                     	ds	1
   526  00AF                     _RS:
   527  00AF                     	ds	1
   528  00B0                     _dec3:
   529  00B0                     	ds	1
   530  00B1                     _dec2:
   531  00B1                     	ds	1
   532  00B2                     _dec1:
   533  00B2                     	ds	1
   534  00B3                     _sum:
   535  00B3                     	ds	1
   536  00B4                     _valor:
   537  00B4                     	ds	1
   538  00B5                     _POT:
   539  00B5                     	ds	1
   540  00B6                     _CONT:
   541  00B6                     	ds	1
   542  00B7                     _converted03:
   543  00B7                     	ds	10
   544  00C1                     _converted02:
   545  00C1                     	ds	10
   546  00CB                     _converted01:
   547  00CB                     	ds	10
   548                           
   549                           	psect	dataBANK1
   550  00E8                     __pdataBANK1:
   551  00E8                     _BackLight_State:
   552  00E8                     	ds	1
   553                           
   554                           	psect	bssBANK3
   555  0190                     __pbssBANK3:
   556  0190                     _converted04:
   557  0190                     	ds	40
   558                           
   559                           	psect	clrtext
   560  12B4                     clear_ram0:	
   561                           ;	Called with FSR containing the base address, and
   562                           ;	W with the last address+1
   563                           
   564  12B4  0064               	clrwdt	;clear the watchdog before getting into this loop
   565  12B5                     clrloop0:
   566  12B5  0180               	clrf	0	;clear RAM location pointed to by FSR
   567  12B6  0A84               	incf	4,f	;increment pointer
   568  12B7  0604               	xorwf	4,w	;XOR with final address
   569  12B8  1903               	btfsc	3,2	;have we reached the end yet?
   570  12B9  3400               	retlw	0	;all done for this memory range, return
   571  12BA  0604               	xorwf	4,w	;XOR again to restore value
   572  12BB  2AB5               	goto	clrloop0	;do the next byte
   573                           
   574                           	psect	cstackBANK1
   575  00D5                     __pcstackBANK1:
   576  00D5                     ADC_convert@temp:
   577                           
   578                           ; 2 bytes @ 0x0
   579  00D5                     	ds	2
   580  00D7                     ADC_convert@j:
   581                           
   582                           ; 2 bytes @ 0x2
   583  00D7                     	ds	2
   584  00D9                     ADC_convert@data:
   585                           
   586                           ; 1 bytes @ 0x4
   587  00D9                     	ds	1
   588  00DA                     ADC_convert@x:
   589                           
   590                           ; 4 bytes @ 0x5
   591  00DA                     	ds	4
   592  00DE                     ADC_convert@i:
   593                           
   594                           ; 2 bytes @ 0x9
   595  00DE                     	ds	2
   596  00E0                     ADC_convert@digits:
   597                           
   598                           ; 2 bytes @ 0xB
   599  00E0                     	ds	2
   600  00E2                     ADC_convert@mu:
   601                           
   602                           ; 2 bytes @ 0xD
   603  00E2                     	ds	2
   604  00E4                     _LCD_Send$1338:
   605                           
   606                           ; 4 bytes @ 0xF
   607  00E4                     	ds	4
   608                           
   609                           	psect	cstackCOMMON
   610  0070                     __pcstackCOMMON:
   611  0070                     ?_setup:
   612  0070                     ?_LCD_Start:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_LCD_Send:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_I2C_Comunication:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_I2C_Master_Init:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_division:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_I2C_Master_Start:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_I2C_Master_Write:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_I2C_Read_Byte:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_I2C_Master_Stop:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_LCD_Init:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_LCD_Write_Char:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_IO_Expander_Write:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_CMD:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_isr:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_isr:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_main:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_I2C_Master_Wait:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_LCD_Write_4Bit:	
   664                           ; 1 bytes @ 0x0
   665                           
   666                           
   667                           ; 1 bytes @ 0x0
   668  0070                     	ds	4
   669  0074                     ??_setup:
   670  0074                     ??_I2C_Master_Init:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0074                     ??_I2C_Master_Start:	
   674                           ; 1 bytes @ 0x4
   675                           
   676  0074                     ??_I2C_Master_Write:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ??_I2C_Read_Byte:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     ??_I2C_Master_Stop:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     ??_I2C_Master_Wait:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     ?___bmul:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     ??___awdiv:	
   692                           ; 1 bytes @ 0x4
   693                           
   694  0074                     ??___awmod:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0074                     ?__Umul8_16:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     I2C_Master_Write@data:	
   701                           ; 2 bytes @ 0x4
   702                           
   703  0074                     ___bmul@multiplicand:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ___fltol@sign1:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     __Umul8_16@multiplicand:	
   710                           ; 1 bytes @ 0x4
   711                           
   712                           
   713                           ; 1 bytes @ 0x4
   714  0074                     	ds	1
   715  0075                     ??_IO_Expander_Write:
   716  0075                     ??___bmul:	
   717                           ; 1 bytes @ 0x5
   718                           
   719  0075                     division@valor:	
   720                           ; 1 bytes @ 0x5
   721                           
   722  0075                     IO_Expander_Write@Data:	
   723                           ; 1 bytes @ 0x5
   724                           
   725  0075                     ___fltol@exp1:	
   726                           ; 1 bytes @ 0x5
   727                           
   728                           
   729                           ; 1 bytes @ 0x5
   730  0075                     	ds	1
   731  0076                     ??___wmul:
   732  0076                     ??___flsub:	
   733                           ; 1 bytes @ 0x6
   734                           
   735                           
   736                           	psect	cstackBANK0
   737  0020                     __pcstackBANK0:	
   738                           ; 1 bytes @ 0x6
   739                           
   740  0020                     ?___flge:
   741  0020                     ??_I2C_Comunication:	
   742                           ; 1 bit 
   743                           
   744  0020                     ??__Umul8_16:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0020                     ??_LCD_Write_4Bit:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0020                     ?___awdiv:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0020                     ?___awmod:	
   754                           ; 2 bytes @ 0x0
   755                           
   756  0020                     ?___fltol:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0020                     ?___fladd:	
   760                           ; 4 bytes @ 0x0
   761                           
   762  0020                     ___bmul@product:	
   763                           ; 4 bytes @ 0x0
   764                           
   765  0020                     ___awdiv@divisor:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0020                     ___awmod@divisor:	
   769                           ; 2 bytes @ 0x0
   770                           
   771  0020                     ___flge@ff1:	
   772                           ; 2 bytes @ 0x0
   773                           
   774  0020                     ___fltol@f1:	
   775                           ; 4 bytes @ 0x0
   776                           
   777  0020                     ___fladd@b:	
   778                           ; 4 bytes @ 0x0
   779                           
   780                           
   781                           ; 4 bytes @ 0x0
   782  0020                     	ds	1
   783  0021                     LCD_Write_4Bit@Nibble:
   784  0021                     ___bmul@multiplier:	
   785                           ; 1 bytes @ 0x1
   786                           
   787                           
   788                           ; 1 bytes @ 0x1
   789  0021                     	ds	1
   790  0022                     ??_LCD_Write_Char:
   791  0022                     ??_LCD_CMD:	
   792                           ; 1 bytes @ 0x2
   793                           
   794  0022                     ___awdiv@dividend:	
   795                           ; 1 bytes @ 0x2
   796                           
   797  0022                     ___awmod@dividend:	
   798                           ; 2 bytes @ 0x2
   799                           
   800  0022                     __Umul8_16@product:	
   801                           ; 2 bytes @ 0x2
   802                           
   803                           
   804                           ; 2 bytes @ 0x2
   805  0022                     	ds	1
   806  0023                     LCD_CMD@CMD:
   807  0023                     LCD_Write_Char@Data:	
   808                           ; 1 bytes @ 0x3
   809                           
   810                           
   811                           ; 1 bytes @ 0x3
   812  0023                     	ds	1
   813  0024                     ??_LCD_Init:
   814  0024                     ?_LCD_Set_Cursor:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0024                     ?_LCD_Write_String:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0024                     ??___fltol:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0024                     LCD_Set_Cursor@COL:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0024                     ___awdiv@counter:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0024                     ___awmod@counter:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     LCD_Write_String@Str:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0024                     __Umul8_16@word_mpld:	
   836                           ; 2 bytes @ 0x4
   837                           
   838  0024                     ___flge@ff2:	
   839                           ; 2 bytes @ 0x4
   840                           
   841  0024                     ___fladd@a:	
   842                           ; 4 bytes @ 0x4
   843                           
   844                           
   845                           ; 4 bytes @ 0x4
   846  0024                     	ds	1
   847  0025                     ??_LCD_Set_Cursor:
   848  0025                     ___awdiv@sign:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0025                     ___awmod@sign:	
   852                           ; 1 bytes @ 0x5
   853                           
   854                           
   855                           ; 1 bytes @ 0x5
   856  0025                     	ds	1
   857  0026                     ??_LCD_Write_String:
   858  0026                     LCD_Init@I2C_Add:	
   859                           ; 1 bytes @ 0x6
   860                           
   861  0026                     __Umul8_16@multiplier:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0026                     ___awdiv@quotient:	
   865                           ; 1 bytes @ 0x6
   866                           
   867                           
   868                           ; 2 bytes @ 0x6
   869  0026                     	ds	1
   870  0027                     LCD_Set_Cursor@ROW:
   871                           
   872                           ; 1 bytes @ 0x7
   873  0027                     	ds	1
   874  0028                     ??_division:
   875  0028                     ??___flge:	
   876                           ; 1 bytes @ 0x8
   877                           
   878  0028                     ??___fladd:	
   879                           ; 1 bytes @ 0x8
   880                           
   881                           
   882                           ; 1 bytes @ 0x8
   883  0028                     	ds	1
   884  0029                     ?___wmul:
   885  0029                     LCD_Write_String@i:	
   886                           ; 2 bytes @ 0x9
   887                           
   888  0029                     ___wmul@multiplier:	
   889                           ; 2 bytes @ 0x9
   890                           
   891                           
   892                           ; 2 bytes @ 0x9
   893  0029                     	ds	2
   894  002B                     ??_LCD_Start:
   895  002B                     ___wmul@multiplicand:	
   896                           ; 1 bytes @ 0xB
   897                           
   898                           
   899                           ; 2 bytes @ 0xB
   900  002B                     	ds	2
   901  002D                     ___wmul@product:
   902                           
   903                           ; 2 bytes @ 0xD
   904  002D                     	ds	2
   905  002F                     ?___xxtofl:
   906  002F                     ___xxtofl@val:	
   907                           ; 4 bytes @ 0xF
   908                           
   909                           
   910                           ; 4 bytes @ 0xF
   911  002F                     	ds	1
   912  0030                     ___fladd@signs:
   913                           
   914                           ; 1 bytes @ 0x10
   915  0030                     	ds	1
   916  0031                     ___fladd@aexp:
   917                           
   918                           ; 1 bytes @ 0x11
   919  0031                     	ds	1
   920  0032                     ___fladd@bexp:
   921                           
   922                           ; 1 bytes @ 0x12
   923  0032                     	ds	1
   924  0033                     ??___xxtofl:
   925  0033                     ___fladd@grs:	
   926                           ; 1 bytes @ 0x13
   927                           
   928                           
   929                           ; 1 bytes @ 0x13
   930  0033                     	ds	4
   931  0037                     ___xxtofl@sign:
   932                           
   933                           ; 1 bytes @ 0x17
   934  0037                     	ds	1
   935  0038                     ___xxtofl@exp:
   936                           
   937                           ; 1 bytes @ 0x18
   938  0038                     	ds	1
   939  0039                     ___xxtofl@arg:
   940                           
   941                           ; 4 bytes @ 0x19
   942  0039                     	ds	4
   943  003D                     ?___flsub:
   944  003D                     ?___fldiv:	
   945                           ; 4 bytes @ 0x1D
   946                           
   947  003D                     ___flsub@a:	
   948                           ; 4 bytes @ 0x1D
   949                           
   950  003D                     ___fldiv@a:	
   951                           ; 4 bytes @ 0x1D
   952                           
   953                           
   954                           ; 4 bytes @ 0x1D
   955  003D                     	ds	4
   956  0041                     ___flsub@b:
   957  0041                     ___fldiv@b:	
   958                           ; 4 bytes @ 0x21
   959                           
   960                           
   961                           ; 4 bytes @ 0x21
   962  0041                     	ds	4
   963  0045                     ??___fldiv:
   964  0045                     ?___flmul:	
   965                           ; 1 bytes @ 0x25
   966                           
   967  0045                     ___flmul@b:	
   968                           ; 4 bytes @ 0x25
   969                           
   970                           
   971                           ; 4 bytes @ 0x25
   972  0045                     	ds	4
   973  0049                     ___flmul@a:
   974                           
   975                           ; 4 bytes @ 0x29
   976  0049                     	ds	1
   977  004A                     ___fldiv@rem:
   978                           
   979                           ; 4 bytes @ 0x2A
   980  004A                     	ds	3
   981  004D                     ??___flmul:
   982                           
   983                           ; 1 bytes @ 0x2D
   984  004D                     	ds	1
   985  004E                     ___fldiv@sign:
   986                           
   987                           ; 1 bytes @ 0x2E
   988  004E                     	ds	1
   989  004F                     ___fldiv@new_exp:
   990                           
   991                           ; 2 bytes @ 0x2F
   992  004F                     	ds	2
   993  0051                     ___fldiv@grs:
   994                           
   995                           ; 4 bytes @ 0x31
   996  0051                     	ds	1
   997  0052                     ___flmul@sign:
   998                           
   999                           ; 1 bytes @ 0x32
  1000  0052                     	ds	1
  1001  0053                     ___flmul@aexp:
  1002                           
  1003                           ; 1 bytes @ 0x33
  1004  0053                     	ds	1
  1005  0054                     ___flmul@grs:
  1006                           
  1007                           ; 4 bytes @ 0x34
  1008  0054                     	ds	1
  1009  0055                     ___fldiv@bexp:
  1010                           
  1011                           ; 1 bytes @ 0x35
  1012  0055                     	ds	1
  1013  0056                     ___fldiv@aexp:
  1014                           
  1015                           ; 1 bytes @ 0x36
  1016  0056                     	ds	2
  1017  0058                     ___flmul@bexp:
  1018                           
  1019                           ; 1 bytes @ 0x38
  1020  0058                     	ds	1
  1021  0059                     ___flmul@prod:
  1022                           
  1023                           ; 4 bytes @ 0x39
  1024  0059                     	ds	4
  1025  005D                     ___flmul@temp:
  1026                           
  1027                           ; 2 bytes @ 0x3D
  1028  005D                     	ds	2
  1029  005F                     ?_ADC_convert:
  1030  005F                     ADC_convert@a:	
  1031                           ; 1 bytes @ 0x3F
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0x3F
  1035  005F                     	ds	4
  1036  0063                     ADC_convert@place:
  1037                           
  1038                           ; 2 bytes @ 0x43
  1039  0063                     	ds	2
  1040  0065                     ??_ADC_convert:
  1041                           
  1042                           ; 1 bytes @ 0x45
  1043  0065                     	ds	2
  1044  0067                     ??_LCD_Send:
  1045                           
  1046                           ; 1 bytes @ 0x47
  1047  0067                     	ds	4
  1048  006B                     ??_main:
  1049                           
  1050                           ; 1 bytes @ 0x4B
  1051  006B                     	ds	1
  1052                           
  1053                           	psect	maintext
  1054  1365                     __pmaintext:	
  1055 ;;
  1056 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1057 ;;
  1058 ;; *************** function _main *****************
  1059 ;; Defined at:
  1060 ;;		line 94 in file "Master_PIC.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : B00/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          0       1       0       0       0
  1077 ;;      Totals:         0       1       0       0       0
  1078 ;;Total ram usage:        1 bytes
  1079 ;; Hardware stack levels required when called: 8
  1080 ;; This function calls:
  1081 ;;		_I2C_Comunication
  1082 ;;		_LCD_Send
  1083 ;;		_LCD_Start
  1084 ;;		_setup
  1085 ;; This function is called by:
  1086 ;;		Startup code after reset
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _main
  1092  1365                     _main:
  1093  1365                     l4337:	
  1094                           ;incstack = 0
  1095                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1096                           
  1097                           
  1098                           ;Master_PIC.c: 96: 
  1099  1365  160A  118A  24D6  160A  118A  	fcall	_setup
  1100  136A                     l4339:
  1101                           
  1102                           ;Master_PIC.c: 97:     TRISD = 0;
  1103  136A  160A  118A  25FE  160A  118A  	fcall	_LCD_Start
  1104  136F                     l4341:
  1105                           
  1106                           ;Master_PIC.c: 100: ;Master_PIC.c: 103: 
  1107  136F  120A  158A  21C2  160A  118A  	fcall	_LCD_Send
  1108                           
  1109                           ;Master_PIC.c: 106:     OSCCONbits.IRCF2 = 1;
  1110  1374  160A  118A  266D  160A  118A  	fcall	_I2C_Comunication
  1111  1379                     l4343:
  1112                           
  1113                           ;Master_PIC.c: 109: 
  1114  1379  3041               	movlw	65
  1115  137A  1283               	bcf	3,5	;RP0=0, select bank0
  1116  137B  1303               	bcf	3,6	;RP1=0, select bank0
  1117  137C  00EB               	movwf	??_main
  1118  137D                     u5897:
  1119  137D  0BEB               	decfsz	??_main,f
  1120  137E  2B7D               	goto	u5897
  1121  137F  2B80               	nop2
  1122  1380                     l4345:
  1123                           
  1124                           ;Master_PIC.c: 110:     ADCON0bits.CHS = 0;
  1125  1380  1283               	bcf	3,5	;RP0=0, select bank0
  1126  1381  1303               	bcf	3,6	;RP1=0, select bank0
  1127  1382  149F               	bsf	31,1	;volatile
  1128  1383  2B6F               	goto	l4341
  1129  1384  120A  118A  280C   	ljmp	start
  1130  1387                     __end_of_main:
  1131                           
  1132                           	psect	text1
  1133  14D6                     __ptext1:	
  1134 ;; *************** function _setup *****************
  1135 ;; Defined at:
  1136 ;;		line 121 in file "Master_PIC.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          1       0       0       0       0
  1153 ;;      Totals:         1       0       0       0       0
  1154 ;;Total ram usage:        1 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 2
  1157 ;; This function calls:
  1158 ;;		_I2C_Master_Init
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _setup
  1166  14D6                     _setup:
  1167  14D6                     l1925:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1170                           
  1171                           
  1172                           ;Master_PIC.c: 123:     PR2 = 250;
  1173  14D6  3001               	movlw	1
  1174  14D7  1683               	bsf	3,5	;RP0=1, select bank3
  1175  14D8  1703               	bsf	3,6	;RP1=1, select bank3
  1176  14D9  0088               	movwf	8	;volatile
  1177  14DA                     l1927:
  1178                           
  1179                           ;Master_PIC.c: 124:     CCP1CONbits.P1M = 0;
  1180  14DA  0189               	clrf	9	;volatile
  1181  14DB                     l1929:
  1182                           
  1183                           ;Master_PIC.c: 127: 
  1184  14DB  1683               	bsf	3,5	;RP0=1, select bank1
  1185  14DC  1303               	bcf	3,6	;RP1=0, select bank1
  1186  14DD  1405               	bsf	5,0	;volatile
  1187  14DE                     l1931:
  1188                           
  1189                           ;Master_PIC.c: 130:     CCP1CONbits.DC1B = 0;
  1190  14DE  1406               	bsf	6,0	;volatile
  1191  14DF                     l1933:
  1192                           
  1193                           ;Master_PIC.c: 131:     CCPR2L = 0x0F;
  1194  14DF  1386               	bcf	6,7	;volatile
  1195  14E0                     l1935:
  1196                           
  1197                           ;Master_PIC.c: 136:     PIR1bits.TMR2IF = 0;
  1198  14E0  0188               	clrf	8	;volatile
  1199  14E1                     l1937:
  1200                           
  1201                           ;Master_PIC.c: 143:     TRISCbits.TRISC1 = 0;
  1202  14E1  160F               	bsf	15,4	;volatile
  1203  14E2                     l1939:
  1204                           
  1205                           ;Master_PIC.c: 144:     PIE1bits.ADIE = 1;
  1206  14E2  168F               	bsf	15,5	;volatile
  1207  14E3                     l1941:
  1208                           
  1209                           ;Master_PIC.c: 145:     PIR1bits.ADIF = 0;
  1210  14E3  170F               	bsf	15,6	;volatile
  1211  14E4                     l1943:
  1212                           
  1213                           ;Master_PIC.c: 146: 
  1214  14E4  140F               	bsf	15,0	;volatile
  1215  14E5                     l1945:
  1216                           
  1217                           ;Master_PIC.c: 149:     PORTB = 0x00;
  1218  14E5  30C3               	movlw	-61
  1219  14E6  1283               	bcf	3,5	;RP0=0, select bank0
  1220  14E7  1303               	bcf	3,6	;RP1=0, select bank0
  1221  14E8  059F               	andwf	31,f	;volatile
  1222  14E9                     l1947:
  1223                           
  1224                           ;Master_PIC.c: 150:     PORTC = 0x00;
  1225  14E9  3042               	movlw	66
  1226  14EA  00F4               	movwf	??_setup
  1227  14EB                     u5907:
  1228  14EB  0BF4               	decfsz	??_setup,f
  1229  14EC  2CEB               	goto	u5907
  1230  14ED  0000               	nop
  1231  14EE                     l1949:
  1232                           
  1233                           ;Master_PIC.c: 152:     PORTE = 0x00;
  1234  14EE  1283               	bcf	3,5	;RP0=0, select bank0
  1235  14EF  1303               	bcf	3,6	;RP1=0, select bank0
  1236  14F0  131F               	bcf	31,6	;volatile
  1237  14F1                     l1951:
  1238                           
  1239                           ;Master_PIC.c: 153: 
  1240  14F1  179F               	bsf	31,7	;volatile
  1241  14F2                     l1953:
  1242                           
  1243                           ;Master_PIC.c: 154: 
  1244  14F2  141F               	bsf	31,0	;volatile
  1245  14F3                     l1955:
  1246                           
  1247                           ;Master_PIC.c: 155:     I2C_Master_Init();
  1248  14F3  1683               	bsf	3,5	;RP0=1, select bank1
  1249  14F4  1303               	bcf	3,6	;RP1=0, select bank1
  1250  14F5  139F               	bcf	31,7	;volatile
  1251  14F6                     l1957:
  1252                           
  1253                           ;Master_PIC.c: 156: }
  1254  14F6  129F               	bcf	31,5	;volatile
  1255  14F7                     l1959:
  1256                           
  1257                           ;Master_PIC.c: 157: 
  1258  14F7  121F               	bcf	31,4	;volatile
  1259  14F8                     l1961:
  1260                           
  1261                           ;Master_PIC.c: 160:     if(RA0 == 0){
  1262  14F8  1507               	bsf	7,2	;volatile
  1263  14F9                     l1963:
  1264                           
  1265                           ;Master_PIC.c: 161:         RB7 = 1;
  1266  14F9  1487               	bsf	7,1	;volatile
  1267  14FA                     l1965:
  1268                           
  1269                           ;Master_PIC.c: 162:         counter++;
  1270  14FA  30FA               	movlw	250
  1271  14FB  0092               	movwf	18	;volatile
  1272  14FC                     l1967:
  1273                           
  1274                           ;Master_PIC.c: 163:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1275  14FC  303F               	movlw	-193
  1276  14FD  1283               	bcf	3,5	;RP0=0, select bank0
  1277  14FE  1303               	bcf	3,6	;RP1=0, select bank0
  1278  14FF  0597               	andwf	23,f	;volatile
  1279  1500                     l1969:
  1280                           
  1281                           ;Master_PIC.c: 164:         RB7 = 0;
  1282  1500  300F               	movlw	15
  1283  1501  049D               	iorwf	29,f	;volatile
  1284  1502                     l1971:
  1285                           
  1286                           ;Master_PIC.c: 165:     }
  1287  1502  0817               	movf	23,w	;volatile
  1288  1503  39F0               	andlw	-16
  1289  1504  380C               	iorlw	12
  1290  1505  0097               	movwf	23	;volatile
  1291                           
  1292                           ;Master_PIC.c: 168:     }
  1293  1506  300F               	movlw	15
  1294  1507  0095               	movwf	21	;volatile
  1295  1508                     l1973:
  1296                           
  1297                           ;Master_PIC.c: 169: }
  1298  1508  30CF               	movlw	-49
  1299  1509  0597               	andwf	23,f	;volatile
  1300  150A                     l1975:
  1301                           
  1302                           ;Master_PIC.c: 170: 
  1303  150A  300F               	movlw	15
  1304  150B  009B               	movwf	27	;volatile
  1305  150C                     l1977:
  1306                           
  1307                           ;Master_PIC.c: 171: 
  1308  150C  121D               	bcf	29,4	;volatile
  1309  150D                     l1979:
  1310                           
  1311                           ;Master_PIC.c: 172: void Text(void){
  1312  150D  129D               	bcf	29,5	;volatile
  1313  150E                     l1981:
  1314                           
  1315                           ;Master_PIC.c: 175: 
  1316  150E  108C               	bcf	12,1	;volatile
  1317  150F                     l1983:
  1318                           
  1319                           ;Master_PIC.c: 176:      if (RCREG == 'a'){
  1320  150F  1012               	bcf	18,0	;volatile
  1321  1510                     l1985:
  1322                           
  1323                           ;Master_PIC.c: 177:      _delay((unsigned long)((50)*(8000000/4000.0)));
  1324  1510  1492               	bsf	18,1	;volatile
  1325  1511                     l1987:
  1326                           
  1327                           ;Master_PIC.c: 178:     if(TXIF == 1){
  1328  1511  1512               	bsf	18,2	;volatile
  1329  1512                     l164:	
  1330                           ;Master_PIC.c: 179:         TXREG = hundreds;
  1331                           
  1332  1512  1C8C               	btfss	12,1	;volatile
  1333  1513  2D15               	goto	u1901
  1334  1514  2D16               	goto	u1900
  1335  1515                     u1901:
  1336  1515  2D12               	goto	l164
  1337  1516                     u1900:
  1338  1516                     l166:
  1339                           
  1340                           ;Master_PIC.c: 180:     }
  1341  1516  108C               	bcf	12,1	;volatile
  1342                           
  1343                           ;Master_PIC.c: 181:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1344  1517  1683               	bsf	3,5	;RP0=1, select bank1
  1345  1518  1303               	bcf	3,6	;RP1=0, select bank1
  1346  1519  1107               	bcf	7,2	;volatile
  1347                           
  1348                           ;Master_PIC.c: 182:     if(TXIF == 1){
  1349  151A  1087               	bcf	7,1	;volatile
  1350                           
  1351                           ;Master_PIC.c: 183:         TXREG = tens;
  1352  151B  170C               	bsf	12,6	;volatile
  1353                           
  1354                           ;Master_PIC.c: 184:        }
  1355  151C  1283               	bcf	3,5	;RP0=0, select bank0
  1356  151D  1303               	bcf	3,6	;RP1=0, select bank0
  1357  151E  130C               	bcf	12,6	;volatile
  1358  151F                     l1989:
  1359                           
  1360                           ;Master_PIC.c: 187:         TXREG = units;
  1361  151F  0185               	clrf	5	;volatile
  1362                           
  1363                           ;Master_PIC.c: 188:        }
  1364  1520  0186               	clrf	6	;volatile
  1365                           
  1366                           ;Master_PIC.c: 189:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1367  1521  0187               	clrf	7	;volatile
  1368                           
  1369                           ;Master_PIC.c: 190: 
  1370  1522  0188               	clrf	8	;volatile
  1371                           
  1372                           ;Master_PIC.c: 191:      }
  1373  1523  0189               	clrf	9	;volatile
  1374  1524                     l1991:
  1375                           
  1376                           ;Master_PIC.c: 194: 
  1377  1524  160A  118A  22DB  160A  118A  	fcall	_I2C_Master_Init
  1378  1529                     l167:
  1379  1529  0008               	return
  1380  152A                     __end_of_setup:
  1381                           
  1382                           	psect	text2
  1383  15FE                     __ptext2:	
  1384 ;; *************** function _LCD_Start *****************
  1385 ;; Defined at:
  1386 ;;		line 256 in file "Master_PIC.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0
  1402 ;;      Temps:          0       3       0       0       0
  1403 ;;      Totals:         0       3       0       0       0
  1404 ;;Total ram usage:        3 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 7
  1407 ;; This function calls:
  1408 ;;		_I2C_Master_Init
  1409 ;;		_LCD_Init
  1410 ;;		_LCD_Set_Cursor
  1411 ;;		_LCD_Write_String
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _LCD_Start
  1419  15FE                     _LCD_Start:
  1420  15FE                     l4249:	
  1421                           ;incstack = 0
  1422                           ; Regs used in _LCD_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1423                           
  1424                           
  1425                           ;Master_PIC.c: 257:     dec3 = slave01 * 100;
  1426  15FE  160A  118A  22DB  160A  118A  	fcall	_I2C_Master_Init
  1427                           
  1428                           ;Master_PIC.c: 258:     sum = dec3 + dec1 + dec2;
  1429  1603  304E               	movlw	78
  1430  1604  160A  118A  2765  160A  118A  	fcall	_LCD_Init
  1431  1609                     l4251:
  1432                           
  1433                           ;Master_PIC.c: 260:     division(sum);
  1434  1609  1283               	bcf	3,5	;RP0=0, select bank0
  1435  160A  1303               	bcf	3,6	;RP1=0, select bank0
  1436  160B  01A4               	clrf	LCD_Set_Cursor@COL
  1437  160C  0AA4               	incf	LCD_Set_Cursor@COL,f
  1438  160D  3001               	movlw	1
  1439  160E  160A  118A  241D  160A  118A  	fcall	_LCD_Set_Cursor
  1440  1613                     l4253:
  1441                           
  1442                           ;Master_PIC.c: 261:     LCD_Set_Cursor(4, 9);
  1443  1613  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1444  1614  1283               	bcf	3,5	;RP0=0, select bank0
  1445  1615  1303               	bcf	3,6	;RP1=0, select bank0
  1446  1616  00A4               	movwf	LCD_Write_String@Str
  1447  1617  3080               	movlw	128
  1448  1618  00A5               	movwf	LCD_Write_String@Str+1
  1449  1619  160A  118A  2490  160A  118A  	fcall	_LCD_Write_String
  1450  161E                     l4255:
  1451                           
  1452                           ;Master_PIC.c: 262:     LCD_Write_Char(hundreds);
  1453  161E  1283               	bcf	3,5	;RP0=0, select bank0
  1454  161F  1303               	bcf	3,6	;RP1=0, select bank0
  1455  1620  01A4               	clrf	LCD_Set_Cursor@COL
  1456  1621  0AA4               	incf	LCD_Set_Cursor@COL,f
  1457  1622  3002               	movlw	2
  1458  1623  160A  118A  241D  160A  118A  	fcall	_LCD_Set_Cursor
  1459  1628                     l4257:
  1460                           
  1461                           ;Master_PIC.c: 263:     LCD_Set_Cursor(4, 10);
  1462  1628  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1463  1629  1283               	bcf	3,5	;RP0=0, select bank0
  1464  162A  1303               	bcf	3,6	;RP1=0, select bank0
  1465  162B  00A4               	movwf	LCD_Write_String@Str
  1466  162C  3080               	movlw	128
  1467  162D  00A5               	movwf	LCD_Write_String@Str+1
  1468  162E  160A  118A  2490  160A  118A  	fcall	_LCD_Write_String
  1469  1633                     l4259:
  1470                           
  1471                           ;Master_PIC.c: 264:     LCD_Write_Char(46);
  1472  1633  1283               	bcf	3,5	;RP0=0, select bank0
  1473  1634  1303               	bcf	3,6	;RP1=0, select bank0
  1474  1635  01A4               	clrf	LCD_Set_Cursor@COL
  1475  1636  0AA4               	incf	LCD_Set_Cursor@COL,f
  1476  1637  3003               	movlw	3
  1477  1638  160A  118A  241D  160A  118A  	fcall	_LCD_Set_Cursor
  1478  163D                     l4261:
  1479                           
  1480                           ;Master_PIC.c: 265:     LCD_Set_Cursor(4, 11);
  1481  163D  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1482  163E  1283               	bcf	3,5	;RP0=0, select bank0
  1483  163F  1303               	bcf	3,6	;RP1=0, select bank0
  1484  1640  00A4               	movwf	LCD_Write_String@Str
  1485  1641  3080               	movlw	128
  1486  1642  00A5               	movwf	LCD_Write_String@Str+1
  1487  1643  160A  118A  2490  160A  118A  	fcall	_LCD_Write_String
  1488  1648                     l4263:
  1489                           
  1490                           ;Master_PIC.c: 266:     LCD_Write_Char(tens);
  1491  1648  1283               	bcf	3,5	;RP0=0, select bank0
  1492  1649  1303               	bcf	3,6	;RP1=0, select bank0
  1493  164A  01A4               	clrf	LCD_Set_Cursor@COL
  1494  164B  0AA4               	incf	LCD_Set_Cursor@COL,f
  1495  164C  3004               	movlw	4
  1496  164D  160A  118A  241D  160A  118A  	fcall	_LCD_Set_Cursor
  1497  1652                     l4265:
  1498                           
  1499                           ;Master_PIC.c: 267:     LCD_Set_Cursor(4, 12);
  1500  1652  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1501  1653  1283               	bcf	3,5	;RP0=0, select bank0
  1502  1654  1303               	bcf	3,6	;RP1=0, select bank0
  1503  1655  00A4               	movwf	LCD_Write_String@Str
  1504  1656  3080               	movlw	128
  1505  1657  00A5               	movwf	LCD_Write_String@Str+1
  1506  1658  160A  118A  2490  160A  118A  	fcall	_LCD_Write_String
  1507  165D                     l4267:
  1508                           
  1509                           ;Master_PIC.c: 268:     LCD_Write_Char(units);
  1510  165D  301A               	movlw	26
  1511  165E  1283               	bcf	3,5	;RP0=0, select bank0
  1512  165F  1303               	bcf	3,6	;RP1=0, select bank0
  1513  1660  00AD               	movwf	??_LCD_Start+2
  1514  1661  305E               	movlw	94
  1515  1662  00AC               	movwf	??_LCD_Start+1
  1516  1663  306D               	movlw	109
  1517  1664  00AB               	movwf	??_LCD_Start
  1518  1665                     u5917:
  1519  1665  0BAB               	decfsz	??_LCD_Start,f
  1520  1666  2E65               	goto	u5917
  1521  1667  0BAC               	decfsz	??_LCD_Start+1,f
  1522  1668  2E65               	goto	u5917
  1523  1669  0BAD               	decfsz	??_LCD_Start+2,f
  1524  166A  2E65               	goto	u5917
  1525  166B  2E6C               	nop2
  1526  166C                     l185:
  1527  166C  0008               	return
  1528  166D                     __end_of_LCD_Start:
  1529                           
  1530                           	psect	text3
  1531  1765                     __ptext3:	
  1532 ;; *************** function _LCD_Init *****************
  1533 ;; Defined at:
  1534 ;;		line 122 in file "I2C_Master.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  I2C_Add         1    wreg     unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  I2C_Add         1    6[BANK0 ] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         0       1       0       0       0
  1550 ;;      Temps:          0       2       0       0       0
  1551 ;;      Totals:         0       3       0       0       0
  1552 ;;Total ram usage:        3 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 6
  1555 ;; This function calls:
  1556 ;;		_IO_Expander_Write
  1557 ;;		_LCD_CMD
  1558 ;; This function is called by:
  1559 ;;		_LCD_Start
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _LCD_Init
  1565  1765                     _LCD_Init:
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1569                           ;LCD_Init@I2C_Add stored from wreg
  1570  1765  1283               	bcf	3,5	;RP0=0, select bank0
  1571  1766  1303               	bcf	3,6	;RP1=0, select bank0
  1572  1767  00A6               	movwf	LCD_Init@I2C_Add
  1573  1768                     l4081:
  1574                           
  1575                           ;I2C_Master.c: 122: void LCD_Init(unsigned char I2C_Add);I2C_Master.c: 123: {;I2C_Master
      +                          .c: 124:   i2c_add = I2C_Add;
  1576  1768  0826               	movf	LCD_Init@I2C_Add,w
  1577  1769  00A4               	movwf	??_LCD_Init
  1578  176A  0824               	movf	??_LCD_Init,w
  1579  176B  1683               	bsf	3,5	;RP0=1, select bank1
  1580  176C  1303               	bcf	3,6	;RP1=0, select bank1
  1581  176D  00AE               	movwf	_i2c_add^(0+128)
  1582  176E                     l4083:
  1583                           
  1584                           ;I2C_Master.c: 125:   IO_Expander_Write(0x00);
  1585  176E  3000               	movlw	0
  1586  176F  160A  118A  2326  160A  118A  	fcall	_IO_Expander_Write
  1587  1774                     l4085:
  1588                           
  1589                           ;I2C_Master.c: 126:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1590  1774  304E               	movlw	78
  1591  1775  1283               	bcf	3,5	;RP0=0, select bank0
  1592  1776  1303               	bcf	3,6	;RP1=0, select bank0
  1593  1777  00A5               	movwf	??_LCD_Init+1
  1594  1778  30EA               	movlw	234
  1595  1779  00A4               	movwf	??_LCD_Init
  1596  177A                     u5927:
  1597  177A  0BA4               	decfsz	??_LCD_Init,f
  1598  177B  2F7A               	goto	u5927
  1599  177C  0BA5               	decfsz	??_LCD_Init+1,f
  1600  177D  2F7A               	goto	u5927
  1601  177E  0000               	nop
  1602                           
  1603                           ;I2C_Master.c: 127:   LCD_CMD(0x03);
  1604  177F  3003               	movlw	3
  1605  1780  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1606  1785                     l4087:
  1607                           
  1608                           ;I2C_Master.c: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1609  1785  300D               	movlw	13
  1610  1786  1283               	bcf	3,5	;RP0=0, select bank0
  1611  1787  1303               	bcf	3,6	;RP1=0, select bank0
  1612  1788  00A5               	movwf	??_LCD_Init+1
  1613  1789  30FB               	movlw	251
  1614  178A  00A4               	movwf	??_LCD_Init
  1615  178B                     u5937:
  1616  178B  0BA4               	decfsz	??_LCD_Init,f
  1617  178C  2F8B               	goto	u5937
  1618  178D  0BA5               	decfsz	??_LCD_Init+1,f
  1619  178E  2F8B               	goto	u5937
  1620  178F                     l4089:
  1621                           
  1622                           ;I2C_Master.c: 129:   LCD_CMD(0x03);
  1623  178F  3003               	movlw	3
  1624  1790  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1625                           
  1626                           ;I2C_Master.c: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1627  1795  300D               	movlw	13
  1628  1796  1283               	bcf	3,5	;RP0=0, select bank0
  1629  1797  1303               	bcf	3,6	;RP1=0, select bank0
  1630  1798  00A5               	movwf	??_LCD_Init+1
  1631  1799  30FB               	movlw	251
  1632  179A  00A4               	movwf	??_LCD_Init
  1633  179B                     u5947:
  1634  179B  0BA4               	decfsz	??_LCD_Init,f
  1635  179C  2F9B               	goto	u5947
  1636  179D  0BA5               	decfsz	??_LCD_Init+1,f
  1637  179E  2F9B               	goto	u5947
  1638  179F                     l4091:
  1639                           
  1640                           ;I2C_Master.c: 131:   LCD_CMD(0x03);
  1641  179F  3003               	movlw	3
  1642  17A0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1643  17A5                     l4093:
  1644                           
  1645                           ;I2C_Master.c: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1646  17A5  300D               	movlw	13
  1647  17A6  1283               	bcf	3,5	;RP0=0, select bank0
  1648  17A7  1303               	bcf	3,6	;RP1=0, select bank0
  1649  17A8  00A5               	movwf	??_LCD_Init+1
  1650  17A9  30FB               	movlw	251
  1651  17AA  00A4               	movwf	??_LCD_Init
  1652  17AB                     u5957:
  1653  17AB  0BA4               	decfsz	??_LCD_Init,f
  1654  17AC  2FAB               	goto	u5957
  1655  17AD  0BA5               	decfsz	??_LCD_Init+1,f
  1656  17AE  2FAB               	goto	u5957
  1657                           
  1658                           ;I2C_Master.c: 133:   LCD_CMD(0x02);
  1659  17AF  3002               	movlw	2
  1660  17B0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1661  17B5                     l4095:
  1662                           
  1663                           ;I2C_Master.c: 134:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1664  17B5  300D               	movlw	13
  1665  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  1666  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  1667  17B8  00A5               	movwf	??_LCD_Init+1
  1668  17B9  30FB               	movlw	251
  1669  17BA  00A4               	movwf	??_LCD_Init
  1670  17BB                     u5967:
  1671  17BB  0BA4               	decfsz	??_LCD_Init,f
  1672  17BC  2FBB               	goto	u5967
  1673  17BD  0BA5               	decfsz	??_LCD_Init+1,f
  1674  17BE  2FBB               	goto	u5967
  1675  17BF                     l4097:
  1676                           
  1677                           ;I2C_Master.c: 135:   LCD_CMD(0x20 | (2 << 2));
  1678  17BF  3028               	movlw	40
  1679  17C0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1680                           
  1681                           ;I2C_Master.c: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1682  17C5  3082               	movlw	130
  1683  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  1684  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  1685  17C8  00A5               	movwf	??_LCD_Init+1
  1686  17C9  30DD               	movlw	221
  1687  17CA  00A4               	movwf	??_LCD_Init
  1688  17CB                     u5977:
  1689  17CB  0BA4               	decfsz	??_LCD_Init,f
  1690  17CC  2FCB               	goto	u5977
  1691  17CD  0BA5               	decfsz	??_LCD_Init+1,f
  1692  17CE  2FCB               	goto	u5977
  1693  17CF                     l4099:
  1694                           
  1695                           ;I2C_Master.c: 137:   LCD_CMD(0x0C);
  1696  17CF  300C               	movlw	12
  1697  17D0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1698  17D5                     l4101:
  1699                           
  1700                           ;I2C_Master.c: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1701  17D5  3082               	movlw	130
  1702  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  1703  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  1704  17D8  00A5               	movwf	??_LCD_Init+1
  1705  17D9  30DD               	movlw	221
  1706  17DA  00A4               	movwf	??_LCD_Init
  1707  17DB                     u5987:
  1708  17DB  0BA4               	decfsz	??_LCD_Init,f
  1709  17DC  2FDB               	goto	u5987
  1710  17DD  0BA5               	decfsz	??_LCD_Init+1,f
  1711  17DE  2FDB               	goto	u5987
  1712                           
  1713                           ;I2C_Master.c: 139:   LCD_CMD(0x01);
  1714  17DF  3001               	movlw	1
  1715  17E0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1716  17E5                     l4103:
  1717                           
  1718                           ;I2C_Master.c: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1719  17E5  3082               	movlw	130
  1720  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  1721  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  1722  17E8  00A5               	movwf	??_LCD_Init+1
  1723  17E9  30DD               	movlw	221
  1724  17EA  00A4               	movwf	??_LCD_Init
  1725  17EB                     u5997:
  1726  17EB  0BA4               	decfsz	??_LCD_Init,f
  1727  17EC  2FEB               	goto	u5997
  1728  17ED  0BA5               	decfsz	??_LCD_Init+1,f
  1729  17EE  2FEB               	goto	u5997
  1730  17EF                     l4105:
  1731                           
  1732                           ;I2C_Master.c: 141:   LCD_CMD(0x04 | 0x02);
  1733  17EF  3006               	movlw	6
  1734  17F0  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  1735                           
  1736                           ;I2C_Master.c: 142:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1737  17F5  3082               	movlw	130
  1738  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  1739  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  1740  17F8  00A5               	movwf	??_LCD_Init+1
  1741  17F9  30DD               	movlw	221
  1742  17FA  00A4               	movwf	??_LCD_Init
  1743  17FB                     u6007:
  1744  17FB  0BA4               	decfsz	??_LCD_Init,f
  1745  17FC  2FFB               	goto	u6007
  1746  17FD  0BA5               	decfsz	??_LCD_Init+1,f
  1747  17FE  2FFB               	goto	u6007
  1748  17FF                     l323:
  1749  17FF  0008               	return
  1750  1800                     __end_of_LCD_Init:
  1751                           
  1752                           	psect	text4
  1753  12DB                     __ptext4:	
  1754 ;; *************** function _I2C_Master_Init *****************
  1755 ;; Defined at:
  1756 ;;		line 15 in file "I2C_Master.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_setup
  1781 ;;		_LCD_Start
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           
  1786                           ;psect for function _I2C_Master_Init
  1787  12DB                     _I2C_Master_Init:
  1788  12DB                     l1731:	
  1789                           ;incstack = 0
  1790                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1791                           
  1792                           
  1793                           ;I2C_Master.c: 17:   SSPCON = 0x28;
  1794  12DB  3028               	movlw	40
  1795  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  1796  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  1797  12DE  0094               	movwf	20	;volatile
  1798  12DF                     l1733:
  1799                           
  1800                           ;I2C_Master.c: 18:   SSPCON2 = 0x00;
  1801  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  1802  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  1803  12E1  0191               	clrf	17	;volatile
  1804  12E2                     l1735:
  1805                           
  1806                           ;I2C_Master.c: 19:   SSPSTAT = 0x00;
  1807  12E2  0194               	clrf	20	;volatile
  1808                           
  1809                           ;I2C_Master.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  1810  12E3  30CF               	movlw	207
  1811  12E4  0093               	movwf	19	;volatile
  1812  12E5                     l1737:
  1813                           
  1814                           ;I2C_Master.c: 21:   TRISC3 = 1;
  1815  12E5  1587               	bsf	7,3	;volatile
  1816  12E6                     l1739:
  1817                           
  1818                           ;I2C_Master.c: 22:   TRISC4 = 1;
  1819  12E6  1607               	bsf	7,4	;volatile
  1820  12E7                     l279:
  1821  12E7  0008               	return
  1822  12E8                     __end_of_I2C_Master_Init:
  1823                           
  1824                           	psect	text5
  1825  09C2                     __ptext5:	
  1826 ;; *************** function _LCD_Send *****************
  1827 ;; Defined at:
  1828 ;;		line 272 in file "Master_PIC.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       0       0       0
  1843 ;;      Locals:         0       0       4       0       0
  1844 ;;      Temps:          0       4       0       0       0
  1845 ;;      Totals:         0       4       4       0       0
  1846 ;;Total ram usage:        8 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 7
  1849 ;; This function calls:
  1850 ;;		_ADC_convert
  1851 ;;		_LCD_Set_Cursor
  1852 ;;		_LCD_Write_Char
  1853 ;;		_LCD_Write_String
  1854 ;;		___bmul
  1855 ;;		___xxtofl
  1856 ;;		_division
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           
  1863                           ;psect for function _LCD_Send
  1864  09C2                     _LCD_Send:
  1865  09C2                     l4269:	
  1866                           ;incstack = 0
  1867                           ; Regs used in _LCD_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1868                           
  1869                           
  1870                           ;Master_PIC.c: 273: 
  1871  09C2  301A               	movlw	26
  1872  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  1873  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  1874  09C5  00E9               	movwf	??_LCD_Send+2
  1875  09C6  305E               	movlw	94
  1876  09C7  00E8               	movwf	??_LCD_Send+1
  1877  09C8  306D               	movlw	109
  1878  09C9  00E7               	movwf	??_LCD_Send
  1879  09CA                     u6017:
  1880  09CA  0BE7               	decfsz	??_LCD_Send,f
  1881  09CB  29CA               	goto	u6017
  1882  09CC  0BE8               	decfsz	??_LCD_Send+1,f
  1883  09CD  29CA               	goto	u6017
  1884  09CE  0BE9               	decfsz	??_LCD_Send+2,f
  1885  09CF  29CA               	goto	u6017
  1886  09D0  29D1               	nop2
  1887  09D1                     l4271:
  1888                           
  1889                           ;Master_PIC.c: 275: void ADC_convert(char *data,float a, int place)
  1890  09D1  3009               	movlw	9
  1891  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  1892  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  1893  09D4  00E7               	movwf	??_LCD_Send
  1894  09D5  0867               	movf	??_LCD_Send,w
  1895  09D6  00A4               	movwf	LCD_Set_Cursor@COL
  1896  09D7  3001               	movlw	1
  1897  09D8  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  1898  09DD                     l4273:
  1899                           
  1900                           ;Master_PIC.c: 276: {
  1901  09DD  30CB               	movlw	(low (_converted01| 0))& (0+255)
  1902  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  1903  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  1904  09E0  00A4               	movwf	LCD_Write_String@Str
  1905  09E1  3000               	movlw	0
  1906  09E2  00A5               	movwf	LCD_Write_String@Str+1
  1907  09E3  160A  118A  2490  120A  158A  	fcall	_LCD_Write_String
  1908  09E8                     l4275:
  1909                           
  1910                           ;Master_PIC.c: 279:      int digits=0;
  1911  09E8  3009               	movlw	9
  1912  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  1913  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  1914  09EB  00E7               	movwf	??_LCD_Send
  1915  09EC  0867               	movf	??_LCD_Send,w
  1916  09ED  00A4               	movwf	LCD_Set_Cursor@COL
  1917  09EE  3002               	movlw	2
  1918  09EF  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  1919  09F4                     l4277:
  1920                           
  1921                           ;Master_PIC.c: 280:      int i=0,mu=1;
  1922  09F4  30C1               	movlw	(low (_converted02| 0))& (0+255)
  1923  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  1924  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  1925  09F7  00A4               	movwf	LCD_Write_String@Str
  1926  09F8  3000               	movlw	0
  1927  09F9  00A5               	movwf	LCD_Write_String@Str+1
  1928  09FA  160A  118A  2490  120A  158A  	fcall	_LCD_Write_String
  1929  09FF                     l4279:
  1930                           
  1931                           ;Master_PIC.c: 283:      {
  1932  09FF  3009               	movlw	9
  1933  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0A02  00E7               	movwf	??_LCD_Send
  1936  0A03  0867               	movf	??_LCD_Send,w
  1937  0A04  00A4               	movwf	LCD_Set_Cursor@COL
  1938  0A05  3003               	movlw	3
  1939  0A06  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  1940  0A0B                     l4281:
  1941                           
  1942                           ;Master_PIC.c: 284:             a=a*-1;
  1943  0A0B  30B7               	movlw	(low (_converted03| 0))& (0+255)
  1944  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0A0E  00A4               	movwf	LCD_Write_String@Str
  1947  0A0F  3000               	movlw	0
  1948  0A10  00A5               	movwf	LCD_Write_String@Str+1
  1949  0A11  160A  118A  2490  120A  158A  	fcall	_LCD_Write_String
  1950  0A16                     l4283:
  1951                           
  1952                           ;Master_PIC.c: 290:      {
  1953  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0A18  086F               	movf	_slave01,w
  1956  0A19  00E7               	movwf	??_LCD_Send
  1957  0A1A  01E8               	clrf	??_LCD_Send+1
  1958  0A1B  01E9               	clrf	??_LCD_Send+2
  1959  0A1C  01EA               	clrf	??_LCD_Send+3
  1960  0A1D  086A               	movf	??_LCD_Send+3,w
  1961  0A1E  00B2               	movwf	___xxtofl@val+3
  1962  0A1F  0869               	movf	??_LCD_Send+2,w
  1963  0A20  00B1               	movwf	___xxtofl@val+2
  1964  0A21  0868               	movf	??_LCD_Send+1,w
  1965  0A22  00B0               	movwf	___xxtofl@val+1
  1966  0A23  0867               	movf	??_LCD_Send,w
  1967  0A24  00AF               	movwf	___xxtofl@val
  1968  0A25  3000               	movlw	0
  1969  0A26  120A  158A  2106  120A  158A  	fcall	___xxtofl
  1970  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0A2D  0832               	movf	?___xxtofl+3,w
  1973  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  1975  0A30  00E7               	movwf	(_LCD_Send$1338+3)^(0+128)
  1976  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0A33  0831               	movf	?___xxtofl+2,w
  1979  0A34  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0A35  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0A36  00E6               	movwf	(_LCD_Send$1338+2)^(0+128)
  1982  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0A39  0830               	movf	?___xxtofl+1,w
  1985  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0A3B  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0A3C  00E5               	movwf	(_LCD_Send$1338+1)^(0+128)
  1988  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0A3F  082F               	movf	?___xxtofl,w
  1991  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  1992  0A41  1303               	bcf	3,6	;RP1=0, select bank1
  1993  0A42  00E4               	movwf	_LCD_Send$1338^(0+128)
  1994  0A43                     l4285:
  1995                           
  1996                           ;Master_PIC.c: 290:      {
  1997  0A43  0867               	movf	(_LCD_Send$1338+3)^(0+128),w
  1998  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0A46  00E2               	movwf	ADC_convert@a+3
  2001  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0A49  0866               	movf	(_LCD_Send$1338+2)^(0+128),w
  2004  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0A4C  00E1               	movwf	ADC_convert@a+2
  2007  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0A4F  0865               	movf	(_LCD_Send$1338+1)^(0+128),w
  2010  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0A52  00E0               	movwf	ADC_convert@a+1
  2013  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0A55  0864               	movf	_LCD_Send$1338^(0+128),w
  2016  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0A58  00DF               	movwf	ADC_convert@a
  2019  0A59  3002               	movlw	2
  2020  0A5A  00E3               	movwf	ADC_convert@place
  2021  0A5B  3000               	movlw	0
  2022  0A5C  00E4               	movwf	ADC_convert@place+1
  2023  0A5D  30CB               	movlw	(low (_converted01| 0))& (0+255)
  2024  0A5E  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2025  0A63                     l4287:
  2026                           
  2027                           ;Master_PIC.c: 291:          temp=temp/10;
  2028  0A63  0879               	movf	_slave02,w
  2029  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0A66  00E7               	movwf	??_LCD_Send
  2032  0A67  01E8               	clrf	??_LCD_Send+1
  2033  0A68  01E9               	clrf	??_LCD_Send+2
  2034  0A69  01EA               	clrf	??_LCD_Send+3
  2035  0A6A  086A               	movf	??_LCD_Send+3,w
  2036  0A6B  00B2               	movwf	___xxtofl@val+3
  2037  0A6C  0869               	movf	??_LCD_Send+2,w
  2038  0A6D  00B1               	movwf	___xxtofl@val+2
  2039  0A6E  0868               	movf	??_LCD_Send+1,w
  2040  0A6F  00B0               	movwf	___xxtofl@val+1
  2041  0A70  0867               	movf	??_LCD_Send,w
  2042  0A71  00AF               	movwf	___xxtofl@val
  2043  0A72  3000               	movlw	0
  2044  0A73  120A  158A  2106  120A  158A  	fcall	___xxtofl
  2045  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0A7A  0832               	movf	?___xxtofl+3,w
  2048  0A7B  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0A7C  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0A7D  00E7               	movwf	(_LCD_Send$1338+3)^(0+128)
  2051  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0A80  0831               	movf	?___xxtofl+2,w
  2054  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0A82  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0A83  00E6               	movwf	(_LCD_Send$1338+2)^(0+128)
  2057  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0A86  0830               	movf	?___xxtofl+1,w
  2060  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0A88  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0A89  00E5               	movwf	(_LCD_Send$1338+1)^(0+128)
  2063  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0A8C  082F               	movf	?___xxtofl,w
  2066  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0A8E  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0A8F  00E4               	movwf	_LCD_Send$1338^(0+128)
  2069  0A90                     l4289:
  2070                           
  2071                           ;Master_PIC.c: 291:          temp=temp/10;
  2072  0A90  0867               	movf	(_LCD_Send$1338+3)^(0+128),w
  2073  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0A93  00E2               	movwf	ADC_convert@a+3
  2076  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0A95  1303               	bcf	3,6	;RP1=0, select bank1
  2078  0A96  0866               	movf	(_LCD_Send$1338+2)^(0+128),w
  2079  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0A99  00E1               	movwf	ADC_convert@a+2
  2082  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0A9C  0865               	movf	(_LCD_Send$1338+1)^(0+128),w
  2085  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0A9F  00E0               	movwf	ADC_convert@a+1
  2088  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0AA1  1303               	bcf	3,6	;RP1=0, select bank1
  2090  0AA2  0864               	movf	_LCD_Send$1338^(0+128),w
  2091  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0AA5  00DF               	movwf	ADC_convert@a
  2094  0AA6  3002               	movlw	2
  2095  0AA7  00E3               	movwf	ADC_convert@place
  2096  0AA8  3000               	movlw	0
  2097  0AA9  00E4               	movwf	ADC_convert@place+1
  2098  0AAA  30C1               	movlw	(low (_converted02| 0))& (0+255)
  2099  0AAB  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2100  0AB0                     l4291:
  2101                           
  2102                           ;Master_PIC.c: 292:          digits++;
  2103  0AB0  0878               	movf	_slave03,w
  2104  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0AB3  00E7               	movwf	??_LCD_Send
  2107  0AB4  01E8               	clrf	??_LCD_Send+1
  2108  0AB5  01E9               	clrf	??_LCD_Send+2
  2109  0AB6  01EA               	clrf	??_LCD_Send+3
  2110  0AB7  086A               	movf	??_LCD_Send+3,w
  2111  0AB8  00B2               	movwf	___xxtofl@val+3
  2112  0AB9  0869               	movf	??_LCD_Send+2,w
  2113  0ABA  00B1               	movwf	___xxtofl@val+2
  2114  0ABB  0868               	movf	??_LCD_Send+1,w
  2115  0ABC  00B0               	movwf	___xxtofl@val+1
  2116  0ABD  0867               	movf	??_LCD_Send,w
  2117  0ABE  00AF               	movwf	___xxtofl@val
  2118  0ABF  3000               	movlw	0
  2119  0AC0  120A  158A  2106  120A  158A  	fcall	___xxtofl
  2120  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0AC7  0832               	movf	?___xxtofl+3,w
  2123  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0ACA  00E7               	movwf	(_LCD_Send$1338+3)^(0+128)
  2126  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0ACD  0831               	movf	?___xxtofl+2,w
  2129  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0AD0  00E6               	movwf	(_LCD_Send$1338+2)^(0+128)
  2132  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0AD3  0830               	movf	?___xxtofl+1,w
  2135  0AD4  1683               	bsf	3,5	;RP0=1, select bank1
  2136  0AD5  1303               	bcf	3,6	;RP1=0, select bank1
  2137  0AD6  00E5               	movwf	(_LCD_Send$1338+1)^(0+128)
  2138  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0AD9  082F               	movf	?___xxtofl,w
  2141  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  2142  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
  2143  0ADC  00E4               	movwf	_LCD_Send$1338^(0+128)
  2144  0ADD                     l4293:
  2145                           
  2146                           ;Master_PIC.c: 292:          digits++;
  2147  0ADD  0867               	movf	(_LCD_Send$1338+3)^(0+128),w
  2148  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0AE0  00E2               	movwf	ADC_convert@a+3
  2151  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0AE3  0866               	movf	(_LCD_Send$1338+2)^(0+128),w
  2154  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0AE6  00E1               	movwf	ADC_convert@a+2
  2157  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0AE9  0865               	movf	(_LCD_Send$1338+1)^(0+128),w
  2160  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0AEC  00E0               	movwf	ADC_convert@a+1
  2163  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  2165  0AEF  0864               	movf	_LCD_Send$1338^(0+128),w
  2166  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0AF2  00DF               	movwf	ADC_convert@a
  2169  0AF3  3002               	movlw	2
  2170  0AF4  00E3               	movwf	ADC_convert@place
  2171  0AF5  3000               	movlw	0
  2172  0AF6  00E4               	movwf	ADC_convert@place+1
  2173  0AF7  30B7               	movlw	(low (_converted03| 0))& (0+255)
  2174  0AF8  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2175  0AFD                     l4295:
  2176                           
  2177                           ;Master_PIC.c: 294:      while(digits!=0)
  2178  0AFD  3032               	movlw	50
  2179  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0B00  00E7               	movwf	??_LCD_Send
  2182  0B01  0867               	movf	??_LCD_Send,w
  2183  0B02  00F4               	movwf	___bmul@multiplicand
  2184  0B03  0879               	movf	_slave02,w
  2185  0B04  160A  118A  230F  120A  158A  	fcall	___bmul
  2186  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0B0B  00E8               	movwf	??_LCD_Send+1
  2189  0B0C  0868               	movf	??_LCD_Send+1,w
  2190  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  2191  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  2192  0B0F  00B2               	movwf	_dec1^(0+128)
  2193  0B10                     l4297:
  2194                           
  2195                           ;Master_PIC.c: 295:      {
  2196  0B10  3019               	movlw	25
  2197  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0B13  00E7               	movwf	??_LCD_Send
  2200  0B14  0867               	movf	??_LCD_Send,w
  2201  0B15  00F4               	movwf	___bmul@multiplicand
  2202  0B16  0878               	movf	_slave03,w
  2203  0B17  160A  118A  230F  120A  158A  	fcall	___bmul
  2204  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0B1E  00E8               	movwf	??_LCD_Send+1
  2207  0B1F  0868               	movf	??_LCD_Send+1,w
  2208  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  2210  0B22  00B1               	movwf	_dec2^(0+128)
  2211  0B23                     l4299:
  2212                           
  2213                           ;Master_PIC.c: 296:          if(digits==1)mu=1;
  2214  0B23  3064               	movlw	100
  2215  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0B26  00E7               	movwf	??_LCD_Send
  2218  0B27  0867               	movf	??_LCD_Send,w
  2219  0B28  00F4               	movwf	___bmul@multiplicand
  2220  0B29  086F               	movf	_slave01,w
  2221  0B2A  160A  118A  230F  120A  158A  	fcall	___bmul
  2222  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  2224  0B31  00E8               	movwf	??_LCD_Send+1
  2225  0B32  0868               	movf	??_LCD_Send+1,w
  2226  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0B34  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0B35  00B0               	movwf	_dec3^(0+128)
  2229  0B36                     l4301:
  2230                           
  2231                           ;Master_PIC.c: 297:          else for(j=2;j<=digits;j++)mu=mu*10;
  2232  0B36  0832               	movf	_dec1^(0+128),w
  2233  0B37  0730               	addwf	_dec3^(0+128),w
  2234  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0B3A  00E7               	movwf	??_LCD_Send
  2237  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  2238  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  2239  0B3D  0831               	movf	_dec2^(0+128),w
  2240  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  2242  0B40  0767               	addwf	??_LCD_Send,w
  2243  0B41  00E8               	movwf	??_LCD_Send+1
  2244  0B42  0868               	movf	??_LCD_Send+1,w
  2245  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0B45  00B3               	movwf	_sum^(0+128)
  2248  0B46                     l4303:
  2249                           
  2250                           ;Master_PIC.c: 299:          x=a/mu;
  2251  0B46  0833               	movf	_sum^(0+128),w
  2252  0B47  160A  118A  2593  120A  158A  	fcall	_division
  2253  0B4C                     l4305:
  2254                           
  2255                           ;Master_PIC.c: 300:          a=a-((int)x*mu);
  2256  0B4C  3009               	movlw	9
  2257  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0B4F  00E7               	movwf	??_LCD_Send
  2260  0B50  0867               	movf	??_LCD_Send,w
  2261  0B51  00A4               	movwf	LCD_Set_Cursor@COL
  2262  0B52  3004               	movlw	4
  2263  0B53  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  2264  0B58                     l4307:
  2265                           
  2266                           ;Master_PIC.c: 301:          data[i]=0x30+((int)x);
  2267  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0B5A  086E               	movf	_hundreds,w
  2270  0B5B  160A  118A  23AA  120A  158A  	fcall	_LCD_Write_Char
  2271  0B60                     l4309:
  2272                           
  2273                           ;Master_PIC.c: 302:          i++;
  2274  0B60  300A               	movlw	10
  2275  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0B63  00E7               	movwf	??_LCD_Send
  2278  0B64  0867               	movf	??_LCD_Send,w
  2279  0B65  00A4               	movwf	LCD_Set_Cursor@COL
  2280  0B66  3004               	movlw	4
  2281  0B67  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  2282  0B6C                     l4311:
  2283                           
  2284                           ;Master_PIC.c: 303:          digits--;
  2285  0B6C  302E               	movlw	46
  2286  0B6D  160A  118A  23AA  120A  158A  	fcall	_LCD_Write_Char
  2287  0B72                     l4313:
  2288                           
  2289                           ;Master_PIC.c: 304:          mu=1;
  2290  0B72  300B               	movlw	11
  2291  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0B75  00E7               	movwf	??_LCD_Send
  2294  0B76  0867               	movf	??_LCD_Send,w
  2295  0B77  00A4               	movwf	LCD_Set_Cursor@COL
  2296  0B78  3004               	movlw	4
  2297  0B79  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  2298  0B7E                     l4315:
  2299                           
  2300                           ;Master_PIC.c: 305:      }
  2301  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  2302  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  2303  0B80  086D               	movf	_tens,w
  2304  0B81  160A  118A  23AA  120A  158A  	fcall	_LCD_Write_Char
  2305  0B86                     l4317:
  2306                           
  2307                           ;Master_PIC.c: 306: 
  2308  0B86  300C               	movlw	12
  2309  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  2310  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  2311  0B89  00E7               	movwf	??_LCD_Send
  2312  0B8A  0867               	movf	??_LCD_Send,w
  2313  0B8B  00A4               	movwf	LCD_Set_Cursor@COL
  2314  0B8C  3004               	movlw	4
  2315  0B8D  160A  118A  241D  120A  158A  	fcall	_LCD_Set_Cursor
  2316  0B92                     l4319:
  2317                           
  2318                           ;Master_PIC.c: 307:      data[i]='.';
  2319  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0B94  086C               	movf	_units,w
  2322  0B95  160A  118A  23AA  120A  158A  	fcall	_LCD_Write_Char
  2323  0B9A                     l188:
  2324  0B9A  0008               	return
  2325  0B9B                     __end_of_LCD_Send:
  2326                           
  2327                           	psect	text6
  2328  1593                     __ptext6:	
  2329 ;; *************** function _division *****************
  2330 ;; Defined at:
  2331 ;;		line 373 in file "Master_PIC.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  valor           1    wreg     unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  valor           1    5[COMMON] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0, pclath, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0
  2347 ;;      Temps:          0       3       0       0       0
  2348 ;;      Totals:         1       3       0       0       0
  2349 ;;Total ram usage:        4 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 2
  2352 ;; This function calls:
  2353 ;;		___awdiv
  2354 ;;		___awmod
  2355 ;; This function is called by:
  2356 ;;		_LCD_Send
  2357 ;;		_Text
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _division
  2363  1593                     _division:
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2367                           ;division@valor stored from wreg
  2368  1593  00F5               	movwf	division@valor
  2369  1594                     l4063:
  2370                           
  2371                           ;Master_PIC.c: 374: }
  2372  1594  3064               	movlw	100
  2373  1595  1283               	bcf	3,5	;RP0=0, select bank0
  2374  1596  1303               	bcf	3,6	;RP1=0, select bank0
  2375  1597  00A0               	movwf	___awdiv@divisor
  2376  1598  3000               	movlw	0
  2377  1599  00A1               	movwf	___awdiv@divisor+1
  2378  159A  0875               	movf	division@valor,w
  2379  159B  00A8               	movwf	??_division
  2380  159C  01A9               	clrf	??_division+1
  2381  159D  0828               	movf	??_division,w
  2382  159E  00A2               	movwf	___awdiv@dividend
  2383  159F  0829               	movf	??_division+1,w
  2384  15A0  00A3               	movwf	___awdiv@dividend+1
  2385  15A1  160A  118A  252A  160A  118A  	fcall	___awdiv
  2386  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  2387  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  2388  15A8  0820               	movf	?___awdiv,w
  2389  15A9  00AA               	movwf	??_division+2
  2390  15AA  082A               	movf	??_division+2,w
  2391  15AB  00EE               	movwf	_hundreds
  2392  15AC  3064               	movlw	100
  2393  15AD  00A0               	movwf	___awmod@divisor
  2394  15AE  3000               	movlw	0
  2395  15AF  00A1               	movwf	___awmod@divisor+1
  2396  15B0  0875               	movf	division@valor,w
  2397  15B1  00A8               	movwf	??_division
  2398  15B2  01A9               	clrf	??_division+1
  2399  15B3  0828               	movf	??_division,w
  2400  15B4  00A2               	movwf	___awmod@dividend
  2401  15B5  0829               	movf	??_division+1,w
  2402  15B6  00A3               	movwf	___awmod@dividend+1
  2403  15B7  120A  158A  2007  160A  118A  	fcall	___awmod
  2404  15BC  1283               	bcf	3,5	;RP0=0, select bank0
  2405  15BD  1303               	bcf	3,6	;RP1=0, select bank0
  2406  15BE  0820               	movf	?___awmod,w
  2407  15BF  00AA               	movwf	??_division+2
  2408  15C0  082A               	movf	??_division+2,w
  2409  15C1  00F6               	movwf	_residuo
  2410  15C2  300A               	movlw	10
  2411  15C3  00A0               	movwf	___awdiv@divisor
  2412  15C4  3000               	movlw	0
  2413  15C5  00A1               	movwf	___awdiv@divisor+1
  2414  15C6  0876               	movf	_residuo,w
  2415  15C7  00A8               	movwf	??_division
  2416  15C8  01A9               	clrf	??_division+1
  2417  15C9  0828               	movf	??_division,w
  2418  15CA  00A2               	movwf	___awdiv@dividend
  2419  15CB  0829               	movf	??_division+1,w
  2420  15CC  00A3               	movwf	___awdiv@dividend+1
  2421  15CD  160A  118A  252A  160A  118A  	fcall	___awdiv
  2422  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  2423  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  2424  15D4  0820               	movf	?___awdiv,w
  2425  15D5  00AA               	movwf	??_division+2
  2426  15D6  082A               	movf	??_division+2,w
  2427  15D7  00ED               	movwf	_tens
  2428  15D8  300A               	movlw	10
  2429  15D9  00A0               	movwf	___awmod@divisor
  2430  15DA  3000               	movlw	0
  2431  15DB  00A1               	movwf	___awmod@divisor+1
  2432  15DC  0876               	movf	_residuo,w
  2433  15DD  00A8               	movwf	??_division
  2434  15DE  01A9               	clrf	??_division+1
  2435  15DF  0828               	movf	??_division,w
  2436  15E0  00A2               	movwf	___awmod@dividend
  2437  15E1  0829               	movf	??_division+1,w
  2438  15E2  00A3               	movwf	___awmod@dividend+1
  2439  15E3  120A  158A  2007  160A  118A  	fcall	___awmod
  2440  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  2441  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  2442  15EA  0820               	movf	?___awmod,w
  2443  15EB  00AA               	movwf	??_division+2
  2444  15EC  082A               	movf	??_division+2,w
  2445  15ED  00EC               	movwf	_units
  2446  15EE                     l4065:
  2447  15EE  086E               	movf	_hundreds,w
  2448  15EF  3E30               	addlw	48
  2449  15F0  00A8               	movwf	??_division
  2450  15F1  0828               	movf	??_division,w
  2451  15F2  00EE               	movwf	_hundreds
  2452  15F3                     l4067:
  2453  15F3  086D               	movf	_tens,w
  2454  15F4  3E30               	addlw	48
  2455  15F5  00A8               	movwf	??_division
  2456  15F6  0828               	movf	??_division,w
  2457  15F7  00ED               	movwf	_tens
  2458  15F8                     l4069:
  2459  15F8  086C               	movf	_units,w
  2460  15F9  3E30               	addlw	48
  2461  15FA  00A8               	movwf	??_division
  2462  15FB  0828               	movf	??_division,w
  2463  15FC  00EC               	movwf	_units
  2464  15FD                     l217:
  2465  15FD  0008               	return
  2466  15FE                     __end_of_division:
  2467                           
  2468                           	psect	text7
  2469  0807                     __ptext7:	
  2470 ;; *************** function ___awmod *****************
  2471 ;; Defined at:
  2472 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  divisor         2    0[BANK0 ] int 
  2475 ;;  dividend        2    2[BANK0 ] int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  sign            1    5[BANK0 ] unsigned char 
  2478 ;;  counter         1    4[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  2    0[BANK0 ] int 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       4       0       0       0
  2489 ;;      Locals:         0       2       0       0       0
  2490 ;;      Temps:          1       0       0       0       0
  2491 ;;      Totals:         1       6       0       0       0
  2492 ;;Total ram usage:        7 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_division
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function ___awmod
  2504  0807                     ___awmod:
  2505  0807                     l3637:	
  2506                           ;incstack = 0
  2507                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2508                           
  2509  0807  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0808  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0809  01A5               	clrf	___awmod@sign
  2512  080A                     l3639:
  2513  080A  1FA3               	btfss	___awmod@dividend+1,7
  2514  080B  280D               	goto	u4631
  2515  080C  280E               	goto	u4630
  2516  080D                     u4631:
  2517  080D  2815               	goto	l3645
  2518  080E                     u4630:
  2519  080E                     l3641:
  2520  080E  09A2               	comf	___awmod@dividend,f
  2521  080F  09A3               	comf	___awmod@dividend+1,f
  2522  0810  0AA2               	incf	___awmod@dividend,f
  2523  0811  1903               	skipnz
  2524  0812  0AA3               	incf	___awmod@dividend+1,f
  2525  0813                     l3643:
  2526  0813  01A5               	clrf	___awmod@sign
  2527  0814  0AA5               	incf	___awmod@sign,f
  2528  0815                     l3645:
  2529  0815  1FA1               	btfss	___awmod@divisor+1,7
  2530  0816  2818               	goto	u4641
  2531  0817  2819               	goto	u4640
  2532  0818                     u4641:
  2533  0818  281E               	goto	l3649
  2534  0819                     u4640:
  2535  0819                     l3647:
  2536  0819  09A0               	comf	___awmod@divisor,f
  2537  081A  09A1               	comf	___awmod@divisor+1,f
  2538  081B  0AA0               	incf	___awmod@divisor,f
  2539  081C  1903               	skipnz
  2540  081D  0AA1               	incf	___awmod@divisor+1,f
  2541  081E                     l3649:
  2542  081E  0820               	movf	___awmod@divisor,w
  2543  081F  0421               	iorwf	___awmod@divisor+1,w
  2544  0820  1903               	btfsc	3,2
  2545  0821  2823               	goto	u4651
  2546  0822  2824               	goto	u4650
  2547  0823                     u4651:
  2548  0823  2853               	goto	l3667
  2549  0824                     u4650:
  2550  0824                     l3651:
  2551  0824  01A4               	clrf	___awmod@counter
  2552  0825  0AA4               	incf	___awmod@counter,f
  2553  0826  2832               	goto	l3657
  2554  0827                     l3653:
  2555  0827  3001               	movlw	1
  2556  0828                     u4665:
  2557  0828  1003               	clrc
  2558  0829  0DA0               	rlf	___awmod@divisor,f
  2559  082A  0DA1               	rlf	___awmod@divisor+1,f
  2560  082B  3EFF               	addlw	-1
  2561  082C  1D03               	skipz
  2562  082D  2828               	goto	u4665
  2563  082E                     l3655:
  2564  082E  3001               	movlw	1
  2565  082F  00F4               	movwf	??___awmod
  2566  0830  0874               	movf	??___awmod,w
  2567  0831  07A4               	addwf	___awmod@counter,f
  2568  0832                     l3657:
  2569  0832  1FA1               	btfss	___awmod@divisor+1,7
  2570  0833  2835               	goto	u4671
  2571  0834  2836               	goto	u4670
  2572  0835                     u4671:
  2573  0835  2827               	goto	l3653
  2574  0836                     u4670:
  2575  0836                     l3659:
  2576  0836  0821               	movf	___awmod@divisor+1,w
  2577  0837  0223               	subwf	___awmod@dividend+1,w
  2578  0838  1D03               	skipz
  2579  0839  283C               	goto	u4685
  2580  083A  0820               	movf	___awmod@divisor,w
  2581  083B  0222               	subwf	___awmod@dividend,w
  2582  083C                     u4685:
  2583  083C  1C03               	skipc
  2584  083D  283F               	goto	u4681
  2585  083E  2840               	goto	u4680
  2586  083F                     u4681:
  2587  083F  2846               	goto	l3663
  2588  0840                     u4680:
  2589  0840                     l3661:
  2590  0840  0820               	movf	___awmod@divisor,w
  2591  0841  02A2               	subwf	___awmod@dividend,f
  2592  0842  0821               	movf	___awmod@divisor+1,w
  2593  0843  1C03               	skipc
  2594  0844  03A3               	decf	___awmod@dividend+1,f
  2595  0845  02A3               	subwf	___awmod@dividend+1,f
  2596  0846                     l3663:
  2597  0846  3001               	movlw	1
  2598  0847                     u4695:
  2599  0847  1003               	clrc
  2600  0848  0CA1               	rrf	___awmod@divisor+1,f
  2601  0849  0CA0               	rrf	___awmod@divisor,f
  2602  084A  3EFF               	addlw	-1
  2603  084B  1D03               	skipz
  2604  084C  2847               	goto	u4695
  2605  084D                     l3665:
  2606  084D  3001               	movlw	1
  2607  084E  02A4               	subwf	___awmod@counter,f
  2608  084F  1D03               	btfss	3,2
  2609  0850  2852               	goto	u4701
  2610  0851  2853               	goto	u4700
  2611  0852                     u4701:
  2612  0852  2836               	goto	l3659
  2613  0853                     u4700:
  2614  0853                     l3667:
  2615  0853  0825               	movf	___awmod@sign,w
  2616  0854  1903               	btfsc	3,2
  2617  0855  2857               	goto	u4711
  2618  0856  2858               	goto	u4710
  2619  0857                     u4711:
  2620  0857  285D               	goto	l3671
  2621  0858                     u4710:
  2622  0858                     l3669:
  2623  0858  09A2               	comf	___awmod@dividend,f
  2624  0859  09A3               	comf	___awmod@dividend+1,f
  2625  085A  0AA2               	incf	___awmod@dividend,f
  2626  085B  1903               	skipnz
  2627  085C  0AA3               	incf	___awmod@dividend+1,f
  2628  085D                     l3671:
  2629  085D  0823               	movf	___awmod@dividend+1,w
  2630  085E  00A1               	movwf	?___awmod+1
  2631  085F  0822               	movf	___awmod@dividend,w
  2632  0860  00A0               	movwf	?___awmod
  2633  0861                     l617:
  2634  0861  0008               	return
  2635  0862                     __end_of___awmod:
  2636                           
  2637                           	psect	text8
  2638  130F                     __ptext8:	
  2639 ;; *************** function ___bmul *****************
  2640 ;; Defined at:
  2641 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  multiplier      1    wreg     unsigned char 
  2644 ;;  multiplicand    1    4[COMMON] unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2647 ;;  product         1    0[BANK0 ] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         1       0       0       0       0
  2658 ;;      Locals:         0       2       0       0       0
  2659 ;;      Temps:          1       0       0       0       0
  2660 ;;      Totals:         2       2       0       0       0
  2661 ;;Total ram usage:        4 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_LCD_Send
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function ___bmul
  2673  130F                     ___bmul:
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2677                           ;___bmul@multiplier stored from wreg
  2678  130F  1283               	bcf	3,5	;RP0=0, select bank0
  2679  1310  1303               	bcf	3,6	;RP1=0, select bank0
  2680  1311  00A1               	movwf	___bmul@multiplier
  2681  1312                     l4235:
  2682  1312  01A0               	clrf	___bmul@product
  2683  1313                     l4237:
  2684  1313  1C21               	btfss	___bmul@multiplier,0
  2685  1314  2B16               	goto	u5821
  2686  1315  2B17               	goto	u5820
  2687  1316                     u5821:
  2688  1316  2B1B               	goto	l4241
  2689  1317                     u5820:
  2690  1317                     l4239:
  2691  1317  0874               	movf	___bmul@multiplicand,w
  2692  1318  00F5               	movwf	??___bmul
  2693  1319  0875               	movf	??___bmul,w
  2694  131A  07A0               	addwf	___bmul@product,f
  2695  131B                     l4241:
  2696  131B  1003               	clrc
  2697  131C  0DF4               	rlf	___bmul@multiplicand,f
  2698  131D                     l4243:
  2699  131D  1003               	clrc
  2700  131E  0CA1               	rrf	___bmul@multiplier,f
  2701  131F  0821               	movf	___bmul@multiplier,w
  2702  1320  1D03               	btfss	3,2
  2703  1321  2B23               	goto	u5831
  2704  1322  2B24               	goto	u5830
  2705  1323                     u5831:
  2706  1323  2B13               	goto	l4237
  2707  1324                     u5830:
  2708  1324                     l4245:
  2709  1324  0820               	movf	___bmul@product,w
  2710  1325                     l477:
  2711  1325  0008               	return
  2712  1326                     __end_of___bmul:
  2713                           
  2714                           	psect	text9
  2715  1490                     __ptext9:	
  2716 ;; *************** function _LCD_Write_String *****************
  2717 ;; Defined at:
  2718 ;;		line 176 in file "I2C_Master.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  Str             2    4[BANK0 ] PTR unsigned char 
  2721 ;;		 -> converted03(10), converted02(10), converted01(10), STR_4(9), 
  2722 ;;		 -> STR_3(8), STR_2(8), STR_1(8), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  i               2    9[BANK0 ] int 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2734 ;;      Params:         0       2       0       0       0
  2735 ;;      Locals:         0       2       0       0       0
  2736 ;;      Temps:          0       3       0       0       0
  2737 ;;      Totals:         0       7       0       0       0
  2738 ;;Total ram usage:        7 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 6
  2741 ;; This function calls:
  2742 ;;		_LCD_Write_Char
  2743 ;; This function is called by:
  2744 ;;		_LCD_Start
  2745 ;;		_LCD_Send
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _LCD_Write_String
  2751  1490                     _LCD_Write_String:
  2752  1490                     l4125:	
  2753                           ;incstack = 0
  2754 ;; using string table level
  2755                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2756                           
  2757                           
  2758                           ;I2C_Master.c: 176: void LCD_Write_String(char* Str);I2C_Master.c: 177: {;I2C_Master.c: 
      +                          178:     for(int i=0; Str[i]!='\0'; i++)
  2759  1490  1283               	bcf	3,5	;RP0=0, select bank0
  2760  1491  1303               	bcf	3,6	;RP1=0, select bank0
  2761  1492  01A9               	clrf	LCD_Write_String@i
  2762  1493  01AA               	clrf	LCD_Write_String@i+1
  2763  1494  2CB9               	goto	l4131
  2764  1495                     l4127:
  2765                           
  2766                           ;I2C_Master.c: 179:        LCD_Write_Char(Str[i]);
  2767  1495  0829               	movf	LCD_Write_String@i,w
  2768  1496  0724               	addwf	LCD_Write_String@Str,w
  2769  1497  00A7               	movwf	??_LCD_Write_String+1
  2770  1498  0825               	movf	LCD_Write_String@Str+1,w
  2771  1499  00A6               	movwf	??_LCD_Write_String
  2772  149A  1803               	skipnc
  2773  149B  0AA6               	incf	??_LCD_Write_String,f
  2774  149C  1FA9               	btfss	LCD_Write_String@i,7
  2775  149D  2C9F               	goto	u5700
  2776  149E  03A6               	decf	??_LCD_Write_String,f
  2777  149F                     u5700:
  2778  149F  1283               	bcf	3,5	;RP0=0, select bank0
  2779  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  2780  14A1  0826               	movf	??_LCD_Write_String,w
  2781  14A2  00A8               	movwf	??_LCD_Write_String+2
  2782  14A3  0828               	movf	??_LCD_Write_String+2,w
  2783  14A4  00FF               	movwf	btemp+1
  2784  14A5  0827               	movf	??_LCD_Write_String+1,w
  2785  14A6  0084               	movwf	4
  2786  14A7  160A  118A  2000  160A  118A  	fcall	stringtab
  2787  14AC  160A  118A  23AA  160A  118A  	fcall	_LCD_Write_Char
  2788  14B1                     l4129:
  2789  14B1  3001               	movlw	1
  2790  14B2  1283               	bcf	3,5	;RP0=0, select bank0
  2791  14B3  1303               	bcf	3,6	;RP1=0, select bank0
  2792  14B4  07A9               	addwf	LCD_Write_String@i,f
  2793  14B5  1803               	skipnc
  2794  14B6  0AAA               	incf	LCD_Write_String@i+1,f
  2795  14B7  3000               	movlw	0
  2796  14B8  07AA               	addwf	LCD_Write_String@i+1,f
  2797  14B9                     l4131:
  2798  14B9  0829               	movf	LCD_Write_String@i,w
  2799  14BA  0724               	addwf	LCD_Write_String@Str,w
  2800  14BB  00A7               	movwf	??_LCD_Write_String+1
  2801  14BC  0825               	movf	LCD_Write_String@Str+1,w
  2802  14BD  00A6               	movwf	??_LCD_Write_String
  2803  14BE  1803               	skipnc
  2804  14BF  0AA6               	incf	??_LCD_Write_String,f
  2805  14C0  1FA9               	btfss	LCD_Write_String@i,7
  2806  14C1  2CC3               	goto	u5710
  2807  14C2  03A6               	decf	??_LCD_Write_String,f
  2808  14C3                     u5710:
  2809  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  2810  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  2811  14C5  0826               	movf	??_LCD_Write_String,w
  2812  14C6  00A8               	movwf	??_LCD_Write_String+2
  2813  14C7  0828               	movf	??_LCD_Write_String+2,w
  2814  14C8  00FF               	movwf	btemp+1
  2815  14C9  0827               	movf	??_LCD_Write_String+1,w
  2816  14CA  0084               	movwf	4
  2817  14CB  160A  118A  2000  160A  118A  	fcall	stringtab
  2818  14D0  3A00               	xorlw	0
  2819  14D1  1D03               	skipz
  2820  14D2  2CD4               	goto	u5721
  2821  14D3  2CD5               	goto	u5720
  2822  14D4                     u5721:
  2823  14D4  2C95               	goto	l4127
  2824  14D5                     u5720:
  2825  14D5                     l341:
  2826  14D5  0008               	return
  2827  14D6                     __end_of_LCD_Write_String:
  2828                           
  2829                           	psect	text10
  2830  13AA                     __ptext10:	
  2831 ;; *************** function _LCD_Write_Char *****************
  2832 ;; Defined at:
  2833 ;;		line 169 in file "I2C_Master.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  Data            1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  Data            1    3[BANK0 ] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, pclath, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2847 ;;      Params:         0       0       0       0       0
  2848 ;;      Locals:         0       1       0       0       0
  2849 ;;      Temps:          0       1       0       0       0
  2850 ;;      Totals:         0       2       0       0       0
  2851 ;;Total ram usage:        2 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 5
  2854 ;; This function calls:
  2855 ;;		_LCD_Write_4Bit
  2856 ;; This function is called by:
  2857 ;;		_LCD_Send
  2858 ;;		_LCD_Write_String
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           
  2863                           ;psect for function _LCD_Write_Char
  2864  13AA                     _LCD_Write_Char:
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2868                           ;LCD_Write_Char@Data stored from wreg
  2869  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  2870  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  2871  13AC  00A3               	movwf	LCD_Write_Char@Data
  2872  13AD                     l3569:
  2873                           
  2874                           ;I2C_Master.c: 169: void LCD_Write_Char(char Data);I2C_Master.c: 170: {;I2C_Master.c: 17
      +                          1:   RS = 1;
  2875  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  2876  13AE  1303               	bcf	3,6	;RP1=0, select bank1
  2877  13AF  01AF               	clrf	_RS^(0+128)
  2878  13B0  0AAF               	incf	_RS^(0+128),f
  2879  13B1                     l3571:
  2880                           
  2881                           ;I2C_Master.c: 172:   LCD_Write_4Bit(Data & 0xF0);
  2882  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  2883  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  2884  13B3  0823               	movf	LCD_Write_Char@Data,w
  2885  13B4  39F0               	andlw	240
  2886  13B5  160A  118A  2387  160A  118A  	fcall	_LCD_Write_4Bit
  2887                           
  2888                           ;I2C_Master.c: 173:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2889  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  2890  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  2891  13BC  0823               	movf	LCD_Write_Char@Data,w
  2892  13BD  00A2               	movwf	??_LCD_Write_Char
  2893  13BE  3003               	movlw	3
  2894  13BF                     u4475:
  2895  13BF  1003               	clrc
  2896  13C0  0DA2               	rlf	??_LCD_Write_Char,f
  2897  13C1  3EFF               	addlw	-1
  2898  13C2  1D03               	skipz
  2899  13C3  2BBF               	goto	u4475
  2900  13C4  1003               	clrc
  2901  13C5  0D22               	rlf	??_LCD_Write_Char,w
  2902  13C6  39F0               	andlw	240
  2903  13C7  160A  118A  2387  160A  118A  	fcall	_LCD_Write_4Bit
  2904  13CC                     l335:
  2905  13CC  0008               	return
  2906  13CD                     __end_of_LCD_Write_Char:
  2907                           
  2908                           	psect	text11
  2909  141D                     __ptext11:	
  2910 ;; *************** function _LCD_Set_Cursor *****************
  2911 ;; Defined at:
  2912 ;;		line 182 in file "I2C_Master.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  ROW             1    wreg     unsigned char 
  2915 ;;  COL             1    4[BANK0 ] unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  ROW             1    7[BANK0 ] unsigned char 
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2927 ;;      Params:         0       1       0       0       0
  2928 ;;      Locals:         0       1       0       0       0
  2929 ;;      Temps:          0       2       0       0       0
  2930 ;;      Totals:         0       4       0       0       0
  2931 ;;Total ram usage:        4 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 6
  2934 ;; This function calls:
  2935 ;;		_LCD_CMD
  2936 ;; This function is called by:
  2937 ;;		_LCD_Start
  2938 ;;		_LCD_Send
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _LCD_Set_Cursor
  2944  141D                     _LCD_Set_Cursor:
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2948                           ;LCD_Set_Cursor@ROW stored from wreg
  2949  141D  1283               	bcf	3,5	;RP0=0, select bank0
  2950  141E  1303               	bcf	3,6	;RP1=0, select bank0
  2951  141F  00A7               	movwf	LCD_Set_Cursor@ROW
  2952  1420                     l4107:
  2953                           
  2954                           ;I2C_Master.c: 182: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_Master
      +                          .c: 183: {;I2C_Master.c: 184:   switch(ROW)
  2955  1420  2C41               	goto	l4117
  2956  1421                     l4109:
  2957                           
  2958                           ;I2C_Master.c: 187:       LCD_CMD(0xC0 + COL-1);
  2959  1421  0824               	movf	LCD_Set_Cursor@COL,w
  2960  1422  3EBF               	addlw	191
  2961  1423  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  2962                           
  2963                           ;I2C_Master.c: 188:       break;
  2964  1428  2C54               	goto	l350
  2965  1429                     l4111:
  2966                           
  2967                           ;I2C_Master.c: 190:       LCD_CMD(0x94 + COL-1);
  2968  1429  0824               	movf	LCD_Set_Cursor@COL,w
  2969  142A  3E93               	addlw	147
  2970  142B  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  2971                           
  2972                           ;I2C_Master.c: 191:       break;
  2973  1430  2C54               	goto	l350
  2974  1431                     l4113:
  2975                           
  2976                           ;I2C_Master.c: 193:       LCD_CMD(0xD4 + COL-1);
  2977  1431  0824               	movf	LCD_Set_Cursor@COL,w
  2978  1432  3ED3               	addlw	211
  2979  1433  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  2980                           
  2981                           ;I2C_Master.c: 194:       break;
  2982  1438  2C54               	goto	l350
  2983  1439                     l4115:
  2984                           
  2985                           ;I2C_Master.c: 197:       LCD_CMD(0x80 + COL-1);
  2986  1439  0824               	movf	LCD_Set_Cursor@COL,w
  2987  143A  3E7F               	addlw	127
  2988  143B  160A  118A  2343  160A  118A  	fcall	_LCD_CMD
  2989                           
  2990                           ;I2C_Master.c: 198:   }
  2991  1440  2C54               	goto	l350
  2992  1441                     l4117:
  2993  1441  0827               	movf	LCD_Set_Cursor@ROW,w
  2994  1442  00A5               	movwf	??_LCD_Set_Cursor
  2995  1443  01A6               	clrf	??_LCD_Set_Cursor+1
  2996                           
  2997                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2998                           ; Switch size 1, requested type "simple"
  2999                           ; Number of cases is 1, Range of values is 0 to 0
  3000                           ; switch strategies available:
  3001                           ; Name         Instructions Cycles
  3002                           ; simple_byte            4     3 (average)
  3003                           ; direct_byte           11     8 (fixed)
  3004                           ; jumptable            260     6 (fixed)
  3005                           ;	Chosen strategy is simple_byte
  3006  1444  0826               	movf	??_LCD_Set_Cursor+1,w
  3007  1445  3A00               	xorlw	0	; case 0
  3008  1446  1903               	skipnz
  3009  1447  2C49               	goto	l4445
  3010  1448  2C39               	goto	l4115
  3011  1449                     l4445:
  3012                           
  3013                           ; Switch size 1, requested type "simple"
  3014                           ; Number of cases is 3, Range of values is 2 to 4
  3015                           ; switch strategies available:
  3016                           ; Name         Instructions Cycles
  3017                           ; simple_byte           10     6 (average)
  3018                           ; direct_byte           20    11 (fixed)
  3019                           ; jumptable            263     9 (fixed)
  3020                           ;	Chosen strategy is simple_byte
  3021  1449  0825               	movf	??_LCD_Set_Cursor,w
  3022  144A  3A02               	xorlw	2	; case 2
  3023  144B  1903               	skipnz
  3024  144C  2C21               	goto	l4109
  3025  144D  3A01               	xorlw	1	; case 3
  3026  144E  1903               	skipnz
  3027  144F  2C29               	goto	l4111
  3028  1450  3A07               	xorlw	7	; case 4
  3029  1451  1903               	skipnz
  3030  1452  2C31               	goto	l4113
  3031  1453  2C39               	goto	l4115
  3032  1454                     l350:
  3033  1454  0008               	return
  3034  1455                     __end_of_LCD_Set_Cursor:
  3035                           
  3036                           	psect	text12
  3037  1343                     __ptext12:	
  3038 ;; *************** function _LCD_CMD *****************
  3039 ;; Defined at:
  3040 ;;		line 162 in file "I2C_Master.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  CMD             1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  CMD             1    3[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         0       1       0       0       0
  3056 ;;      Temps:          0       1       0       0       0
  3057 ;;      Totals:         0       2       0       0       0
  3058 ;;Total ram usage:        2 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 5
  3061 ;; This function calls:
  3062 ;;		_LCD_Write_4Bit
  3063 ;; This function is called by:
  3064 ;;		_LCD_Init
  3065 ;;		_LCD_Set_Cursor
  3066 ;;		_LCD_SL
  3067 ;;		_LCD_SR
  3068 ;;		_LCD_Clear
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _LCD_CMD
  3074  1343                     _LCD_CMD:
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3078                           ;LCD_CMD@CMD stored from wreg
  3079  1343  1283               	bcf	3,5	;RP0=0, select bank0
  3080  1344  1303               	bcf	3,6	;RP1=0, select bank0
  3081  1345  00A3               	movwf	LCD_CMD@CMD
  3082  1346                     l3573:
  3083                           
  3084                           ;I2C_Master.c: 162: void LCD_CMD(unsigned char CMD);I2C_Master.c: 163: {;I2C_Master.c: 1
      +                          64:   RS = 0;
  3085  1346  1683               	bsf	3,5	;RP0=1, select bank1
  3086  1347  1303               	bcf	3,6	;RP1=0, select bank1
  3087  1348  01AF               	clrf	_RS^(0+128)
  3088  1349                     l3575:
  3089                           
  3090                           ;I2C_Master.c: 165:   LCD_Write_4Bit(CMD & 0xF0);
  3091  1349  1283               	bcf	3,5	;RP0=0, select bank0
  3092  134A  1303               	bcf	3,6	;RP1=0, select bank0
  3093  134B  0823               	movf	LCD_CMD@CMD,w
  3094  134C  39F0               	andlw	240
  3095  134D  160A  118A  2387  160A  118A  	fcall	_LCD_Write_4Bit
  3096  1352                     l3577:
  3097                           
  3098                           ;I2C_Master.c: 166:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3099  1352  1283               	bcf	3,5	;RP0=0, select bank0
  3100  1353  1303               	bcf	3,6	;RP1=0, select bank0
  3101  1354  0823               	movf	LCD_CMD@CMD,w
  3102  1355  00A2               	movwf	??_LCD_CMD
  3103  1356  3003               	movlw	3
  3104  1357                     u4485:
  3105  1357  1003               	clrc
  3106  1358  0DA2               	rlf	??_LCD_CMD,f
  3107  1359  3EFF               	addlw	-1
  3108  135A  1D03               	skipz
  3109  135B  2B57               	goto	u4485
  3110  135C  1003               	clrc
  3111  135D  0D22               	rlf	??_LCD_CMD,w
  3112  135E  39F0               	andlw	240
  3113  135F  160A  118A  2387  160A  118A  	fcall	_LCD_Write_4Bit
  3114  1364                     l332:
  3115  1364  0008               	return
  3116  1365                     __end_of_LCD_CMD:
  3117                           
  3118                           	psect	text13
  3119  1387                     __ptext13:	
  3120 ;; *************** function _LCD_Write_4Bit *****************
  3121 ;; Defined at:
  3122 ;;		line 153 in file "I2C_Master.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  Nibble          1    wreg     unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  Nibble          1    1[BANK0 ] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       1       0       0       0
  3138 ;;      Temps:          0       1       0       0       0
  3139 ;;      Totals:         0       2       0       0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 4
  3143 ;; This function calls:
  3144 ;;		_IO_Expander_Write
  3145 ;; This function is called by:
  3146 ;;		_LCD_CMD
  3147 ;;		_LCD_Write_Char
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _LCD_Write_4Bit
  3153  1387                     _LCD_Write_4Bit:
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3157                           ;LCD_Write_4Bit@Nibble stored from wreg
  3158  1387  1283               	bcf	3,5	;RP0=0, select bank0
  3159  1388  1303               	bcf	3,6	;RP1=0, select bank0
  3160  1389  00A1               	movwf	LCD_Write_4Bit@Nibble
  3161  138A                     l3355:
  3162                           
  3163                           ;I2C_Master.c: 153: void LCD_Write_4Bit(unsigned char Nibble);I2C_Master.c: 154: {;I2C_M
      +                          aster.c: 156:   Nibble |= RS;
  3164  138A  1683               	bsf	3,5	;RP0=1, select bank1
  3165  138B  1303               	bcf	3,6	;RP1=0, select bank1
  3166  138C  082F               	movf	_RS^(0+128),w
  3167  138D  1283               	bcf	3,5	;RP0=0, select bank0
  3168  138E  1303               	bcf	3,6	;RP1=0, select bank0
  3169  138F  00A0               	movwf	??_LCD_Write_4Bit
  3170  1390  0820               	movf	??_LCD_Write_4Bit,w
  3171  1391  04A1               	iorwf	LCD_Write_4Bit@Nibble,f
  3172  1392                     l3357:
  3173                           
  3174                           ;I2C_Master.c: 157:   IO_Expander_Write(Nibble | 0x04);
  3175  1392  0821               	movf	LCD_Write_4Bit@Nibble,w
  3176  1393  3804               	iorlw	4
  3177  1394  160A  118A  2326  160A  118A  	fcall	_IO_Expander_Write
  3178  1399                     l3359:
  3179                           
  3180                           ;I2C_Master.c: 158:   IO_Expander_Write(Nibble & 0xFB);
  3181  1399  1283               	bcf	3,5	;RP0=0, select bank0
  3182  139A  1303               	bcf	3,6	;RP1=0, select bank0
  3183  139B  0821               	movf	LCD_Write_4Bit@Nibble,w
  3184  139C  39FB               	andlw	251
  3185  139D  160A  118A  2326  160A  118A  	fcall	_IO_Expander_Write
  3186                           
  3187                           ;I2C_Master.c: 159:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  3188  13A2  3020               	movlw	32
  3189  13A3  1283               	bcf	3,5	;RP0=0, select bank0
  3190  13A4  1303               	bcf	3,6	;RP1=0, select bank0
  3191  13A5  00A0               	movwf	??_LCD_Write_4Bit
  3192  13A6                     u6027:
  3193  13A6  0BA0               	decfsz	??_LCD_Write_4Bit,f
  3194  13A7  2BA6               	goto	u6027
  3195  13A8  0000               	nop
  3196  13A9                     l329:
  3197  13A9  0008               	return
  3198  13AA                     __end_of_LCD_Write_4Bit:
  3199                           
  3200                           	psect	text14
  3201  1326                     __ptext14:	
  3202 ;; *************** function _IO_Expander_Write *****************
  3203 ;; Defined at:
  3204 ;;		line 145 in file "I2C_Master.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  Data            1    wreg     unsigned char 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  Data            1    5[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      void 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0, pclath, cstack
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         0       0       0       0       0
  3219 ;;      Locals:         1       0       0       0       0
  3220 ;;      Temps:          0       0       0       0       0
  3221 ;;      Totals:         1       0       0       0       0
  3222 ;;Total ram usage:        1 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 3
  3225 ;; This function calls:
  3226 ;;		_I2C_Master_Start
  3227 ;;		_I2C_Master_Stop
  3228 ;;		_I2C_Master_Write
  3229 ;; This function is called by:
  3230 ;;		_LCD_Init
  3231 ;;		_LCD_Write_4Bit
  3232 ;;		_Backlight
  3233 ;;		_noBacklight
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _IO_Expander_Write
  3239  1326                     _IO_Expander_Write:
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3243                           ;IO_Expander_Write@Data stored from wreg
  3244  1326  00F5               	movwf	IO_Expander_Write@Data
  3245  1327                     l3353:
  3246                           
  3247                           ;I2C_Master.c: 145: void IO_Expander_Write(unsigned char Data);I2C_Master.c: 146: {;I2C_
      +                          Master.c: 147:   I2C_Master_Start();
  3248  1327  160A  118A  22BC  160A  118A  	fcall	_I2C_Master_Start
  3249                           
  3250                           ;I2C_Master.c: 148:   I2C_Master_Write(i2c_add);
  3251  132C  1683               	bsf	3,5	;RP0=1, select bank1
  3252  132D  1303               	bcf	3,6	;RP1=0, select bank1
  3253  132E  082E               	movf	_i2c_add^(0+128),w
  3254  132F  160A  118A  22E8  160A  118A  	fcall	_I2C_Master_Write
  3255                           
  3256                           ;I2C_Master.c: 149:   I2C_Master_Write(Data | BackLight_State);
  3257  1334  0875               	movf	IO_Expander_Write@Data,w
  3258  1335  1683               	bsf	3,5	;RP0=1, select bank1
  3259  1336  1303               	bcf	3,6	;RP1=0, select bank1
  3260  1337  0468               	iorwf	_BackLight_State^(0+128),w
  3261  1338  160A  118A  22E8  160A  118A  	fcall	_I2C_Master_Write
  3262                           
  3263                           ;I2C_Master.c: 150:   I2C_Master_Stop();
  3264  133D  160A  118A  22C5  160A  118A  	fcall	_I2C_Master_Stop
  3265  1342                     l326:
  3266  1342  0008               	return
  3267  1343                     __end_of_IO_Expander_Write:
  3268                           
  3269                           	psect	text15
  3270  0037                     __ptext15:	
  3271 ;; *************** function _ADC_convert *****************
  3272 ;; Defined at:
  3273 ;;		line 314 in file "Master_PIC.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;  data            1    wreg     PTR unsigned char 
  3276 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3277 ;;  a               4   63[BANK0 ] float 
  3278 ;;  place           2   67[BANK0 ] int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  data            1    4[BANK1 ] PTR unsigned char 
  3281 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3282 ;;  x               4    5[BANK1 ] float 
  3283 ;;  mu              2   13[BANK1 ] int 
  3284 ;;  digits          2   11[BANK1 ] int 
  3285 ;;  i               2    9[BANK1 ] int 
  3286 ;;  j               2    2[BANK1 ] int 
  3287 ;;  temp            2    0[BANK1 ] int 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3297 ;;      Params:         0       6       0       0       0
  3298 ;;      Locals:         0       0      15       0       0
  3299 ;;      Temps:          0       2       0       0       0
  3300 ;;      Totals:         0       8      15       0       0
  3301 ;;Total ram usage:       23 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 3
  3304 ;; This function calls:
  3305 ;;		___awdiv
  3306 ;;		___fldiv
  3307 ;;		___flge
  3308 ;;		___flmul
  3309 ;;		___flsub
  3310 ;;		___fltol
  3311 ;;		___wmul
  3312 ;;		___xxtofl
  3313 ;; This function is called by:
  3314 ;;		_LCD_Send
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _ADC_convert
  3320  0037                     _ADC_convert:
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3324                           ;ADC_convert@data stored from wreg
  3325  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3326  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3327  0039  00D9               	movwf	ADC_convert@data^(0+128)
  3328  003A                     l4133:
  3329                           
  3330                           ;Master_PIC.c: 314:      x=0.0;;Master_PIC.c: 315:      mu=1;;Master_PIC.c: 316:      di
      +                          gits=place;
  3331  003A  1283               	bcf	3,5	;RP0=0, select bank0
  3332  003B  1303               	bcf	3,6	;RP1=0, select bank0
  3333  003C  0862               	movf	ADC_convert@a+3,w
  3334  003D  00A3               	movwf	___fltol@f1+3
  3335  003E  0861               	movf	ADC_convert@a+2,w
  3336  003F  00A2               	movwf	___fltol@f1+2
  3337  0040  0860               	movf	ADC_convert@a+1,w
  3338  0041  00A1               	movwf	___fltol@f1+1
  3339  0042  085F               	movf	ADC_convert@a,w
  3340  0043  00A0               	movwf	___fltol@f1
  3341  0044  160A  118A  26E9  120A  118A  	fcall	___fltol
  3342  0049  1283               	bcf	3,5	;RP0=0, select bank0
  3343  004A  1303               	bcf	3,6	;RP1=0, select bank0
  3344  004B  0821               	movf	?___fltol+1,w
  3345  004C  1683               	bsf	3,5	;RP0=1, select bank1
  3346  004D  1303               	bcf	3,6	;RP1=0, select bank1
  3347  004E  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  3348  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0051  0820               	movf	?___fltol,w
  3351  0052  1683               	bsf	3,5	;RP0=1, select bank1
  3352  0053  1303               	bcf	3,6	;RP1=0, select bank1
  3353  0054  00D5               	movwf	ADC_convert@temp^(0+128)
  3354  0055                     l4135:
  3355  0055                     l4137:
  3356                           
  3357                           ;Master_PIC.c: 318:      {
  3358  0055  01E0               	clrf	ADC_convert@digits^(0+128)
  3359  0056  01E1               	clrf	(ADC_convert@digits+1)^(0+128)
  3360  0057                     l4139:
  3361                           
  3362                           ;Master_PIC.c: 319:          if(digits==1)mu=1;
  3363  0057  01DE               	clrf	ADC_convert@i^(0+128)
  3364  0058  01DF               	clrf	(ADC_convert@i+1)^(0+128)
  3365  0059                     l4141:
  3366  0059  3001               	movlw	1
  3367  005A  00E2               	movwf	ADC_convert@mu^(0+128)
  3368  005B  3000               	movlw	0
  3369  005C  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3370  005D                     l4143:
  3371  005D                     l4145:
  3372                           
  3373                           ;Master_PIC.c: 321: 
  3374  005D  1283               	bcf	3,5	;RP0=0, select bank0
  3375  005E  1303               	bcf	3,6	;RP1=0, select bank0
  3376  005F  0862               	movf	ADC_convert@a+3,w
  3377  0060  00A3               	movwf	___flge@ff1+3
  3378  0061  0861               	movf	ADC_convert@a+2,w
  3379  0062  00A2               	movwf	___flge@ff1+2
  3380  0063  0860               	movf	ADC_convert@a+1,w
  3381  0064  00A1               	movwf	___flge@ff1+1
  3382  0065  085F               	movf	ADC_convert@a,w
  3383  0066  00A0               	movwf	___flge@ff1
  3384  0067  3000               	movlw	0
  3385  0068  00A7               	movwf	___flge@ff2+3
  3386  0069  3000               	movlw	0
  3387  006A  00A6               	movwf	___flge@ff2+2
  3388  006B  3000               	movlw	0
  3389  006C  00A5               	movwf	___flge@ff2+1
  3390  006D  3000               	movlw	0
  3391  006E  00A4               	movwf	___flge@ff2
  3392  006F  120A  158A  2062  120A  118A  	fcall	___flge
  3393  0074  1803               	btfsc	3,0
  3394  0075  2877               	goto	u5731
  3395  0076  2878               	goto	u5730
  3396  0077                     u5731:
  3397  0077  28D6               	goto	l4157
  3398  0078                     u5730:
  3399  0078                     l4147:
  3400                           
  3401                           ;Master_PIC.c: 322:          x=a/mu;;Master_PIC.c: 323:          a=a-((int)x*mu);
  3402  0078  30BF               	movlw	191
  3403  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3404  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3405  007B  00C8               	movwf	___flmul@b+3
  3406  007C  3080               	movlw	128
  3407  007D  00C7               	movwf	___flmul@b+2
  3408  007E  3000               	movlw	0
  3409  007F  00C6               	movwf	___flmul@b+1
  3410  0080  3000               	movlw	0
  3411  0081  00C5               	movwf	___flmul@b
  3412  0082  0862               	movf	ADC_convert@a+3,w
  3413  0083  00CC               	movwf	___flmul@a+3
  3414  0084  0861               	movf	ADC_convert@a+2,w
  3415  0085  00CB               	movwf	___flmul@a+2
  3416  0086  0860               	movf	ADC_convert@a+1,w
  3417  0087  00CA               	movwf	___flmul@a+1
  3418  0088  085F               	movf	ADC_convert@a,w
  3419  0089  00C9               	movwf	___flmul@a
  3420  008A  120A  118A  2479  120A  118A  	fcall	___flmul
  3421  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3422  0090  1303               	bcf	3,6	;RP1=0, select bank0
  3423  0091  0848               	movf	?___flmul+3,w
  3424  0092  00E2               	movwf	ADC_convert@a+3
  3425  0093  0847               	movf	?___flmul+2,w
  3426  0094  00E1               	movwf	ADC_convert@a+2
  3427  0095  0846               	movf	?___flmul+1,w
  3428  0096  00E0               	movwf	ADC_convert@a+1
  3429  0097  0845               	movf	?___flmul,w
  3430  0098  00DF               	movwf	ADC_convert@a
  3431  0099                     l4149:
  3432                           
  3433                           ;Master_PIC.c: 324:          data[i]=0x30+((int)x);
  3434  0099  302D               	movlw	45
  3435  009A  00E5               	movwf	??_ADC_convert
  3436  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3437  009C  1303               	bcf	3,6	;RP1=0, select bank1
  3438  009D  0859               	movf	ADC_convert@data^(0+128),w
  3439  009E  0084               	movwf	4
  3440  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3441  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3442  00A1  0865               	movf	??_ADC_convert,w
  3443  00A2  1383               	bcf	3,7	;select IRP bank0
  3444  00A3  0080               	movwf	0
  3445  00A4                     l4151:
  3446                           
  3447                           ;Master_PIC.c: 325:          i++;
  3448  00A4  3001               	movlw	1
  3449  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  3450  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  3451  00A7  07DE               	addwf	ADC_convert@i^(0+128),f
  3452  00A8  1803               	skipnc
  3453  00A9  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3454  00AA  3000               	movlw	0
  3455  00AB  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3456  00AC  28D6               	goto	l4157
  3457  00AD                     l4153:
  3458                           
  3459                           ;Master_PIC.c: 329: ;Master_PIC.c: 330:     data[i]='\n';
  3460  00AD  300A               	movlw	10
  3461  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  3462  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  3463  00B0  00A0               	movwf	___awdiv@divisor
  3464  00B1  3000               	movlw	0
  3465  00B2  00A1               	movwf	___awdiv@divisor+1
  3466  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3467  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  3468  00B5  0856               	movf	(ADC_convert@temp+1)^(0+128),w
  3469  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3470  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3471  00B8  00A3               	movwf	___awdiv@dividend+1
  3472  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3473  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  3474  00BB  0855               	movf	ADC_convert@temp^(0+128),w
  3475  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3476  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3477  00BE  00A2               	movwf	___awdiv@dividend
  3478  00BF  160A  118A  252A  120A  118A  	fcall	___awdiv
  3479  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3480  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3481  00C6  0821               	movf	?___awdiv+1,w
  3482  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  3483  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  3484  00C9  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  3485  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3486  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3487  00CC  0820               	movf	?___awdiv,w
  3488  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3489  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3490  00CF  00D5               	movwf	ADC_convert@temp^(0+128)
  3491  00D0                     l4155:
  3492                           
  3493                           ;Master_PIC.c: 331: }
  3494  00D0  3001               	movlw	1
  3495  00D1  07E0               	addwf	ADC_convert@digits^(0+128),f
  3496  00D2  1803               	skipnc
  3497  00D3  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  3498  00D4  3000               	movlw	0
  3499  00D5  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  3500  00D6                     l4157:
  3501                           
  3502                           ;Master_PIC.c: 328:      }
  3503  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3504  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3505  00D8  0855               	movf	ADC_convert@temp^(0+128),w
  3506  00D9  0456               	iorwf	(ADC_convert@temp+1)^(0+128),w
  3507  00DA  1D03               	btfss	3,2
  3508  00DB  28DD               	goto	u5741
  3509  00DC  28DE               	goto	u5740
  3510  00DD                     u5741:
  3511  00DD  28AD               	goto	l4153
  3512  00DE                     u5740:
  3513  00DE  2A16               	goto	l4181
  3514  00DF                     l4159:
  3515                           
  3516                           ;Master_PIC.c: 334: char division (char valor){;Master_PIC.c: 335:     hundreds = valor/
      +                          100;
  3517  00DF  0360               	decf	ADC_convert@digits^(0+128),w
  3518  00E0  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3519  00E1  1D03               	btfss	3,2
  3520  00E2  28E4               	goto	u5751
  3521  00E3  28E5               	goto	u5750
  3522  00E4                     u5751:
  3523  00E4  28EA               	goto	l4163
  3524  00E5                     u5750:
  3525  00E5                     l4161:
  3526  00E5  3001               	movlw	1
  3527  00E6  00E2               	movwf	ADC_convert@mu^(0+128)
  3528  00E7  3000               	movlw	0
  3529  00E8  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3530  00E9  292C               	goto	l4171
  3531  00EA                     l4163:
  3532  00EA  3002               	movlw	2
  3533  00EB  00D7               	movwf	ADC_convert@j^(0+128)
  3534  00EC  3000               	movlw	0
  3535  00ED  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  3536  00EE  2916               	goto	l4169
  3537  00EF                     l4165:
  3538  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  3539  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  3540  00F1  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3541  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3542  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3543  00F4  00AA               	movwf	___wmul@multiplier+1
  3544  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3545  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3546  00F7  0862               	movf	ADC_convert@mu^(0+128),w
  3547  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3548  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3549  00FA  00A9               	movwf	___wmul@multiplier
  3550  00FB  300A               	movlw	10
  3551  00FC  00AB               	movwf	___wmul@multiplicand
  3552  00FD  3000               	movlw	0
  3553  00FE  00AC               	movwf	___wmul@multiplicand+1
  3554  00FF  160A  118A  23CD  120A  118A  	fcall	___wmul
  3555  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0106  082A               	movf	?___wmul+1,w
  3558  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3560  0109  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  3561  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3562  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3563  010C  0829               	movf	?___wmul,w
  3564  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3565  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3566  010F  00E2               	movwf	ADC_convert@mu^(0+128)
  3567  0110                     l4167:
  3568  0110  3001               	movlw	1
  3569  0111  07D7               	addwf	ADC_convert@j^(0+128),f
  3570  0112  1803               	skipnc
  3571  0113  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  3572  0114  3000               	movlw	0
  3573  0115  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  3574  0116                     l4169:
  3575  0116  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  3576  0117  3A80               	xorlw	128
  3577  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3579  011A  00E5               	movwf	??_ADC_convert
  3580  011B  1683               	bsf	3,5	;RP0=1, select bank1
  3581  011C  1303               	bcf	3,6	;RP1=0, select bank1
  3582  011D  0858               	movf	(ADC_convert@j+1)^(0+128),w
  3583  011E  3A80               	xorlw	128
  3584  011F  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0120  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0121  0265               	subwf	??_ADC_convert,w
  3587  0122  1D03               	skipz
  3588  0123  2928               	goto	u5765
  3589  0124  1683               	bsf	3,5	;RP0=1, select bank1
  3590  0125  1303               	bcf	3,6	;RP1=0, select bank1
  3591  0126  0857               	movf	ADC_convert@j^(0+128),w
  3592  0127  0260               	subwf	ADC_convert@digits^(0+128),w
  3593  0128                     u5765:
  3594  0128  1803               	skipnc
  3595  0129  292B               	goto	u5761
  3596  012A  292C               	goto	u5760
  3597  012B                     u5761:
  3598  012B  28EF               	goto	l4165
  3599  012C                     u5760:
  3600  012C                     l4171:
  3601                           
  3602                           ;Master_PIC.c: 338:     units = residuo%10;
  3603  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3604  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3605  012E  0862               	movf	ADC_convert@mu^(0+128),w
  3606  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0131  00AF               	movwf	___xxtofl@val
  3609  0132  1683               	bsf	3,5	;RP0=1, select bank1
  3610  0133  1303               	bcf	3,6	;RP1=0, select bank1
  3611  0134  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3612  0135  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0136  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0137  00B0               	movwf	___xxtofl@val+1
  3615  0138  3000               	movlw	0
  3616  0139  1BB0               	btfsc	___xxtofl@val+1,7
  3617  013A  30FF               	movlw	255
  3618  013B  00B1               	movwf	___xxtofl@val+2
  3619  013C  00B2               	movwf	___xxtofl@val+3
  3620  013D  3001               	movlw	1
  3621  013E  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3622  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3623  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0145  0832               	movf	?___xxtofl+3,w
  3625  0146  00C0               	movwf	___fldiv@a+3
  3626  0147  0831               	movf	?___xxtofl+2,w
  3627  0148  00BF               	movwf	___fldiv@a+2
  3628  0149  0830               	movf	?___xxtofl+1,w
  3629  014A  00BE               	movwf	___fldiv@a+1
  3630  014B  082F               	movf	?___xxtofl,w
  3631  014C  00BD               	movwf	___fldiv@a
  3632  014D  0862               	movf	ADC_convert@a+3,w
  3633  014E  00C4               	movwf	___fldiv@b+3
  3634  014F  0861               	movf	ADC_convert@a+2,w
  3635  0150  00C3               	movwf	___fldiv@b+2
  3636  0151  0860               	movf	ADC_convert@a+1,w
  3637  0152  00C2               	movwf	___fldiv@b+1
  3638  0153  085F               	movf	ADC_convert@a,w
  3639  0154  00C1               	movwf	___fldiv@b
  3640  0155  120A  158A  239B  120A  118A  	fcall	___fldiv
  3641  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3642  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3643  015C  0840               	movf	?___fldiv+3,w
  3644  015D  1683               	bsf	3,5	;RP0=1, select bank1
  3645  015E  1303               	bcf	3,6	;RP1=0, select bank1
  3646  015F  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  3647  0160  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0161  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0162  083F               	movf	?___fldiv+2,w
  3650  0163  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0164  1303               	bcf	3,6	;RP1=0, select bank1
  3652  0165  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  3653  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3655  0168  083E               	movf	?___fldiv+1,w
  3656  0169  1683               	bsf	3,5	;RP0=1, select bank1
  3657  016A  1303               	bcf	3,6	;RP1=0, select bank1
  3658  016B  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  3659  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3660  016D  1303               	bcf	3,6	;RP1=0, select bank0
  3661  016E  083D               	movf	?___fldiv,w
  3662  016F  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0170  1303               	bcf	3,6	;RP1=0, select bank1
  3664  0171  00DA               	movwf	ADC_convert@x^(0+128)
  3665                           
  3666                           ;Master_PIC.c: 339: 
  3667  0172  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3668  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0175  00AC               	movwf	___wmul@multiplicand+1
  3671  0176  1683               	bsf	3,5	;RP0=1, select bank1
  3672  0177  1303               	bcf	3,6	;RP1=0, select bank1
  3673  0178  0862               	movf	ADC_convert@mu^(0+128),w
  3674  0179  1283               	bcf	3,5	;RP0=0, select bank0
  3675  017A  1303               	bcf	3,6	;RP1=0, select bank0
  3676  017B  00AB               	movwf	___wmul@multiplicand
  3677  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3678  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3679  017E  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3680  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0181  00A3               	movwf	___fltol@f1+3
  3683  0182  1683               	bsf	3,5	;RP0=1, select bank1
  3684  0183  1303               	bcf	3,6	;RP1=0, select bank1
  3685  0184  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3686  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3688  0187  00A2               	movwf	___fltol@f1+2
  3689  0188  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0189  1303               	bcf	3,6	;RP1=0, select bank1
  3691  018A  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3692  018B  1283               	bcf	3,5	;RP0=0, select bank0
  3693  018C  1303               	bcf	3,6	;RP1=0, select bank0
  3694  018D  00A1               	movwf	___fltol@f1+1
  3695  018E  1683               	bsf	3,5	;RP0=1, select bank1
  3696  018F  1303               	bcf	3,6	;RP1=0, select bank1
  3697  0190  085A               	movf	ADC_convert@x^(0+128),w
  3698  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0192  1303               	bcf	3,6	;RP1=0, select bank0
  3700  0193  00A0               	movwf	___fltol@f1
  3701  0194  160A  118A  26E9  120A  118A  	fcall	___fltol
  3702  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3703  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3704  019B  0821               	movf	?___fltol+1,w
  3705  019C  00AA               	movwf	___wmul@multiplier+1
  3706  019D  0820               	movf	?___fltol,w
  3707  019E  00A9               	movwf	___wmul@multiplier
  3708  019F  160A  118A  23CD  120A  118A  	fcall	___wmul
  3709  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3710  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3711  01A6  0829               	movf	?___wmul,w
  3712  01A7  00AF               	movwf	___xxtofl@val
  3713  01A8  082A               	movf	?___wmul+1,w
  3714  01A9  00B0               	movwf	___xxtofl@val+1
  3715  01AA  3000               	movlw	0
  3716  01AB  1BB0               	btfsc	___xxtofl@val+1,7
  3717  01AC  30FF               	movlw	255
  3718  01AD  00B1               	movwf	___xxtofl@val+2
  3719  01AE  00B2               	movwf	___xxtofl@val+3
  3720  01AF  3001               	movlw	1
  3721  01B0  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3722  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3723  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3724  01B7  0832               	movf	?___xxtofl+3,w
  3725  01B8  00C0               	movwf	___flsub@a+3
  3726  01B9  0831               	movf	?___xxtofl+2,w
  3727  01BA  00BF               	movwf	___flsub@a+2
  3728  01BB  0830               	movf	?___xxtofl+1,w
  3729  01BC  00BE               	movwf	___flsub@a+1
  3730  01BD  082F               	movf	?___xxtofl,w
  3731  01BE  00BD               	movwf	___flsub@a
  3732  01BF  0862               	movf	ADC_convert@a+3,w
  3733  01C0  00C4               	movwf	___flsub@b+3
  3734  01C1  0861               	movf	ADC_convert@a+2,w
  3735  01C2  00C3               	movwf	___flsub@b+2
  3736  01C3  0860               	movf	ADC_convert@a+1,w
  3737  01C4  00C2               	movwf	___flsub@b+1
  3738  01C5  085F               	movf	ADC_convert@a,w
  3739  01C6  00C1               	movwf	___flsub@b
  3740  01C7  120A  118A  27DA  120A  118A  	fcall	___flsub
  3741  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3742  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3743  01CE  0840               	movf	?___flsub+3,w
  3744  01CF  00E2               	movwf	ADC_convert@a+3
  3745  01D0  083F               	movf	?___flsub+2,w
  3746  01D1  00E1               	movwf	ADC_convert@a+2
  3747  01D2  083E               	movf	?___flsub+1,w
  3748  01D3  00E0               	movwf	ADC_convert@a+1
  3749  01D4  083D               	movf	?___flsub,w
  3750  01D5  00DF               	movwf	ADC_convert@a
  3751  01D6                     l4173:
  3752                           
  3753                           ;Master_PIC.c: 340:     hundreds = hundreds + 48;
  3754  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  3755  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  3756  01D8  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3757  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3758  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3759  01DB  00A3               	movwf	___fltol@f1+3
  3760  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3761  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3762  01DE  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3763  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3764  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3765  01E1  00A2               	movwf	___fltol@f1+2
  3766  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  3767  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  3768  01E4  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3769  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3770  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3771  01E7  00A1               	movwf	___fltol@f1+1
  3772  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  3773  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  3774  01EA  085A               	movf	ADC_convert@x^(0+128),w
  3775  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3776  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3777  01ED  00A0               	movwf	___fltol@f1
  3778  01EE  160A  118A  26E9  120A  118A  	fcall	___fltol
  3779  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3780  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3781  01F5  0820               	movf	?___fltol,w
  3782  01F6  3E30               	addlw	48
  3783  01F7  00E5               	movwf	??_ADC_convert
  3784  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3785  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  3786  01FA  085E               	movf	ADC_convert@i^(0+128),w
  3787  01FB  0759               	addwf	ADC_convert@data^(0+128),w
  3788  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3789  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3790  01FE  00E6               	movwf	??_ADC_convert+1
  3791  01FF  0866               	movf	??_ADC_convert+1,w
  3792  0200  0084               	movwf	4
  3793  0201  0865               	movf	??_ADC_convert,w
  3794  0202  1383               	bcf	3,7	;select IRP bank0
  3795  0203  0080               	movwf	0
  3796  0204                     l4175:
  3797                           
  3798                           ;Master_PIC.c: 341:     tens = tens + 48;
  3799  0204  3001               	movlw	1
  3800  0205  1683               	bsf	3,5	;RP0=1, select bank1
  3801  0206  1303               	bcf	3,6	;RP1=0, select bank1
  3802  0207  07DE               	addwf	ADC_convert@i^(0+128),f
  3803  0208  1803               	skipnc
  3804  0209  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3805  020A  3000               	movlw	0
  3806  020B  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3807  020C                     l4177:
  3808                           
  3809                           ;Master_PIC.c: 342:     units = units + 48;
  3810  020C  30FF               	movlw	255
  3811  020D  07E0               	addwf	ADC_convert@digits^(0+128),f
  3812  020E  1803               	skipnc
  3813  020F  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  3814  0210  30FF               	movlw	255
  3815  0211  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  3816  0212                     l4179:
  3817                           
  3818                           ;Master_PIC.c: 343: }
  3819  0212  3001               	movlw	1
  3820  0213  00E2               	movwf	ADC_convert@mu^(0+128)
  3821  0214  3000               	movlw	0
  3822  0215  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3823  0216                     l4181:
  3824                           
  3825                           ;Master_PIC.c: 333: 
  3826  0216  0860               	movf	ADC_convert@digits^(0+128),w
  3827  0217  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3828  0218  1D03               	btfss	3,2
  3829  0219  2A1B               	goto	u5771
  3830  021A  2A1C               	goto	u5770
  3831  021B                     u5771:
  3832  021B  28DF               	goto	l4159
  3833  021C                     u5770:
  3834  021C                     l4183:
  3835                           
  3836                           ;Master_PIC.c: 346: int concat(int a, int b)
  3837  021C  302E               	movlw	46
  3838  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3839  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3840  021F  00E5               	movwf	??_ADC_convert
  3841  0220  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0221  1303               	bcf	3,6	;RP1=0, select bank1
  3843  0222  085E               	movf	ADC_convert@i^(0+128),w
  3844  0223  0759               	addwf	ADC_convert@data^(0+128),w
  3845  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0226  00E6               	movwf	??_ADC_convert+1
  3848  0227  0866               	movf	??_ADC_convert+1,w
  3849  0228  0084               	movwf	4
  3850  0229  0865               	movf	??_ADC_convert,w
  3851  022A  1383               	bcf	3,7	;select IRP bank0
  3852  022B  0080               	movwf	0
  3853  022C                     l4185:
  3854                           
  3855                           ;Master_PIC.c: 347: {
  3856  022C  3001               	movlw	1
  3857  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3858  022E  1303               	bcf	3,6	;RP1=0, select bank1
  3859  022F  07DE               	addwf	ADC_convert@i^(0+128),f
  3860  0230  1803               	skipnc
  3861  0231  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3862  0232  3000               	movlw	0
  3863  0233  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3864  0234                     l4187:
  3865  0234                     l4189:
  3866                           
  3867                           ;Master_PIC.c: 349:     char s1[20];
  3868  0234  3001               	movlw	1
  3869  0235  00D7               	movwf	ADC_convert@j^(0+128)
  3870  0236  3000               	movlw	0
  3871  0237  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  3872  0238  2A60               	goto	l4195
  3873  0239                     l4191:
  3874  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3875  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3876  023B  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3877  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3878  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3879  023E  00AA               	movwf	___wmul@multiplier+1
  3880  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3882  0241  0862               	movf	ADC_convert@mu^(0+128),w
  3883  0242  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0243  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0244  00A9               	movwf	___wmul@multiplier
  3886  0245  300A               	movlw	10
  3887  0246  00AB               	movwf	___wmul@multiplicand
  3888  0247  3000               	movlw	0
  3889  0248  00AC               	movwf	___wmul@multiplicand+1
  3890  0249  160A  118A  23CD  120A  118A  	fcall	___wmul
  3891  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3892  024F  1303               	bcf	3,6	;RP1=0, select bank0
  3893  0250  082A               	movf	?___wmul+1,w
  3894  0251  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0252  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0253  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  3897  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0256  0829               	movf	?___wmul,w
  3900  0257  1683               	bsf	3,5	;RP0=1, select bank1
  3901  0258  1303               	bcf	3,6	;RP1=0, select bank1
  3902  0259  00E2               	movwf	ADC_convert@mu^(0+128)
  3903  025A                     l4193:
  3904  025A  3001               	movlw	1
  3905  025B  07D7               	addwf	ADC_convert@j^(0+128),f
  3906  025C  1803               	skipnc
  3907  025D  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  3908  025E  3000               	movlw	0
  3909  025F  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  3910  0260                     l4195:
  3911  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0262  0864               	movf	ADC_convert@place+1,w
  3914  0263  3A80               	xorlw	128
  3915  0264  00E5               	movwf	??_ADC_convert
  3916  0265  1683               	bsf	3,5	;RP0=1, select bank1
  3917  0266  1303               	bcf	3,6	;RP1=0, select bank1
  3918  0267  0858               	movf	(ADC_convert@j+1)^(0+128),w
  3919  0268  3A80               	xorlw	128
  3920  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3921  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3922  026B  0265               	subwf	??_ADC_convert,w
  3923  026C  1D03               	skipz
  3924  026D  2A74               	goto	u5785
  3925  026E  1683               	bsf	3,5	;RP0=1, select bank1
  3926  026F  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0270  0857               	movf	ADC_convert@j^(0+128),w
  3928  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0273  0263               	subwf	ADC_convert@place,w
  3931  0274                     u5785:
  3932  0274  1803               	skipnc
  3933  0275  2A77               	goto	u5781
  3934  0276  2A78               	goto	u5780
  3935  0277                     u5781:
  3936  0277  2A39               	goto	l4191
  3937  0278                     u5780:
  3938  0278                     l4197:
  3939                           
  3940                           ;Master_PIC.c: 350:     char s2[20];
  3941  0278  1683               	bsf	3,5	;RP0=1, select bank1
  3942  0279  1303               	bcf	3,6	;RP1=0, select bank1
  3943  027A  0862               	movf	ADC_convert@mu^(0+128),w
  3944  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3945  027C  1303               	bcf	3,6	;RP1=0, select bank0
  3946  027D  00AF               	movwf	___xxtofl@val
  3947  027E  1683               	bsf	3,5	;RP0=1, select bank1
  3948  027F  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0280  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3950  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0282  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0283  00B0               	movwf	___xxtofl@val+1
  3953  0284  3000               	movlw	0
  3954  0285  1BB0               	btfsc	___xxtofl@val+1,7
  3955  0286  30FF               	movlw	255
  3956  0287  00B1               	movwf	___xxtofl@val+2
  3957  0288  00B2               	movwf	___xxtofl@val+3
  3958  0289  3001               	movlw	1
  3959  028A  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3960  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0290  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0291  0832               	movf	?___xxtofl+3,w
  3963  0292  00C8               	movwf	___flmul@b+3
  3964  0293  0831               	movf	?___xxtofl+2,w
  3965  0294  00C7               	movwf	___flmul@b+2
  3966  0295  0830               	movf	?___xxtofl+1,w
  3967  0296  00C6               	movwf	___flmul@b+1
  3968  0297  082F               	movf	?___xxtofl,w
  3969  0298  00C5               	movwf	___flmul@b
  3970  0299  0862               	movf	ADC_convert@a+3,w
  3971  029A  00A3               	movwf	___fltol@f1+3
  3972  029B  0861               	movf	ADC_convert@a+2,w
  3973  029C  00A2               	movwf	___fltol@f1+2
  3974  029D  0860               	movf	ADC_convert@a+1,w
  3975  029E  00A1               	movwf	___fltol@f1+1
  3976  029F  085F               	movf	ADC_convert@a,w
  3977  02A0  00A0               	movwf	___fltol@f1
  3978  02A1  160A  118A  26E9  120A  118A  	fcall	___fltol
  3979  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3980  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3981  02A8  0820               	movf	?___fltol,w
  3982  02A9  00AF               	movwf	___xxtofl@val
  3983  02AA  0821               	movf	?___fltol+1,w
  3984  02AB  00B0               	movwf	___xxtofl@val+1
  3985  02AC  3000               	movlw	0
  3986  02AD  1BB0               	btfsc	___xxtofl@val+1,7
  3987  02AE  30FF               	movlw	255
  3988  02AF  00B1               	movwf	___xxtofl@val+2
  3989  02B0  00B2               	movwf	___xxtofl@val+3
  3990  02B1  3001               	movlw	1
  3991  02B2  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3992  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  3993  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  3994  02B9  0832               	movf	?___xxtofl+3,w
  3995  02BA  00C0               	movwf	___flsub@a+3
  3996  02BB  0831               	movf	?___xxtofl+2,w
  3997  02BC  00BF               	movwf	___flsub@a+2
  3998  02BD  0830               	movf	?___xxtofl+1,w
  3999  02BE  00BE               	movwf	___flsub@a+1
  4000  02BF  082F               	movf	?___xxtofl,w
  4001  02C0  00BD               	movwf	___flsub@a
  4002  02C1  0862               	movf	ADC_convert@a+3,w
  4003  02C2  00C4               	movwf	___flsub@b+3
  4004  02C3  0861               	movf	ADC_convert@a+2,w
  4005  02C4  00C3               	movwf	___flsub@b+2
  4006  02C5  0860               	movf	ADC_convert@a+1,w
  4007  02C6  00C2               	movwf	___flsub@b+1
  4008  02C7  085F               	movf	ADC_convert@a,w
  4009  02C8  00C1               	movwf	___flsub@b
  4010  02C9  120A  118A  27DA  120A  118A  	fcall	___flsub
  4011  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4012  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4013  02D0  0840               	movf	?___flsub+3,w
  4014  02D1  00CC               	movwf	___flmul@a+3
  4015  02D2  083F               	movf	?___flsub+2,w
  4016  02D3  00CB               	movwf	___flmul@a+2
  4017  02D4  083E               	movf	?___flsub+1,w
  4018  02D5  00CA               	movwf	___flmul@a+1
  4019  02D6  083D               	movf	?___flsub,w
  4020  02D7  00C9               	movwf	___flmul@a
  4021  02D8  120A  118A  2479  120A  118A  	fcall	___flmul
  4022  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  4023  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  4024  02DF  0848               	movf	?___flmul+3,w
  4025  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  4026  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  4027  02E2  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  4028  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  4029  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  4030  02E5  0847               	movf	?___flmul+2,w
  4031  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  4032  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  4033  02E8  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  4034  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  4035  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  4036  02EB  0846               	movf	?___flmul+1,w
  4037  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  4038  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  4039  02EE  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  4040  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4041  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4042  02F1  0845               	movf	?___flmul,w
  4043  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  4044  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  4045  02F4  00DA               	movwf	ADC_convert@x^(0+128)
  4046  02F5                     l4199:
  4047                           
  4048                           ;Master_PIC.c: 351: 
  4049  02F5  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4050  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  4051  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  4052  02F8  00E2               	movwf	ADC_convert@a+3
  4053  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  4054  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  4055  02FB  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4056  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  4057  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  4058  02FE  00E1               	movwf	ADC_convert@a+2
  4059  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  4060  0300  1303               	bcf	3,6	;RP1=0, select bank1
  4061  0301  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4062  0302  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0303  1303               	bcf	3,6	;RP1=0, select bank0
  4064  0304  00E0               	movwf	ADC_convert@a+1
  4065  0305  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0306  1303               	bcf	3,6	;RP1=0, select bank1
  4067  0307  085A               	movf	ADC_convert@x^(0+128),w
  4068  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4069  0309  1303               	bcf	3,6	;RP1=0, select bank0
  4070  030A  00DF               	movwf	ADC_convert@a
  4071  030B                     l4201:
  4072  030B  0862               	movf	ADC_convert@a+3,w
  4073  030C  00A3               	movwf	___fltol@f1+3
  4074  030D  0861               	movf	ADC_convert@a+2,w
  4075  030E  00A2               	movwf	___fltol@f1+2
  4076  030F  0860               	movf	ADC_convert@a+1,w
  4077  0310  00A1               	movwf	___fltol@f1+1
  4078  0311  085F               	movf	ADC_convert@a,w
  4079  0312  00A0               	movwf	___fltol@f1
  4080  0313  160A  118A  26E9  120A  118A  	fcall	___fltol
  4081  0318                     l4203:
  4082  0318                     l4205:
  4083                           
  4084                           ;Master_PIC.c: 354:     sprintf(s1, "%d", a);
  4085  0318  3001               	movlw	1
  4086  0319  1683               	bsf	3,5	;RP0=1, select bank1
  4087  031A  1303               	bcf	3,6	;RP1=0, select bank1
  4088  031B  00E2               	movwf	ADC_convert@mu^(0+128)
  4089  031C  3000               	movlw	0
  4090  031D  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4091  031E                     l4207:
  4092                           
  4093                           ;Master_PIC.c: 355:     sprintf(s2, "%d", b);
  4094  031E  1283               	bcf	3,5	;RP0=0, select bank0
  4095  031F  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0320  0864               	movf	ADC_convert@place+1,w
  4097  0321  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0322  1303               	bcf	3,6	;RP1=0, select bank1
  4099  0323  00E1               	movwf	(ADC_convert@digits+1)^(0+128)
  4100  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4101  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4102  0326  0863               	movf	ADC_convert@place,w
  4103  0327  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0328  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0329  00E0               	movwf	ADC_convert@digits^(0+128)
  4106                           
  4107                           ;Master_PIC.c: 356: 
  4108  032A  2C62               	goto	l4231
  4109  032B                     l4209:
  4110                           
  4111                           ;Master_PIC.c: 357: ;Master_PIC.c: 358: 
  4112  032B  0360               	decf	ADC_convert@digits^(0+128),w
  4113  032C  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4114  032D  1D03               	btfss	3,2
  4115  032E  2B30               	goto	u5791
  4116  032F  2B31               	goto	u5790
  4117  0330                     u5791:
  4118  0330  2B36               	goto	l4213
  4119  0331                     u5790:
  4120  0331                     l4211:
  4121  0331  3001               	movlw	1
  4122  0332  00E2               	movwf	ADC_convert@mu^(0+128)
  4123  0333  3000               	movlw	0
  4124  0334  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4125  0335  2B78               	goto	l4221
  4126  0336                     l4213:
  4127  0336  3002               	movlw	2
  4128  0337  00D7               	movwf	ADC_convert@j^(0+128)
  4129  0338  3000               	movlw	0
  4130  0339  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  4131  033A  2B62               	goto	l4219
  4132  033B                     l4215:
  4133  033B  1683               	bsf	3,5	;RP0=1, select bank1
  4134  033C  1303               	bcf	3,6	;RP1=0, select bank1
  4135  033D  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4136  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4137  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0340  00AA               	movwf	___wmul@multiplier+1
  4139  0341  1683               	bsf	3,5	;RP0=1, select bank1
  4140  0342  1303               	bcf	3,6	;RP1=0, select bank1
  4141  0343  0862               	movf	ADC_convert@mu^(0+128),w
  4142  0344  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0345  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0346  00A9               	movwf	___wmul@multiplier
  4145  0347  300A               	movlw	10
  4146  0348  00AB               	movwf	___wmul@multiplicand
  4147  0349  3000               	movlw	0
  4148  034A  00AC               	movwf	___wmul@multiplicand+1
  4149  034B  160A  118A  23CD  120A  118A  	fcall	___wmul
  4150  0350  1283               	bcf	3,5	;RP0=0, select bank0
  4151  0351  1303               	bcf	3,6	;RP1=0, select bank0
  4152  0352  082A               	movf	?___wmul+1,w
  4153  0353  1683               	bsf	3,5	;RP0=1, select bank1
  4154  0354  1303               	bcf	3,6	;RP1=0, select bank1
  4155  0355  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  4156  0356  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0357  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0358  0829               	movf	?___wmul,w
  4159  0359  1683               	bsf	3,5	;RP0=1, select bank1
  4160  035A  1303               	bcf	3,6	;RP1=0, select bank1
  4161  035B  00E2               	movwf	ADC_convert@mu^(0+128)
  4162  035C                     l4217:
  4163  035C  3001               	movlw	1
  4164  035D  07D7               	addwf	ADC_convert@j^(0+128),f
  4165  035E  1803               	skipnc
  4166  035F  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  4167  0360  3000               	movlw	0
  4168  0361  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  4169  0362                     l4219:
  4170  0362  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  4171  0363  3A80               	xorlw	128
  4172  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0366  00E5               	movwf	??_ADC_convert
  4175  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4176  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4177  0369  0858               	movf	(ADC_convert@j+1)^(0+128),w
  4178  036A  3A80               	xorlw	128
  4179  036B  1283               	bcf	3,5	;RP0=0, select bank0
  4180  036C  1303               	bcf	3,6	;RP1=0, select bank0
  4181  036D  0265               	subwf	??_ADC_convert,w
  4182  036E  1D03               	skipz
  4183  036F  2B74               	goto	u5805
  4184  0370  1683               	bsf	3,5	;RP0=1, select bank1
  4185  0371  1303               	bcf	3,6	;RP1=0, select bank1
  4186  0372  0857               	movf	ADC_convert@j^(0+128),w
  4187  0373  0260               	subwf	ADC_convert@digits^(0+128),w
  4188  0374                     u5805:
  4189  0374  1803               	skipnc
  4190  0375  2B77               	goto	u5801
  4191  0376  2B78               	goto	u5800
  4192  0377                     u5801:
  4193  0377  2B3B               	goto	l4215
  4194  0378                     u5800:
  4195  0378                     l4221:
  4196                           
  4197                           ;Master_PIC.c: 361: 
  4198  0378  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0379  1303               	bcf	3,6	;RP1=0, select bank1
  4200  037A  0862               	movf	ADC_convert@mu^(0+128),w
  4201  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4202  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4203  037D  00AF               	movwf	___xxtofl@val
  4204  037E  1683               	bsf	3,5	;RP0=1, select bank1
  4205  037F  1303               	bcf	3,6	;RP1=0, select bank1
  4206  0380  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4207  0381  1283               	bcf	3,5	;RP0=0, select bank0
  4208  0382  1303               	bcf	3,6	;RP1=0, select bank0
  4209  0383  00B0               	movwf	___xxtofl@val+1
  4210  0384  3000               	movlw	0
  4211  0385  1BB0               	btfsc	___xxtofl@val+1,7
  4212  0386  30FF               	movlw	255
  4213  0387  00B1               	movwf	___xxtofl@val+2
  4214  0388  00B2               	movwf	___xxtofl@val+3
  4215  0389  3001               	movlw	1
  4216  038A  120A  158A  2106  120A  118A  	fcall	___xxtofl
  4217  038F  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0390  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0391  0832               	movf	?___xxtofl+3,w
  4220  0392  00C0               	movwf	___fldiv@a+3
  4221  0393  0831               	movf	?___xxtofl+2,w
  4222  0394  00BF               	movwf	___fldiv@a+2
  4223  0395  0830               	movf	?___xxtofl+1,w
  4224  0396  00BE               	movwf	___fldiv@a+1
  4225  0397  082F               	movf	?___xxtofl,w
  4226  0398  00BD               	movwf	___fldiv@a
  4227  0399  0862               	movf	ADC_convert@a+3,w
  4228  039A  00C4               	movwf	___fldiv@b+3
  4229  039B  0861               	movf	ADC_convert@a+2,w
  4230  039C  00C3               	movwf	___fldiv@b+2
  4231  039D  0860               	movf	ADC_convert@a+1,w
  4232  039E  00C2               	movwf	___fldiv@b+1
  4233  039F  085F               	movf	ADC_convert@a,w
  4234  03A0  00C1               	movwf	___fldiv@b
  4235  03A1  120A  158A  239B  120A  118A  	fcall	___fldiv
  4236  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  4237  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  4238  03A8  0840               	movf	?___fldiv+3,w
  4239  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  4240  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  4241  03AB  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  4242  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4243  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  4244  03AE  083F               	movf	?___fldiv+2,w
  4245  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  4246  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  4247  03B1  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  4248  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  4249  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  4250  03B4  083E               	movf	?___fldiv+1,w
  4251  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  4252  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  4253  03B7  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  4254  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4255  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4256  03BA  083D               	movf	?___fldiv,w
  4257  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4258  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  4259  03BD  00DA               	movwf	ADC_convert@x^(0+128)
  4260                           
  4261                           ;Master_PIC.c: 362: 
  4262  03BE  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4263  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4264  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4265  03C1  00AC               	movwf	___wmul@multiplicand+1
  4266  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  4267  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  4268  03C4  0862               	movf	ADC_convert@mu^(0+128),w
  4269  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4270  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4271  03C7  00AB               	movwf	___wmul@multiplicand
  4272  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  4273  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  4274  03CA  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4275  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4276  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  4277  03CD  00A3               	movwf	___fltol@f1+3
  4278  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  4279  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  4280  03D0  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4281  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4282  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4283  03D3  00A2               	movwf	___fltol@f1+2
  4284  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  4285  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  4286  03D6  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4287  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  4288  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  4289  03D9  00A1               	movwf	___fltol@f1+1
  4290  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  4291  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  4292  03DC  085A               	movf	ADC_convert@x^(0+128),w
  4293  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  4294  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  4295  03DF  00A0               	movwf	___fltol@f1
  4296  03E0  160A  118A  26E9  120A  118A  	fcall	___fltol
  4297  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4298  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4299  03E7  0821               	movf	?___fltol+1,w
  4300  03E8  00AA               	movwf	___wmul@multiplier+1
  4301  03E9  0820               	movf	?___fltol,w
  4302  03EA  00A9               	movwf	___wmul@multiplier
  4303  03EB  160A  118A  23CD  120A  118A  	fcall	___wmul
  4304  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4305  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  4306  03F2  0829               	movf	?___wmul,w
  4307  03F3  00AF               	movwf	___xxtofl@val
  4308  03F4  082A               	movf	?___wmul+1,w
  4309  03F5  00B0               	movwf	___xxtofl@val+1
  4310  03F6  3000               	movlw	0
  4311  03F7  1BB0               	btfsc	___xxtofl@val+1,7
  4312  03F8  30FF               	movlw	255
  4313  03F9  00B1               	movwf	___xxtofl@val+2
  4314  03FA  00B2               	movwf	___xxtofl@val+3
  4315  03FB  3001               	movlw	1
  4316  03FC  120A  158A  2106  120A  118A  	fcall	___xxtofl
  4317  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0402  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0403  0832               	movf	?___xxtofl+3,w
  4320  0404  00C0               	movwf	___flsub@a+3
  4321  0405  0831               	movf	?___xxtofl+2,w
  4322  0406  00BF               	movwf	___flsub@a+2
  4323  0407  0830               	movf	?___xxtofl+1,w
  4324  0408  00BE               	movwf	___flsub@a+1
  4325  0409  082F               	movf	?___xxtofl,w
  4326  040A  00BD               	movwf	___flsub@a
  4327  040B  0862               	movf	ADC_convert@a+3,w
  4328  040C  00C4               	movwf	___flsub@b+3
  4329  040D  0861               	movf	ADC_convert@a+2,w
  4330  040E  00C3               	movwf	___flsub@b+2
  4331  040F  0860               	movf	ADC_convert@a+1,w
  4332  0410  00C2               	movwf	___flsub@b+1
  4333  0411  085F               	movf	ADC_convert@a,w
  4334  0412  00C1               	movwf	___flsub@b
  4335  0413  120A  118A  27DA  120A  118A  	fcall	___flsub
  4336  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4338  041A  0840               	movf	?___flsub+3,w
  4339  041B  00E2               	movwf	ADC_convert@a+3
  4340  041C  083F               	movf	?___flsub+2,w
  4341  041D  00E1               	movwf	ADC_convert@a+2
  4342  041E  083E               	movf	?___flsub+1,w
  4343  041F  00E0               	movwf	ADC_convert@a+1
  4344  0420  083D               	movf	?___flsub,w
  4345  0421  00DF               	movwf	ADC_convert@a
  4346  0422                     l4223:
  4347                           
  4348                           ;Master_PIC.c: 363:     int c = atoi(s1);
  4349  0422  1683               	bsf	3,5	;RP0=1, select bank1
  4350  0423  1303               	bcf	3,6	;RP1=0, select bank1
  4351  0424  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4352  0425  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0426  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0427  00A3               	movwf	___fltol@f1+3
  4355  0428  1683               	bsf	3,5	;RP0=1, select bank1
  4356  0429  1303               	bcf	3,6	;RP1=0, select bank1
  4357  042A  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4358  042B  1283               	bcf	3,5	;RP0=0, select bank0
  4359  042C  1303               	bcf	3,6	;RP1=0, select bank0
  4360  042D  00A2               	movwf	___fltol@f1+2
  4361  042E  1683               	bsf	3,5	;RP0=1, select bank1
  4362  042F  1303               	bcf	3,6	;RP1=0, select bank1
  4363  0430  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4364  0431  1283               	bcf	3,5	;RP0=0, select bank0
  4365  0432  1303               	bcf	3,6	;RP1=0, select bank0
  4366  0433  00A1               	movwf	___fltol@f1+1
  4367  0434  1683               	bsf	3,5	;RP0=1, select bank1
  4368  0435  1303               	bcf	3,6	;RP1=0, select bank1
  4369  0436  085A               	movf	ADC_convert@x^(0+128),w
  4370  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0439  00A0               	movwf	___fltol@f1
  4373  043A  160A  118A  26E9  120A  118A  	fcall	___fltol
  4374  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0441  0820               	movf	?___fltol,w
  4377  0442  3E30               	addlw	48
  4378  0443  00E5               	movwf	??_ADC_convert
  4379  0444  1683               	bsf	3,5	;RP0=1, select bank1
  4380  0445  1303               	bcf	3,6	;RP1=0, select bank1
  4381  0446  085E               	movf	ADC_convert@i^(0+128),w
  4382  0447  0759               	addwf	ADC_convert@data^(0+128),w
  4383  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4385  044A  00E6               	movwf	??_ADC_convert+1
  4386  044B  0866               	movf	??_ADC_convert+1,w
  4387  044C  0084               	movwf	4
  4388  044D  0865               	movf	??_ADC_convert,w
  4389  044E  1383               	bcf	3,7	;select IRP bank0
  4390  044F  0080               	movwf	0
  4391  0450                     l4225:
  4392                           
  4393                           ;Master_PIC.c: 364: 
  4394  0450  3001               	movlw	1
  4395  0451  1683               	bsf	3,5	;RP0=1, select bank1
  4396  0452  1303               	bcf	3,6	;RP1=0, select bank1
  4397  0453  07DE               	addwf	ADC_convert@i^(0+128),f
  4398  0454  1803               	skipnc
  4399  0455  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  4400  0456  3000               	movlw	0
  4401  0457  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  4402  0458                     l4227:
  4403                           
  4404                           ;Master_PIC.c: 365: 
  4405  0458  30FF               	movlw	255
  4406  0459  07E0               	addwf	ADC_convert@digits^(0+128),f
  4407  045A  1803               	skipnc
  4408  045B  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  4409  045C  30FF               	movlw	255
  4410  045D  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  4411  045E                     l4229:
  4412                           
  4413                           ;Master_PIC.c: 366:     return c;
  4414  045E  3001               	movlw	1
  4415  045F  00E2               	movwf	ADC_convert@mu^(0+128)
  4416  0460  3000               	movlw	0
  4417  0461  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4418  0462                     l4231:
  4419                           
  4420                           ;Master_PIC.c: 356: 
  4421  0462  0860               	movf	ADC_convert@digits^(0+128),w
  4422  0463  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4423  0464  1D03               	btfss	3,2
  4424  0465  2C67               	goto	u5811
  4425  0466  2C68               	goto	u5810
  4426  0467                     u5811:
  4427  0467  2B2B               	goto	l4209
  4428  0468                     u5810:
  4429  0468                     l4233:
  4430                           
  4431                           ;Master_PIC.c: 369: 
  4432  0468  300A               	movlw	10
  4433  0469  1283               	bcf	3,5	;RP0=0, select bank0
  4434  046A  1303               	bcf	3,6	;RP1=0, select bank0
  4435  046B  00E5               	movwf	??_ADC_convert
  4436  046C  1683               	bsf	3,5	;RP0=1, select bank1
  4437  046D  1303               	bcf	3,6	;RP1=0, select bank1
  4438  046E  085E               	movf	ADC_convert@i^(0+128),w
  4439  046F  0759               	addwf	ADC_convert@data^(0+128),w
  4440  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0472  00E6               	movwf	??_ADC_convert+1
  4443  0473  0866               	movf	??_ADC_convert+1,w
  4444  0474  0084               	movwf	4
  4445  0475  0865               	movf	??_ADC_convert,w
  4446  0476  1383               	bcf	3,7	;select IRP bank0
  4447  0477  0080               	movwf	0
  4448  0478                     l214:
  4449  0478  0008               	return
  4450  0479                     __end_of_ADC_convert:
  4451                           
  4452                           	psect	text16
  4453  0906                     __ptext16:	
  4454 ;; *************** function ___xxtofl *****************
  4455 ;; Defined at:
  4456 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  sign            1    wreg     unsigned char 
  4459 ;;  val             4   15[BANK0 ] long 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  sign            1   23[BANK0 ] unsigned char 
  4462 ;;  arg             4   25[BANK0 ] unsigned long 
  4463 ;;  exp             1   24[BANK0 ] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  4   15[BANK0 ] unsigned char 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         0       4       0       0       0
  4474 ;;      Locals:         0       6       0       0       0
  4475 ;;      Temps:          0       4       0       0       0
  4476 ;;      Totals:         0      14       0       0       0
  4477 ;;Total ram usage:       14 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_LCD_Send
  4484 ;;		_ADC_convert
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function ___xxtofl
  4490  0906                     ___xxtofl:
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4494                           ;___xxtofl@sign stored from wreg
  4495  0906  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0907  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0908  00B7               	movwf	___xxtofl@sign
  4498  0909                     l4019:
  4499  0909  0837               	movf	___xxtofl@sign,w
  4500  090A  1903               	btfsc	3,2
  4501  090B  290D               	goto	u5551
  4502  090C  290E               	goto	u5550
  4503  090D                     u5551:
  4504  090D  2922               	goto	l4025
  4505  090E                     u5550:
  4506  090E                     l4021:
  4507  090E  1FB2               	btfss	___xxtofl@val+3,7
  4508  090F  2911               	goto	u5561
  4509  0910  2912               	goto	u5560
  4510  0911                     u5561:
  4511  0911  2922               	goto	l4025
  4512  0912                     u5560:
  4513  0912                     l4023:
  4514  0912  092F               	comf	___xxtofl@val,w
  4515  0913  00B9               	movwf	___xxtofl@arg
  4516  0914  0930               	comf	___xxtofl@val+1,w
  4517  0915  00BA               	movwf	___xxtofl@arg+1
  4518  0916  0931               	comf	___xxtofl@val+2,w
  4519  0917  00BB               	movwf	___xxtofl@arg+2
  4520  0918  0932               	comf	___xxtofl@val+3,w
  4521  0919  00BC               	movwf	___xxtofl@arg+3
  4522  091A  0AB9               	incf	___xxtofl@arg,f
  4523  091B  1903               	skipnz
  4524  091C  0ABA               	incf	___xxtofl@arg+1,f
  4525  091D  1903               	skipnz
  4526  091E  0ABB               	incf	___xxtofl@arg+2,f
  4527  091F  1903               	skipnz
  4528  0920  0ABC               	incf	___xxtofl@arg+3,f
  4529  0921  292A               	goto	l884
  4530  0922                     l4025:
  4531  0922  0832               	movf	___xxtofl@val+3,w
  4532  0923  00BC               	movwf	___xxtofl@arg+3
  4533  0924  0831               	movf	___xxtofl@val+2,w
  4534  0925  00BB               	movwf	___xxtofl@arg+2
  4535  0926  0830               	movf	___xxtofl@val+1,w
  4536  0927  00BA               	movwf	___xxtofl@arg+1
  4537  0928  082F               	movf	___xxtofl@val,w
  4538  0929  00B9               	movwf	___xxtofl@arg
  4539  092A                     l884:
  4540  092A  0832               	movf	___xxtofl@val+3,w
  4541  092B  0431               	iorwf	___xxtofl@val+2,w
  4542  092C  0430               	iorwf	___xxtofl@val+1,w
  4543  092D  042F               	iorwf	___xxtofl@val,w
  4544  092E  1D03               	skipz
  4545  092F  2931               	goto	u5571
  4546  0930  2932               	goto	u5570
  4547  0931                     u5571:
  4548  0931  293B               	goto	l4031
  4549  0932                     u5570:
  4550  0932                     l4027:
  4551  0932  3000               	movlw	0
  4552  0933  00B2               	movwf	?___xxtofl+3
  4553  0934  3000               	movlw	0
  4554  0935  00B1               	movwf	?___xxtofl+2
  4555  0936  3000               	movlw	0
  4556  0937  00B0               	movwf	?___xxtofl+1
  4557  0938  3000               	movlw	0
  4558  0939  00AF               	movwf	?___xxtofl
  4559  093A  29C1               	goto	l886
  4560  093B                     l4031:
  4561  093B  3096               	movlw	150
  4562  093C  00B3               	movwf	??___xxtofl
  4563  093D  0833               	movf	??___xxtofl,w
  4564  093E  00B8               	movwf	___xxtofl@exp
  4565  093F  294D               	goto	l4035
  4566  0940                     l4033:
  4567  0940  3001               	movlw	1
  4568  0941  00B3               	movwf	??___xxtofl
  4569  0942  0833               	movf	??___xxtofl,w
  4570  0943  07B8               	addwf	___xxtofl@exp,f
  4571  0944  3001               	movlw	1
  4572  0945                     u5585:
  4573  0945  1003               	clrc
  4574  0946  0CBC               	rrf	___xxtofl@arg+3,f
  4575  0947  0CBB               	rrf	___xxtofl@arg+2,f
  4576  0948  0CBA               	rrf	___xxtofl@arg+1,f
  4577  0949  0CB9               	rrf	___xxtofl@arg,f
  4578  094A  3EFF               	addlw	-1
  4579  094B  1D03               	skipz
  4580  094C  2945               	goto	u5585
  4581  094D                     l4035:
  4582  094D  30FE               	movlw	254
  4583  094E  053C               	andwf	___xxtofl@arg+3,w
  4584  094F  1D03               	btfss	3,2
  4585  0950  2952               	goto	u5591
  4586  0951  2953               	goto	u5590
  4587  0952                     u5591:
  4588  0952  2940               	goto	l4033
  4589  0953                     u5590:
  4590  0953  296F               	goto	l890
  4591  0954                     l4037:
  4592  0954  3001               	movlw	1
  4593  0955  00B3               	movwf	??___xxtofl
  4594  0956  0833               	movf	??___xxtofl,w
  4595  0957  07B8               	addwf	___xxtofl@exp,f
  4596  0958                     l4039:
  4597  0958  3001               	movlw	1
  4598  0959  07B9               	addwf	___xxtofl@arg,f
  4599  095A  3000               	movlw	0
  4600  095B  1803               	skipnc
  4601  095C  3001               	movlw	1
  4602  095D  07BA               	addwf	___xxtofl@arg+1,f
  4603  095E  3000               	movlw	0
  4604  095F  1803               	skipnc
  4605  0960  3001               	movlw	1
  4606  0961  07BB               	addwf	___xxtofl@arg+2,f
  4607  0962  3000               	movlw	0
  4608  0963  1803               	skipnc
  4609  0964  3001               	movlw	1
  4610  0965  07BC               	addwf	___xxtofl@arg+3,f
  4611  0966                     l4041:
  4612  0966  3001               	movlw	1
  4613  0967                     u5605:
  4614  0967  1003               	clrc
  4615  0968  0CBC               	rrf	___xxtofl@arg+3,f
  4616  0969  0CBB               	rrf	___xxtofl@arg+2,f
  4617  096A  0CBA               	rrf	___xxtofl@arg+1,f
  4618  096B  0CB9               	rrf	___xxtofl@arg,f
  4619  096C  3EFF               	addlw	-1
  4620  096D  1D03               	skipz
  4621  096E  2967               	goto	u5605
  4622  096F                     l890:
  4623  096F  30FF               	movlw	255
  4624  0970  053C               	andwf	___xxtofl@arg+3,w
  4625  0971  1D03               	btfss	3,2
  4626  0972  2974               	goto	u5611
  4627  0973  2975               	goto	u5610
  4628  0974                     u5611:
  4629  0974  2954               	goto	l4037
  4630  0975                     u5610:
  4631  0975  2981               	goto	l4045
  4632  0976                     l4043:
  4633  0976  3001               	movlw	1
  4634  0977  02B8               	subwf	___xxtofl@exp,f
  4635  0978  3001               	movlw	1
  4636  0979  00B3               	movwf	??___xxtofl
  4637  097A                     u5625:
  4638  097A  1003               	clrc
  4639  097B  0DB9               	rlf	___xxtofl@arg,f
  4640  097C  0DBA               	rlf	___xxtofl@arg+1,f
  4641  097D  0DBB               	rlf	___xxtofl@arg+2,f
  4642  097E  0DBC               	rlf	___xxtofl@arg+3,f
  4643  097F  0BB3               	decfsz	??___xxtofl,f
  4644  0980  297A               	goto	u5625
  4645  0981                     l4045:
  4646  0981  1BBB               	btfsc	___xxtofl@arg+2,7
  4647  0982  2984               	goto	u5631
  4648  0983  2985               	goto	u5630
  4649  0984                     u5631:
  4650  0984  298B               	goto	l897
  4651  0985                     u5630:
  4652  0985                     l4047:
  4653  0985  3002               	movlw	2
  4654  0986  0238               	subwf	___xxtofl@exp,w
  4655  0987  1803               	skipnc
  4656  0988  298A               	goto	u5641
  4657  0989  298B               	goto	u5640
  4658  098A                     u5641:
  4659  098A  2976               	goto	l4043
  4660  098B                     u5640:
  4661  098B                     l897:
  4662  098B  1838               	btfsc	___xxtofl@exp,0
  4663  098C  298E               	goto	u5651
  4664  098D  298F               	goto	u5650
  4665  098E                     u5651:
  4666  098E  2997               	goto	l898
  4667  098F                     u5650:
  4668  098F                     l4049:
  4669  098F  30FF               	movlw	255
  4670  0990  05B9               	andwf	___xxtofl@arg,f
  4671  0991  30FF               	movlw	255
  4672  0992  05BA               	andwf	___xxtofl@arg+1,f
  4673  0993  307F               	movlw	127
  4674  0994  05BB               	andwf	___xxtofl@arg+2,f
  4675  0995  30FF               	movlw	255
  4676  0996  05BC               	andwf	___xxtofl@arg+3,f
  4677  0997                     l898:
  4678  0997  1003               	clrc
  4679  0998  0CB8               	rrf	___xxtofl@exp,f
  4680  0999                     l4051:
  4681  0999  0838               	movf	___xxtofl@exp,w
  4682  099A  00B3               	movwf	??___xxtofl
  4683  099B  01B4               	clrf	??___xxtofl+1
  4684  099C  01B5               	clrf	??___xxtofl+2
  4685  099D  01B6               	clrf	??___xxtofl+3
  4686  099E  3018               	movlw	24
  4687  099F                     u5665:
  4688  099F  1003               	clrc
  4689  09A0  0DB3               	rlf	??___xxtofl,f
  4690  09A1  0DB4               	rlf	??___xxtofl+1,f
  4691  09A2  0DB5               	rlf	??___xxtofl+2,f
  4692  09A3  0DB6               	rlf	??___xxtofl+3,f
  4693  09A4                     u5660:
  4694  09A4  3EFF               	addlw	-1
  4695  09A5  1D03               	skipz
  4696  09A6  299F               	goto	u5665
  4697  09A7  0833               	movf	??___xxtofl,w
  4698  09A8  04B9               	iorwf	___xxtofl@arg,f
  4699  09A9  0834               	movf	??___xxtofl+1,w
  4700  09AA  04BA               	iorwf	___xxtofl@arg+1,f
  4701  09AB  0835               	movf	??___xxtofl+2,w
  4702  09AC  04BB               	iorwf	___xxtofl@arg+2,f
  4703  09AD  0836               	movf	??___xxtofl+3,w
  4704  09AE  04BC               	iorwf	___xxtofl@arg+3,f
  4705  09AF                     l4053:
  4706  09AF  0837               	movf	___xxtofl@sign,w
  4707  09B0  1903               	btfsc	3,2
  4708  09B1  29B3               	goto	u5671
  4709  09B2  29B4               	goto	u5670
  4710  09B3                     u5671:
  4711  09B3  29B9               	goto	l4059
  4712  09B4                     u5670:
  4713  09B4                     l4055:
  4714  09B4  1FB2               	btfss	___xxtofl@val+3,7
  4715  09B5  29B7               	goto	u5681
  4716  09B6  29B8               	goto	u5680
  4717  09B7                     u5681:
  4718  09B7  29B9               	goto	l4059
  4719  09B8                     u5680:
  4720  09B8                     l4057:
  4721  09B8  17BC               	bsf	___xxtofl@arg+3,7
  4722  09B9                     l4059:
  4723  09B9  083C               	movf	___xxtofl@arg+3,w
  4724  09BA  00B2               	movwf	?___xxtofl+3
  4725  09BB  083B               	movf	___xxtofl@arg+2,w
  4726  09BC  00B1               	movwf	?___xxtofl+2
  4727  09BD  083A               	movf	___xxtofl@arg+1,w
  4728  09BE  00B0               	movwf	?___xxtofl+1
  4729  09BF  0839               	movf	___xxtofl@arg,w
  4730  09C0  00AF               	movwf	?___xxtofl
  4731  09C1                     l886:
  4732  09C1  0008               	return
  4733  09C2                     __end_of___xxtofl:
  4734                           
  4735                           	psect	text17
  4736  13CD                     __ptext17:	
  4737 ;; *************** function ___wmul *****************
  4738 ;; Defined at:
  4739 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  multiplier      2    9[BANK0 ] unsigned int 
  4742 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  product         2   13[BANK0 ] unsigned int 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2    9[BANK0 ] unsigned int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         0       4       0       0       0
  4755 ;;      Locals:         0       2       0       0       0
  4756 ;;      Temps:          0       0       0       0       0
  4757 ;;      Totals:         0       6       0       0       0
  4758 ;;Total ram usage:        6 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; Hardware stack levels required when called: 1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_ADC_convert
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function ___wmul
  4770  13CD                     ___wmul:
  4771  13CD                     l3579:	
  4772                           ;incstack = 0
  4773                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4774                           
  4775  13CD  1283               	bcf	3,5	;RP0=0, select bank0
  4776  13CE  1303               	bcf	3,6	;RP1=0, select bank0
  4777  13CF  01AD               	clrf	___wmul@product
  4778  13D0  01AE               	clrf	___wmul@product+1
  4779  13D1                     l3581:
  4780  13D1  1C29               	btfss	___wmul@multiplier,0
  4781  13D2  2BD4               	goto	u4491
  4782  13D3  2BD5               	goto	u4490
  4783  13D4                     u4491:
  4784  13D4  2BDB               	goto	l451
  4785  13D5                     u4490:
  4786  13D5                     l3583:
  4787  13D5  082B               	movf	___wmul@multiplicand,w
  4788  13D6  07AD               	addwf	___wmul@product,f
  4789  13D7  1803               	skipnc
  4790  13D8  0AAE               	incf	___wmul@product+1,f
  4791  13D9  082C               	movf	___wmul@multiplicand+1,w
  4792  13DA  07AE               	addwf	___wmul@product+1,f
  4793  13DB                     l451:
  4794  13DB  3001               	movlw	1
  4795  13DC                     u4505:
  4796  13DC  1003               	clrc
  4797  13DD  0DAB               	rlf	___wmul@multiplicand,f
  4798  13DE  0DAC               	rlf	___wmul@multiplicand+1,f
  4799  13DF  3EFF               	addlw	-1
  4800  13E0  1D03               	skipz
  4801  13E1  2BDC               	goto	u4505
  4802  13E2                     l3585:
  4803  13E2  3001               	movlw	1
  4804  13E3                     u4515:
  4805  13E3  1003               	clrc
  4806  13E4  0CAA               	rrf	___wmul@multiplier+1,f
  4807  13E5  0CA9               	rrf	___wmul@multiplier,f
  4808  13E6  3EFF               	addlw	-1
  4809  13E7  1D03               	skipz
  4810  13E8  2BE3               	goto	u4515
  4811  13E9                     l3587:
  4812  13E9  0829               	movf	___wmul@multiplier,w
  4813  13EA  042A               	iorwf	___wmul@multiplier+1,w
  4814  13EB  1D03               	btfss	3,2
  4815  13EC  2BEE               	goto	u4521
  4816  13ED  2BEF               	goto	u4520
  4817  13EE                     u4521:
  4818  13EE  2BD1               	goto	l3581
  4819  13EF                     u4520:
  4820  13EF                     l3589:
  4821  13EF  082E               	movf	___wmul@product+1,w
  4822  13F0  00AA               	movwf	?___wmul+1
  4823  13F1  082D               	movf	___wmul@product,w
  4824  13F2  00A9               	movwf	?___wmul
  4825  13F3                     l453:
  4826  13F3  0008               	return
  4827  13F4                     __end_of___wmul:
  4828                           
  4829                           	psect	text18
  4830  16E9                     __ptext18:	
  4831 ;; *************** function ___fltol *****************
  4832 ;; Defined at:
  4833 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  f1              4    0[BANK0 ] unsigned int 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;  exp1            1    5[COMMON] unsigned char 
  4838 ;;  sign1           1    4[COMMON] unsigned char 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  4    0[BANK0 ] long 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4848 ;;      Params:         0       4       0       0       0
  4849 ;;      Locals:         2       0       0       0       0
  4850 ;;      Temps:          0       5       0       0       0
  4851 ;;      Totals:         2       9       0       0       0
  4852 ;;Total ram usage:       11 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 1
  4855 ;; This function calls:
  4856 ;;		Nothing
  4857 ;; This function is called by:
  4858 ;;		_ADC_convert
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function ___fltol
  4864  16E9                     ___fltol:
  4865  16E9                     l3695:	
  4866                           ;incstack = 0
  4867                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4868                           
  4869  16E9  1003               	clrc
  4870  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  4871  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  4872  16EC  0D22               	rlf	___fltol@f1+2,w
  4873  16ED  0D23               	rlf	___fltol@f1+3,w
  4874  16EE  00A4               	movwf	??___fltol
  4875  16EF  0824               	movf	??___fltol,w
  4876  16F0  00F5               	movwf	___fltol@exp1
  4877  16F1  0875               	movf	___fltol@exp1,w
  4878  16F2  1D03               	btfss	3,2
  4879  16F3  2EF5               	goto	u4791
  4880  16F4  2EF6               	goto	u4790
  4881  16F5                     u4791:
  4882  16F5  2EFF               	goto	l3701
  4883  16F6                     u4790:
  4884  16F6                     l3697:
  4885  16F6  3000               	movlw	0
  4886  16F7  00A3               	movwf	?___fltol+3
  4887  16F8  3000               	movlw	0
  4888  16F9  00A2               	movwf	?___fltol+2
  4889  16FA  3000               	movlw	0
  4890  16FB  00A1               	movwf	?___fltol+1
  4891  16FC  3000               	movlw	0
  4892  16FD  00A0               	movwf	?___fltol
  4893  16FE  2F64               	goto	l637
  4894  16FF                     l3701:
  4895  16FF  0820               	movf	___fltol@f1,w
  4896  1700  00A4               	movwf	??___fltol
  4897  1701  0821               	movf	___fltol@f1+1,w
  4898  1702  00A5               	movwf	??___fltol+1
  4899  1703  0822               	movf	___fltol@f1+2,w
  4900  1704  00A6               	movwf	??___fltol+2
  4901  1705  0823               	movf	___fltol@f1+3,w
  4902  1706  00A7               	movwf	??___fltol+3
  4903  1707  301F               	movlw	31
  4904  1708                     u4805:
  4905  1708  1003               	clrc
  4906  1709  0CA7               	rrf	??___fltol+3,f
  4907  170A  0CA6               	rrf	??___fltol+2,f
  4908  170B  0CA5               	rrf	??___fltol+1,f
  4909  170C  0CA4               	rrf	??___fltol,f
  4910  170D                     u4800:
  4911  170D  3EFF               	addlw	-1
  4912  170E  1D03               	skipz
  4913  170F  2F08               	goto	u4805
  4914  1710  0824               	movf	??___fltol,w
  4915  1711  00A8               	movwf	??___fltol+4
  4916  1712  0828               	movf	??___fltol+4,w
  4917  1713  00F4               	movwf	___fltol@sign1
  4918  1714                     l3703:
  4919  1714  17A2               	bsf	___fltol@f1+2,7
  4920  1715                     l3705:
  4921  1715  30FF               	movlw	255
  4922  1716  05A0               	andwf	___fltol@f1,f
  4923  1717  30FF               	movlw	255
  4924  1718  05A1               	andwf	___fltol@f1+1,f
  4925  1719  30FF               	movlw	255
  4926  171A  05A2               	andwf	___fltol@f1+2,f
  4927  171B  3000               	movlw	0
  4928  171C  05A3               	andwf	___fltol@f1+3,f
  4929  171D                     l3707:
  4930  171D  3096               	movlw	150
  4931  171E  02F5               	subwf	___fltol@exp1,f
  4932  171F                     l3709:
  4933  171F  1FF5               	btfss	___fltol@exp1,7
  4934  1720  2F22               	goto	u4811
  4935  1721  2F23               	goto	u4810
  4936  1722                     u4811:
  4937  1722  2F3D               	goto	l3719
  4938  1723                     u4810:
  4939  1723                     l3711:
  4940  1723  0875               	movf	___fltol@exp1,w
  4941  1724  3A80               	xorlw	128
  4942  1725  3E97               	addlw	151
  4943  1726  1803               	skipnc
  4944  1727  2F29               	goto	u4821
  4945  1728  2F2A               	goto	u4820
  4946  1729                     u4821:
  4947  1729  2F2B               	goto	l3717
  4948  172A                     u4820:
  4949  172A  2EF6               	goto	l3697
  4950  172B                     l3717:
  4951  172B  3001               	movlw	1
  4952  172C                     u4835:
  4953  172C  1003               	clrc
  4954  172D  0CA3               	rrf	___fltol@f1+3,f
  4955  172E  0CA2               	rrf	___fltol@f1+2,f
  4956  172F  0CA1               	rrf	___fltol@f1+1,f
  4957  1730  0CA0               	rrf	___fltol@f1,f
  4958  1731  3EFF               	addlw	-1
  4959  1732  1D03               	skipz
  4960  1733  2F2C               	goto	u4835
  4961  1734  3001               	movlw	1
  4962  1735  00A4               	movwf	??___fltol
  4963  1736  0824               	movf	??___fltol,w
  4964  1737  07F5               	addwf	___fltol@exp1,f
  4965  1738  1D03               	btfss	3,2
  4966  1739  2F3B               	goto	u4841
  4967  173A  2F3C               	goto	u4840
  4968  173B                     u4841:
  4969  173B  2F2B               	goto	l3717
  4970  173C                     u4840:
  4971  173C  2F54               	goto	l3727
  4972  173D                     l3719:
  4973  173D  3020               	movlw	32
  4974  173E  0275               	subwf	___fltol@exp1,w
  4975  173F  1C03               	skipc
  4976  1740  2F42               	goto	u4851
  4977  1741  2F43               	goto	u4850
  4978  1742                     u4851:
  4979  1742  2F4F               	goto	l644
  4980  1743                     u4850:
  4981  1743  2EF6               	goto	l3697
  4982  1744                     l3725:
  4983  1744  3001               	movlw	1
  4984  1745  00A4               	movwf	??___fltol
  4985  1746                     u4865:
  4986  1746  1003               	clrc
  4987  1747  0DA0               	rlf	___fltol@f1,f
  4988  1748  0DA1               	rlf	___fltol@f1+1,f
  4989  1749  0DA2               	rlf	___fltol@f1+2,f
  4990  174A  0DA3               	rlf	___fltol@f1+3,f
  4991  174B  0BA4               	decfsz	??___fltol,f
  4992  174C  2F46               	goto	u4865
  4993  174D  3001               	movlw	1
  4994  174E  02F5               	subwf	___fltol@exp1,f
  4995  174F                     l644:
  4996  174F  0875               	movf	___fltol@exp1,w
  4997  1750  1D03               	btfss	3,2
  4998  1751  2F53               	goto	u4871
  4999  1752  2F54               	goto	u4870
  5000  1753                     u4871:
  5001  1753  2F44               	goto	l3725
  5002  1754                     u4870:
  5003  1754                     l3727:
  5004  1754  0874               	movf	___fltol@sign1,w
  5005  1755  1903               	btfsc	3,2
  5006  1756  2F58               	goto	u4881
  5007  1757  2F59               	goto	u4880
  5008  1758                     u4881:
  5009  1758  2F64               	goto	l647
  5010  1759                     u4880:
  5011  1759                     l3729:
  5012  1759  09A0               	comf	___fltol@f1,f
  5013  175A  09A1               	comf	___fltol@f1+1,f
  5014  175B  09A2               	comf	___fltol@f1+2,f
  5015  175C  09A3               	comf	___fltol@f1+3,f
  5016  175D  0AA0               	incf	___fltol@f1,f
  5017  175E  1903               	skipnz
  5018  175F  0AA1               	incf	___fltol@f1+1,f
  5019  1760  1903               	skipnz
  5020  1761  0AA2               	incf	___fltol@f1+2,f
  5021  1762  1903               	skipnz
  5022  1763  0AA3               	incf	___fltol@f1+3,f
  5023  1764                     l647:
  5024  1764                     l637:
  5025  1764  0008               	return
  5026  1765                     __end_of___fltol:
  5027                           
  5028                           	psect	text19
  5029  07DA                     __ptext19:	
  5030 ;; *************** function ___flsub *****************
  5031 ;; Defined at:
  5032 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  a               4   29[BANK0 ] long 
  5035 ;;  b               4   33[BANK0 ] long 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  4   29[BANK0 ] long 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5047 ;;      Params:         0       8       0       0       0
  5048 ;;      Locals:         0       0       0       0       0
  5049 ;;      Temps:          0       0       0       0       0
  5050 ;;      Totals:         0       8       0       0       0
  5051 ;;Total ram usage:        8 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 2
  5054 ;; This function calls:
  5055 ;;		___fladd
  5056 ;; This function is called by:
  5057 ;;		_ADC_convert
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           
  5062                           ;psect for function ___flsub
  5063  07DA                     ___flsub:
  5064  07DA                     l3731:	
  5065                           ;incstack = 0
  5066                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5067                           
  5068  07DA  3080               	movlw	128
  5069  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5070  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5071  07DD  06C0               	xorwf	___flsub@a+3,f
  5072  07DE                     l3733:
  5073  07DE  0844               	movf	___flsub@b+3,w
  5074  07DF  00A3               	movwf	___fladd@b+3
  5075  07E0  0843               	movf	___flsub@b+2,w
  5076  07E1  00A2               	movwf	___fladd@b+2
  5077  07E2  0842               	movf	___flsub@b+1,w
  5078  07E3  00A1               	movwf	___fladd@b+1
  5079  07E4  0841               	movf	___flsub@b,w
  5080  07E5  00A0               	movwf	___fladd@b
  5081  07E6  0840               	movf	___flsub@a+3,w
  5082  07E7  00A7               	movwf	___fladd@a+3
  5083  07E8  083F               	movf	___flsub@a+2,w
  5084  07E9  00A6               	movwf	___fladd@a+2
  5085  07EA  083E               	movf	___flsub@a+1,w
  5086  07EB  00A5               	movwf	___fladd@a+1
  5087  07EC  083D               	movf	___flsub@a,w
  5088  07ED  00A4               	movwf	___fladd@a
  5089  07EE  120A  158A  2578  120A  118A  	fcall	___fladd
  5090  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5091  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5092  07F5  0823               	movf	?___fladd+3,w
  5093  07F6  00C0               	movwf	?___flsub+3
  5094  07F7  0822               	movf	?___fladd+2,w
  5095  07F8  00BF               	movwf	?___flsub+2
  5096  07F9  0821               	movf	?___fladd+1,w
  5097  07FA  00BE               	movwf	?___flsub+1
  5098  07FB  0820               	movf	?___fladd,w
  5099  07FC  00BD               	movwf	?___flsub
  5100  07FD                     l790:
  5101  07FD  0008               	return
  5102  07FE                     __end_of___flsub:
  5103                           
  5104                           	psect	text20
  5105  0D78                     __ptext20:	
  5106 ;; *************** function ___fladd *****************
  5107 ;; Defined at:
  5108 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  b               4    0[BANK0 ] long 
  5111 ;;  a               4    4[BANK0 ] long 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  grs             1   19[BANK0 ] unsigned char 
  5114 ;;  bexp            1   18[BANK0 ] unsigned char 
  5115 ;;  aexp            1   17[BANK0 ] unsigned char 
  5116 ;;  signs           1   16[BANK0 ] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  4    0[BANK0 ] unsigned char 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0, btemp+1
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         0       8       0       0       0
  5127 ;;      Locals:         0       4       0       0       0
  5128 ;;      Temps:          0       8       0       0       0
  5129 ;;      Totals:         0      20       0       0       0
  5130 ;;Total ram usage:       20 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		___flsub
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           
  5141                           ;psect for function ___fladd
  5142  0D78                     ___fladd:
  5143  0D78                     l3361:	
  5144                           ;incstack = 0
  5145                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5146                           
  5147  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5148  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5149  0D7A  0823               	movf	___fladd@b+3,w
  5150  0D7B  3980               	andlw	128
  5151  0D7C  00A8               	movwf	??___fladd
  5152  0D7D  0828               	movf	??___fladd,w
  5153  0D7E  00B0               	movwf	___fladd@signs
  5154  0D7F                     l3363:
  5155  0D7F  0823               	movf	___fladd@b+3,w
  5156  0D80  00A8               	movwf	??___fladd
  5157  0D81  0728               	addwf	??___fladd,w
  5158  0D82  00A9               	movwf	??___fladd+1
  5159  0D83  0829               	movf	??___fladd+1,w
  5160  0D84  00B2               	movwf	___fladd@bexp
  5161  0D85                     l3365:
  5162  0D85  1FA2               	btfss	___fladd@b+2,7
  5163  0D86  2D88               	goto	u3981
  5164  0D87  2D89               	goto	u3980
  5165  0D88                     u3981:
  5166  0D88  2D8A               	goto	l3369
  5167  0D89                     u3980:
  5168  0D89                     l3367:
  5169  0D89  1432               	bsf	___fladd@bexp,0
  5170  0D8A                     l3369:
  5171  0D8A  0832               	movf	___fladd@bexp,w
  5172  0D8B  1903               	btfsc	3,2
  5173  0D8C  2D8E               	goto	u3991
  5174  0D8D  2D8F               	goto	u3990
  5175  0D8E                     u3991:
  5176  0D8E  2D9F               	goto	l3379
  5177  0D8F                     u3990:
  5178  0D8F                     l3371:
  5179  0D8F  0A32               	incf	___fladd@bexp,w
  5180  0D90  1D03               	btfss	3,2
  5181  0D91  2D93               	goto	u4001
  5182  0D92  2D94               	goto	u4000
  5183  0D93                     u4001:
  5184  0D93  2D9C               	goto	l3375
  5185  0D94                     u4000:
  5186  0D94                     l3373:
  5187  0D94  3000               	movlw	0
  5188  0D95  00A3               	movwf	___fladd@b+3
  5189  0D96  3000               	movlw	0
  5190  0D97  00A2               	movwf	___fladd@b+2
  5191  0D98  3000               	movlw	0
  5192  0D99  00A1               	movwf	___fladd@b+1
  5193  0D9A  3000               	movlw	0
  5194  0D9B  00A0               	movwf	___fladd@b
  5195  0D9C                     l3375:
  5196  0D9C  17A2               	bsf	___fladd@b+2,7
  5197  0D9D                     l3377:
  5198  0D9D  01A3               	clrf	___fladd@b+3
  5199  0D9E  2DA7               	goto	l3381
  5200  0D9F                     l3379:
  5201  0D9F  3000               	movlw	0
  5202  0DA0  00A3               	movwf	___fladd@b+3
  5203  0DA1  3000               	movlw	0
  5204  0DA2  00A2               	movwf	___fladd@b+2
  5205  0DA3  3000               	movlw	0
  5206  0DA4  00A1               	movwf	___fladd@b+1
  5207  0DA5  3000               	movlw	0
  5208  0DA6  00A0               	movwf	___fladd@b
  5209  0DA7                     l3381:
  5210  0DA7  0827               	movf	___fladd@a+3,w
  5211  0DA8  3980               	andlw	128
  5212  0DA9  00A8               	movwf	??___fladd
  5213  0DAA  0828               	movf	??___fladd,w
  5214  0DAB  00B1               	movwf	___fladd@aexp
  5215  0DAC                     l3383:
  5216  0DAC  0831               	movf	___fladd@aexp,w
  5217  0DAD  0630               	xorwf	___fladd@signs,w
  5218  0DAE  1903               	skipnz
  5219  0DAF  2DB1               	goto	u4011
  5220  0DB0  2DB2               	goto	u4010
  5221  0DB1                     u4011:
  5222  0DB1  2DB3               	goto	l3387
  5223  0DB2                     u4010:
  5224  0DB2                     l3385:
  5225  0DB2  1730               	bsf	___fladd@signs,6
  5226  0DB3                     l3387:
  5227  0DB3  0827               	movf	___fladd@a+3,w
  5228  0DB4  00A8               	movwf	??___fladd
  5229  0DB5  0728               	addwf	??___fladd,w
  5230  0DB6  00A9               	movwf	??___fladd+1
  5231  0DB7  0829               	movf	??___fladd+1,w
  5232  0DB8  00B1               	movwf	___fladd@aexp
  5233  0DB9                     l3389:
  5234  0DB9  1FA6               	btfss	___fladd@a+2,7
  5235  0DBA  2DBC               	goto	u4021
  5236  0DBB  2DBD               	goto	u4020
  5237  0DBC                     u4021:
  5238  0DBC  2DBE               	goto	l3393
  5239  0DBD                     u4020:
  5240  0DBD                     l3391:
  5241  0DBD  1431               	bsf	___fladd@aexp,0
  5242  0DBE                     l3393:
  5243  0DBE  0831               	movf	___fladd@aexp,w
  5244  0DBF  1903               	btfsc	3,2
  5245  0DC0  2DC2               	goto	u4031
  5246  0DC1  2DC3               	goto	u4030
  5247  0DC2                     u4031:
  5248  0DC2  2DD3               	goto	l3403
  5249  0DC3                     u4030:
  5250  0DC3                     l3395:
  5251  0DC3  0A31               	incf	___fladd@aexp,w
  5252  0DC4  1D03               	btfss	3,2
  5253  0DC5  2DC7               	goto	u4041
  5254  0DC6  2DC8               	goto	u4040
  5255  0DC7                     u4041:
  5256  0DC7  2DD0               	goto	l3399
  5257  0DC8                     u4040:
  5258  0DC8                     l3397:
  5259  0DC8  3000               	movlw	0
  5260  0DC9  00A7               	movwf	___fladd@a+3
  5261  0DCA  3000               	movlw	0
  5262  0DCB  00A6               	movwf	___fladd@a+2
  5263  0DCC  3000               	movlw	0
  5264  0DCD  00A5               	movwf	___fladd@a+1
  5265  0DCE  3000               	movlw	0
  5266  0DCF  00A4               	movwf	___fladd@a
  5267  0DD0                     l3399:
  5268  0DD0  17A6               	bsf	___fladd@a+2,7
  5269  0DD1                     l3401:
  5270  0DD1  01A7               	clrf	___fladd@a+3
  5271  0DD2  2DDB               	goto	l744
  5272  0DD3                     l3403:
  5273  0DD3  3000               	movlw	0
  5274  0DD4  00A7               	movwf	___fladd@a+3
  5275  0DD5  3000               	movlw	0
  5276  0DD6  00A6               	movwf	___fladd@a+2
  5277  0DD7  3000               	movlw	0
  5278  0DD8  00A5               	movwf	___fladd@a+1
  5279  0DD9  3000               	movlw	0
  5280  0DDA  00A4               	movwf	___fladd@a
  5281  0DDB                     l744:
  5282  0DDB  0832               	movf	___fladd@bexp,w
  5283  0DDC  0231               	subwf	___fladd@aexp,w
  5284  0DDD  1803               	skipnc
  5285  0DDE  2DE0               	goto	u4051
  5286  0DDF  2DE1               	goto	u4050
  5287  0DE0                     u4051:
  5288  0DE0  2E25               	goto	l3439
  5289  0DE1                     u4050:
  5290  0DE1                     l3405:
  5291  0DE1  1F30               	btfss	___fladd@signs,6
  5292  0DE2  2DE4               	goto	u4061
  5293  0DE3  2DE5               	goto	u4060
  5294  0DE4                     u4061:
  5295  0DE4  2DE9               	goto	l3409
  5296  0DE5                     u4060:
  5297  0DE5                     l3407:
  5298  0DE5  3080               	movlw	128
  5299  0DE6  00A8               	movwf	??___fladd
  5300  0DE7  0828               	movf	??___fladd,w
  5301  0DE8  06B0               	xorwf	___fladd@signs,f
  5302  0DE9                     l3409:
  5303  0DE9  0832               	movf	___fladd@bexp,w
  5304  0DEA  00A8               	movwf	??___fladd
  5305  0DEB  0828               	movf	??___fladd,w
  5306  0DEC  00B3               	movwf	___fladd@grs
  5307  0DED                     l3411:
  5308  0DED  0831               	movf	___fladd@aexp,w
  5309  0DEE  00A8               	movwf	??___fladd
  5310  0DEF  0828               	movf	??___fladd,w
  5311  0DF0  00B2               	movwf	___fladd@bexp
  5312  0DF1                     l3413:
  5313  0DF1  0833               	movf	___fladd@grs,w
  5314  0DF2  00A8               	movwf	??___fladd
  5315  0DF3  0828               	movf	??___fladd,w
  5316  0DF4  00B1               	movwf	___fladd@aexp
  5317  0DF5                     l3415:
  5318  0DF5  0820               	movf	___fladd@b,w
  5319  0DF6  00A8               	movwf	??___fladd
  5320  0DF7  0828               	movf	??___fladd,w
  5321  0DF8  00B3               	movwf	___fladd@grs
  5322  0DF9                     l3417:
  5323  0DF9  0824               	movf	___fladd@a,w
  5324  0DFA  00A8               	movwf	??___fladd
  5325  0DFB  0828               	movf	??___fladd,w
  5326  0DFC  00A0               	movwf	___fladd@b
  5327  0DFD                     l3419:
  5328  0DFD  0833               	movf	___fladd@grs,w
  5329  0DFE  00A8               	movwf	??___fladd
  5330  0DFF  0828               	movf	??___fladd,w
  5331  0E00  00A4               	movwf	___fladd@a
  5332  0E01                     l3421:
  5333  0E01  0821               	movf	___fladd@b+1,w
  5334  0E02  00A8               	movwf	??___fladd
  5335  0E03  0828               	movf	??___fladd,w
  5336  0E04  00B3               	movwf	___fladd@grs
  5337  0E05                     l3423:
  5338  0E05  0825               	movf	___fladd@a+1,w
  5339  0E06  00A8               	movwf	??___fladd
  5340  0E07  0828               	movf	??___fladd,w
  5341  0E08  00A1               	movwf	___fladd@b+1
  5342  0E09                     l3425:
  5343  0E09  0833               	movf	___fladd@grs,w
  5344  0E0A  00A8               	movwf	??___fladd
  5345  0E0B  0828               	movf	??___fladd,w
  5346  0E0C  00A5               	movwf	___fladd@a+1
  5347  0E0D                     l3427:
  5348  0E0D  0822               	movf	___fladd@b+2,w
  5349  0E0E  00A8               	movwf	??___fladd
  5350  0E0F  0828               	movf	??___fladd,w
  5351  0E10  00B3               	movwf	___fladd@grs
  5352  0E11                     l3429:
  5353  0E11  0826               	movf	___fladd@a+2,w
  5354  0E12  00A8               	movwf	??___fladd
  5355  0E13  0828               	movf	??___fladd,w
  5356  0E14  00A2               	movwf	___fladd@b+2
  5357  0E15                     l3431:
  5358  0E15  0833               	movf	___fladd@grs,w
  5359  0E16  00A8               	movwf	??___fladd
  5360  0E17  0828               	movf	??___fladd,w
  5361  0E18  00A6               	movwf	___fladd@a+2
  5362  0E19                     l3433:
  5363  0E19  0823               	movf	___fladd@b+3,w
  5364  0E1A  00A8               	movwf	??___fladd
  5365  0E1B  0828               	movf	??___fladd,w
  5366  0E1C  00B3               	movwf	___fladd@grs
  5367  0E1D                     l3435:
  5368  0E1D  0827               	movf	___fladd@a+3,w
  5369  0E1E  00A8               	movwf	??___fladd
  5370  0E1F  0828               	movf	??___fladd,w
  5371  0E20  00A3               	movwf	___fladd@b+3
  5372  0E21                     l3437:
  5373  0E21  0833               	movf	___fladd@grs,w
  5374  0E22  00A8               	movwf	??___fladd
  5375  0E23  0828               	movf	??___fladd,w
  5376  0E24  00A7               	movwf	___fladd@a+3
  5377  0E25                     l3439:
  5378  0E25  01B3               	clrf	___fladd@grs
  5379  0E26                     l3441:
  5380  0E26  0831               	movf	___fladd@aexp,w
  5381  0E27  00A8               	movwf	??___fladd
  5382  0E28  01A9               	clrf	??___fladd+1
  5383  0E29  0829               	movf	??___fladd+1,w
  5384  0E2A  00AB               	movwf	??___fladd+3
  5385  0E2B  0832               	movf	___fladd@bexp,w
  5386  0E2C  0228               	subwf	??___fladd,w
  5387  0E2D  00AA               	movwf	??___fladd+2
  5388  0E2E  1C03               	skipc
  5389  0E2F  03AB               	decf	??___fladd+3,f
  5390  0E30  082B               	movf	??___fladd+3,w
  5391  0E31  3A80               	xorlw	128
  5392  0E32  00FF               	movwf	btemp+1
  5393  0E33  3080               	movlw	128
  5394  0E34  027F               	subwf	btemp+1,w
  5395  0E35  1D03               	skipz
  5396  0E36  2E39               	goto	u4075
  5397  0E37  301A               	movlw	26
  5398  0E38  022A               	subwf	??___fladd+2,w
  5399  0E39                     u4075:
  5400  0E39  1C03               	skipc
  5401  0E3A  2E3C               	goto	u4071
  5402  0E3B  2E3D               	goto	u4070
  5403  0E3C                     u4071:
  5404  0E3C  2E7A               	goto	l3457
  5405  0E3D                     u4070:
  5406  0E3D                     l3443:
  5407  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0E3F  0823               	movf	___fladd@b+3,w
  5410  0E40  0422               	iorwf	___fladd@b+2,w
  5411  0E41  0421               	iorwf	___fladd@b+1,w
  5412  0E42  0420               	iorwf	___fladd@b,w
  5413  0E43  1D03               	skipz
  5414  0E44  2E46               	goto	u4081
  5415  0E45  2E48               	goto	u4080
  5416  0E46                     u4081:
  5417  0E46  3001               	movlw	1
  5418  0E47  2E49               	goto	u4090
  5419  0E48                     u4080:
  5420  0E48  3000               	movlw	0
  5421  0E49                     u4090:
  5422  0E49  00A8               	movwf	??___fladd
  5423  0E4A  0828               	movf	??___fladd,w
  5424  0E4B  00B3               	movwf	___fladd@grs
  5425  0E4C  3000               	movlw	0
  5426  0E4D  00A3               	movwf	___fladd@b+3
  5427  0E4E  3000               	movlw	0
  5428  0E4F  00A2               	movwf	___fladd@b+2
  5429  0E50  3000               	movlw	0
  5430  0E51  00A1               	movwf	___fladd@b+1
  5431  0E52  3000               	movlw	0
  5432  0E53  00A0               	movwf	___fladd@b
  5433  0E54  0831               	movf	___fladd@aexp,w
  5434  0E55  00A8               	movwf	??___fladd
  5435  0E56  0828               	movf	??___fladd,w
  5436  0E57  00B2               	movwf	___fladd@bexp
  5437  0E58  2E82               	goto	l748
  5438  0E59                     l750:
  5439  0E59  1C33               	btfss	___fladd@grs,0
  5440  0E5A  2E5C               	goto	u4101
  5441  0E5B  2E5D               	goto	u4100
  5442  0E5C                     u4101:
  5443  0E5C  2E66               	goto	l3447
  5444  0E5D                     u4100:
  5445  0E5D                     l3445:
  5446  0E5D  0833               	movf	___fladd@grs,w
  5447  0E5E  00A8               	movwf	??___fladd
  5448  0E5F  1003               	clrc
  5449  0E60  0C28               	rrf	??___fladd,w
  5450  0E61  3801               	iorlw	1
  5451  0E62  00A9               	movwf	??___fladd+1
  5452  0E63  0829               	movf	??___fladd+1,w
  5453  0E64  00B3               	movwf	___fladd@grs
  5454  0E65  2E68               	goto	l3449
  5455  0E66                     l3447:
  5456  0E66  1003               	clrc
  5457  0E67  0CB3               	rrf	___fladd@grs,f
  5458  0E68                     l3449:
  5459  0E68  1C20               	btfss	___fladd@b,0
  5460  0E69  2E6B               	goto	u4111
  5461  0E6A  2E6C               	goto	u4110
  5462  0E6B                     u4111:
  5463  0E6B  2E6D               	goto	l3453
  5464  0E6C                     u4110:
  5465  0E6C                     l3451:
  5466  0E6C  17B3               	bsf	___fladd@grs,7
  5467  0E6D                     l3453:
  5468  0E6D  3001               	movlw	1
  5469  0E6E  00A8               	movwf	??___fladd
  5470  0E6F                     u4125:
  5471  0E6F  0D23               	rlf	___fladd@b+3,w
  5472  0E70  0CA3               	rrf	___fladd@b+3,f
  5473  0E71  0CA2               	rrf	___fladd@b+2,f
  5474  0E72  0CA1               	rrf	___fladd@b+1,f
  5475  0E73  0CA0               	rrf	___fladd@b,f
  5476  0E74  0BA8               	decfsz	??___fladd& (0+127),f
  5477  0E75  2E6F               	goto	u4125
  5478  0E76                     l3455:
  5479  0E76  3001               	movlw	1
  5480  0E77  00A8               	movwf	??___fladd
  5481  0E78  0828               	movf	??___fladd,w
  5482  0E79  07B2               	addwf	___fladd@bexp,f
  5483  0E7A                     l3457:
  5484  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0E7C  0831               	movf	___fladd@aexp,w
  5487  0E7D  0232               	subwf	___fladd@bexp,w
  5488  0E7E  1C03               	skipc
  5489  0E7F  2E81               	goto	u4131
  5490  0E80  2E82               	goto	u4130
  5491  0E81                     u4131:
  5492  0E81  2E59               	goto	l750
  5493  0E82                     u4130:
  5494  0E82                     l748:
  5495  0E82  1B30               	btfsc	___fladd@signs,6
  5496  0E83  2E85               	goto	u4141
  5497  0E84  2E86               	goto	u4140
  5498  0E85                     u4141:
  5499  0E85  2ED1               	goto	l3483
  5500  0E86                     u4140:
  5501  0E86                     l3459:
  5502  0E86  0832               	movf	___fladd@bexp,w
  5503  0E87  1D03               	btfss	3,2
  5504  0E88  2E8A               	goto	u4151
  5505  0E89  2E8B               	goto	u4150
  5506  0E8A                     u4151:
  5507  0E8A  2E94               	goto	l3465
  5508  0E8B                     u4150:
  5509  0E8B                     l3461:
  5510  0E8B  3000               	movlw	0
  5511  0E8C  00A3               	movwf	?___fladd+3
  5512  0E8D  3000               	movlw	0
  5513  0E8E  00A2               	movwf	?___fladd+2
  5514  0E8F  3000               	movlw	0
  5515  0E90  00A1               	movwf	?___fladd+1
  5516  0E91  3000               	movlw	0
  5517  0E92  00A0               	movwf	?___fladd
  5518  0E93  2FFF               	goto	l757
  5519  0E94                     l3465:
  5520  0E94  0824               	movf	___fladd@a,w
  5521  0E95  07A0               	addwf	___fladd@b,f
  5522  0E96  0825               	movf	___fladd@a+1,w
  5523  0E97  1103               	clrz
  5524  0E98  1803               	skipnc
  5525  0E99  3E01               	addlw	1
  5526  0E9A  1903               	skipnz
  5527  0E9B  2E9D               	goto	u4161
  5528  0E9C  07A1               	addwf	___fladd@b+1,f
  5529  0E9D                     u4161:
  5530  0E9D  0826               	movf	___fladd@a+2,w
  5531  0E9E  1103               	clrz
  5532  0E9F  1803               	skipnc
  5533  0EA0  3E01               	addlw	1
  5534  0EA1  1903               	skipnz
  5535  0EA2  2EA4               	goto	u4162
  5536  0EA3  07A2               	addwf	___fladd@b+2,f
  5537  0EA4                     u4162:
  5538  0EA4  0827               	movf	___fladd@a+3,w
  5539  0EA5  1103               	clrz
  5540  0EA6  1803               	skipnc
  5541  0EA7  3E01               	addlw	1
  5542  0EA8  1903               	skipnz
  5543  0EA9  2EAB               	goto	u4163
  5544  0EAA  07A3               	addwf	___fladd@b+3,f
  5545  0EAB                     u4163:
  5546  0EAB                     l3467:
  5547  0EAB  1C23               	btfss	___fladd@b+3,0
  5548  0EAC  2EAE               	goto	u4171
  5549  0EAD  2EAF               	goto	u4170
  5550  0EAE                     u4171:
  5551  0EAE  2F85               	goto	l3517
  5552  0EAF                     u4170:
  5553  0EAF                     l3469:
  5554  0EAF  1C33               	btfss	___fladd@grs,0
  5555  0EB0  2EB2               	goto	u4181
  5556  0EB1  2EB3               	goto	u4180
  5557  0EB2                     u4181:
  5558  0EB2  2EBC               	goto	l3473
  5559  0EB3                     u4180:
  5560  0EB3                     l3471:
  5561  0EB3  0833               	movf	___fladd@grs,w
  5562  0EB4  00A8               	movwf	??___fladd
  5563  0EB5  1003               	clrc
  5564  0EB6  0C28               	rrf	??___fladd,w
  5565  0EB7  3801               	iorlw	1
  5566  0EB8  00A9               	movwf	??___fladd+1
  5567  0EB9  0829               	movf	??___fladd+1,w
  5568  0EBA  00B3               	movwf	___fladd@grs
  5569  0EBB  2EBE               	goto	l3475
  5570  0EBC                     l3473:
  5571  0EBC  1003               	clrc
  5572  0EBD  0CB3               	rrf	___fladd@grs,f
  5573  0EBE                     l3475:
  5574  0EBE  1C20               	btfss	___fladd@b,0
  5575  0EBF  2EC1               	goto	u4191
  5576  0EC0  2EC2               	goto	u4190
  5577  0EC1                     u4191:
  5578  0EC1  2EC3               	goto	l3479
  5579  0EC2                     u4190:
  5580  0EC2                     l3477:
  5581  0EC2  17B3               	bsf	___fladd@grs,7
  5582  0EC3                     l3479:
  5583  0EC3  3001               	movlw	1
  5584  0EC4  00A8               	movwf	??___fladd
  5585  0EC5                     u4205:
  5586  0EC5  0D23               	rlf	___fladd@b+3,w
  5587  0EC6  0CA3               	rrf	___fladd@b+3,f
  5588  0EC7  0CA2               	rrf	___fladd@b+2,f
  5589  0EC8  0CA1               	rrf	___fladd@b+1,f
  5590  0EC9  0CA0               	rrf	___fladd@b,f
  5591  0ECA  0BA8               	decfsz	??___fladd& (0+127),f
  5592  0ECB  2EC5               	goto	u4205
  5593  0ECC                     l3481:
  5594  0ECC  3001               	movlw	1
  5595  0ECD  00A8               	movwf	??___fladd
  5596  0ECE  0828               	movf	??___fladd,w
  5597  0ECF  07B2               	addwf	___fladd@bexp,f
  5598  0ED0  2F85               	goto	l3517
  5599  0ED1                     l3483:
  5600  0ED1  0823               	movf	___fladd@b+3,w
  5601  0ED2  3A80               	xorlw	128
  5602  0ED3  00FF               	movwf	btemp+1
  5603  0ED4  0827               	movf	___fladd@a+3,w
  5604  0ED5  3A80               	xorlw	128
  5605  0ED6  027F               	subwf	btemp+1,w
  5606  0ED7  1D03               	skipz
  5607  0ED8  2EE3               	goto	u4213
  5608  0ED9  0826               	movf	___fladd@a+2,w
  5609  0EDA  0222               	subwf	___fladd@b+2,w
  5610  0EDB  1D03               	skipz
  5611  0EDC  2EE3               	goto	u4213
  5612  0EDD  0825               	movf	___fladd@a+1,w
  5613  0EDE  0221               	subwf	___fladd@b+1,w
  5614  0EDF  1D03               	skipz
  5615  0EE0  2EE3               	goto	u4213
  5616  0EE1  0824               	movf	___fladd@a,w
  5617  0EE2  0220               	subwf	___fladd@b,w
  5618  0EE3                     u4213:
  5619  0EE3  1803               	skipnc
  5620  0EE4  2EE6               	goto	u4211
  5621  0EE5  2EE7               	goto	u4210
  5622  0EE6                     u4211:
  5623  0EE6  2F3F               	goto	l3493
  5624  0EE7                     u4210:
  5625  0EE7                     l3485:
  5626  0EE7  30FF               	movlw	255
  5627  0EE8  00A8               	movwf	??___fladd
  5628  0EE9  30FF               	movlw	255
  5629  0EEA  00A9               	movwf	??___fladd+1
  5630  0EEB  30FF               	movlw	255
  5631  0EEC  00AA               	movwf	??___fladd+2
  5632  0EED  30FF               	movlw	255
  5633  0EEE  00AB               	movwf	??___fladd+3
  5634  0EEF  0824               	movf	___fladd@a,w
  5635  0EF0  00AC               	movwf	??___fladd+4
  5636  0EF1  0825               	movf	___fladd@a+1,w
  5637  0EF2  00AD               	movwf	??___fladd+5
  5638  0EF3  0826               	movf	___fladd@a+2,w
  5639  0EF4  00AE               	movwf	??___fladd+6
  5640  0EF5  0827               	movf	___fladd@a+3,w
  5641  0EF6  00AF               	movwf	??___fladd+7
  5642  0EF7  0820               	movf	___fladd@b,w
  5643  0EF8  02AC               	subwf	??___fladd+4,f
  5644  0EF9  0821               	movf	___fladd@b+1,w
  5645  0EFA  1C03               	skipc
  5646  0EFB  0F21               	incfsz	___fladd@b+1,w
  5647  0EFC  2EFE               	goto	u4221
  5648  0EFD  2EFF               	goto	u4222
  5649  0EFE                     u4221:
  5650  0EFE  02AD               	subwf	??___fladd+5,f
  5651  0EFF                     u4222:
  5652  0EFF  0822               	movf	___fladd@b+2,w
  5653  0F00  1C03               	skipc
  5654  0F01  0F22               	incfsz	___fladd@b+2,w
  5655  0F02  2F04               	goto	u4223
  5656  0F03  2F05               	goto	u4224
  5657  0F04                     u4223:
  5658  0F04  02AE               	subwf	??___fladd+6,f
  5659  0F05                     u4224:
  5660  0F05  0823               	movf	___fladd@b+3,w
  5661  0F06  1C03               	skipc
  5662  0F07  0F23               	incfsz	___fladd@b+3,w
  5663  0F08  2F0A               	goto	u4225
  5664  0F09  2F0B               	goto	u4226
  5665  0F0A                     u4225:
  5666  0F0A  02AF               	subwf	??___fladd+7,f
  5667  0F0B                     u4226:
  5668  0F0B  082C               	movf	??___fladd+4,w
  5669  0F0C  07A8               	addwf	??___fladd,f
  5670  0F0D  082D               	movf	??___fladd+5,w
  5671  0F0E  1803               	skipnc
  5672  0F0F  0F2D               	incfsz	??___fladd+5,w
  5673  0F10  2F12               	goto	u4230
  5674  0F11  2F13               	goto	u4231
  5675  0F12                     u4230:
  5676  0F12  07A9               	addwf	??___fladd+1,f
  5677  0F13                     u4231:
  5678  0F13  082E               	movf	??___fladd+6,w
  5679  0F14  1803               	skipnc
  5680  0F15  0F2E               	incfsz	??___fladd+6,w
  5681  0F16  2F18               	goto	u4232
  5682  0F17  2F19               	goto	u4233
  5683  0F18                     u4232:
  5684  0F18  07AA               	addwf	??___fladd+2,f
  5685  0F19                     u4233:
  5686  0F19  082F               	movf	??___fladd+7,w
  5687  0F1A  1803               	skipnc
  5688  0F1B  0A2F               	incf	??___fladd+7,w
  5689  0F1C  07AB               	addwf	??___fladd+3,f
  5690  0F1D  082B               	movf	??___fladd+3,w
  5691  0F1E  00A3               	movwf	___fladd@b+3
  5692  0F1F  082A               	movf	??___fladd+2,w
  5693  0F20  00A2               	movwf	___fladd@b+2
  5694  0F21  0829               	movf	??___fladd+1,w
  5695  0F22  00A1               	movwf	___fladd@b+1
  5696  0F23  0828               	movf	??___fladd,w
  5697  0F24  00A0               	movwf	___fladd@b
  5698  0F25                     l3487:
  5699  0F25  3080               	movlw	128
  5700  0F26  00A8               	movwf	??___fladd
  5701  0F27  0828               	movf	??___fladd,w
  5702  0F28  06B0               	xorwf	___fladd@signs,f
  5703  0F29  09B3               	comf	___fladd@grs,f
  5704  0F2A  0AB3               	incf	___fladd@grs,f
  5705  0F2B                     l3489:
  5706  0F2B  0833               	movf	___fladd@grs,w
  5707  0F2C  1D03               	btfss	3,2
  5708  0F2D  2F2F               	goto	u4241
  5709  0F2E  2F30               	goto	u4240
  5710  0F2F                     u4241:
  5711  0F2F  2F4D               	goto	l765
  5712  0F30                     u4240:
  5713  0F30                     l3491:
  5714  0F30  3001               	movlw	1
  5715  0F31  07A0               	addwf	___fladd@b,f
  5716  0F32  3000               	movlw	0
  5717  0F33  1803               	skipnc
  5718  0F34  3001               	movlw	1
  5719  0F35  07A1               	addwf	___fladd@b+1,f
  5720  0F36  3000               	movlw	0
  5721  0F37  1803               	skipnc
  5722  0F38  3001               	movlw	1
  5723  0F39  07A2               	addwf	___fladd@b+2,f
  5724  0F3A  3000               	movlw	0
  5725  0F3B  1803               	skipnc
  5726  0F3C  3001               	movlw	1
  5727  0F3D  07A3               	addwf	___fladd@b+3,f
  5728  0F3E  2F4D               	goto	l765
  5729  0F3F                     l3493:
  5730  0F3F  0824               	movf	___fladd@a,w
  5731  0F40  02A0               	subwf	___fladd@b,f
  5732  0F41  0825               	movf	___fladd@a+1,w
  5733  0F42  1C03               	skipc
  5734  0F43  0F25               	incfsz	___fladd@a+1,w
  5735  0F44  02A1               	subwf	___fladd@b+1,f
  5736  0F45  0826               	movf	___fladd@a+2,w
  5737  0F46  1C03               	skipc
  5738  0F47  0F26               	incfsz	___fladd@a+2,w
  5739  0F48  02A2               	subwf	___fladd@b+2,f
  5740  0F49  0827               	movf	___fladd@a+3,w
  5741  0F4A  1C03               	skipc
  5742  0F4B  0F27               	incfsz	___fladd@a+3,w
  5743  0F4C  02A3               	subwf	___fladd@b+3,f
  5744  0F4D                     l765:
  5745  0F4D  0823               	movf	___fladd@b+3,w
  5746  0F4E  0422               	iorwf	___fladd@b+2,w
  5747  0F4F  0421               	iorwf	___fladd@b+1,w
  5748  0F50  0420               	iorwf	___fladd@b,w
  5749  0F51  1D03               	skipz
  5750  0F52  2F54               	goto	u4251
  5751  0F53  2F55               	goto	u4250
  5752  0F54                     u4251:
  5753  0F54  2F81               	goto	l3515
  5754  0F55                     u4250:
  5755  0F55                     l3495:
  5756  0F55  0833               	movf	___fladd@grs,w
  5757  0F56  1D03               	btfss	3,2
  5758  0F57  2F59               	goto	u4261
  5759  0F58  2F5A               	goto	u4260
  5760  0F59                     u4261:
  5761  0F59  2F81               	goto	l3515
  5762  0F5A                     u4260:
  5763  0F5A                     l3497:
  5764  0F5A  3000               	movlw	0
  5765  0F5B  00A3               	movwf	?___fladd+3
  5766  0F5C  3000               	movlw	0
  5767  0F5D  00A2               	movwf	?___fladd+2
  5768  0F5E  3000               	movlw	0
  5769  0F5F  00A1               	movwf	?___fladd+1
  5770  0F60  3000               	movlw	0
  5771  0F61  00A0               	movwf	?___fladd
  5772  0F62  2FFF               	goto	l757
  5773  0F63                     l3501:
  5774  0F63  3001               	movlw	1
  5775  0F64  00A8               	movwf	??___fladd
  5776  0F65                     u4275:
  5777  0F65  1003               	clrc
  5778  0F66  0DA0               	rlf	___fladd@b,f
  5779  0F67  0DA1               	rlf	___fladd@b+1,f
  5780  0F68  0DA2               	rlf	___fladd@b+2,f
  5781  0F69  0DA3               	rlf	___fladd@b+3,f
  5782  0F6A  0BA8               	decfsz	??___fladd,f
  5783  0F6B  2F65               	goto	u4275
  5784  0F6C                     l3503:
  5785  0F6C  1FB3               	btfss	___fladd@grs,7
  5786  0F6D  2F6F               	goto	u4281
  5787  0F6E  2F70               	goto	u4280
  5788  0F6F                     u4281:
  5789  0F6F  2F71               	goto	l769
  5790  0F70                     u4280:
  5791  0F70                     l3505:
  5792  0F70  1420               	bsf	___fladd@b,0
  5793  0F71                     l769:
  5794  0F71  1C33               	btfss	___fladd@grs,0
  5795  0F72  2F74               	goto	u4291
  5796  0F73  2F75               	goto	u4290
  5797  0F74                     u4291:
  5798  0F74  2F78               	goto	l3509
  5799  0F75                     u4290:
  5800  0F75                     l3507:
  5801  0F75  1403               	setc
  5802  0F76  0DB3               	rlf	___fladd@grs,f
  5803  0F77  2F7A               	goto	l3511
  5804  0F78                     l3509:
  5805  0F78  1003               	clrc
  5806  0F79  0DB3               	rlf	___fladd@grs,f
  5807  0F7A                     l3511:
  5808  0F7A  0832               	movf	___fladd@bexp,w
  5809  0F7B  1903               	btfsc	3,2
  5810  0F7C  2F7E               	goto	u4301
  5811  0F7D  2F7F               	goto	u4300
  5812  0F7E                     u4301:
  5813  0F7E  2F81               	goto	l3515
  5814  0F7F                     u4300:
  5815  0F7F                     l3513:
  5816  0F7F  3001               	movlw	1
  5817  0F80  02B2               	subwf	___fladd@bexp,f
  5818  0F81                     l3515:
  5819  0F81  1FA2               	btfss	___fladd@b+2,7
  5820  0F82  2F84               	goto	u4311
  5821  0F83  2F85               	goto	u4310
  5822  0F84                     u4311:
  5823  0F84  2F63               	goto	l3501
  5824  0F85                     u4310:
  5825  0F85                     l3517:
  5826  0F85  01B1               	clrf	___fladd@aexp
  5827  0F86                     l3519:
  5828  0F86  1FB3               	btfss	___fladd@grs,7
  5829  0F87  2F89               	goto	u4321
  5830  0F88  2F8A               	goto	u4320
  5831  0F89                     u4321:
  5832  0F89  2F98               	goto	l3527
  5833  0F8A                     u4320:
  5834  0F8A                     l3521:
  5835  0F8A  0833               	movf	___fladd@grs,w
  5836  0F8B  397F               	andlw	127
  5837  0F8C  1903               	btfsc	3,2
  5838  0F8D  2F8F               	goto	u4331
  5839  0F8E  2F90               	goto	u4330
  5840  0F8F                     u4331:
  5841  0F8F  2F93               	goto	l775
  5842  0F90                     u4330:
  5843  0F90                     l3523:
  5844  0F90  01B1               	clrf	___fladd@aexp
  5845  0F91  0AB1               	incf	___fladd@aexp,f
  5846  0F92  2F98               	goto	l3527
  5847  0F93                     l775:
  5848  0F93  1C20               	btfss	___fladd@b,0
  5849  0F94  2F96               	goto	u4341
  5850  0F95  2F97               	goto	u4340
  5851  0F96                     u4341:
  5852  0F96  2F98               	goto	l3527
  5853  0F97                     u4340:
  5854  0F97  2F90               	goto	l3523
  5855  0F98                     l3527:
  5856  0F98  0831               	movf	___fladd@aexp,w
  5857  0F99  1903               	btfsc	3,2
  5858  0F9A  2F9C               	goto	u4351
  5859  0F9B  2F9D               	goto	u4350
  5860  0F9C                     u4351:
  5861  0F9C  2FD1               	goto	l778
  5862  0F9D                     u4350:
  5863  0F9D                     l3529:
  5864  0F9D  3001               	movlw	1
  5865  0F9E  07A0               	addwf	___fladd@b,f
  5866  0F9F  3000               	movlw	0
  5867  0FA0  1803               	skipnc
  5868  0FA1  3001               	movlw	1
  5869  0FA2  07A1               	addwf	___fladd@b+1,f
  5870  0FA3  3000               	movlw	0
  5871  0FA4  1803               	skipnc
  5872  0FA5  3001               	movlw	1
  5873  0FA6  07A2               	addwf	___fladd@b+2,f
  5874  0FA7  3000               	movlw	0
  5875  0FA8  1803               	skipnc
  5876  0FA9  3001               	movlw	1
  5877  0FAA  07A3               	addwf	___fladd@b+3,f
  5878  0FAB                     l3531:
  5879  0FAB  1C23               	btfss	___fladd@b+3,0
  5880  0FAC  2FAE               	goto	u4361
  5881  0FAD  2FAF               	goto	u4360
  5882  0FAE                     u4361:
  5883  0FAE  2FD1               	goto	l778
  5884  0FAF                     u4360:
  5885  0FAF                     l3533:
  5886  0FAF  0820               	movf	___fladd@b,w
  5887  0FB0  00A8               	movwf	??___fladd
  5888  0FB1  0821               	movf	___fladd@b+1,w
  5889  0FB2  00A9               	movwf	??___fladd+1
  5890  0FB3  0822               	movf	___fladd@b+2,w
  5891  0FB4  00AA               	movwf	??___fladd+2
  5892  0FB5  0823               	movf	___fladd@b+3,w
  5893  0FB6  00AB               	movwf	??___fladd+3
  5894  0FB7  3001               	movlw	1
  5895  0FB8  00AC               	movwf	??___fladd+4
  5896  0FB9                     u4375:
  5897  0FB9  0D2B               	rlf	??___fladd+3,w
  5898  0FBA  0CAB               	rrf	??___fladd+3,f
  5899  0FBB  0CAA               	rrf	??___fladd+2,f
  5900  0FBC  0CA9               	rrf	??___fladd+1,f
  5901  0FBD  0CA8               	rrf	??___fladd,f
  5902  0FBE                     u4370:
  5903  0FBE  0BAC               	decfsz	??___fladd+4,f
  5904  0FBF  2FB9               	goto	u4375
  5905  0FC0  082B               	movf	??___fladd+3,w
  5906  0FC1  00A3               	movwf	___fladd@b+3
  5907  0FC2  082A               	movf	??___fladd+2,w
  5908  0FC3  00A2               	movwf	___fladd@b+2
  5909  0FC4  0829               	movf	??___fladd+1,w
  5910  0FC5  00A1               	movwf	___fladd@b+1
  5911  0FC6  0828               	movf	??___fladd,w
  5912  0FC7  00A0               	movwf	___fladd@b
  5913  0FC8  0A32               	incf	___fladd@bexp,w
  5914  0FC9  1903               	btfsc	3,2
  5915  0FCA  2FCC               	goto	u4381
  5916  0FCB  2FCD               	goto	u4380
  5917  0FCC                     u4381:
  5918  0FCC  2FD1               	goto	l778
  5919  0FCD                     u4380:
  5920  0FCD                     l3535:
  5921  0FCD  3001               	movlw	1
  5922  0FCE  00A8               	movwf	??___fladd
  5923  0FCF  0828               	movf	??___fladd,w
  5924  0FD0  07B2               	addwf	___fladd@bexp,f
  5925  0FD1                     l778:
  5926  0FD1  0A32               	incf	___fladd@bexp,w
  5927  0FD2  1903               	btfsc	3,2
  5928  0FD3  2FD5               	goto	u4391
  5929  0FD4  2FD6               	goto	u4390
  5930  0FD5                     u4391:
  5931  0FD5  2FDB               	goto	l3539
  5932  0FD6                     u4390:
  5933  0FD6                     l3537:
  5934  0FD6  0832               	movf	___fladd@bexp,w
  5935  0FD7  1D03               	btfss	3,2
  5936  0FD8  2FDA               	goto	u4401
  5937  0FD9  2FDB               	goto	u4400
  5938  0FDA                     u4401:
  5939  0FDA  2FE9               	goto	l3545
  5940  0FDB                     u4400:
  5941  0FDB                     l3539:
  5942  0FDB  3000               	movlw	0
  5943  0FDC  00A3               	movwf	___fladd@b+3
  5944  0FDD  3000               	movlw	0
  5945  0FDE  00A2               	movwf	___fladd@b+2
  5946  0FDF  3000               	movlw	0
  5947  0FE0  00A1               	movwf	___fladd@b+1
  5948  0FE1  3000               	movlw	0
  5949  0FE2  00A0               	movwf	___fladd@b
  5950  0FE3                     l3541:
  5951  0FE3  0832               	movf	___fladd@bexp,w
  5952  0FE4  1D03               	btfss	3,2
  5953  0FE5  2FE7               	goto	u4411
  5954  0FE6  2FE8               	goto	u4410
  5955  0FE7                     u4411:
  5956  0FE7  2FE9               	goto	l3545
  5957  0FE8                     u4410:
  5958  0FE8                     l3543:
  5959  0FE8  01B0               	clrf	___fladd@signs
  5960  0FE9                     l3545:
  5961  0FE9  1C32               	btfss	___fladd@bexp,0
  5962  0FEA  2FEC               	goto	u4421
  5963  0FEB  2FED               	goto	u4420
  5964  0FEC                     u4421:
  5965  0FEC  2FEF               	goto	l3549
  5966  0FED                     u4420:
  5967  0FED                     l3547:
  5968  0FED  17A2               	bsf	___fladd@b+2,7
  5969  0FEE  2FF3               	goto	l786
  5970  0FEF                     l3549:
  5971  0FEF  307F               	movlw	127
  5972  0FF0  00A8               	movwf	??___fladd
  5973  0FF1  0828               	movf	??___fladd,w
  5974  0FF2  05A2               	andwf	___fladd@b+2,f
  5975  0FF3                     l786:
  5976  0FF3  0832               	movf	___fladd@bexp,w
  5977  0FF4  00A8               	movwf	??___fladd
  5978  0FF5  1003               	clrc
  5979  0FF6  0C28               	rrf	??___fladd,w
  5980  0FF7  00A9               	movwf	??___fladd+1
  5981  0FF8  0829               	movf	??___fladd+1,w
  5982  0FF9  00A3               	movwf	___fladd@b+3
  5983  0FFA                     l3551:
  5984  0FFA  1FB0               	btfss	___fladd@signs,7
  5985  0FFB  2FFD               	goto	u4431
  5986  0FFC  2FFE               	goto	u4430
  5987  0FFD                     u4431:
  5988  0FFD  2FFF               	goto	l787
  5989  0FFE                     u4430:
  5990  0FFE                     l3553:
  5991  0FFE  17A3               	bsf	___fladd@b+3,7
  5992  0FFF                     l787:
  5993  0FFF                     l757:
  5994  0FFF  0008               	return
  5995  1000                     __end_of___fladd:
  5996                           
  5997                           	psect	text21
  5998  0479                     __ptext21:	
  5999 ;; *************** function ___flmul *****************
  6000 ;; Defined at:
  6001 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  b               4   37[BANK0 ] unsigned char 
  6004 ;;  a               4   41[BANK0 ] unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  prod            4   57[BANK0 ] struct .
  6007 ;;  grs             4   52[BANK0 ] unsigned long 
  6008 ;;  temp            2   61[BANK0 ] struct .
  6009 ;;  bexp            1   56[BANK0 ] unsigned char 
  6010 ;;  aexp            1   51[BANK0 ] unsigned char 
  6011 ;;  sign            1   50[BANK0 ] unsigned char 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  4   37[BANK0 ] unsigned char 
  6014 ;; Registers used:
  6015 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6021 ;;      Params:         0       8       0       0       0
  6022 ;;      Locals:         0      13       0       0       0
  6023 ;;      Temps:          0       5       0       0       0
  6024 ;;      Totals:         0      26       0       0       0
  6025 ;;Total ram usage:       26 bytes
  6026 ;; Hardware stack levels used: 1
  6027 ;; Hardware stack levels required when called: 2
  6028 ;; This function calls:
  6029 ;;		__Umul8_16
  6030 ;; This function is called by:
  6031 ;;		_ADC_convert
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           
  6036                           ;psect for function ___flmul
  6037  0479                     ___flmul:
  6038  0479                     l3879:	
  6039                           ;incstack = 0
  6040                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6041                           
  6042  0479  1283               	bcf	3,5	;RP0=0, select bank0
  6043  047A  1303               	bcf	3,6	;RP1=0, select bank0
  6044  047B  0848               	movf	___flmul@b+3,w
  6045  047C  3980               	andlw	128
  6046  047D  00CD               	movwf	??___flmul
  6047  047E  084D               	movf	??___flmul,w
  6048  047F  00D2               	movwf	___flmul@sign
  6049  0480                     l3881:
  6050  0480  0848               	movf	___flmul@b+3,w
  6051  0481  00CD               	movwf	??___flmul
  6052  0482  074D               	addwf	??___flmul,w
  6053  0483  00CE               	movwf	??___flmul+1
  6054  0484  084E               	movf	??___flmul+1,w
  6055  0485  00D8               	movwf	___flmul@bexp
  6056  0486                     l3883:
  6057  0486  1FC7               	btfss	___flmul@b+2,7
  6058  0487  2C89               	goto	u5181
  6059  0488  2C8A               	goto	u5180
  6060  0489                     u5181:
  6061  0489  2C8B               	goto	l3887
  6062  048A                     u5180:
  6063  048A                     l3885:
  6064  048A  1458               	bsf	___flmul@bexp,0
  6065  048B                     l3887:
  6066  048B  0858               	movf	___flmul@bexp,w
  6067  048C  1903               	btfsc	3,2
  6068  048D  2C8F               	goto	u5191
  6069  048E  2C90               	goto	u5190
  6070  048F                     u5191:
  6071  048F  2C9F               	goto	l3895
  6072  0490                     u5190:
  6073  0490                     l3889:
  6074  0490  0A58               	incf	___flmul@bexp,w
  6075  0491  1D03               	btfss	3,2
  6076  0492  2C94               	goto	u5201
  6077  0493  2C95               	goto	u5200
  6078  0494                     u5201:
  6079  0494  2C9D               	goto	l3893
  6080  0495                     u5200:
  6081  0495                     l3891:
  6082  0495  3000               	movlw	0
  6083  0496  00C8               	movwf	___flmul@b+3
  6084  0497  3000               	movlw	0
  6085  0498  00C7               	movwf	___flmul@b+2
  6086  0499  3000               	movlw	0
  6087  049A  00C6               	movwf	___flmul@b+1
  6088  049B  3000               	movlw	0
  6089  049C  00C5               	movwf	___flmul@b
  6090  049D                     l3893:
  6091  049D  17C7               	bsf	___flmul@b+2,7
  6092  049E  2CA7               	goto	l3897
  6093  049F                     l3895:
  6094  049F  3000               	movlw	0
  6095  04A0  00C8               	movwf	___flmul@b+3
  6096  04A1  3000               	movlw	0
  6097  04A2  00C7               	movwf	___flmul@b+2
  6098  04A3  3000               	movlw	0
  6099  04A4  00C6               	movwf	___flmul@b+1
  6100  04A5  3000               	movlw	0
  6101  04A6  00C5               	movwf	___flmul@b
  6102  04A7                     l3897:
  6103  04A7  084C               	movf	___flmul@a+3,w
  6104  04A8  3980               	andlw	128
  6105  04A9  00CD               	movwf	??___flmul
  6106  04AA  084D               	movf	??___flmul,w
  6107  04AB  06D2               	xorwf	___flmul@sign,f
  6108  04AC                     l3899:
  6109  04AC  084C               	movf	___flmul@a+3,w
  6110  04AD  00CD               	movwf	??___flmul
  6111  04AE  074D               	addwf	??___flmul,w
  6112  04AF  00CE               	movwf	??___flmul+1
  6113  04B0  084E               	movf	??___flmul+1,w
  6114  04B1  00D3               	movwf	___flmul@aexp
  6115  04B2                     l3901:
  6116  04B2  1FCB               	btfss	___flmul@a+2,7
  6117  04B3  2CB5               	goto	u5211
  6118  04B4  2CB6               	goto	u5210
  6119  04B5                     u5211:
  6120  04B5  2CB7               	goto	l3905
  6121  04B6                     u5210:
  6122  04B6                     l3903:
  6123  04B6  1453               	bsf	___flmul@aexp,0
  6124  04B7                     l3905:
  6125  04B7  0853               	movf	___flmul@aexp,w
  6126  04B8  1903               	btfsc	3,2
  6127  04B9  2CBB               	goto	u5221
  6128  04BA  2CBC               	goto	u5220
  6129  04BB                     u5221:
  6130  04BB  2CCB               	goto	l3913
  6131  04BC                     u5220:
  6132  04BC                     l3907:
  6133  04BC  0A53               	incf	___flmul@aexp,w
  6134  04BD  1D03               	btfss	3,2
  6135  04BE  2CC0               	goto	u5231
  6136  04BF  2CC1               	goto	u5230
  6137  04C0                     u5231:
  6138  04C0  2CC9               	goto	l3911
  6139  04C1                     u5230:
  6140  04C1                     l3909:
  6141  04C1  3000               	movlw	0
  6142  04C2  00CC               	movwf	___flmul@a+3
  6143  04C3  3000               	movlw	0
  6144  04C4  00CB               	movwf	___flmul@a+2
  6145  04C5  3000               	movlw	0
  6146  04C6  00CA               	movwf	___flmul@a+1
  6147  04C7  3000               	movlw	0
  6148  04C8  00C9               	movwf	___flmul@a
  6149  04C9                     l3911:
  6150  04C9  17CB               	bsf	___flmul@a+2,7
  6151  04CA  2CD3               	goto	l3915
  6152  04CB                     l3913:
  6153  04CB  3000               	movlw	0
  6154  04CC  00CC               	movwf	___flmul@a+3
  6155  04CD  3000               	movlw	0
  6156  04CE  00CB               	movwf	___flmul@a+2
  6157  04CF  3000               	movlw	0
  6158  04D0  00CA               	movwf	___flmul@a+1
  6159  04D1  3000               	movlw	0
  6160  04D2  00C9               	movwf	___flmul@a
  6161  04D3                     l3915:
  6162  04D3  0853               	movf	___flmul@aexp,w
  6163  04D4  1903               	btfsc	3,2
  6164  04D5  2CD7               	goto	u5241
  6165  04D6  2CD8               	goto	u5240
  6166  04D7                     u5241:
  6167  04D7  2CDD               	goto	l3919
  6168  04D8                     u5240:
  6169  04D8                     l3917:
  6170  04D8  0858               	movf	___flmul@bexp,w
  6171  04D9  1D03               	btfss	3,2
  6172  04DA  2CDC               	goto	u5251
  6173  04DB  2CDD               	goto	u5250
  6174  04DC                     u5251:
  6175  04DC  2CE6               	goto	l3923
  6176  04DD                     u5250:
  6177  04DD                     l3919:
  6178  04DD  3000               	movlw	0
  6179  04DE  00C8               	movwf	?___flmul+3
  6180  04DF  3000               	movlw	0
  6181  04E0  00C7               	movwf	?___flmul+2
  6182  04E1  3000               	movlw	0
  6183  04E2  00C6               	movwf	?___flmul+1
  6184  04E3  3000               	movlw	0
  6185  04E4  00C5               	movwf	?___flmul
  6186  04E5  2FD9               	goto	l840
  6187  04E6                     l3923:
  6188  04E6  0845               	movf	___flmul@b,w
  6189  04E7  00CD               	movwf	??___flmul
  6190  04E8  084D               	movf	??___flmul,w
  6191  04E9  00F4               	movwf	__Umul8_16@multiplicand
  6192  04EA  084B               	movf	___flmul@a+2,w
  6193  04EB  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6194  04F0  0875               	movf	?__Umul8_16+1,w
  6195  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6196  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6197  04F3  00DE               	movwf	___flmul@temp+1
  6198  04F4  0874               	movf	?__Umul8_16,w
  6199  04F5  00DD               	movwf	___flmul@temp
  6200  04F6                     l3925:
  6201  04F6  085D               	movf	___flmul@temp,w
  6202  04F7  00CD               	movwf	??___flmul
  6203  04F8  01CE               	clrf	??___flmul+1
  6204  04F9  01CF               	clrf	??___flmul+2
  6205  04FA  01D0               	clrf	??___flmul+3
  6206  04FB  0850               	movf	??___flmul+3,w
  6207  04FC  00D7               	movwf	___flmul@grs+3
  6208  04FD  084F               	movf	??___flmul+2,w
  6209  04FE  00D6               	movwf	___flmul@grs+2
  6210  04FF  084E               	movf	??___flmul+1,w
  6211  0500  00D5               	movwf	___flmul@grs+1
  6212  0501  084D               	movf	??___flmul,w
  6213  0502  00D4               	movwf	___flmul@grs
  6214  0503                     l3927:
  6215  0503  085E               	movf	___flmul@temp+1,w
  6216  0504  00CD               	movwf	??___flmul
  6217  0505  01CE               	clrf	??___flmul+1
  6218  0506  01CF               	clrf	??___flmul+2
  6219  0507  01D0               	clrf	??___flmul+3
  6220  0508  0850               	movf	??___flmul+3,w
  6221  0509  00DC               	movwf	___flmul@prod+3
  6222  050A  084F               	movf	??___flmul+2,w
  6223  050B  00DB               	movwf	___flmul@prod+2
  6224  050C  084E               	movf	??___flmul+1,w
  6225  050D  00DA               	movwf	___flmul@prod+1
  6226  050E  084D               	movf	??___flmul,w
  6227  050F  00D9               	movwf	___flmul@prod
  6228  0510  0846               	movf	___flmul@b+1,w
  6229  0511  00CD               	movwf	??___flmul
  6230  0512  084D               	movf	??___flmul,w
  6231  0513  00F4               	movwf	__Umul8_16@multiplicand
  6232  0514  084A               	movf	___flmul@a+1,w
  6233  0515  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6234  051A  0875               	movf	?__Umul8_16+1,w
  6235  051B  1283               	bcf	3,5	;RP0=0, select bank0
  6236  051C  1303               	bcf	3,6	;RP1=0, select bank0
  6237  051D  00DE               	movwf	___flmul@temp+1
  6238  051E  0874               	movf	?__Umul8_16,w
  6239  051F  00DD               	movwf	___flmul@temp
  6240  0520                     l3929:
  6241  0520  085D               	movf	___flmul@temp,w
  6242  0521  00CD               	movwf	??___flmul
  6243  0522  01CE               	clrf	??___flmul+1
  6244  0523  01CF               	clrf	??___flmul+2
  6245  0524  01D0               	clrf	??___flmul+3
  6246  0525  084D               	movf	??___flmul,w
  6247  0526  07D4               	addwf	___flmul@grs,f
  6248  0527  084E               	movf	??___flmul+1,w
  6249  0528  1103               	clrz
  6250  0529  1803               	skipnc
  6251  052A  3E01               	addlw	1
  6252  052B  1903               	skipnz
  6253  052C  2D2E               	goto	u5261
  6254  052D  07D5               	addwf	___flmul@grs+1,f
  6255  052E                     u5261:
  6256  052E  084F               	movf	??___flmul+2,w
  6257  052F  1103               	clrz
  6258  0530  1803               	skipnc
  6259  0531  3E01               	addlw	1
  6260  0532  1903               	skipnz
  6261  0533  2D35               	goto	u5262
  6262  0534  07D6               	addwf	___flmul@grs+2,f
  6263  0535                     u5262:
  6264  0535  0850               	movf	??___flmul+3,w
  6265  0536  1103               	clrz
  6266  0537  1803               	skipnc
  6267  0538  3E01               	addlw	1
  6268  0539  1903               	skipnz
  6269  053A  2D3C               	goto	u5263
  6270  053B  07D7               	addwf	___flmul@grs+3,f
  6271  053C                     u5263:
  6272  053C                     l3931:
  6273  053C  085E               	movf	___flmul@temp+1,w
  6274  053D  00CD               	movwf	??___flmul
  6275  053E  01CE               	clrf	??___flmul+1
  6276  053F  01CF               	clrf	??___flmul+2
  6277  0540  01D0               	clrf	??___flmul+3
  6278  0541  084D               	movf	??___flmul,w
  6279  0542  07D9               	addwf	___flmul@prod,f
  6280  0543  084E               	movf	??___flmul+1,w
  6281  0544  1103               	clrz
  6282  0545  1803               	skipnc
  6283  0546  3E01               	addlw	1
  6284  0547  1903               	skipnz
  6285  0548  2D4A               	goto	u5271
  6286  0549  07DA               	addwf	___flmul@prod+1,f
  6287  054A                     u5271:
  6288  054A  084F               	movf	??___flmul+2,w
  6289  054B  1103               	clrz
  6290  054C  1803               	skipnc
  6291  054D  3E01               	addlw	1
  6292  054E  1903               	skipnz
  6293  054F  2D51               	goto	u5272
  6294  0550  07DB               	addwf	___flmul@prod+2,f
  6295  0551                     u5272:
  6296  0551  0850               	movf	??___flmul+3,w
  6297  0552  1103               	clrz
  6298  0553  1803               	skipnc
  6299  0554  3E01               	addlw	1
  6300  0555  1903               	skipnz
  6301  0556  2D58               	goto	u5273
  6302  0557  07DC               	addwf	___flmul@prod+3,f
  6303  0558                     u5273:
  6304  0558  0847               	movf	___flmul@b+2,w
  6305  0559  00CD               	movwf	??___flmul
  6306  055A  084D               	movf	??___flmul,w
  6307  055B  00F4               	movwf	__Umul8_16@multiplicand
  6308  055C  0849               	movf	___flmul@a,w
  6309  055D  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6310  0562  0875               	movf	?__Umul8_16+1,w
  6311  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6312  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6313  0565  00DE               	movwf	___flmul@temp+1
  6314  0566  0874               	movf	?__Umul8_16,w
  6315  0567  00DD               	movwf	___flmul@temp
  6316  0568                     l3933:
  6317  0568  085D               	movf	___flmul@temp,w
  6318  0569  00CD               	movwf	??___flmul
  6319  056A  01CE               	clrf	??___flmul+1
  6320  056B  01CF               	clrf	??___flmul+2
  6321  056C  01D0               	clrf	??___flmul+3
  6322  056D  084D               	movf	??___flmul,w
  6323  056E  07D4               	addwf	___flmul@grs,f
  6324  056F  084E               	movf	??___flmul+1,w
  6325  0570  1103               	clrz
  6326  0571  1803               	skipnc
  6327  0572  3E01               	addlw	1
  6328  0573  1903               	skipnz
  6329  0574  2D76               	goto	u5281
  6330  0575  07D5               	addwf	___flmul@grs+1,f
  6331  0576                     u5281:
  6332  0576  084F               	movf	??___flmul+2,w
  6333  0577  1103               	clrz
  6334  0578  1803               	skipnc
  6335  0579  3E01               	addlw	1
  6336  057A  1903               	skipnz
  6337  057B  2D7D               	goto	u5282
  6338  057C  07D6               	addwf	___flmul@grs+2,f
  6339  057D                     u5282:
  6340  057D  0850               	movf	??___flmul+3,w
  6341  057E  1103               	clrz
  6342  057F  1803               	skipnc
  6343  0580  3E01               	addlw	1
  6344  0581  1903               	skipnz
  6345  0582  2D84               	goto	u5283
  6346  0583  07D7               	addwf	___flmul@grs+3,f
  6347  0584                     u5283:
  6348  0584                     l3935:
  6349  0584  085E               	movf	___flmul@temp+1,w
  6350  0585  00CD               	movwf	??___flmul
  6351  0586  01CE               	clrf	??___flmul+1
  6352  0587  01CF               	clrf	??___flmul+2
  6353  0588  01D0               	clrf	??___flmul+3
  6354  0589  084D               	movf	??___flmul,w
  6355  058A  07D9               	addwf	___flmul@prod,f
  6356  058B  084E               	movf	??___flmul+1,w
  6357  058C  1103               	clrz
  6358  058D  1803               	skipnc
  6359  058E  3E01               	addlw	1
  6360  058F  1903               	skipnz
  6361  0590  2D92               	goto	u5291
  6362  0591  07DA               	addwf	___flmul@prod+1,f
  6363  0592                     u5291:
  6364  0592  084F               	movf	??___flmul+2,w
  6365  0593  1103               	clrz
  6366  0594  1803               	skipnc
  6367  0595  3E01               	addlw	1
  6368  0596  1903               	skipnz
  6369  0597  2D99               	goto	u5292
  6370  0598  07DB               	addwf	___flmul@prod+2,f
  6371  0599                     u5292:
  6372  0599  0850               	movf	??___flmul+3,w
  6373  059A  1103               	clrz
  6374  059B  1803               	skipnc
  6375  059C  3E01               	addlw	1
  6376  059D  1903               	skipnz
  6377  059E  2DA0               	goto	u5293
  6378  059F  07DC               	addwf	___flmul@prod+3,f
  6379  05A0                     u5293:
  6380  05A0                     l3937:
  6381  05A0  3008               	movlw	8
  6382  05A1  00CD               	movwf	??___flmul
  6383  05A2                     u5305:
  6384  05A2  1003               	clrc
  6385  05A3  0DD4               	rlf	___flmul@grs,f
  6386  05A4  0DD5               	rlf	___flmul@grs+1,f
  6387  05A5  0DD6               	rlf	___flmul@grs+2,f
  6388  05A6  0DD7               	rlf	___flmul@grs+3,f
  6389  05A7  0BCD               	decfsz	??___flmul,f
  6390  05A8  2DA2               	goto	u5305
  6391  05A9                     l3939:
  6392  05A9  0846               	movf	___flmul@b+1,w
  6393  05AA  00CD               	movwf	??___flmul
  6394  05AB  084D               	movf	??___flmul,w
  6395  05AC  00F4               	movwf	__Umul8_16@multiplicand
  6396  05AD  0849               	movf	___flmul@a,w
  6397  05AE  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6398  05B3  0875               	movf	?__Umul8_16+1,w
  6399  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  6400  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  6401  05B6  00DE               	movwf	___flmul@temp+1
  6402  05B7  0874               	movf	?__Umul8_16,w
  6403  05B8  00DD               	movwf	___flmul@temp
  6404  05B9                     l3941:
  6405  05B9  085D               	movf	___flmul@temp,w
  6406  05BA  00CD               	movwf	??___flmul
  6407  05BB  085E               	movf	___flmul@temp+1,w
  6408  05BC  00CE               	movwf	??___flmul+1
  6409  05BD  01CF               	clrf	??___flmul+2
  6410  05BE  01D0               	clrf	??___flmul+3
  6411  05BF  084D               	movf	??___flmul,w
  6412  05C0  07D4               	addwf	___flmul@grs,f
  6413  05C1  084E               	movf	??___flmul+1,w
  6414  05C2  1103               	clrz
  6415  05C3  1803               	skipnc
  6416  05C4  3E01               	addlw	1
  6417  05C5  1903               	skipnz
  6418  05C6  2DC8               	goto	u5311
  6419  05C7  07D5               	addwf	___flmul@grs+1,f
  6420  05C8                     u5311:
  6421  05C8  084F               	movf	??___flmul+2,w
  6422  05C9  1103               	clrz
  6423  05CA  1803               	skipnc
  6424  05CB  3E01               	addlw	1
  6425  05CC  1903               	skipnz
  6426  05CD  2DCF               	goto	u5312
  6427  05CE  07D6               	addwf	___flmul@grs+2,f
  6428  05CF                     u5312:
  6429  05CF  0850               	movf	??___flmul+3,w
  6430  05D0  1103               	clrz
  6431  05D1  1803               	skipnc
  6432  05D2  3E01               	addlw	1
  6433  05D3  1903               	skipnz
  6434  05D4  2DD6               	goto	u5313
  6435  05D5  07D7               	addwf	___flmul@grs+3,f
  6436  05D6                     u5313:
  6437  05D6                     l3943:
  6438  05D6  0845               	movf	___flmul@b,w
  6439  05D7  00CD               	movwf	??___flmul
  6440  05D8  084D               	movf	??___flmul,w
  6441  05D9  00F4               	movwf	__Umul8_16@multiplicand
  6442  05DA  084A               	movf	___flmul@a+1,w
  6443  05DB  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6444  05E0  0875               	movf	?__Umul8_16+1,w
  6445  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6446  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6447  05E3  00DE               	movwf	___flmul@temp+1
  6448  05E4  0874               	movf	?__Umul8_16,w
  6449  05E5  00DD               	movwf	___flmul@temp
  6450  05E6                     l3945:
  6451  05E6  085D               	movf	___flmul@temp,w
  6452  05E7  00CD               	movwf	??___flmul
  6453  05E8  085E               	movf	___flmul@temp+1,w
  6454  05E9  00CE               	movwf	??___flmul+1
  6455  05EA  01CF               	clrf	??___flmul+2
  6456  05EB  01D0               	clrf	??___flmul+3
  6457  05EC  084D               	movf	??___flmul,w
  6458  05ED  07D4               	addwf	___flmul@grs,f
  6459  05EE  084E               	movf	??___flmul+1,w
  6460  05EF  1103               	clrz
  6461  05F0  1803               	skipnc
  6462  05F1  3E01               	addlw	1
  6463  05F2  1903               	skipnz
  6464  05F3  2DF5               	goto	u5321
  6465  05F4  07D5               	addwf	___flmul@grs+1,f
  6466  05F5                     u5321:
  6467  05F5  084F               	movf	??___flmul+2,w
  6468  05F6  1103               	clrz
  6469  05F7  1803               	skipnc
  6470  05F8  3E01               	addlw	1
  6471  05F9  1903               	skipnz
  6472  05FA  2DFC               	goto	u5322
  6473  05FB  07D6               	addwf	___flmul@grs+2,f
  6474  05FC                     u5322:
  6475  05FC  0850               	movf	??___flmul+3,w
  6476  05FD  1103               	clrz
  6477  05FE  1803               	skipnc
  6478  05FF  3E01               	addlw	1
  6479  0600  1903               	skipnz
  6480  0601  2E03               	goto	u5323
  6481  0602  07D7               	addwf	___flmul@grs+3,f
  6482  0603                     u5323:
  6483  0603                     l3947:
  6484  0603  3008               	movlw	8
  6485  0604  00CD               	movwf	??___flmul
  6486  0605                     u5335:
  6487  0605  1003               	clrc
  6488  0606  0DD4               	rlf	___flmul@grs,f
  6489  0607  0DD5               	rlf	___flmul@grs+1,f
  6490  0608  0DD6               	rlf	___flmul@grs+2,f
  6491  0609  0DD7               	rlf	___flmul@grs+3,f
  6492  060A  0BCD               	decfsz	??___flmul,f
  6493  060B  2E05               	goto	u5335
  6494  060C  0845               	movf	___flmul@b,w
  6495  060D  00CD               	movwf	??___flmul
  6496  060E  084D               	movf	??___flmul,w
  6497  060F  00F4               	movwf	__Umul8_16@multiplicand
  6498  0610  0849               	movf	___flmul@a,w
  6499  0611  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6500  0616  0875               	movf	?__Umul8_16+1,w
  6501  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6502  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6503  0619  00DE               	movwf	___flmul@temp+1
  6504  061A  0874               	movf	?__Umul8_16,w
  6505  061B  00DD               	movwf	___flmul@temp
  6506  061C                     l3949:
  6507  061C  085D               	movf	___flmul@temp,w
  6508  061D  00CD               	movwf	??___flmul
  6509  061E  085E               	movf	___flmul@temp+1,w
  6510  061F  00CE               	movwf	??___flmul+1
  6511  0620  01CF               	clrf	??___flmul+2
  6512  0621  01D0               	clrf	??___flmul+3
  6513  0622  084D               	movf	??___flmul,w
  6514  0623  07D4               	addwf	___flmul@grs,f
  6515  0624  084E               	movf	??___flmul+1,w
  6516  0625  1103               	clrz
  6517  0626  1803               	skipnc
  6518  0627  3E01               	addlw	1
  6519  0628  1903               	skipnz
  6520  0629  2E2B               	goto	u5341
  6521  062A  07D5               	addwf	___flmul@grs+1,f
  6522  062B                     u5341:
  6523  062B  084F               	movf	??___flmul+2,w
  6524  062C  1103               	clrz
  6525  062D  1803               	skipnc
  6526  062E  3E01               	addlw	1
  6527  062F  1903               	skipnz
  6528  0630  2E32               	goto	u5342
  6529  0631  07D6               	addwf	___flmul@grs+2,f
  6530  0632                     u5342:
  6531  0632  0850               	movf	??___flmul+3,w
  6532  0633  1103               	clrz
  6533  0634  1803               	skipnc
  6534  0635  3E01               	addlw	1
  6535  0636  1903               	skipnz
  6536  0637  2E39               	goto	u5343
  6537  0638  07D7               	addwf	___flmul@grs+3,f
  6538  0639                     u5343:
  6539  0639                     l3951:
  6540  0639  0846               	movf	___flmul@b+1,w
  6541  063A  00CD               	movwf	??___flmul
  6542  063B  084D               	movf	??___flmul,w
  6543  063C  00F4               	movwf	__Umul8_16@multiplicand
  6544  063D  084B               	movf	___flmul@a+2,w
  6545  063E  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6546  0643  0875               	movf	?__Umul8_16+1,w
  6547  0644  1283               	bcf	3,5	;RP0=0, select bank0
  6548  0645  1303               	bcf	3,6	;RP1=0, select bank0
  6549  0646  00DE               	movwf	___flmul@temp+1
  6550  0647  0874               	movf	?__Umul8_16,w
  6551  0648  00DD               	movwf	___flmul@temp
  6552  0649  085D               	movf	___flmul@temp,w
  6553  064A  00CD               	movwf	??___flmul
  6554  064B  085E               	movf	___flmul@temp+1,w
  6555  064C  00CE               	movwf	??___flmul+1
  6556  064D  01CF               	clrf	??___flmul+2
  6557  064E  01D0               	clrf	??___flmul+3
  6558  064F  084D               	movf	??___flmul,w
  6559  0650  07D9               	addwf	___flmul@prod,f
  6560  0651  084E               	movf	??___flmul+1,w
  6561  0652  1103               	clrz
  6562  0653  1803               	skipnc
  6563  0654  3E01               	addlw	1
  6564  0655  1903               	skipnz
  6565  0656  2E58               	goto	u5351
  6566  0657  07DA               	addwf	___flmul@prod+1,f
  6567  0658                     u5351:
  6568  0658  084F               	movf	??___flmul+2,w
  6569  0659  1103               	clrz
  6570  065A  1803               	skipnc
  6571  065B  3E01               	addlw	1
  6572  065C  1903               	skipnz
  6573  065D  2E5F               	goto	u5352
  6574  065E  07DB               	addwf	___flmul@prod+2,f
  6575  065F                     u5352:
  6576  065F  0850               	movf	??___flmul+3,w
  6577  0660  1103               	clrz
  6578  0661  1803               	skipnc
  6579  0662  3E01               	addlw	1
  6580  0663  1903               	skipnz
  6581  0664  2E66               	goto	u5353
  6582  0665  07DC               	addwf	___flmul@prod+3,f
  6583  0666                     u5353:
  6584  0666                     l3953:
  6585  0666  0847               	movf	___flmul@b+2,w
  6586  0667  00CD               	movwf	??___flmul
  6587  0668  084D               	movf	??___flmul,w
  6588  0669  00F4               	movwf	__Umul8_16@multiplicand
  6589  066A  084A               	movf	___flmul@a+1,w
  6590  066B  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6591  0670  0875               	movf	?__Umul8_16+1,w
  6592  0671  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0672  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0673  00DE               	movwf	___flmul@temp+1
  6595  0674  0874               	movf	?__Umul8_16,w
  6596  0675  00DD               	movwf	___flmul@temp
  6597  0676                     l3955:
  6598  0676  085D               	movf	___flmul@temp,w
  6599  0677  00CD               	movwf	??___flmul
  6600  0678  085E               	movf	___flmul@temp+1,w
  6601  0679  00CE               	movwf	??___flmul+1
  6602  067A  01CF               	clrf	??___flmul+2
  6603  067B  01D0               	clrf	??___flmul+3
  6604  067C  084D               	movf	??___flmul,w
  6605  067D  07D9               	addwf	___flmul@prod,f
  6606  067E  084E               	movf	??___flmul+1,w
  6607  067F  1103               	clrz
  6608  0680  1803               	skipnc
  6609  0681  3E01               	addlw	1
  6610  0682  1903               	skipnz
  6611  0683  2E85               	goto	u5361
  6612  0684  07DA               	addwf	___flmul@prod+1,f
  6613  0685                     u5361:
  6614  0685  084F               	movf	??___flmul+2,w
  6615  0686  1103               	clrz
  6616  0687  1803               	skipnc
  6617  0688  3E01               	addlw	1
  6618  0689  1903               	skipnz
  6619  068A  2E8C               	goto	u5362
  6620  068B  07DB               	addwf	___flmul@prod+2,f
  6621  068C                     u5362:
  6622  068C  0850               	movf	??___flmul+3,w
  6623  068D  1103               	clrz
  6624  068E  1803               	skipnc
  6625  068F  3E01               	addlw	1
  6626  0690  1903               	skipnz
  6627  0691  2E93               	goto	u5363
  6628  0692  07DC               	addwf	___flmul@prod+3,f
  6629  0693                     u5363:
  6630  0693  0847               	movf	___flmul@b+2,w
  6631  0694  00CD               	movwf	??___flmul
  6632  0695  084D               	movf	??___flmul,w
  6633  0696  00F4               	movwf	__Umul8_16@multiplicand
  6634  0697  084B               	movf	___flmul@a+2,w
  6635  0698  160A  118A  23F4  120A  118A  	fcall	__Umul8_16
  6636  069D  0875               	movf	?__Umul8_16+1,w
  6637  069E  1283               	bcf	3,5	;RP0=0, select bank0
  6638  069F  1303               	bcf	3,6	;RP1=0, select bank0
  6639  06A0  00DE               	movwf	___flmul@temp+1
  6640  06A1  0874               	movf	?__Umul8_16,w
  6641  06A2  00DD               	movwf	___flmul@temp
  6642  06A3                     l3957:
  6643  06A3  085D               	movf	___flmul@temp,w
  6644  06A4  00CD               	movwf	??___flmul
  6645  06A5  085E               	movf	___flmul@temp+1,w
  6646  06A6  00CE               	movwf	??___flmul+1
  6647  06A7  01CF               	clrf	??___flmul+2
  6648  06A8  01D0               	clrf	??___flmul+3
  6649  06A9  3008               	movlw	8
  6650  06AA                     u5375:
  6651  06AA  1003               	clrc
  6652  06AB  0DCD               	rlf	??___flmul,f
  6653  06AC  0DCE               	rlf	??___flmul+1,f
  6654  06AD  0DCF               	rlf	??___flmul+2,f
  6655  06AE  0DD0               	rlf	??___flmul+3,f
  6656  06AF                     u5370:
  6657  06AF  3EFF               	addlw	-1
  6658  06B0  1D03               	skipz
  6659  06B1  2EAA               	goto	u5375
  6660  06B2  084D               	movf	??___flmul,w
  6661  06B3  07D9               	addwf	___flmul@prod,f
  6662  06B4  084E               	movf	??___flmul+1,w
  6663  06B5  1103               	clrz
  6664  06B6  1803               	skipnc
  6665  06B7  3E01               	addlw	1
  6666  06B8  1903               	skipnz
  6667  06B9  2EBB               	goto	u5381
  6668  06BA  07DA               	addwf	___flmul@prod+1,f
  6669  06BB                     u5381:
  6670  06BB  084F               	movf	??___flmul+2,w
  6671  06BC  1103               	clrz
  6672  06BD  1803               	skipnc
  6673  06BE  3E01               	addlw	1
  6674  06BF  1903               	skipnz
  6675  06C0  2EC2               	goto	u5382
  6676  06C1  07DB               	addwf	___flmul@prod+2,f
  6677  06C2                     u5382:
  6678  06C2  0850               	movf	??___flmul+3,w
  6679  06C3  1103               	clrz
  6680  06C4  1803               	skipnc
  6681  06C5  3E01               	addlw	1
  6682  06C6  1903               	skipnz
  6683  06C7  2EC9               	goto	u5383
  6684  06C8  07DC               	addwf	___flmul@prod+3,f
  6685  06C9                     u5383:
  6686  06C9                     l3959:
  6687  06C9  0854               	movf	___flmul@grs,w
  6688  06CA  00CD               	movwf	??___flmul
  6689  06CB  0855               	movf	___flmul@grs+1,w
  6690  06CC  00CE               	movwf	??___flmul+1
  6691  06CD  0856               	movf	___flmul@grs+2,w
  6692  06CE  00CF               	movwf	??___flmul+2
  6693  06CF  0857               	movf	___flmul@grs+3,w
  6694  06D0  00D0               	movwf	??___flmul+3
  6695  06D1  3018               	movlw	24
  6696  06D2                     u5395:
  6697  06D2  1003               	clrc
  6698  06D3  0CD0               	rrf	??___flmul+3,f
  6699  06D4  0CCF               	rrf	??___flmul+2,f
  6700  06D5  0CCE               	rrf	??___flmul+1,f
  6701  06D6  0CCD               	rrf	??___flmul,f
  6702  06D7                     u5390:
  6703  06D7  3EFF               	addlw	-1
  6704  06D8  1D03               	skipz
  6705  06D9  2ED2               	goto	u5395
  6706  06DA  084D               	movf	??___flmul,w
  6707  06DB  07D9               	addwf	___flmul@prod,f
  6708  06DC  084E               	movf	??___flmul+1,w
  6709  06DD  1103               	clrz
  6710  06DE  1803               	skipnc
  6711  06DF  3E01               	addlw	1
  6712  06E0  1903               	skipnz
  6713  06E1  2EE3               	goto	u5401
  6714  06E2  07DA               	addwf	___flmul@prod+1,f
  6715  06E3                     u5401:
  6716  06E3  084F               	movf	??___flmul+2,w
  6717  06E4  1103               	clrz
  6718  06E5  1803               	skipnc
  6719  06E6  3E01               	addlw	1
  6720  06E7  1903               	skipnz
  6721  06E8  2EEA               	goto	u5402
  6722  06E9  07DB               	addwf	___flmul@prod+2,f
  6723  06EA                     u5402:
  6724  06EA  0850               	movf	??___flmul+3,w
  6725  06EB  1103               	clrz
  6726  06EC  1803               	skipnc
  6727  06ED  3E01               	addlw	1
  6728  06EE  1903               	skipnz
  6729  06EF  2EF1               	goto	u5403
  6730  06F0  07DC               	addwf	___flmul@prod+3,f
  6731  06F1                     u5403:
  6732  06F1                     l3961:
  6733  06F1  3008               	movlw	8
  6734  06F2  00CD               	movwf	??___flmul
  6735  06F3                     u5415:
  6736  06F3  1003               	clrc
  6737  06F4  0DD4               	rlf	___flmul@grs,f
  6738  06F5  0DD5               	rlf	___flmul@grs+1,f
  6739  06F6  0DD6               	rlf	___flmul@grs+2,f
  6740  06F7  0DD7               	rlf	___flmul@grs+3,f
  6741  06F8  0BCD               	decfsz	??___flmul,f
  6742  06F9  2EF3               	goto	u5415
  6743  06FA                     l3963:
  6744  06FA  0858               	movf	___flmul@bexp,w
  6745  06FB  0753               	addwf	___flmul@aexp,w
  6746  06FC  00CD               	movwf	??___flmul
  6747  06FD  01CE               	clrf	??___flmul+1
  6748  06FE  0DCE               	rlf	??___flmul+1,f
  6749  06FF  084D               	movf	??___flmul,w
  6750  0700  3E82               	addlw	130
  6751  0701  00DD               	movwf	___flmul@temp
  6752  0702  084E               	movf	??___flmul+1,w
  6753  0703  1803               	skipnc
  6754  0704  3E01               	addlw	1
  6755  0705  3EFF               	addlw	255
  6756  0706  00DE               	movwf	___flmul@temp+1
  6757  0707  2F25               	goto	l3975
  6758  0708                     l3965:
  6759  0708  3001               	movlw	1
  6760  0709  00CD               	movwf	??___flmul
  6761  070A                     u5425:
  6762  070A  1003               	clrc
  6763  070B  0DD9               	rlf	___flmul@prod,f
  6764  070C  0DDA               	rlf	___flmul@prod+1,f
  6765  070D  0DDB               	rlf	___flmul@prod+2,f
  6766  070E  0DDC               	rlf	___flmul@prod+3,f
  6767  070F  0BCD               	decfsz	??___flmul,f
  6768  0710  2F0A               	goto	u5425
  6769  0711                     l3967:
  6770  0711  1FD7               	btfss	___flmul@grs+3,7
  6771  0712  2F14               	goto	u5431
  6772  0713  2F15               	goto	u5430
  6773  0714                     u5431:
  6774  0714  2F16               	goto	l3971
  6775  0715                     u5430:
  6776  0715                     l3969:
  6777  0715  1459               	bsf	___flmul@prod,0
  6778  0716                     l3971:
  6779  0716  3001               	movlw	1
  6780  0717  00CD               	movwf	??___flmul
  6781  0718                     u5445:
  6782  0718  1003               	clrc
  6783  0719  0DD4               	rlf	___flmul@grs,f
  6784  071A  0DD5               	rlf	___flmul@grs+1,f
  6785  071B  0DD6               	rlf	___flmul@grs+2,f
  6786  071C  0DD7               	rlf	___flmul@grs+3,f
  6787  071D  0BCD               	decfsz	??___flmul,f
  6788  071E  2F18               	goto	u5445
  6789  071F                     l3973:
  6790  071F  30FF               	movlw	255
  6791  0720  07DD               	addwf	___flmul@temp,f
  6792  0721  1803               	skipnc
  6793  0722  0ADE               	incf	___flmul@temp+1,f
  6794  0723  30FF               	movlw	255
  6795  0724  07DE               	addwf	___flmul@temp+1,f
  6796  0725                     l3975:
  6797  0725  1FDB               	btfss	___flmul@prod+2,7
  6798  0726  2F28               	goto	u5451
  6799  0727  2F29               	goto	u5450
  6800  0728                     u5451:
  6801  0728  2F08               	goto	l3965
  6802  0729                     u5450:
  6803  0729                     l3977:
  6804  0729  01D3               	clrf	___flmul@aexp
  6805  072A                     l3979:
  6806  072A  1FD7               	btfss	___flmul@grs+3,7
  6807  072B  2F2D               	goto	u5461
  6808  072C  2F2E               	goto	u5460
  6809  072D                     u5461:
  6810  072D  2F4A               	goto	l3987
  6811  072E                     u5460:
  6812  072E                     l3981:
  6813  072E  30FF               	movlw	255
  6814  072F  0554               	andwf	___flmul@grs,w
  6815  0730  00CD               	movwf	??___flmul
  6816  0731  30FF               	movlw	255
  6817  0732  0555               	andwf	___flmul@grs+1,w
  6818  0733  00CE               	movwf	??___flmul+1
  6819  0734  30FF               	movlw	255
  6820  0735  0556               	andwf	___flmul@grs+2,w
  6821  0736  00CF               	movwf	??___flmul+2
  6822  0737  307F               	movlw	127
  6823  0738  0557               	andwf	___flmul@grs+3,w
  6824  0739  00D0               	movwf	??___flmul+3
  6825  073A  0850               	movf	??___flmul+3,w
  6826  073B  044F               	iorwf	??___flmul+2,w
  6827  073C  044E               	iorwf	??___flmul+1,w
  6828  073D  044D               	iorwf	??___flmul,w
  6829  073E  1903               	skipnz
  6830  073F  2F41               	goto	u5471
  6831  0740  2F42               	goto	u5470
  6832  0741                     u5471:
  6833  0741  2F45               	goto	l846
  6834  0742                     u5470:
  6835  0742                     l3983:
  6836  0742  01D3               	clrf	___flmul@aexp
  6837  0743  0AD3               	incf	___flmul@aexp,f
  6838  0744  2F4A               	goto	l3987
  6839  0745                     l846:
  6840  0745  1C59               	btfss	___flmul@prod,0
  6841  0746  2F48               	goto	u5481
  6842  0747  2F49               	goto	u5480
  6843  0748                     u5481:
  6844  0748  2F4A               	goto	l3987
  6845  0749                     u5480:
  6846  0749  2F42               	goto	l3983
  6847  074A                     l3987:
  6848  074A  0853               	movf	___flmul@aexp,w
  6849  074B  1903               	btfsc	3,2
  6850  074C  2F4E               	goto	u5491
  6851  074D  2F4F               	goto	u5490
  6852  074E                     u5491:
  6853  074E  2F80               	goto	l3997
  6854  074F                     u5490:
  6855  074F                     l3989:
  6856  074F  3001               	movlw	1
  6857  0750  07D9               	addwf	___flmul@prod,f
  6858  0751  3000               	movlw	0
  6859  0752  1803               	skipnc
  6860  0753  3001               	movlw	1
  6861  0754  07DA               	addwf	___flmul@prod+1,f
  6862  0755  3000               	movlw	0
  6863  0756  1803               	skipnc
  6864  0757  3001               	movlw	1
  6865  0758  07DB               	addwf	___flmul@prod+2,f
  6866  0759  3000               	movlw	0
  6867  075A  1803               	skipnc
  6868  075B  3001               	movlw	1
  6869  075C  07DC               	addwf	___flmul@prod+3,f
  6870  075D                     l3991:
  6871  075D  1C5C               	btfss	___flmul@prod+3,0
  6872  075E  2F60               	goto	u5501
  6873  075F  2F61               	goto	u5500
  6874  0760                     u5501:
  6875  0760  2F80               	goto	l3997
  6876  0761                     u5500:
  6877  0761                     l3993:
  6878  0761  0859               	movf	___flmul@prod,w
  6879  0762  00CD               	movwf	??___flmul
  6880  0763  085A               	movf	___flmul@prod+1,w
  6881  0764  00CE               	movwf	??___flmul+1
  6882  0765  085B               	movf	___flmul@prod+2,w
  6883  0766  00CF               	movwf	??___flmul+2
  6884  0767  085C               	movf	___flmul@prod+3,w
  6885  0768  00D0               	movwf	??___flmul+3
  6886  0769  3001               	movlw	1
  6887  076A  00D1               	movwf	??___flmul+4
  6888  076B                     u5515:
  6889  076B  0D50               	rlf	??___flmul+3,w
  6890  076C  0CD0               	rrf	??___flmul+3,f
  6891  076D  0CCF               	rrf	??___flmul+2,f
  6892  076E  0CCE               	rrf	??___flmul+1,f
  6893  076F  0CCD               	rrf	??___flmul,f
  6894  0770                     u5510:
  6895  0770  0BD1               	decfsz	??___flmul+4,f
  6896  0771  2F6B               	goto	u5515
  6897  0772  0850               	movf	??___flmul+3,w
  6898  0773  00DC               	movwf	___flmul@prod+3
  6899  0774  084F               	movf	??___flmul+2,w
  6900  0775  00DB               	movwf	___flmul@prod+2
  6901  0776  084E               	movf	??___flmul+1,w
  6902  0777  00DA               	movwf	___flmul@prod+1
  6903  0778  084D               	movf	??___flmul,w
  6904  0779  00D9               	movwf	___flmul@prod
  6905  077A                     l3995:
  6906  077A  3001               	movlw	1
  6907  077B  07DD               	addwf	___flmul@temp,f
  6908  077C  1803               	skipnc
  6909  077D  0ADE               	incf	___flmul@temp+1,f
  6910  077E  3000               	movlw	0
  6911  077F  07DE               	addwf	___flmul@temp+1,f
  6912  0780                     l3997:
  6913  0780  085E               	movf	___flmul@temp+1,w
  6914  0781  3A80               	xorlw	128
  6915  0782  00FF               	movwf	btemp+1
  6916  0783  3080               	movlw	128
  6917  0784  027F               	subwf	btemp+1,w
  6918  0785  1D03               	skipz
  6919  0786  2F89               	goto	u5525
  6920  0787  30FF               	movlw	255
  6921  0788  025D               	subwf	___flmul@temp,w
  6922  0789                     u5525:
  6923  0789  1C03               	skipc
  6924  078A  2F8C               	goto	u5521
  6925  078B  2F8D               	goto	u5520
  6926  078C                     u5521:
  6927  078C  2F98               	goto	l4001
  6928  078D                     u5520:
  6929  078D                     l3999:
  6930  078D  307F               	movlw	127
  6931  078E  1283               	bcf	3,5	;RP0=0, select bank0
  6932  078F  1303               	bcf	3,6	;RP1=0, select bank0
  6933  0790  00DC               	movwf	___flmul@prod+3
  6934  0791  3080               	movlw	128
  6935  0792  00DB               	movwf	___flmul@prod+2
  6936  0793  3000               	movlw	0
  6937  0794  00DA               	movwf	___flmul@prod+1
  6938  0795  3000               	movlw	0
  6939  0796  00D9               	movwf	___flmul@prod
  6940  0797  2FCD               	goto	l852
  6941  0798                     l4001:
  6942  0798  1283               	bcf	3,5	;RP0=0, select bank0
  6943  0799  1303               	bcf	3,6	;RP1=0, select bank0
  6944  079A  085E               	movf	___flmul@temp+1,w
  6945  079B  3A80               	xorlw	128
  6946  079C  00FF               	movwf	btemp+1
  6947  079D  3080               	movlw	128
  6948  079E  027F               	subwf	btemp+1,w
  6949  079F  1D03               	skipz
  6950  07A0  2FA3               	goto	u5535
  6951  07A1  3001               	movlw	1
  6952  07A2  025D               	subwf	___flmul@temp,w
  6953  07A3                     u5535:
  6954  07A3  1803               	skipnc
  6955  07A4  2FA6               	goto	u5531
  6956  07A5  2FA7               	goto	u5530
  6957  07A6                     u5531:
  6958  07A6  2FB3               	goto	l4007
  6959  07A7                     u5530:
  6960  07A7                     l4003:
  6961  07A7  3000               	movlw	0
  6962  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  6963  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  6964  07AA  00DC               	movwf	___flmul@prod+3
  6965  07AB  3000               	movlw	0
  6966  07AC  00DB               	movwf	___flmul@prod+2
  6967  07AD  3000               	movlw	0
  6968  07AE  00DA               	movwf	___flmul@prod+1
  6969  07AF  3000               	movlw	0
  6970  07B0  00D9               	movwf	___flmul@prod
  6971  07B1                     l4005:
  6972  07B1  01D2               	clrf	___flmul@sign
  6973  07B2  2FCD               	goto	l852
  6974  07B3                     l4007:
  6975  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  6976  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  6977  07B5  085D               	movf	___flmul@temp,w
  6978  07B6  00CD               	movwf	??___flmul
  6979  07B7  084D               	movf	??___flmul,w
  6980  07B8  00D8               	movwf	___flmul@bexp
  6981  07B9  30FF               	movlw	255
  6982  07BA  05D9               	andwf	___flmul@prod,f
  6983  07BB  30FF               	movlw	255
  6984  07BC  05DA               	andwf	___flmul@prod+1,f
  6985  07BD  307F               	movlw	127
  6986  07BE  05DB               	andwf	___flmul@prod+2,f
  6987  07BF  3000               	movlw	0
  6988  07C0  05DC               	andwf	___flmul@prod+3,f
  6989  07C1                     l4009:
  6990  07C1  1C58               	btfss	___flmul@bexp,0
  6991  07C2  2FC4               	goto	u5541
  6992  07C3  2FC5               	goto	u5540
  6993  07C4                     u5541:
  6994  07C4  2FC6               	goto	l4013
  6995  07C5                     u5540:
  6996  07C5                     l4011:
  6997  07C5  17DB               	bsf	___flmul@prod+2,7
  6998  07C6                     l4013:
  6999  07C6  0858               	movf	___flmul@bexp,w
  7000  07C7  00CD               	movwf	??___flmul
  7001  07C8  1003               	clrc
  7002  07C9  0C4D               	rrf	??___flmul,w
  7003  07CA  00CE               	movwf	??___flmul+1
  7004  07CB  084E               	movf	??___flmul+1,w
  7005  07CC  00DC               	movwf	___flmul@prod+3
  7006  07CD                     l852:
  7007  07CD  0852               	movf	___flmul@sign,w
  7008  07CE  00CD               	movwf	??___flmul
  7009  07CF  084D               	movf	??___flmul,w
  7010  07D0  04DC               	iorwf	___flmul@prod+3,f
  7011  07D1                     l4015:
  7012  07D1  085C               	movf	___flmul@prod+3,w
  7013  07D2  00C8               	movwf	?___flmul+3
  7014  07D3  085B               	movf	___flmul@prod+2,w
  7015  07D4  00C7               	movwf	?___flmul+2
  7016  07D5  085A               	movf	___flmul@prod+1,w
  7017  07D6  00C6               	movwf	?___flmul+1
  7018  07D7  0859               	movf	___flmul@prod,w
  7019  07D8  00C5               	movwf	?___flmul
  7020  07D9                     l840:
  7021  07D9  0008               	return
  7022  07DA                     __end_of___flmul:
  7023                           
  7024                           	psect	text22
  7025  13F4                     __ptext22:	
  7026 ;; *************** function __Umul8_16 *****************
  7027 ;; Defined at:
  7028 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  multiplier      1    wreg     unsigned char 
  7031 ;;  multiplicand    1    4[COMMON] unsigned char 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  multiplier      1    6[BANK0 ] unsigned char 
  7034 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  7035 ;;  product         2    2[BANK0 ] unsigned int 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  2    4[COMMON] unsigned int 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7045 ;;      Params:         2       0       0       0       0
  7046 ;;      Locals:         0       5       0       0       0
  7047 ;;      Temps:          0       2       0       0       0
  7048 ;;      Totals:         2       7       0       0       0
  7049 ;;Total ram usage:        9 bytes
  7050 ;; Hardware stack levels used: 1
  7051 ;; Hardware stack levels required when called: 1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		___flmul
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function __Umul8_16
  7061  13F4                     __Umul8_16:
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7065                           ;__Umul8_16@multiplier stored from wreg
  7066  13F4  1283               	bcf	3,5	;RP0=0, select bank0
  7067  13F5  1303               	bcf	3,6	;RP1=0, select bank0
  7068  13F6  00A6               	movwf	__Umul8_16@multiplier
  7069  13F7                     l3555:
  7070  13F7  01A2               	clrf	__Umul8_16@product
  7071  13F8  01A3               	clrf	__Umul8_16@product+1
  7072  13F9                     l3557:
  7073  13F9  0874               	movf	__Umul8_16@multiplicand,w
  7074  13FA  00A0               	movwf	??__Umul8_16
  7075  13FB  01A1               	clrf	??__Umul8_16+1
  7076  13FC  0820               	movf	??__Umul8_16,w
  7077  13FD  00A4               	movwf	__Umul8_16@word_mpld
  7078  13FE  0821               	movf	??__Umul8_16+1,w
  7079  13FF  00A5               	movwf	__Umul8_16@word_mpld+1
  7080  1400                     l3559:
  7081  1400  1C26               	btfss	__Umul8_16@multiplier,0
  7082  1401  2C03               	goto	u4441
  7083  1402  2C04               	goto	u4440
  7084  1403                     u4441:
  7085  1403  2C0A               	goto	l859
  7086  1404                     u4440:
  7087  1404                     l3561:
  7088  1404  0824               	movf	__Umul8_16@word_mpld,w
  7089  1405  07A2               	addwf	__Umul8_16@product,f
  7090  1406  1803               	skipnc
  7091  1407  0AA3               	incf	__Umul8_16@product+1,f
  7092  1408  0825               	movf	__Umul8_16@word_mpld+1,w
  7093  1409  07A3               	addwf	__Umul8_16@product+1,f
  7094  140A                     l859:
  7095  140A  3001               	movlw	1
  7096  140B                     u4455:
  7097  140B  1003               	clrc
  7098  140C  0DA4               	rlf	__Umul8_16@word_mpld,f
  7099  140D  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  7100  140E  3EFF               	addlw	-1
  7101  140F  1D03               	skipz
  7102  1410  2C0B               	goto	u4455
  7103  1411  1003               	clrc
  7104  1412  0CA6               	rrf	__Umul8_16@multiplier,f
  7105  1413                     l3563:
  7106  1413  0826               	movf	__Umul8_16@multiplier,w
  7107  1414  1D03               	btfss	3,2
  7108  1415  2C17               	goto	u4461
  7109  1416  2C18               	goto	u4460
  7110  1417                     u4461:
  7111  1417  2C00               	goto	l3559
  7112  1418                     u4460:
  7113  1418                     l3565:
  7114  1418  0823               	movf	__Umul8_16@product+1,w
  7115  1419  00F5               	movwf	?__Umul8_16+1
  7116  141A  0822               	movf	__Umul8_16@product,w
  7117  141B  00F4               	movwf	?__Umul8_16
  7118  141C                     l861:
  7119  141C  0008               	return
  7120  141D                     __end_of__Umul8_16:
  7121                           
  7122                           	psect	text23
  7123  0862                     __ptext23:	
  7124 ;; *************** function ___flge *****************
  7125 ;; Defined at:
  7126 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  ff1             4    0[BANK0 ] unsigned int 
  7129 ;;  ff2             4    4[BANK0 ] unsigned int 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;		None
  7132 ;; Return value:  Size  Location     Type
  7133 ;;		None               void
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       8       0       0       0
  7142 ;;      Locals:         0       0       0       0       0
  7143 ;;      Temps:          0       4       0       0       0
  7144 ;;      Totals:         0      12       0       0       0
  7145 ;;Total ram usage:       12 bytes
  7146 ;; Hardware stack levels used: 1
  7147 ;; Hardware stack levels required when called: 1
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_ADC_convert
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function ___flge
  7157  0862                     ___flge:
  7158  0862                     l3675:	
  7159                           ;incstack = 0
  7160                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7161                           
  7162  0862  3000               	movlw	0
  7163  0863  1283               	bcf	3,5	;RP0=0, select bank0
  7164  0864  1303               	bcf	3,6	;RP1=0, select bank0
  7165  0865  0520               	andwf	___flge@ff1,w
  7166  0866  00A8               	movwf	??___flge
  7167  0867  3000               	movlw	0
  7168  0868  0521               	andwf	___flge@ff1+1,w
  7169  0869  00A9               	movwf	??___flge+1
  7170  086A  3080               	movlw	128
  7171  086B  0522               	andwf	___flge@ff1+2,w
  7172  086C  00AA               	movwf	??___flge+2
  7173  086D  307F               	movlw	127
  7174  086E  0523               	andwf	___flge@ff1+3,w
  7175  086F  00AB               	movwf	??___flge+3
  7176  0870  082B               	movf	??___flge+3,w
  7177  0871  042A               	iorwf	??___flge+2,w
  7178  0872  0429               	iorwf	??___flge+1,w
  7179  0873  0428               	iorwf	??___flge,w
  7180  0874  1D03               	skipz
  7181  0875  2877               	goto	u4721
  7182  0876  2878               	goto	u4720
  7183  0877                     u4721:
  7184  0877  2880               	goto	l625
  7185  0878                     u4720:
  7186  0878                     l3677:
  7187  0878  3000               	movlw	0
  7188  0879  00A3               	movwf	___flge@ff1+3
  7189  087A  3000               	movlw	0
  7190  087B  00A2               	movwf	___flge@ff1+2
  7191  087C  3000               	movlw	0
  7192  087D  00A1               	movwf	___flge@ff1+1
  7193  087E  3000               	movlw	0
  7194  087F  00A0               	movwf	___flge@ff1
  7195  0880                     l625:
  7196  0880  3000               	movlw	0
  7197  0881  0524               	andwf	___flge@ff2,w
  7198  0882  00A8               	movwf	??___flge
  7199  0883  3000               	movlw	0
  7200  0884  0525               	andwf	___flge@ff2+1,w
  7201  0885  00A9               	movwf	??___flge+1
  7202  0886  3080               	movlw	128
  7203  0887  0526               	andwf	___flge@ff2+2,w
  7204  0888  00AA               	movwf	??___flge+2
  7205  0889  307F               	movlw	127
  7206  088A  0527               	andwf	___flge@ff2+3,w
  7207  088B  00AB               	movwf	??___flge+3
  7208  088C  082B               	movf	??___flge+3,w
  7209  088D  042A               	iorwf	??___flge+2,w
  7210  088E  0429               	iorwf	??___flge+1,w
  7211  088F  0428               	iorwf	??___flge,w
  7212  0890  1D03               	skipz
  7213  0891  2893               	goto	u4731
  7214  0892  2894               	goto	u4730
  7215  0893                     u4731:
  7216  0893  289C               	goto	l3681
  7217  0894                     u4730:
  7218  0894                     l3679:
  7219  0894  3000               	movlw	0
  7220  0895  00A7               	movwf	___flge@ff2+3
  7221  0896  3000               	movlw	0
  7222  0897  00A6               	movwf	___flge@ff2+2
  7223  0898  3000               	movlw	0
  7224  0899  00A5               	movwf	___flge@ff2+1
  7225  089A  3000               	movlw	0
  7226  089B  00A4               	movwf	___flge@ff2
  7227  089C                     l3681:
  7228  089C  1FA3               	btfss	___flge@ff1+3,7
  7229  089D  289F               	goto	u4741
  7230  089E  28A0               	goto	u4740
  7231  089F                     u4741:
  7232  089F  28C4               	goto	l3685
  7233  08A0                     u4740:
  7234  08A0                     l3683:
  7235  08A0  3000               	movlw	0
  7236  08A1  00A8               	movwf	??___flge
  7237  08A2  3000               	movlw	0
  7238  08A3  00A9               	movwf	??___flge+1
  7239  08A4  3000               	movlw	0
  7240  08A5  00AA               	movwf	??___flge+2
  7241  08A6  3080               	movlw	128
  7242  08A7  00AB               	movwf	??___flge+3
  7243  08A8  0820               	movf	___flge@ff1,w
  7244  08A9  02A8               	subwf	??___flge,f
  7245  08AA  0821               	movf	___flge@ff1+1,w
  7246  08AB  1C03               	skipc
  7247  08AC  0F21               	incfsz	___flge@ff1+1,w
  7248  08AD  28AF               	goto	u4751
  7249  08AE  28B0               	goto	u4752
  7250  08AF                     u4751:
  7251  08AF  02A9               	subwf	??___flge+1,f
  7252  08B0                     u4752:
  7253  08B0  0822               	movf	___flge@ff1+2,w
  7254  08B1  1C03               	skipc
  7255  08B2  0F22               	incfsz	___flge@ff1+2,w
  7256  08B3  28B5               	goto	u4753
  7257  08B4  28B6               	goto	u4754
  7258  08B5                     u4753:
  7259  08B5  02AA               	subwf	??___flge+2,f
  7260  08B6                     u4754:
  7261  08B6  0823               	movf	___flge@ff1+3,w
  7262  08B7  1C03               	skipc
  7263  08B8  0F23               	incfsz	___flge@ff1+3,w
  7264  08B9  28BB               	goto	u4755
  7265  08BA  28BC               	goto	u4756
  7266  08BB                     u4755:
  7267  08BB  02AB               	subwf	??___flge+3,f
  7268  08BC                     u4756:
  7269  08BC  082B               	movf	??___flge+3,w
  7270  08BD  00A3               	movwf	___flge@ff1+3
  7271  08BE  082A               	movf	??___flge+2,w
  7272  08BF  00A2               	movwf	___flge@ff1+2
  7273  08C0  0829               	movf	??___flge+1,w
  7274  08C1  00A1               	movwf	___flge@ff1+1
  7275  08C2  0828               	movf	??___flge,w
  7276  08C3  00A0               	movwf	___flge@ff1
  7277  08C4                     l3685:
  7278  08C4  1FA7               	btfss	___flge@ff2+3,7
  7279  08C5  28C7               	goto	u4761
  7280  08C6  28C8               	goto	u4760
  7281  08C7                     u4761:
  7282  08C7  28EC               	goto	l628
  7283  08C8                     u4760:
  7284  08C8                     l3687:
  7285  08C8  3000               	movlw	0
  7286  08C9  00A8               	movwf	??___flge
  7287  08CA  3000               	movlw	0
  7288  08CB  00A9               	movwf	??___flge+1
  7289  08CC  3000               	movlw	0
  7290  08CD  00AA               	movwf	??___flge+2
  7291  08CE  3080               	movlw	128
  7292  08CF  00AB               	movwf	??___flge+3
  7293  08D0  0824               	movf	___flge@ff2,w
  7294  08D1  02A8               	subwf	??___flge,f
  7295  08D2  0825               	movf	___flge@ff2+1,w
  7296  08D3  1C03               	skipc
  7297  08D4  0F25               	incfsz	___flge@ff2+1,w
  7298  08D5  28D7               	goto	u4771
  7299  08D6  28D8               	goto	u4772
  7300  08D7                     u4771:
  7301  08D7  02A9               	subwf	??___flge+1,f
  7302  08D8                     u4772:
  7303  08D8  0826               	movf	___flge@ff2+2,w
  7304  08D9  1C03               	skipc
  7305  08DA  0F26               	incfsz	___flge@ff2+2,w
  7306  08DB  28DD               	goto	u4773
  7307  08DC  28DE               	goto	u4774
  7308  08DD                     u4773:
  7309  08DD  02AA               	subwf	??___flge+2,f
  7310  08DE                     u4774:
  7311  08DE  0827               	movf	___flge@ff2+3,w
  7312  08DF  1C03               	skipc
  7313  08E0  0F27               	incfsz	___flge@ff2+3,w
  7314  08E1  28E3               	goto	u4775
  7315  08E2  28E4               	goto	u4776
  7316  08E3                     u4775:
  7317  08E3  02AB               	subwf	??___flge+3,f
  7318  08E4                     u4776:
  7319  08E4  082B               	movf	??___flge+3,w
  7320  08E5  00A7               	movwf	___flge@ff2+3
  7321  08E6  082A               	movf	??___flge+2,w
  7322  08E7  00A6               	movwf	___flge@ff2+2
  7323  08E8  0829               	movf	??___flge+1,w
  7324  08E9  00A5               	movwf	___flge@ff2+1
  7325  08EA  0828               	movf	??___flge,w
  7326  08EB  00A4               	movwf	___flge@ff2
  7327  08EC                     l628:
  7328  08EC  3080               	movlw	128
  7329  08ED  06A3               	xorwf	___flge@ff1+3,f
  7330  08EE  3080               	movlw	128
  7331  08EF  06A7               	xorwf	___flge@ff2+3,f
  7332  08F0  0827               	movf	___flge@ff2+3,w
  7333  08F1  0223               	subwf	___flge@ff1+3,w
  7334  08F2  1D03               	skipz
  7335  08F3  28FE               	goto	u4785
  7336  08F4  0826               	movf	___flge@ff2+2,w
  7337  08F5  0222               	subwf	___flge@ff1+2,w
  7338  08F6  1D03               	skipz
  7339  08F7  28FE               	goto	u4785
  7340  08F8  0825               	movf	___flge@ff2+1,w
  7341  08F9  0221               	subwf	___flge@ff1+1,w
  7342  08FA  1D03               	skipz
  7343  08FB  28FE               	goto	u4785
  7344  08FC  0824               	movf	___flge@ff2,w
  7345  08FD  0220               	subwf	___flge@ff1,w
  7346  08FE                     u4785:
  7347  08FE  1803               	skipnc
  7348  08FF  2901               	goto	u4781
  7349  0900  2902               	goto	u4780
  7350  0901                     u4781:
  7351  0901  2904               	goto	l3691
  7352  0902                     u4780:
  7353  0902                     l3689:
  7354  0902  1003               	clrc
  7355  0903  2905               	goto	l629
  7356  0904                     l3691:
  7357  0904  1403               	setc
  7358  0905                     l629:
  7359  0905  0008               	return
  7360  0906                     __end_of___flge:
  7361                           
  7362                           	psect	text24
  7363  0B9B                     __ptext24:	
  7364 ;; *************** function ___fldiv *****************
  7365 ;; Defined at:
  7366 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  a               4   29[BANK0 ] unsigned int 
  7369 ;;  b               4   33[BANK0 ] unsigned int 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  grs             4   49[BANK0 ] unsigned long 
  7372 ;;  rem             4   42[BANK0 ] unsigned long 
  7373 ;;  new_exp         2   47[BANK0 ] int 
  7374 ;;  aexp            1   54[BANK0 ] unsigned char 
  7375 ;;  bexp            1   53[BANK0 ] unsigned char 
  7376 ;;  sign            1   46[BANK0 ] unsigned char 
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  4   29[BANK0 ] unsigned char 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, status,0, btemp+1
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7386 ;;      Params:         0       8       0       0       0
  7387 ;;      Locals:         0      13       0       0       0
  7388 ;;      Temps:          0       5       0       0       0
  7389 ;;      Totals:         0      26       0       0       0
  7390 ;;Total ram usage:       26 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 1
  7393 ;; This function calls:
  7394 ;;		Nothing
  7395 ;; This function is called by:
  7396 ;;		_ADC_convert
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           
  7401                           ;psect for function ___fldiv
  7402  0B9B                     ___fldiv:
  7403  0B9B                     l3737:	
  7404                           ;incstack = 0
  7405                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7406                           
  7407  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7408  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7409  0B9D  0844               	movf	___fldiv@b+3,w
  7410  0B9E  3980               	andlw	128
  7411  0B9F  00C5               	movwf	??___fldiv
  7412  0BA0  0845               	movf	??___fldiv,w
  7413  0BA1  00CE               	movwf	___fldiv@sign
  7414  0BA2                     l3739:
  7415  0BA2  0844               	movf	___fldiv@b+3,w
  7416  0BA3  00C5               	movwf	??___fldiv
  7417  0BA4  0745               	addwf	??___fldiv,w
  7418  0BA5  00C6               	movwf	??___fldiv+1
  7419  0BA6  0846               	movf	??___fldiv+1,w
  7420  0BA7  00D5               	movwf	___fldiv@bexp
  7421  0BA8                     l3741:
  7422  0BA8  1FC3               	btfss	___fldiv@b+2,7
  7423  0BA9  2BAB               	goto	u4891
  7424  0BAA  2BAC               	goto	u4890
  7425  0BAB                     u4891:
  7426  0BAB  2BAD               	goto	l3745
  7427  0BAC                     u4890:
  7428  0BAC                     l3743:
  7429  0BAC  1455               	bsf	___fldiv@bexp,0
  7430  0BAD                     l3745:
  7431  0BAD  0855               	movf	___fldiv@bexp,w
  7432  0BAE  1903               	btfsc	3,2
  7433  0BAF  2BB1               	goto	u4901
  7434  0BB0  2BB2               	goto	u4900
  7435  0BB1                     u4901:
  7436  0BB1  2BC2               	goto	l3755
  7437  0BB2                     u4900:
  7438  0BB2                     l3747:
  7439  0BB2  0A55               	incf	___fldiv@bexp,w
  7440  0BB3  1D03               	btfss	3,2
  7441  0BB4  2BB6               	goto	u4911
  7442  0BB5  2BB7               	goto	u4910
  7443  0BB6                     u4911:
  7444  0BB6  2BBF               	goto	l3751
  7445  0BB7                     u4910:
  7446  0BB7                     l3749:
  7447  0BB7  3000               	movlw	0
  7448  0BB8  00C4               	movwf	___fldiv@b+3
  7449  0BB9  3000               	movlw	0
  7450  0BBA  00C3               	movwf	___fldiv@b+2
  7451  0BBB  3000               	movlw	0
  7452  0BBC  00C2               	movwf	___fldiv@b+1
  7453  0BBD  3000               	movlw	0
  7454  0BBE  00C1               	movwf	___fldiv@b
  7455  0BBF                     l3751:
  7456  0BBF  17C3               	bsf	___fldiv@b+2,7
  7457  0BC0                     l3753:
  7458  0BC0  01C4               	clrf	___fldiv@b+3
  7459  0BC1  2BCA               	goto	l3757
  7460  0BC2                     l3755:
  7461  0BC2  3000               	movlw	0
  7462  0BC3  00C4               	movwf	___fldiv@b+3
  7463  0BC4  3000               	movlw	0
  7464  0BC5  00C3               	movwf	___fldiv@b+2
  7465  0BC6  3000               	movlw	0
  7466  0BC7  00C2               	movwf	___fldiv@b+1
  7467  0BC8  3000               	movlw	0
  7468  0BC9  00C1               	movwf	___fldiv@b
  7469  0BCA                     l3757:
  7470  0BCA  0840               	movf	___fldiv@a+3,w
  7471  0BCB  3980               	andlw	128
  7472  0BCC  00C5               	movwf	??___fldiv
  7473  0BCD  0845               	movf	??___fldiv,w
  7474  0BCE  06CE               	xorwf	___fldiv@sign,f
  7475  0BCF                     l3759:
  7476  0BCF  0840               	movf	___fldiv@a+3,w
  7477  0BD0  00C5               	movwf	??___fldiv
  7478  0BD1  0745               	addwf	??___fldiv,w
  7479  0BD2  00C6               	movwf	??___fldiv+1
  7480  0BD3  0846               	movf	??___fldiv+1,w
  7481  0BD4  00D6               	movwf	___fldiv@aexp
  7482  0BD5                     l3761:
  7483  0BD5  1FBF               	btfss	___fldiv@a+2,7
  7484  0BD6  2BD8               	goto	u4921
  7485  0BD7  2BD9               	goto	u4920
  7486  0BD8                     u4921:
  7487  0BD8  2BDA               	goto	l3765
  7488  0BD9                     u4920:
  7489  0BD9                     l3763:
  7490  0BD9  1456               	bsf	___fldiv@aexp,0
  7491  0BDA                     l3765:
  7492  0BDA  0856               	movf	___fldiv@aexp,w
  7493  0BDB  1903               	btfsc	3,2
  7494  0BDC  2BDE               	goto	u4931
  7495  0BDD  2BDF               	goto	u4930
  7496  0BDE                     u4931:
  7497  0BDE  2BEF               	goto	l3775
  7498  0BDF                     u4930:
  7499  0BDF                     l3767:
  7500  0BDF  0A56               	incf	___fldiv@aexp,w
  7501  0BE0  1D03               	btfss	3,2
  7502  0BE1  2BE3               	goto	u4941
  7503  0BE2  2BE4               	goto	u4940
  7504  0BE3                     u4941:
  7505  0BE3  2BEC               	goto	l3771
  7506  0BE4                     u4940:
  7507  0BE4                     l3769:
  7508  0BE4  3000               	movlw	0
  7509  0BE5  00C0               	movwf	___fldiv@a+3
  7510  0BE6  3000               	movlw	0
  7511  0BE7  00BF               	movwf	___fldiv@a+2
  7512  0BE8  3000               	movlw	0
  7513  0BE9  00BE               	movwf	___fldiv@a+1
  7514  0BEA  3000               	movlw	0
  7515  0BEB  00BD               	movwf	___fldiv@a
  7516  0BEC                     l3771:
  7517  0BEC  17BF               	bsf	___fldiv@a+2,7
  7518  0BED                     l3773:
  7519  0BED  01C0               	clrf	___fldiv@a+3
  7520  0BEE  2BF7               	goto	l800
  7521  0BEF                     l3775:
  7522  0BEF  3000               	movlw	0
  7523  0BF0  00C0               	movwf	___fldiv@a+3
  7524  0BF1  3000               	movlw	0
  7525  0BF2  00BF               	movwf	___fldiv@a+2
  7526  0BF3  3000               	movlw	0
  7527  0BF4  00BE               	movwf	___fldiv@a+1
  7528  0BF5  3000               	movlw	0
  7529  0BF6  00BD               	movwf	___fldiv@a
  7530  0BF7                     l800:
  7531  0BF7  0840               	movf	___fldiv@a+3,w
  7532  0BF8  043F               	iorwf	___fldiv@a+2,w
  7533  0BF9  043E               	iorwf	___fldiv@a+1,w
  7534  0BFA  043D               	iorwf	___fldiv@a,w
  7535  0BFB  1D03               	skipz
  7536  0BFC  2BFE               	goto	u4951
  7537  0BFD  2BFF               	goto	u4950
  7538  0BFE                     u4951:
  7539  0BFE  2C18               	goto	l3785
  7540  0BFF                     u4950:
  7541  0BFF                     l3777:
  7542  0BFF  3000               	movlw	0
  7543  0C00  00C4               	movwf	___fldiv@b+3
  7544  0C01  3000               	movlw	0
  7545  0C02  00C3               	movwf	___fldiv@b+2
  7546  0C03  3000               	movlw	0
  7547  0C04  00C2               	movwf	___fldiv@b+1
  7548  0C05  3000               	movlw	0
  7549  0C06  00C1               	movwf	___fldiv@b
  7550  0C07  3080               	movlw	128
  7551  0C08  04C3               	iorwf	___fldiv@b+2,f
  7552  0C09  307F               	movlw	127
  7553  0C0A  04C4               	iorwf	___fldiv@b+3,f
  7554  0C0B                     l3779:
  7555  0C0B  084E               	movf	___fldiv@sign,w
  7556  0C0C  00C5               	movwf	??___fldiv
  7557  0C0D  0845               	movf	??___fldiv,w
  7558  0C0E  04C4               	iorwf	___fldiv@b+3,f
  7559  0C0F                     l3781:
  7560  0C0F  0844               	movf	___fldiv@b+3,w
  7561  0C10  00C0               	movwf	?___fldiv+3
  7562  0C11  0843               	movf	___fldiv@b+2,w
  7563  0C12  00BF               	movwf	?___fldiv+2
  7564  0C13  0842               	movf	___fldiv@b+1,w
  7565  0C14  00BE               	movwf	?___fldiv+1
  7566  0C15  0841               	movf	___fldiv@b,w
  7567  0C16  00BD               	movwf	?___fldiv
  7568  0C17  2D77               	goto	l802
  7569  0C18                     l3785:
  7570  0C18  0855               	movf	___fldiv@bexp,w
  7571  0C19  1D03               	btfss	3,2
  7572  0C1A  2C1C               	goto	u4961
  7573  0C1B  2C1D               	goto	u4960
  7574  0C1C                     u4961:
  7575  0C1C  2C26               	goto	l3791
  7576  0C1D                     u4960:
  7577  0C1D                     l3787:
  7578  0C1D  3000               	movlw	0
  7579  0C1E  00C0               	movwf	?___fldiv+3
  7580  0C1F  3000               	movlw	0
  7581  0C20  00BF               	movwf	?___fldiv+2
  7582  0C21  3000               	movlw	0
  7583  0C22  00BE               	movwf	?___fldiv+1
  7584  0C23  3000               	movlw	0
  7585  0C24  00BD               	movwf	?___fldiv
  7586  0C25  2D77               	goto	l802
  7587  0C26                     l3791:
  7588  0C26  0855               	movf	___fldiv@bexp,w
  7589  0C27  00C5               	movwf	??___fldiv
  7590  0C28  01C6               	clrf	??___fldiv+1
  7591  0C29  0846               	movf	??___fldiv+1,w
  7592  0C2A  00C8               	movwf	??___fldiv+3
  7593  0C2B  0856               	movf	___fldiv@aexp,w
  7594  0C2C  0245               	subwf	??___fldiv,w
  7595  0C2D  00C7               	movwf	??___fldiv+2
  7596  0C2E  1C03               	skipc
  7597  0C2F  03C8               	decf	??___fldiv+3,f
  7598  0C30  0847               	movf	??___fldiv+2,w
  7599  0C31  3E7F               	addlw	127
  7600  0C32  00CF               	movwf	___fldiv@new_exp
  7601  0C33  0848               	movf	??___fldiv+3,w
  7602  0C34  1803               	skipnc
  7603  0C35  3E01               	addlw	1
  7604  0C36  3E00               	addlw	0
  7605  0C37  00D0               	movwf	___fldiv@new_exp+1
  7606  0C38                     l3793:
  7607  0C38  0844               	movf	___fldiv@b+3,w
  7608  0C39  00CD               	movwf	___fldiv@rem+3
  7609  0C3A  0843               	movf	___fldiv@b+2,w
  7610  0C3B  00CC               	movwf	___fldiv@rem+2
  7611  0C3C  0842               	movf	___fldiv@b+1,w
  7612  0C3D  00CB               	movwf	___fldiv@rem+1
  7613  0C3E  0841               	movf	___fldiv@b,w
  7614  0C3F  00CA               	movwf	___fldiv@rem
  7615  0C40                     l3795:
  7616  0C40  3000               	movlw	0
  7617  0C41  00C4               	movwf	___fldiv@b+3
  7618  0C42  3000               	movlw	0
  7619  0C43  00C3               	movwf	___fldiv@b+2
  7620  0C44  3000               	movlw	0
  7621  0C45  00C2               	movwf	___fldiv@b+1
  7622  0C46  3000               	movlw	0
  7623  0C47  00C1               	movwf	___fldiv@b
  7624  0C48                     l3797:
  7625  0C48  3000               	movlw	0
  7626  0C49  00D4               	movwf	___fldiv@grs+3
  7627  0C4A  3000               	movlw	0
  7628  0C4B  00D3               	movwf	___fldiv@grs+2
  7629  0C4C  3000               	movlw	0
  7630  0C4D  00D2               	movwf	___fldiv@grs+1
  7631  0C4E  3000               	movlw	0
  7632  0C4F  00D1               	movwf	___fldiv@grs
  7633  0C50                     l3799:
  7634  0C50  01D6               	clrf	___fldiv@aexp
  7635  0C51  2C9C               	goto	l3819
  7636  0C52                     l3801:
  7637  0C52  0856               	movf	___fldiv@aexp,w
  7638  0C53  1903               	btfsc	3,2
  7639  0C54  2C56               	goto	u4971
  7640  0C55  2C57               	goto	u4970
  7641  0C56                     u4971:
  7642  0C56  2C77               	goto	l3811
  7643  0C57                     u4970:
  7644  0C57                     l3803:
  7645  0C57  3001               	movlw	1
  7646  0C58  00C5               	movwf	??___fldiv
  7647  0C59                     u4985:
  7648  0C59  1003               	clrc
  7649  0C5A  0DCA               	rlf	___fldiv@rem,f
  7650  0C5B  0DCB               	rlf	___fldiv@rem+1,f
  7651  0C5C  0DCC               	rlf	___fldiv@rem+2,f
  7652  0C5D  0DCD               	rlf	___fldiv@rem+3,f
  7653  0C5E  0BC5               	decfsz	??___fldiv,f
  7654  0C5F  2C59               	goto	u4985
  7655  0C60  3001               	movlw	1
  7656  0C61  00C5               	movwf	??___fldiv
  7657  0C62                     u4995:
  7658  0C62  1003               	clrc
  7659  0C63  0DC1               	rlf	___fldiv@b,f
  7660  0C64  0DC2               	rlf	___fldiv@b+1,f
  7661  0C65  0DC3               	rlf	___fldiv@b+2,f
  7662  0C66  0DC4               	rlf	___fldiv@b+3,f
  7663  0C67  0BC5               	decfsz	??___fldiv,f
  7664  0C68  2C62               	goto	u4995
  7665  0C69                     l3805:
  7666  0C69  1FD4               	btfss	___fldiv@grs+3,7
  7667  0C6A  2C6C               	goto	u5001
  7668  0C6B  2C6D               	goto	u5000
  7669  0C6C                     u5001:
  7670  0C6C  2C6E               	goto	l3809
  7671  0C6D                     u5000:
  7672  0C6D                     l3807:
  7673  0C6D  1441               	bsf	___fldiv@b,0
  7674  0C6E                     l3809:
  7675  0C6E  3001               	movlw	1
  7676  0C6F  00C5               	movwf	??___fldiv
  7677  0C70                     u5015:
  7678  0C70  1003               	clrc
  7679  0C71  0DD1               	rlf	___fldiv@grs,f
  7680  0C72  0DD2               	rlf	___fldiv@grs+1,f
  7681  0C73  0DD3               	rlf	___fldiv@grs+2,f
  7682  0C74  0DD4               	rlf	___fldiv@grs+3,f
  7683  0C75  0BC5               	decfsz	??___fldiv,f
  7684  0C76  2C70               	goto	u5015
  7685  0C77                     l3811:
  7686  0C77  0840               	movf	___fldiv@a+3,w
  7687  0C78  024D               	subwf	___fldiv@rem+3,w
  7688  0C79  1D03               	skipz
  7689  0C7A  2C85               	goto	u5025
  7690  0C7B  083F               	movf	___fldiv@a+2,w
  7691  0C7C  024C               	subwf	___fldiv@rem+2,w
  7692  0C7D  1D03               	skipz
  7693  0C7E  2C85               	goto	u5025
  7694  0C7F  083E               	movf	___fldiv@a+1,w
  7695  0C80  024B               	subwf	___fldiv@rem+1,w
  7696  0C81  1D03               	skipz
  7697  0C82  2C85               	goto	u5025
  7698  0C83  083D               	movf	___fldiv@a,w
  7699  0C84  024A               	subwf	___fldiv@rem,w
  7700  0C85                     u5025:
  7701  0C85  1C03               	skipc
  7702  0C86  2C88               	goto	u5021
  7703  0C87  2C89               	goto	u5020
  7704  0C88                     u5021:
  7705  0C88  2C98               	goto	l3817
  7706  0C89                     u5020:
  7707  0C89                     l3813:
  7708  0C89  1754               	bsf	___fldiv@grs+3,6
  7709  0C8A                     l3815:
  7710  0C8A  083D               	movf	___fldiv@a,w
  7711  0C8B  02CA               	subwf	___fldiv@rem,f
  7712  0C8C  083E               	movf	___fldiv@a+1,w
  7713  0C8D  1C03               	skipc
  7714  0C8E  0F3E               	incfsz	___fldiv@a+1,w
  7715  0C8F  02CB               	subwf	___fldiv@rem+1,f
  7716  0C90  083F               	movf	___fldiv@a+2,w
  7717  0C91  1C03               	skipc
  7718  0C92  0F3F               	incfsz	___fldiv@a+2,w
  7719  0C93  02CC               	subwf	___fldiv@rem+2,f
  7720  0C94  0840               	movf	___fldiv@a+3,w
  7721  0C95  1C03               	skipc
  7722  0C96  0F40               	incfsz	___fldiv@a+3,w
  7723  0C97  02CD               	subwf	___fldiv@rem+3,f
  7724  0C98                     l3817:
  7725  0C98  3001               	movlw	1
  7726  0C99  00C5               	movwf	??___fldiv
  7727  0C9A  0845               	movf	??___fldiv,w
  7728  0C9B  07D6               	addwf	___fldiv@aexp,f
  7729  0C9C                     l3819:
  7730  0C9C  301A               	movlw	26
  7731  0C9D  0256               	subwf	___fldiv@aexp,w
  7732  0C9E  1C03               	skipc
  7733  0C9F  2CA1               	goto	u5031
  7734  0CA0  2CA2               	goto	u5030
  7735  0CA1                     u5031:
  7736  0CA1  2C52               	goto	l3801
  7737  0CA2                     u5030:
  7738  0CA2                     l3821:
  7739  0CA2  084D               	movf	___fldiv@rem+3,w
  7740  0CA3  044C               	iorwf	___fldiv@rem+2,w
  7741  0CA4  044B               	iorwf	___fldiv@rem+1,w
  7742  0CA5  044A               	iorwf	___fldiv@rem,w
  7743  0CA6  1903               	skipnz
  7744  0CA7  2CA9               	goto	u5041
  7745  0CA8  2CAA               	goto	u5040
  7746  0CA9                     u5041:
  7747  0CA9  2CC9               	goto	l3835
  7748  0CAA                     u5040:
  7749  0CAA                     l3823:
  7750  0CAA  1451               	bsf	___fldiv@grs,0
  7751  0CAB  2CC9               	goto	l3835
  7752  0CAC                     l3825:
  7753  0CAC  3001               	movlw	1
  7754  0CAD  00C5               	movwf	??___fldiv
  7755  0CAE                     u5055:
  7756  0CAE  1003               	clrc
  7757  0CAF  0DC1               	rlf	___fldiv@b,f
  7758  0CB0  0DC2               	rlf	___fldiv@b+1,f
  7759  0CB1  0DC3               	rlf	___fldiv@b+2,f
  7760  0CB2  0DC4               	rlf	___fldiv@b+3,f
  7761  0CB3  0BC5               	decfsz	??___fldiv,f
  7762  0CB4  2CAE               	goto	u5055
  7763  0CB5                     l3827:
  7764  0CB5  1FD4               	btfss	___fldiv@grs+3,7
  7765  0CB6  2CB8               	goto	u5061
  7766  0CB7  2CB9               	goto	u5060
  7767  0CB8                     u5061:
  7768  0CB8  2CBA               	goto	l3831
  7769  0CB9                     u5060:
  7770  0CB9                     l3829:
  7771  0CB9  1441               	bsf	___fldiv@b,0
  7772  0CBA                     l3831:
  7773  0CBA  3001               	movlw	1
  7774  0CBB  00C5               	movwf	??___fldiv
  7775  0CBC                     u5075:
  7776  0CBC  1003               	clrc
  7777  0CBD  0DD1               	rlf	___fldiv@grs,f
  7778  0CBE  0DD2               	rlf	___fldiv@grs+1,f
  7779  0CBF  0DD3               	rlf	___fldiv@grs+2,f
  7780  0CC0  0DD4               	rlf	___fldiv@grs+3,f
  7781  0CC1  0BC5               	decfsz	??___fldiv,f
  7782  0CC2  2CBC               	goto	u5075
  7783  0CC3                     l3833:
  7784  0CC3  30FF               	movlw	255
  7785  0CC4  07CF               	addwf	___fldiv@new_exp,f
  7786  0CC5  1803               	skipnc
  7787  0CC6  0AD0               	incf	___fldiv@new_exp+1,f
  7788  0CC7  30FF               	movlw	255
  7789  0CC8  07D0               	addwf	___fldiv@new_exp+1,f
  7790  0CC9                     l3835:
  7791  0CC9  1FC3               	btfss	___fldiv@b+2,7
  7792  0CCA  2CCC               	goto	u5081
  7793  0CCB  2CCD               	goto	u5080
  7794  0CCC                     u5081:
  7795  0CCC  2CAC               	goto	l3825
  7796  0CCD                     u5080:
  7797  0CCD                     l3837:
  7798  0CCD  01D6               	clrf	___fldiv@aexp
  7799  0CCE                     l3839:
  7800  0CCE  1FD4               	btfss	___fldiv@grs+3,7
  7801  0CCF  2CD1               	goto	u5091
  7802  0CD0  2CD2               	goto	u5090
  7803  0CD1                     u5091:
  7804  0CD1  2CEE               	goto	l3847
  7805  0CD2                     u5090:
  7806  0CD2                     l3841:
  7807  0CD2  30FF               	movlw	255
  7808  0CD3  0551               	andwf	___fldiv@grs,w
  7809  0CD4  00C5               	movwf	??___fldiv
  7810  0CD5  30FF               	movlw	255
  7811  0CD6  0552               	andwf	___fldiv@grs+1,w
  7812  0CD7  00C6               	movwf	??___fldiv+1
  7813  0CD8  30FF               	movlw	255
  7814  0CD9  0553               	andwf	___fldiv@grs+2,w
  7815  0CDA  00C7               	movwf	??___fldiv+2
  7816  0CDB  307F               	movlw	127
  7817  0CDC  0554               	andwf	___fldiv@grs+3,w
  7818  0CDD  00C8               	movwf	??___fldiv+3
  7819  0CDE  0848               	movf	??___fldiv+3,w
  7820  0CDF  0447               	iorwf	??___fldiv+2,w
  7821  0CE0  0446               	iorwf	??___fldiv+1,w
  7822  0CE1  0445               	iorwf	??___fldiv,w
  7823  0CE2  1903               	skipnz
  7824  0CE3  2CE5               	goto	u5101
  7825  0CE4  2CE6               	goto	u5100
  7826  0CE5                     u5101:
  7827  0CE5  2CE9               	goto	l816
  7828  0CE6                     u5100:
  7829  0CE6                     l3843:
  7830  0CE6  01D6               	clrf	___fldiv@aexp
  7831  0CE7  0AD6               	incf	___fldiv@aexp,f
  7832  0CE8  2CEE               	goto	l3847
  7833  0CE9                     l816:
  7834  0CE9  1C41               	btfss	___fldiv@b,0
  7835  0CEA  2CEC               	goto	u5111
  7836  0CEB  2CED               	goto	u5110
  7837  0CEC                     u5111:
  7838  0CEC  2CEE               	goto	l3847
  7839  0CED                     u5110:
  7840  0CED  2CE6               	goto	l3843
  7841  0CEE                     l3847:
  7842  0CEE  0856               	movf	___fldiv@aexp,w
  7843  0CEF  1903               	btfsc	3,2
  7844  0CF0  2CF2               	goto	u5121
  7845  0CF1  2CF3               	goto	u5120
  7846  0CF2                     u5121:
  7847  0CF2  2D24               	goto	l3857
  7848  0CF3                     u5120:
  7849  0CF3                     l3849:
  7850  0CF3  3001               	movlw	1
  7851  0CF4  07C1               	addwf	___fldiv@b,f
  7852  0CF5  3000               	movlw	0
  7853  0CF6  1803               	skipnc
  7854  0CF7  3001               	movlw	1
  7855  0CF8  07C2               	addwf	___fldiv@b+1,f
  7856  0CF9  3000               	movlw	0
  7857  0CFA  1803               	skipnc
  7858  0CFB  3001               	movlw	1
  7859  0CFC  07C3               	addwf	___fldiv@b+2,f
  7860  0CFD  3000               	movlw	0
  7861  0CFE  1803               	skipnc
  7862  0CFF  3001               	movlw	1
  7863  0D00  07C4               	addwf	___fldiv@b+3,f
  7864  0D01                     l3851:
  7865  0D01  1C44               	btfss	___fldiv@b+3,0
  7866  0D02  2D04               	goto	u5131
  7867  0D03  2D05               	goto	u5130
  7868  0D04                     u5131:
  7869  0D04  2D24               	goto	l3857
  7870  0D05                     u5130:
  7871  0D05                     l3853:
  7872  0D05  0841               	movf	___fldiv@b,w
  7873  0D06  00C5               	movwf	??___fldiv
  7874  0D07  0842               	movf	___fldiv@b+1,w
  7875  0D08  00C6               	movwf	??___fldiv+1
  7876  0D09  0843               	movf	___fldiv@b+2,w
  7877  0D0A  00C7               	movwf	??___fldiv+2
  7878  0D0B  0844               	movf	___fldiv@b+3,w
  7879  0D0C  00C8               	movwf	??___fldiv+3
  7880  0D0D  3001               	movlw	1
  7881  0D0E  00C9               	movwf	??___fldiv+4
  7882  0D0F                     u5145:
  7883  0D0F  0D48               	rlf	??___fldiv+3,w
  7884  0D10  0CC8               	rrf	??___fldiv+3,f
  7885  0D11  0CC7               	rrf	??___fldiv+2,f
  7886  0D12  0CC6               	rrf	??___fldiv+1,f
  7887  0D13  0CC5               	rrf	??___fldiv,f
  7888  0D14                     u5140:
  7889  0D14  0BC9               	decfsz	??___fldiv+4,f
  7890  0D15  2D0F               	goto	u5145
  7891  0D16  0848               	movf	??___fldiv+3,w
  7892  0D17  00C4               	movwf	___fldiv@b+3
  7893  0D18  0847               	movf	??___fldiv+2,w
  7894  0D19  00C3               	movwf	___fldiv@b+2
  7895  0D1A  0846               	movf	??___fldiv+1,w
  7896  0D1B  00C2               	movwf	___fldiv@b+1
  7897  0D1C  0845               	movf	??___fldiv,w
  7898  0D1D  00C1               	movwf	___fldiv@b
  7899  0D1E                     l3855:
  7900  0D1E  3001               	movlw	1
  7901  0D1F  07CF               	addwf	___fldiv@new_exp,f
  7902  0D20  1803               	skipnc
  7903  0D21  0AD0               	incf	___fldiv@new_exp+1,f
  7904  0D22  3000               	movlw	0
  7905  0D23  07D0               	addwf	___fldiv@new_exp+1,f
  7906  0D24                     l3857:
  7907  0D24  0850               	movf	___fldiv@new_exp+1,w
  7908  0D25  3A80               	xorlw	128
  7909  0D26  00FF               	movwf	btemp+1
  7910  0D27  3080               	movlw	128
  7911  0D28  027F               	subwf	btemp+1,w
  7912  0D29  1D03               	skipz
  7913  0D2A  2D2D               	goto	u5155
  7914  0D2B  30FF               	movlw	255
  7915  0D2C  024F               	subwf	___fldiv@new_exp,w
  7916  0D2D                     u5155:
  7917  0D2D  1C03               	skipc
  7918  0D2E  2D30               	goto	u5151
  7919  0D2F  2D31               	goto	u5150
  7920  0D30                     u5151:
  7921  0D30  2D3F               	goto	l3861
  7922  0D31                     u5150:
  7923  0D31                     l3859:
  7924  0D31  30FF               	movlw	255
  7925  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  7926  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  7927  0D34  00CF               	movwf	___fldiv@new_exp
  7928  0D35  3000               	movlw	0
  7929  0D36  00D0               	movwf	___fldiv@new_exp+1
  7930  0D37  3000               	movlw	0
  7931  0D38  00C4               	movwf	___fldiv@b+3
  7932  0D39  3000               	movlw	0
  7933  0D3A  00C3               	movwf	___fldiv@b+2
  7934  0D3B  3000               	movlw	0
  7935  0D3C  00C2               	movwf	___fldiv@b+1
  7936  0D3D  3000               	movlw	0
  7937  0D3E  00C1               	movwf	___fldiv@b
  7938  0D3F                     l3861:
  7939  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  7940  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  7941  0D41  0850               	movf	___fldiv@new_exp+1,w
  7942  0D42  3A80               	xorlw	128
  7943  0D43  00FF               	movwf	btemp+1
  7944  0D44  3080               	movlw	128
  7945  0D45  027F               	subwf	btemp+1,w
  7946  0D46  1D03               	skipz
  7947  0D47  2D4A               	goto	u5165
  7948  0D48  3001               	movlw	1
  7949  0D49  024F               	subwf	___fldiv@new_exp,w
  7950  0D4A                     u5165:
  7951  0D4A  1803               	skipnc
  7952  0D4B  2D4D               	goto	u5161
  7953  0D4C  2D4E               	goto	u5160
  7954  0D4D                     u5161:
  7955  0D4D  2D5B               	goto	l822
  7956  0D4E                     u5160:
  7957  0D4E                     l3863:
  7958  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  7959  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  7960  0D50  01CF               	clrf	___fldiv@new_exp
  7961  0D51  01D0               	clrf	___fldiv@new_exp+1
  7962  0D52                     l3865:
  7963  0D52  3000               	movlw	0
  7964  0D53  00C4               	movwf	___fldiv@b+3
  7965  0D54  3000               	movlw	0
  7966  0D55  00C3               	movwf	___fldiv@b+2
  7967  0D56  3000               	movlw	0
  7968  0D57  00C2               	movwf	___fldiv@b+1
  7969  0D58  3000               	movlw	0
  7970  0D59  00C1               	movwf	___fldiv@b
  7971  0D5A                     l3867:
  7972  0D5A  01CE               	clrf	___fldiv@sign
  7973  0D5B                     l822:
  7974  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  7975  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  7976  0D5D  084F               	movf	___fldiv@new_exp,w
  7977  0D5E  00C5               	movwf	??___fldiv
  7978  0D5F  0845               	movf	??___fldiv,w
  7979  0D60  00D5               	movwf	___fldiv@bexp
  7980  0D61                     l3869:
  7981  0D61  1C55               	btfss	___fldiv@bexp,0
  7982  0D62  2D64               	goto	u5171
  7983  0D63  2D65               	goto	u5170
  7984  0D64                     u5171:
  7985  0D64  2D67               	goto	l3873
  7986  0D65                     u5170:
  7987  0D65                     l3871:
  7988  0D65  17C3               	bsf	___fldiv@b+2,7
  7989  0D66  2D6B               	goto	l824
  7990  0D67                     l3873:
  7991  0D67  307F               	movlw	127
  7992  0D68  00C5               	movwf	??___fldiv
  7993  0D69  0845               	movf	??___fldiv,w
  7994  0D6A  05C3               	andwf	___fldiv@b+2,f
  7995  0D6B                     l824:
  7996  0D6B  0855               	movf	___fldiv@bexp,w
  7997  0D6C  00C5               	movwf	??___fldiv
  7998  0D6D  1003               	clrc
  7999  0D6E  0C45               	rrf	??___fldiv,w
  8000  0D6F  00C6               	movwf	??___fldiv+1
  8001  0D70  0846               	movf	??___fldiv+1,w
  8002  0D71  00C4               	movwf	___fldiv@b+3
  8003  0D72  084E               	movf	___fldiv@sign,w
  8004  0D73  00C5               	movwf	??___fldiv
  8005  0D74  0845               	movf	??___fldiv,w
  8006  0D75  04C4               	iorwf	___fldiv@b+3,f
  8007  0D76  2C0F               	goto	l3781
  8008  0D77                     l802:
  8009  0D77  0008               	return
  8010  0D78                     __end_of___fldiv:
  8011                           
  8012                           	psect	text25
  8013  152A                     __ptext25:	
  8014 ;; *************** function ___awdiv *****************
  8015 ;; Defined at:
  8016 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  divisor         2    0[BANK0 ] int 
  8019 ;;  dividend        2    2[BANK0 ] int 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  quotient        2    6[BANK0 ] int 
  8022 ;;  sign            1    5[BANK0 ] unsigned char 
  8023 ;;  counter         1    4[BANK0 ] unsigned char 
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2    0[BANK0 ] int 
  8026 ;; Registers used:
  8027 ;;		wreg, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8033 ;;      Params:         0       4       0       0       0
  8034 ;;      Locals:         0       4       0       0       0
  8035 ;;      Temps:          1       0       0       0       0
  8036 ;;      Totals:         1       8       0       0       0
  8037 ;;Total ram usage:        9 bytes
  8038 ;; Hardware stack levels used: 1
  8039 ;; Hardware stack levels required when called: 1
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_ADC_convert
  8044 ;;		_division
  8045 ;; This function uses a non-reentrant model
  8046 ;;
  8047                           
  8048                           
  8049                           ;psect for function ___awdiv
  8050  152A                     ___awdiv:
  8051  152A                     l3593:	
  8052                           ;incstack = 0
  8053                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8054                           
  8055  152A  1283               	bcf	3,5	;RP0=0, select bank0
  8056  152B  1303               	bcf	3,6	;RP1=0, select bank0
  8057  152C  01A5               	clrf	___awdiv@sign
  8058  152D                     l3595:
  8059  152D  1FA1               	btfss	___awdiv@divisor+1,7
  8060  152E  2D30               	goto	u4531
  8061  152F  2D31               	goto	u4530
  8062  1530                     u4531:
  8063  1530  2D38               	goto	l3601
  8064  1531                     u4530:
  8065  1531                     l3597:
  8066  1531  09A0               	comf	___awdiv@divisor,f
  8067  1532  09A1               	comf	___awdiv@divisor+1,f
  8068  1533  0AA0               	incf	___awdiv@divisor,f
  8069  1534  1903               	skipnz
  8070  1535  0AA1               	incf	___awdiv@divisor+1,f
  8071  1536                     l3599:
  8072  1536  01A5               	clrf	___awdiv@sign
  8073  1537  0AA5               	incf	___awdiv@sign,f
  8074  1538                     l3601:
  8075  1538  1FA3               	btfss	___awdiv@dividend+1,7
  8076  1539  2D3B               	goto	u4541
  8077  153A  2D3C               	goto	u4540
  8078  153B                     u4541:
  8079  153B  2D45               	goto	l3607
  8080  153C                     u4540:
  8081  153C                     l3603:
  8082  153C  09A2               	comf	___awdiv@dividend,f
  8083  153D  09A3               	comf	___awdiv@dividend+1,f
  8084  153E  0AA2               	incf	___awdiv@dividend,f
  8085  153F  1903               	skipnz
  8086  1540  0AA3               	incf	___awdiv@dividend+1,f
  8087  1541                     l3605:
  8088  1541  3001               	movlw	1
  8089  1542  00F4               	movwf	??___awdiv
  8090  1543  0874               	movf	??___awdiv,w
  8091  1544  06A5               	xorwf	___awdiv@sign,f
  8092  1545                     l3607:
  8093  1545  01A6               	clrf	___awdiv@quotient
  8094  1546  01A7               	clrf	___awdiv@quotient+1
  8095  1547                     l3609:
  8096  1547  0820               	movf	___awdiv@divisor,w
  8097  1548  0421               	iorwf	___awdiv@divisor+1,w
  8098  1549  1903               	btfsc	3,2
  8099  154A  2D4C               	goto	u4551
  8100  154B  2D4D               	goto	u4550
  8101  154C                     u4551:
  8102  154C  2D84               	goto	l3629
  8103  154D                     u4550:
  8104  154D                     l3611:
  8105  154D  01A4               	clrf	___awdiv@counter
  8106  154E  0AA4               	incf	___awdiv@counter,f
  8107  154F  2D5B               	goto	l3617
  8108  1550                     l3613:
  8109  1550  3001               	movlw	1
  8110  1551                     u4565:
  8111  1551  1003               	clrc
  8112  1552  0DA0               	rlf	___awdiv@divisor,f
  8113  1553  0DA1               	rlf	___awdiv@divisor+1,f
  8114  1554  3EFF               	addlw	-1
  8115  1555  1D03               	skipz
  8116  1556  2D51               	goto	u4565
  8117  1557                     l3615:
  8118  1557  3001               	movlw	1
  8119  1558  00F4               	movwf	??___awdiv
  8120  1559  0874               	movf	??___awdiv,w
  8121  155A  07A4               	addwf	___awdiv@counter,f
  8122  155B                     l3617:
  8123  155B  1FA1               	btfss	___awdiv@divisor+1,7
  8124  155C  2D5E               	goto	u4571
  8125  155D  2D5F               	goto	u4570
  8126  155E                     u4571:
  8127  155E  2D50               	goto	l3613
  8128  155F                     u4570:
  8129  155F                     l3619:
  8130  155F  3001               	movlw	1
  8131  1560                     u4585:
  8132  1560  1003               	clrc
  8133  1561  0DA6               	rlf	___awdiv@quotient,f
  8134  1562  0DA7               	rlf	___awdiv@quotient+1,f
  8135  1563  3EFF               	addlw	-1
  8136  1564  1D03               	skipz
  8137  1565  2D60               	goto	u4585
  8138  1566  0821               	movf	___awdiv@divisor+1,w
  8139  1567  0223               	subwf	___awdiv@dividend+1,w
  8140  1568  1D03               	skipz
  8141  1569  2D6C               	goto	u4595
  8142  156A  0820               	movf	___awdiv@divisor,w
  8143  156B  0222               	subwf	___awdiv@dividend,w
  8144  156C                     u4595:
  8145  156C  1C03               	skipc
  8146  156D  2D6F               	goto	u4591
  8147  156E  2D70               	goto	u4590
  8148  156F                     u4591:
  8149  156F  2D77               	goto	l3625
  8150  1570                     u4590:
  8151  1570                     l3621:
  8152  1570  0820               	movf	___awdiv@divisor,w
  8153  1571  02A2               	subwf	___awdiv@dividend,f
  8154  1572  0821               	movf	___awdiv@divisor+1,w
  8155  1573  1C03               	skipc
  8156  1574  03A3               	decf	___awdiv@dividend+1,f
  8157  1575  02A3               	subwf	___awdiv@dividend+1,f
  8158  1576                     l3623:
  8159  1576  1426               	bsf	___awdiv@quotient,0
  8160  1577                     l3625:
  8161  1577  3001               	movlw	1
  8162  1578                     u4605:
  8163  1578  1003               	clrc
  8164  1579  0CA1               	rrf	___awdiv@divisor+1,f
  8165  157A  0CA0               	rrf	___awdiv@divisor,f
  8166  157B  3EFF               	addlw	-1
  8167  157C  1D03               	skipz
  8168  157D  2D78               	goto	u4605
  8169  157E                     l3627:
  8170  157E  3001               	movlw	1
  8171  157F  02A4               	subwf	___awdiv@counter,f
  8172  1580  1D03               	btfss	3,2
  8173  1581  2D83               	goto	u4611
  8174  1582  2D84               	goto	u4610
  8175  1583                     u4611:
  8176  1583  2D5F               	goto	l3619
  8177  1584                     u4610:
  8178  1584                     l3629:
  8179  1584  0825               	movf	___awdiv@sign,w
  8180  1585  1903               	btfsc	3,2
  8181  1586  2D88               	goto	u4621
  8182  1587  2D89               	goto	u4620
  8183  1588                     u4621:
  8184  1588  2D8E               	goto	l3633
  8185  1589                     u4620:
  8186  1589                     l3631:
  8187  1589  09A6               	comf	___awdiv@quotient,f
  8188  158A  09A7               	comf	___awdiv@quotient+1,f
  8189  158B  0AA6               	incf	___awdiv@quotient,f
  8190  158C  1903               	skipnz
  8191  158D  0AA7               	incf	___awdiv@quotient+1,f
  8192  158E                     l3633:
  8193  158E  0827               	movf	___awdiv@quotient+1,w
  8194  158F  00A1               	movwf	?___awdiv+1
  8195  1590  0826               	movf	___awdiv@quotient,w
  8196  1591  00A0               	movwf	?___awdiv
  8197  1592                     l604:
  8198  1592  0008               	return
  8199  1593                     __end_of___awdiv:
  8200                           
  8201                           	psect	text26
  8202  166D                     __ptext26:	
  8203 ;; *************** function _I2C_Comunication *****************
  8204 ;; Defined at:
  8205 ;;		line 234 in file "Master_PIC.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;		None
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;		None
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  1    wreg      void 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0, pclath, cstack
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8219 ;;      Params:         0       0       0       0       0
  8220 ;;      Locals:         0       0       0       0       0
  8221 ;;      Temps:          0       3       0       0       0
  8222 ;;      Totals:         0       3       0       0       0
  8223 ;;Total ram usage:        3 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; Hardware stack levels required when called: 3
  8226 ;; This function calls:
  8227 ;;		_I2C_Master_Start
  8228 ;;		_I2C_Master_Stop
  8229 ;;		_I2C_Master_Write
  8230 ;;		_I2C_Read_Byte
  8231 ;; This function is called by:
  8232 ;;		_main
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _I2C_Comunication
  8238  166D                     _I2C_Comunication:
  8239  166D                     l4321:	
  8240                           ;incstack = 0
  8241                           ; Regs used in _I2C_Comunication: [wreg+status,2+status,0+pclath+cstack]
  8242                           
  8243                           
  8244                           ;Master_PIC.c: 236:     LCD_Set_Cursor(1, 9);
  8245  166D  160A  118A  22BC  160A  118A  	fcall	_I2C_Master_Start
  8246                           
  8247                           ;Master_PIC.c: 237:     LCD_Write_String(converted01);
  8248  1672  3061               	movlw	97
  8249  1673  160A  118A  22E8  160A  118A  	fcall	_I2C_Master_Write
  8250                           
  8251                           ;Master_PIC.c: 238: 
  8252  1678  160A  118A  22F8  160A  118A  	fcall	_I2C_Read_Byte
  8253  167D  1283               	bcf	3,5	;RP0=0, select bank0
  8254  167E  1303               	bcf	3,6	;RP1=0, select bank0
  8255  167F  00A0               	movwf	??_I2C_Comunication
  8256  1680  0820               	movf	??_I2C_Comunication,w
  8257  1681  00EF               	movwf	_slave01
  8258                           
  8259                           ;Master_PIC.c: 239: 
  8260  1682  160A  118A  22C5  160A  118A  	fcall	_I2C_Master_Stop
  8261  1687                     l4323:
  8262                           
  8263                           ;Master_PIC.c: 240:     LCD_Set_Cursor(2, 9);
  8264  1687  3003               	movlw	3
  8265  1688  1283               	bcf	3,5	;RP0=0, select bank0
  8266  1689  1303               	bcf	3,6	;RP1=0, select bank0
  8267  168A  00A2               	movwf	??_I2C_Comunication+2
  8268  168B  3008               	movlw	8
  8269  168C  00A1               	movwf	??_I2C_Comunication+1
  8270  168D  3076               	movlw	118
  8271  168E  00A0               	movwf	??_I2C_Comunication
  8272  168F                     u6037:
  8273  168F  0BA0               	decfsz	??_I2C_Comunication,f
  8274  1690  2E8F               	goto	u6037
  8275  1691  0BA1               	decfsz	??_I2C_Comunication+1,f
  8276  1692  2E8F               	goto	u6037
  8277  1693  0BA2               	decfsz	??_I2C_Comunication+2,f
  8278  1694  2E8F               	goto	u6037
  8279  1695  0000               	nop
  8280  1696                     l4325:
  8281                           
  8282                           ;Master_PIC.c: 242: 
  8283  1696  160A  118A  22BC  160A  118A  	fcall	_I2C_Master_Start
  8284  169B                     l4327:
  8285                           
  8286                           ;Master_PIC.c: 243: 
  8287  169B  3071               	movlw	113
  8288  169C  160A  118A  22E8  160A  118A  	fcall	_I2C_Master_Write
  8289  16A1                     l4329:
  8290                           
  8291                           ;Master_PIC.c: 244:     LCD_Set_Cursor(3, 9);
  8292  16A1  160A  118A  22F8  160A  118A  	fcall	_I2C_Read_Byte
  8293  16A6  1283               	bcf	3,5	;RP0=0, select bank0
  8294  16A7  1303               	bcf	3,6	;RP1=0, select bank0
  8295  16A8  00A0               	movwf	??_I2C_Comunication
  8296  16A9  0820               	movf	??_I2C_Comunication,w
  8297  16AA  00F9               	movwf	_slave02
  8298  16AB                     l4331:
  8299                           
  8300                           ;Master_PIC.c: 245:     LCD_Write_String(converted03);
  8301  16AB  160A  118A  22C5  160A  118A  	fcall	_I2C_Master_Stop
  8302  16B0                     l4333:
  8303                           
  8304                           ;Master_PIC.c: 246: 
  8305  16B0  3003               	movlw	3
  8306  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  8307  16B2  1303               	bcf	3,6	;RP1=0, select bank0
  8308  16B3  00A2               	movwf	??_I2C_Comunication+2
  8309  16B4  3008               	movlw	8
  8310  16B5  00A1               	movwf	??_I2C_Comunication+1
  8311  16B6  3076               	movlw	118
  8312  16B7  00A0               	movwf	??_I2C_Comunication
  8313  16B8                     u6047:
  8314  16B8  0BA0               	decfsz	??_I2C_Comunication,f
  8315  16B9  2EB8               	goto	u6047
  8316  16BA  0BA1               	decfsz	??_I2C_Comunication+1,f
  8317  16BB  2EB8               	goto	u6047
  8318  16BC  0BA2               	decfsz	??_I2C_Comunication+2,f
  8319  16BD  2EB8               	goto	u6047
  8320  16BE  0000               	nop
  8321                           
  8322                           ;Master_PIC.c: 248: 
  8323  16BF  160A  118A  22BC  160A  118A  	fcall	_I2C_Master_Start
  8324                           
  8325                           ;Master_PIC.c: 249: 
  8326  16C4  3081               	movlw	129
  8327  16C5  160A  118A  22E8  160A  118A  	fcall	_I2C_Master_Write
  8328                           
  8329                           ;Master_PIC.c: 250: 
  8330  16CA  160A  118A  22F8  160A  118A  	fcall	_I2C_Read_Byte
  8331  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  8332  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  8333  16D1  00A0               	movwf	??_I2C_Comunication
  8334  16D2  0820               	movf	??_I2C_Comunication,w
  8335  16D3  00F8               	movwf	_slave03
  8336                           
  8337                           ;Master_PIC.c: 251:     ADC_convert(converted01, slave01, 2);
  8338  16D4  160A  118A  22C5  160A  118A  	fcall	_I2C_Master_Stop
  8339  16D9                     l4335:
  8340                           
  8341                           ;Master_PIC.c: 252:     ADC_convert(converted02, slave02, 2);
  8342  16D9  3003               	movlw	3
  8343  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  8344  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  8345  16DC  00A2               	movwf	??_I2C_Comunication+2
  8346  16DD  3008               	movlw	8
  8347  16DE  00A1               	movwf	??_I2C_Comunication+1
  8348  16DF  3076               	movlw	118
  8349  16E0  00A0               	movwf	??_I2C_Comunication
  8350  16E1                     u6057:
  8351  16E1  0BA0               	decfsz	??_I2C_Comunication,f
  8352  16E2  2EE1               	goto	u6057
  8353  16E3  0BA1               	decfsz	??_I2C_Comunication+1,f
  8354  16E4  2EE1               	goto	u6057
  8355  16E5  0BA2               	decfsz	??_I2C_Comunication+2,f
  8356  16E6  2EE1               	goto	u6057
  8357  16E7  0000               	nop
  8358  16E8                     l182:
  8359  16E8  0008               	return
  8360  16E9                     __end_of_I2C_Comunication:
  8361                           
  8362                           	psect	text27
  8363  12F8                     __ptext27:	
  8364 ;; *************** function _I2C_Read_Byte *****************
  8365 ;; Defined at:
  8366 ;;		line 71 in file "I2C_Master.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;		None
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      unsigned char 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8380 ;;      Params:         0       0       0       0       0
  8381 ;;      Locals:         0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0
  8383 ;;      Totals:         0       0       0       0       0
  8384 ;;Total ram usage:        0 bytes
  8385 ;; Hardware stack levels used: 1
  8386 ;; Hardware stack levels required when called: 2
  8387 ;; This function calls:
  8388 ;;		_I2C_Master_Wait
  8389 ;; This function is called by:
  8390 ;;		_I2C_Comunication
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function _I2C_Read_Byte
  8396  12F8                     _I2C_Read_Byte:
  8397  12F8                     l4071:	
  8398                           ;incstack = 0
  8399                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  8400                           
  8401                           
  8402                           ;I2C_Master.c: 74:  I2C_Master_Wait();
  8403  12F8  160A  118A  22CE  160A  118A  	fcall	_I2C_Master_Wait
  8404  12FD                     l4073:
  8405                           
  8406                           ;I2C_Master.c: 75:     RCEN = 1;
  8407  12FD  1683               	bsf	3,5	;RP0=1, select bank1
  8408  12FE  1303               	bcf	3,6	;RP1=0, select bank1
  8409  12FF  1591               	bsf	17,3	;volatile
  8410  1300                     l309:	
  8411                           ;I2C_Master.c: 76:  while(!SSPIF);
  8412                           
  8413  1300  1283               	bcf	3,5	;RP0=0, select bank0
  8414  1301  1D8C               	btfss	12,3	;volatile
  8415  1302  2B04               	goto	u5691
  8416  1303  2B05               	goto	u5690
  8417  1304                     u5691:
  8418  1304  2B00               	goto	l309
  8419  1305                     u5690:
  8420  1305                     l311:
  8421                           
  8422                           ;I2C_Master.c: 77:  SSPIF = 0;
  8423  1305  118C               	bcf	12,3	;volatile
  8424  1306                     l4075:
  8425                           
  8426                           ;I2C_Master.c: 78:     I2C_Master_Wait();
  8427  1306  160A  118A  22CE  160A  118A  	fcall	_I2C_Master_Wait
  8428  130B                     l4077:
  8429                           
  8430                           ;I2C_Master.c: 79:     return SSPBUF;
  8431  130B  1283               	bcf	3,5	;RP0=0, select bank0
  8432  130C  1303               	bcf	3,6	;RP1=0, select bank0
  8433  130D  0813               	movf	19,w	;volatile
  8434  130E                     l312:
  8435  130E  0008               	return
  8436  130F                     __end_of_I2C_Read_Byte:
  8437                           
  8438                           	psect	text28
  8439  12E8                     __ptext28:	
  8440 ;; *************** function _I2C_Master_Write *****************
  8441 ;; Defined at:
  8442 ;;		line 62 in file "I2C_Master.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  data            1    wreg     unsigned char 
  8445 ;; Auto vars:     Size  Location     Type
  8446 ;;  data            1    4[COMMON] unsigned char 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  1    wreg      unsigned char 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0, pclath, cstack
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8456 ;;      Params:         0       0       0       0       0
  8457 ;;      Locals:         1       0       0       0       0
  8458 ;;      Temps:          0       0       0       0       0
  8459 ;;      Totals:         1       0       0       0       0
  8460 ;;Total ram usage:        1 bytes
  8461 ;; Hardware stack levels used: 1
  8462 ;; Hardware stack levels required when called: 2
  8463 ;; This function calls:
  8464 ;;		_I2C_Master_Wait
  8465 ;; This function is called by:
  8466 ;;		_I2C_Comunication
  8467 ;;		_IO_Expander_Write
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           
  8472                           ;psect for function _I2C_Master_Write
  8473  12E8                     _I2C_Master_Write:
  8474                           
  8475                           ;incstack = 0
  8476                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8477                           ;I2C_Master_Write@data stored from wreg
  8478  12E8  00F4               	movwf	I2C_Master_Write@data
  8479  12E9                     l3345:
  8480                           
  8481                           ;I2C_Master.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_Master.c: 63: 
      +                          {;I2C_Master.c: 64:     I2C_Master_Wait();
  8482  12E9  160A  118A  22CE  160A  118A  	fcall	_I2C_Master_Wait
  8483  12EE                     l3347:
  8484                           
  8485                           ;I2C_Master.c: 65:     SSPBUF = data;
  8486  12EE  0874               	movf	I2C_Master_Write@data,w
  8487  12EF  1283               	bcf	3,5	;RP0=0, select bank0
  8488  12F0  1303               	bcf	3,6	;RP1=0, select bank0
  8489  12F1  0093               	movwf	19	;volatile
  8490  12F2                     l303:	
  8491                           ;I2C_Master.c: 66:     while(!SSPIF);
  8492                           
  8493  12F2  1D8C               	btfss	12,3	;volatile
  8494  12F3  2AF5               	goto	u3971
  8495  12F4  2AF6               	goto	u3970
  8496  12F5                     u3971:
  8497  12F5  2AF2               	goto	l303
  8498  12F6                     u3970:
  8499  12F6                     l305:
  8500                           
  8501                           ;I2C_Master.c: 67:  SSPIF = 0;
  8502  12F6  118C               	bcf	12,3	;volatile
  8503  12F7                     l306:	
  8504                           ;I2C_Master.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8505                           
  8506  12F7  0008               	return
  8507  12F8                     __end_of_I2C_Master_Write:
  8508                           
  8509                           	psect	text29
  8510  12C5                     __ptext29:	
  8511 ;; *************** function _I2C_Master_Stop *****************
  8512 ;; Defined at:
  8513 ;;		line 42 in file "I2C_Master.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 2
  8534 ;; This function calls:
  8535 ;;		_I2C_Master_Wait
  8536 ;; This function is called by:
  8537 ;;		_I2C_Comunication
  8538 ;;		_IO_Expander_Write
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           
  8543                           ;psect for function _I2C_Master_Stop
  8544  12C5                     _I2C_Master_Stop:
  8545  12C5                     l3349:	
  8546                           ;incstack = 0
  8547                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8548                           
  8549                           
  8550                           ;I2C_Master.c: 44:     I2C_Master_Wait();
  8551  12C5  160A  118A  22CE  160A  118A  	fcall	_I2C_Master_Wait
  8552  12CA                     l3351:
  8553                           
  8554                           ;I2C_Master.c: 45:     PEN = 1;
  8555  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  8556  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  8557  12CC  1511               	bsf	17,2	;volatile
  8558  12CD                     l294:
  8559  12CD  0008               	return
  8560  12CE                     __end_of_I2C_Master_Stop:
  8561                           
  8562                           	psect	text30
  8563  12BC                     __ptext30:	
  8564 ;; *************** function _I2C_Master_Start *****************
  8565 ;; Defined at:
  8566 ;;		line 30 in file "I2C_Master.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;		None
  8569 ;; Auto vars:     Size  Location     Type
  8570 ;;		None
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      void 
  8573 ;; Registers used:
  8574 ;;		wreg, status,2, status,0, pclath, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8580 ;;      Params:         0       0       0       0       0
  8581 ;;      Locals:         0       0       0       0       0
  8582 ;;      Temps:          0       0       0       0       0
  8583 ;;      Totals:         0       0       0       0       0
  8584 ;;Total ram usage:        0 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; Hardware stack levels required when called: 2
  8587 ;; This function calls:
  8588 ;;		_I2C_Master_Wait
  8589 ;; This function is called by:
  8590 ;;		_I2C_Comunication
  8591 ;;		_IO_Expander_Write
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           
  8596                           ;psect for function _I2C_Master_Start
  8597  12BC                     _I2C_Master_Start:
  8598  12BC                     l3341:	
  8599                           ;incstack = 0
  8600                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8601                           
  8602                           
  8603                           ;I2C_Master.c: 32:     I2C_Master_Wait();
  8604  12BC  160A  118A  22CE  160A  118A  	fcall	_I2C_Master_Wait
  8605  12C1                     l3343:
  8606                           
  8607                           ;I2C_Master.c: 33:     SEN = 1;
  8608  12C1  1683               	bsf	3,5	;RP0=1, select bank1
  8609  12C2  1303               	bcf	3,6	;RP1=0, select bank1
  8610  12C3  1411               	bsf	17,0	;volatile
  8611  12C4                     l288:
  8612  12C4  0008               	return
  8613  12C5                     __end_of_I2C_Master_Start:
  8614                           
  8615                           	psect	text31
  8616  12CE                     __ptext31:	
  8617 ;; *************** function _I2C_Master_Wait *****************
  8618 ;; Defined at:
  8619 ;;		line 25 in file "I2C_Master.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8633 ;;      Params:         0       0       0       0       0
  8634 ;;      Locals:         0       0       0       0       0
  8635 ;;      Temps:          0       0       0       0       0
  8636 ;;      Totals:         0       0       0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 1
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_I2C_Master_Start
  8644 ;;		_I2C_Master_Stop
  8645 ;;		_I2C_Master_Write
  8646 ;;		_I2C_Read_Byte
  8647 ;;		_I2C_Master_RepeatedStart
  8648 ;;		_I2C_ACK
  8649 ;;		_I2C_NACK
  8650 ;;		_I2C_Master_Read
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function _I2C_Master_Wait
  8656  12CE                     _I2C_Master_Wait:
  8657  12CE                     l3337:	
  8658                           ;incstack = 0
  8659                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8660                           
  8661  12CE                     l282:	
  8662                           ;I2C_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8663                           
  8664  12CE  1683               	bsf	3,5	;RP0=1, select bank1
  8665  12CF  1303               	bcf	3,6	;RP1=0, select bank1
  8666  12D0  1914               	btfsc	20,2	;volatile
  8667  12D1  2AD3               	goto	u3951
  8668  12D2  2AD4               	goto	u3950
  8669  12D3                     u3951:
  8670  12D3  2ACE               	goto	l282
  8671  12D4                     u3950:
  8672  12D4                     l3339:
  8673  12D4  0811               	movf	17,w	;volatile
  8674  12D5  391F               	andlw	31
  8675  12D6  1D03               	btfss	3,2
  8676  12D7  2AD9               	goto	u3961
  8677  12D8  2ADA               	goto	u3960
  8678  12D9                     u3961:
  8679  12D9  2ACE               	goto	l282
  8680  12DA                     u3960:
  8681  12DA                     l285:
  8682  12DA  0008               	return
  8683  12DB                     __end_of_I2C_Master_Wait:
  8684                           
  8685                           	psect	text32
  8686  1455                     __ptext32:	
  8687 ;; *************** function _isr *****************
  8688 ;; Defined at:
  8689 ;;		line 75 in file "Master_PIC.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8703 ;;      Params:         0       0       0       0       0
  8704 ;;      Locals:         0       0       0       0       0
  8705 ;;      Temps:          4       0       0       0       0
  8706 ;;      Totals:         4       0       0       0       0
  8707 ;;Total ram usage:        4 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		Interrupt level 1
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           
  8717                           ;psect for function _isr
  8718  1455                     _isr:
  8719  1455                     i1l2081:
  8720                           
  8721                           ;Master_PIC.c: 78: 
  8722  1455  1283               	bcf	3,5	;RP0=0, select bank0
  8723  1456  1303               	bcf	3,6	;RP1=0, select bank0
  8724  1457  1F0C               	btfss	12,6	;volatile
  8725  1458  2C5A               	goto	u191_21
  8726  1459  2C5B               	goto	u191_20
  8727  145A                     u191_21:
  8728  145A  2C89               	goto	i1l153
  8729  145B                     u191_20:
  8730  145B                     i1l2083:
  8731                           
  8732                           ;Master_PIC.c: 79: 
  8733  145B  0C1F               	rrf	31,w	;volatile
  8734  145C  00F0               	movwf	??_isr
  8735  145D  0C70               	rrf	??_isr,w
  8736  145E  390F               	andlw	15
  8737  145F  3A00               	xorlw	0
  8738  1460  1D03               	skipz
  8739  1461  2C63               	goto	u192_21
  8740  1462  2C64               	goto	u192_20
  8741  1463                     u192_21:
  8742  1463  2C88               	goto	i1l2087
  8743  1464                     u192_20:
  8744  1464                     i1l2085:
  8745                           
  8746                           ;Master_PIC.c: 80: 
  8747  1464  081E               	movf	30,w	;volatile
  8748  1465  00F0               	movwf	??_isr
  8749  1466  1003               	clrc
  8750  1467  0C70               	rrf	??_isr,w
  8751  1468  3E7C               	addlw	124
  8752  1469  0095               	movwf	21	;volatile
  8753                           
  8754                           ;Master_PIC.c: 81: 
  8755  146A  081E               	movf	30,w	;volatile
  8756  146B  3901               	andlw	1
  8757  146C  00F0               	movwf	??_isr
  8758  146D  0EF0               	swapf	??_isr,f
  8759  146E  0DF0               	rlf	??_isr,f
  8760  146F  0817               	movf	23,w	;volatile
  8761  1470  0670               	xorwf	??_isr,w
  8762  1471  39DF               	andlw	-33
  8763  1472  0670               	xorwf	??_isr,w
  8764  1473  0097               	movwf	23	;volatile
  8765                           
  8766                           ;Master_PIC.c: 82: void setup(void){
  8767  1474  1683               	bsf	3,5	;RP0=1, select bank1
  8768  1475  1303               	bcf	3,6	;RP1=0, select bank1
  8769  1476  081E               	movf	30,w	;volatile
  8770  1477  00F0               	movwf	??_isr
  8771  1478  3007               	movlw	7
  8772  1479                     u193_25:
  8773  1479  1003               	clrc
  8774  147A  0CF0               	rrf	??_isr,f
  8775  147B  3EFF               	addlw	-1
  8776  147C  1D03               	skipz
  8777  147D  2C79               	goto	u193_25
  8778  147E  0870               	movf	??_isr,w
  8779  147F  00F1               	movwf	??_isr+1
  8780  1480  0EF1               	swapf	??_isr+1,f
  8781  1481  1283               	bcf	3,5	;RP0=0, select bank0
  8782  1482  1303               	bcf	3,6	;RP1=0, select bank0
  8783  1483  0817               	movf	23,w	;volatile
  8784  1484  0671               	xorwf	??_isr+1,w
  8785  1485  39EF               	andlw	-17
  8786  1486  0671               	xorwf	??_isr+1,w
  8787  1487  0097               	movwf	23	;volatile
  8788  1488                     i1l2087:
  8789                           
  8790                           ;Master_PIC.c: 87: 
  8791  1488  130C               	bcf	12,6	;volatile
  8792  1489                     i1l153:
  8793  1489  0873               	movf	??_isr+3,w
  8794  148A  008A               	movwf	10
  8795  148B  0E72               	swapf	??_isr+2,w
  8796  148C  0083               	movwf	3
  8797  148D  0EFE               	swapf	btemp,f
  8798  148E  0E7E               	swapf	btemp,w
  8799  148F  0009               	retfie
  8800  1490                     __end_of_isr:
  8801  007E                     btemp	set	126	;btemp
  8802  007E                     wtemp0	set	126
  8803                           
  8804                           	psect	intentry
  8805  0004                     __pintentry:	
  8806                           ;incstack = 0
  8807                           ; Regs used in _isr: [wreg+status,2+status,0]
  8808                           
  8809  0004                     interrupt_function:
  8810  007E                     saved_w	set	btemp
  8811  0004  00FE               	movwf	btemp
  8812  0005  0E03               	swapf	3,w
  8813  0006  00F2               	movwf	??_isr+2
  8814  0007  080A               	movf	10,w
  8815  0008  00F3               	movwf	??_isr+3
  8816  0009  160A  118A  2C55   	ljmp	_isr
  8817                           
  8818                           	psect	config
  8819                           
  8820                           ;Config register CONFIG1 @ 0x2007
  8821                           ;	Oscillator Selection bits
  8822                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8823                           ;	Watchdog Timer Enable bit
  8824                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8825                           ;	Power-up Timer Enable bit
  8826                           ;	PWRTE = OFF, PWRT disabled
  8827                           ;	RE3/MCLR pin function select bit
  8828                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8829                           ;	Code Protection bit
  8830                           ;	CP = OFF, Program memory code protection is disabled
  8831                           ;	Data Code Protection bit
  8832                           ;	CPD = OFF, Data memory code protection is disabled
  8833                           ;	Brown Out Reset Selection bits
  8834                           ;	BOREN = OFF, BOR disabled
  8835                           ;	Internal External Switchover bit
  8836                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8837                           ;	Fail-Safe Clock Monitor Enabled bit
  8838                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8839                           ;	Low Voltage Programming Enable bit
  8840                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8841                           ;	In-Circuit Debugger Mode bit
  8842                           ;	DEBUG = 0x1, unprogrammed default
  8843  2007                     	org	8199
  8844  2007  20D4               	dw	8404
  8845                           
  8846                           ;Config register CONFIG2 @ 0x2008
  8847                           ;	Brown-out Reset Selection bit
  8848                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8849                           ;	Flash Program Memory Self Write Enable bits
  8850                           ;	WRT = OFF, Write protection off
  8851  2008                     	org	8200
  8852  2008  3FFF               	dw	16383

Data Sizes:
    Strings     36
    Constant    0
    Data        1
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     76      80
    BANK1            80     19      73
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S1095__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S1095__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), STR_4(CODE[9]), 
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), 


Critical Paths under _main in COMMON

    _LCD_Init->_IO_Expander_Write
    _LCD_Send->___bmul
    _LCD_Send->_division
    _division->___awdiv
    _division->___awmod
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___fltol
    ___xxtofl->___fltol
    ___wmul->___fltol
    ___flsub->___fltol
    ___flmul->__Umul8_16
    ___flmul->___fltol
    _I2C_Comunication->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Send
    _LCD_Start->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Send->_ADC_convert
    _division->___awdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LCD_Send
    _LCD_Send->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   25056
                                             75 BANK0      1     1      0
                   _I2C_Comunication
                           _LCD_Send
                          _LCD_Start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            3     3      0    2565
                                             11 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     282
                                              4 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Send                                             8     8      0   22460
                                             71 BANK0      4     4      0
                                             15 BANK1      4     4      0
                        _ADC_convert
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                             ___bmul
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1840
                                              5 COMMON     1     1      0
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     949
                                              4 BANK0      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1    1334
                                              4 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     127
                                              0 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      62
                                              5 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _ADC_convert                                         23    17      6   16354
                                             63 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1286
                                             15 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1176
                                              9 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     967
                                              4 COMMON     2     2      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3727
                                             29 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3122
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             37 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             29 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Comunication                                     3     3      0      31
                                              0 BANK0      3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      31
                                              4 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Comunication
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _LCD_Send
     _ADC_convert
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___flsub (ARG)
           ___fladd
           ___fltol (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flsub
       ___fltol
       ___wmul
       ___xxtofl
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
     _LCD_Write_Char
       _LCD_Write_4Bit
     _LCD_Write_String
       _LCD_Write_Char
     ___bmul
     ___xxtofl
     _division
       ___awdiv
       ___awmod
   _LCD_Start
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String
   _setup
     _I2C_Master_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     13      49       7       91.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CB      12        0.0%
ABS                  0      0      CB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 05 01:28:57 2021

              ___fldiv@aexp 0056                ___fldiv@bexp 0055                           pc 0002  
              ___fldiv@sign 004E              ___bmul@product 0020                          _RS 00AF  
              ___awdiv@sign 0025                          fsr 0004         ___wmul@multiplicand 002B  
       __Umul8_16@word_mpld 0024                         l214 0478                         l303 12F2  
                       l311 1305                         l312 130E                         l305 12F6  
                       l217 15FD                         l306 12F7                         l323 17FF  
                       l332 1364                         l164 1512                         l309 1300  
                       l341 14D5                         l182 16E8                         l326 1342  
                       l350 1454                         l166 1516                         l335 13CC  
                       l167 1529                         l329 13A9                         l185 166C  
                       l282 12CE                         l451 13DB                         l604 1592  
                       l188 0B9A                         l285 12DA                         l453 13F3  
                       l294 12CD                         l279 12E7                         l288 12C4  
                       l800 0BF7                         l625 0880                         l617 0861  
                       l802 0D77                         l628 08EC                         l644 174F  
                       l629 0905                         l637 1764                         l477 1325  
                       l822 0D5B                         l750 0E59                         l647 1764  
                       l824 0D6B                         l816 0CE9                         l840 07D9  
                       l744 0DDB                         l852 07CD                         l748 0E82  
                       l861 141C                         l765 0F4D                         l757 0FFF  
                       l846 0745                         l790 07FD                         l775 0F93  
                       l769 0F71                         l786 0FF3                         l778 0FD1  
                       l890 096F                         l859 140A                         l787 0FFF  
                       l884 092A                         l886 09C1                         l897 098B  
                       l898 0997                         _GIE 005F                         _RA0 0028  
                       _RB7 0037                         _PR2 0092                         _PEN 048A  
                       _SEN 0488                         _POT 00B5                         _isr 1455  
                       fsr0 0004                         _sum 00B3                         indf 0000  
              ___awmod@sign 0025           ?_I2C_Comunication 0070                ___flmul@aexp 0053  
              ___flmul@bexp 0058                ___flmul@sign 0052                ___flmul@temp 005D  
              ___flmul@prod 0059             __end_of_LCD_CMD 1365          ??_I2C_Comunication 0020  
       LCD_Write_String@Str 0024              _LCD_Set_Cursor 141D                ___fltol@exp1 0075  
                      l4001 0798                        l4011 07C5                        l4003 07A7  
                      l4013 07C6                        l4005 07B1                        l4021 090E  
                      l4101 17D5                        l4015 07D1                        l4007 07B3  
                      l4031 093B                        l4023 0912                        l4111 1429  
                      l4103 17E5                        l4009 07C1                        l3401 0DD1  
                      l4041 0966                        l4033 0940                        l4025 0922  
                      l4201 030B                        l4113 1431                        l4105 17EF  
                      l3411 0DED                        l3403 0DD3                        l4051 0999  
                      l4043 0976                        l4035 094D                        l4027 0932  
                      l4019 0909                        l4211 0331                        l4203 0318  
                      l4115 1439                        l4107 1420                        l4131 14B9  
                      l1731 12DB                        l3341 12BC                        l3501 0F63  
                      l3421 0E01                        l3413 0DF1                        l3405 0DE1  
                      l4053 09AF                        l4045 0981                        l4037 0954  
                      l4221 0378                        l4213 0336                        l4205 0318  
                      l4141 0059                        l4133 003A                        l4109 1421  
                      l4117 1441                        l4125 1490                        l4301 0B36  
                      l1733 12DF                        l3343 12C1                        l3351 12CA  
                      l4071 12F8                        l3511 0F7A                        l3503 0F6C  
                      l3431 0E15                        l3423 0E05                        l3415 0DF5  
                      l3407 0DE5                        l4055 09B4                        l4047 0985  
                      l4039 0958                        l4223 0422                        l4215 033B  
                      l4231 0462                        l4207 031E                        l4151 00A4  
                      l4143 005D                        l4135 0055                        l4127 1495  
                      l4063 1594                        l4311 0B6C                        l4303 0B46  
                      l1735 12E2                        l3337 12CE                        l3345 12E9  
                      l4073 12FD                        l4321 166D                        l3601 1538  
                      l3521 0F8A                        l3513 0F7F                        l3505 0F70  
                      l3441 0E26                        l3433 0E19                        l3425 0E09  
                      l3417 0DF9                        l3409 0DE9                        l3361 0D78  
                      l4057 09B8                        l4049 098F                        l4233 0468  
                      l4225 0450                        l4217 035C                        l4209 032B  
                      l4161 00E5                        l4153 00AD                        l4145 005D  
                      l4137 0055                        l3353 1327                        l4129 14B1  
                      l4241 131B                        l4065 15EE                        l4313 0B72  
                      l4305 0B4C                        l1737 12E5                        l4081 1768  
                      l3339 12D4                        l3347 12EE                        l4075 1306  
                      l4331 16AB                        l4323 1687                        l3611 154D  
                      l3603 153C                        l3531 0FAB                        l3523 0F90  
                      l3507 0F75                        l3515 0F81                        l3451 0E6C  
                      l3443 0E3D                        l3435 0E1D                        l3427 0E0D  
                      l3419 0DFD                        l3371 0D8F                        l3363 0D7F  
                      l4059 09B9                        l4227 0458                        l4219 0362  
                      l4171 012C                        l4163 00EA                        l4155 00D0  
                      l4147 0078                        l4139 0057                        l3355 138A  
                      l4243 131D                        l4235 1312                        l4067 15F3  
                      l4315 0B7E                        l4307 0B58                        l1739 12E6  
                      l4091 179F                        l4083 176E                        l4251 1609  
                      l1931 14DE                        l3349 12C5                        l4077 130B  
                      l4333 16B0                        l4325 1696                        l3621 1570  
                      l3613 1550                        l3605 1541                        l3541 0FE3  
                      l3533 0FAF                        l3509 0F78                        l3517 0F85  
                      l3461 0E8B                        l3453 0E6D                        l3445 0E5D  
                      l3437 0E21                        l3429 0E11                        l3381 0DA7  
                      l3373 0D94                        l3365 0D85                        l3701 16FF  
                      l4229 045E                        l4173 01D6                        l4165 00EF  
                      l4181 0216                        l4149 0099                        l4157 00D6  
                      l3357 1392                        l4245 1324                        l4237 1313  
                      l4069 15F8                        l4317 0B86                        l4309 0B60  
                      l4093 17A5                        l4085 1774                        l4261 163D  
                      l4253 1613                        l1941 14E3                        l1933 14DF  
                      l1925 14D6                        l4341 136F                        l4335 16D9  
                      l4327 169B                        l3631 1589                        l3623 1576  
                      l3615 1557                        l3607 1545                        l3551 0FFA  
                      l3543 0FE8                        l3535 0FCD                        l3527 0F98  
                      l3519 0F86                        l3471 0EB3                        l3455 0E76  
                      l3447 0E66                        l3439 0E25                        l3391 0DBD  
                      l3383 0DAC                        l3375 0D9C                        l3367 0D89  
                      l3711 1723                        l3703 1714                        l4191 0239  
                      l4183 021C                        l4175 0204                        l4167 0110  
                      l4159 00DF                        l3359 1399                        l4239 1317  
                      l4319 0B92                        l4271 09D1                        l4095 17B5  
                      l4087 1785                        l4263 1648                        l4255 161E  
                      l1951 14F1                        l1943 14E4                        l1935 14E0  
                      l1927 14DA                        l4343 1379                        l4329 16A1  
                      l3633 158E                        l3625 1577                        l3617 155B  
                      l3609 1547                        l3801 0C52                        l3561 1404  
                      l3553 0FFE                        l3545 0FE9                        l3537 0FD6  
                      l3529 0F9D                        l3481 0ECC                        l3473 0EBC  
                      l3465 0E94                        l3449 0E68                        l3457 0E7A  
                      l3393 0DBE                        l3385 0DB2                        l3377 0D9D  
                      l3369 0D8A                        l3705 1715                        l4193 025A  
                      l4185 022C                        l4177 020C                        l4169 0116  
                      l3641 080E                        l4281 0A0B                        l4273 09DD  
                      l4097 17BF                        l4089 178F                        l4265 1652  
                      l4257 1628                        l4249 15FE                        l1961 14F8  
                      l1953 14F2                        l1945 14E5                        l1937 14E1  
                      l1929 14DB                        l4345 1380                        l4337 1365  
                      l3627 157E                        l3619 155F                        l3803 0C57  
                      l3811 0C77                        l3563 1413                        l3555 13F7  
                      l3547 0FED                        l3539 0FDB                        l3491 0F30  
                      l3475 0EBE                        l3467 0EAB                        l3459 0E86  
                      l3483 0ED1                        l3395 0DC3                        l3387 0DB3  
                      l3379 0D9F                        l3731 07DA                        l3707 171D  
                      l4195 0260                        l4187 0234                        l4179 0212  
                      l3571 13B1                        l3651 0824                        l3643 0813  
                      l4291 0AB0                        l4283 0A16                        l4275 09E8  
                      l4099 17CF                        l4267 165D                        l4259 1633  
                      l1971 1502                        l1963 14F9                        l1955 14F3  
                      l1947 14E9                        l1939 14E2                        l4339 136A  
                      l3629 1584                        l3821 0CA2                        l3813 0C89  
                      l3805 0C69                        l3741 0BA8                        l3565 1418  
                      l3557 13F9                        l3901 04B2                        l3549 0FEF  
                      l3485 0EE7                        l3493 0F3F                        l3477 0EC2  
                      l3469 0EAF                        l3397 0DC8                        l3389 0DB9  
                      l3733 07DE                        l3725 1744                        l3717 172B  
                      l3709 171F                        l3581 13D1                        l4197 0278  
                      l4189 0234                        l3573 1346                        l4445 1449  
                      l3661 0840                        l3653 0827                        l3645 0815  
                      l3637 0807                        l4293 0ADD                        l4285 0A43  
                      l4277 09F4                        l4269 09C2                        l1981 150E  
                      l1973 1508                        l1965 14FA                        l1957 14F6  
                      l1949 14EE                        l3831 0CBA                        l3823 0CAA  
                      l3815 0C8A                        l3807 0C6D                        l3751 0BBF  
                      l3743 0BAC                        l3559 1400                        l3911 04C9  
                      l3903 04B6                        l3495 0F55                        l3487 0F25  
                      l3479 0EC3                        l3399 0DD0                        l3727 1754  
                      l3719 173D                        l3583 13D5                        l4199 02F5  
                      l3575 1349                        l3671 085D                        l3663 0846  
                      l3655 082E                        l3647 0819                        l3639 080A  
                      l4295 0AFD                        l4287 0A63                        l4279 09FF  
                      l1991 1524                        l1983 150F                        l1975 150A  
                      l1967 14FC                        l1959 14F7                        l3593 152A  
                      l3841 0CD2                        l3833 0CC3                        l3825 0CAC  
                      l3817 0C98                        l3809 0C6E                        l3761 0BD5  
                      l3753 0BC0                        l3745 0BAD                        l3737 0B9B  
                      l3681 089C                        l3913 04CB                        l3905 04B7  
                      l3497 0F5A                        l3489 0F2B                        l3729 1759  
                      l3585 13E2                        l3577 1352                        l3569 13AD  
                      l3665 084D                        l3657 0832                        l3649 081E  
                      l4297 0B10                        l4289 0A90                        l1985 1510  
                      l1977 150C                        l1969 1500                        l3595 152D  
                      l3851 0D01                        l3843 0CE6                        l3827 0CB5  
                      l3835 0CC9                        l3819 0C9C                        l3771 0BEC  
                      l3763 0BD9                        l3747 0BB2                        l3755 0BC2  
                      l3739 0BA2                        l3691 0904                        l3683 08A0  
                      l3675 0862                        l3931 053C                        l3923 04E6  
                      l3915 04D3                        l3907 04BC                        l3587 13E9  
                      l3579 13CD                        l3659 0836                        l3667 0853  
                      l4299 0B23                        l1987 1511                        l1979 150D  
                      l3597 1531                        l3861 0D3F                        l3853 0D05  
                      l3837 0CCD                        l3829 0CB9                        l3781 0C0F  
                      l3773 0BED                        l3765 0BDA                        l3757 0BCA  
                      l3749 0BB7                        l3685 08C4                        l3677 0878  
                      l3941 05B9                        l3933 0568                        l3925 04F6  
                      l3917 04D8                        l3909 04C1                        l3589 13EF  
                      l3669 0858                        l1989 151F                        l3599 1536  
                      l3871 0D65                        l3863 0D4E                        l3855 0D1E  
                      l3847 0CEE                        l3839 0CCE                        l3791 0C26  
                      l3767 0BDF                        l3775 0BEF                        l3759 0BCF  
                      l3687 08C8                        l3679 0894                        l3951 0639  
                      l3943 05D6                        l3935 0584                        l3927 0503  
                      l3919 04DD                        l3695 16E9                        l3873 0D67  
                      l3865 0D52                        l3849 0CF3                        l3857 0D24  
                      l3793 0C38                        l3777 0BFF                        l3785 0C18  
                      l3769 0BE4                        l3689 0902                        l3961 06F1  
                      l3953 0666                        l3945 05E6                        l3937 05A0  
                      l3929 0520                        l3881 0480                        l3697 16F6  
                      l3867 0D5A                        l3859 0D31                        l3795 0C40  
                      l3787 0C1D                        l3779 0C0B                        l3971 0716  
                      l3963 06FA                        l3955 0676                        l3947 0603  
                      l3939 05A9                        l3891 0495                        l3883 0486  
                      l3869 0D61                        l3797 0C48                        l3981 072E  
                      l3973 071F                        l3965 0708                        l3957 06A3  
                      l3949 061C                        l3893 049D                        l3885 048A  
                      l3799 0C50                        l3991 075D                        l3983 0742  
                      l3967 0711                        l3975 0725                        l3959 06C9  
                      l3895 049F                        l3887 048B                        l3879 0479  
                      _ADIF 0066                        l3993 0761                        l3977 0729  
                      l3969 0715                        l3897 04A7                        l3889 0490  
                      l3995 077A                        l3987 074A                        l3979 072A  
                      l3899 04AC                        ?_isr 0070                        l3989 074F  
                      l3997 0780                        l3999 078D                        STR_1 1019  
                      STR_2 1021                        STR_3 1029                        STR_4 1010  
                      STR_5 1031                        _CONT 00B6                        u4000 0D94  
                      u4001 0D93                        u4010 0DB2                        u4011 0DB1  
                      u4100 0E5D                        u4020 0DBD                        u4101 0E5C  
                      u4021 0DBC                        u4110 0E6C                        u4030 0DC3  
                      u4111 0E6B                        u4031 0DC2                        u5000 0C6D  
                      u4040 0DC8                        u5001 0C6C                        u4041 0DC7  
                      u4210 0EE7                        u4130 0E82                        u4050 0DE1  
                      u4211 0EE6                        u4131 0E81                        u4051 0DE0  
                      u5100 0CE6                        u5020 0C89                        u4300 0F7F  
                      u4140 0E86                        u4060 0DE5                        u1900 1516  
                      u5101 0CE5                        u5021 0C88                        u4301 0F7E  
                      u4221 0EFE                        u4213 0EE3                        u4205 0EC5  
                      u4141 0E85                        u4125 0E6F                        u4061 0DE4  
                      u1901 1515                        u5110 0CED                        u5030 0CA2  
                      u4310 0F85                        u4230 0F12                        u4222 0EFF  
                      u4150 0E8B                        u4070 0E3D                        u5111 0CEC  
                      u5031 0CA1                        u5015 0C70                        u4311 0F84  
                      u4231 0F13                        u4223 0F04                        u4151 0E8A  
                      u4071 0E3C                        u5120 0CF3                        u5040 0CAA  
                      u5200 0495                        u4400 0FDB                        u4320 0F8A  
                      u4240 0F30                        u4232 0F18                        u4224 0F05  
                      u4080 0E48                        u5121 0CF2                        u5041 0CA9  
                      u5025 0C85                        u5201 0494                        u4401 0FDA  
                      u4321 0F89                        u4241 0F2F                        u4233 0F19  
                      u4225 0F0A                        u4161 0E9D                        u4081 0E46  
                      u5130 0D05                        u5210 04B6                        u4410 0FE8  
                      u4330 0F90                        u4250 0F55                        u4226 0F0B  
                      u4170 0EAF                        u4162 0EA4                        u4090 0E49  
                      u5131 0D04                        u5211 04B5                        u4411 0FE7  
                      u4331 0F8F                        u4251 0F54                        u4171 0EAE  
                      u4163 0EAB                        u4075 0E39                        u5140 0D14  
                      u5060 0CB9                        u5220 04BC                        u4420 0FED  
                      u4340 0F97                        u4260 0F5A                        u4180 0EB3  
                      u5061 0CB8                        u5221 04BB                        u4421 0FEC  
                      u4341 0F96                        u4261 0F59                        u4181 0EB2  
                      u5150 0D31                        u5230 04C1                        u4430 0FFE  
                      u4350 0F9D                        u4190 0EC2                        u5151 0D30  
                      u5055 0CAE                        u5311 05C8                        u5231 04C0  
                      u4431 0FFD                        u4351 0F9C                        u4191 0EC1  
                      u6007 17FB                        u5160 0D4E                        u5080 0CCD  
                      u4440 1404                        u5312 05CF                        u5240 04D8  
                      u4360 0FAF                        u4280 0F70                        u4520 13EF  
                      u5161 0D4D                        u5145 0D0F                        u5081 0CCC  
                      u4441 1403                        u5401 06E3                        u5321 05F5  
                      u5313 05D6                        u5305 05A2                        u5241 04D7  
                      u4361 0FAE                        u4281 0F6F                        u4521 13EE  
                      u4505 13DC                        u6017 09CA                        u4610 1584  
                      u4530 1531                        u5170 0D65                        u5090 0CD2  
                      u5402 06EA                        u5322 05FC                        u5250 04DD  
                      u4370 0FBE                        u4290 0F75                        u4611 1583  
                      u4531 1530                        u5171 0D64                        u5155 0D2D  
                      u5091 0CD1                        u5075 0CBC                        u5403 06F1  
                      u5323 0603                        u5251 04DC                        u4291 0F74  
                      u4275 0F65                        u4515 13E3                        u6027 13A6  
                      _PEIE 005E                        u4620 1589                        u4540 153C  
                      u4460 1418                        u5500 0761                        u5180 048A  
                      u4380 0FCD                        u4700 0853                        u6037 168F  
                      u4621 1588                        u4605 1578                        u4541 153B  
                      u5165 0D4A                        u4461 1417                        u5501 0760  
                      u5341 062B                        u5261 052E                        u5181 0489  
                      u4381 0FCC                        u4701 0852                        u4550 154D  
                      u5510 0770                        u5430 0715                        u5342 0632  
                      u5262 0535                        u5190 0490                        u4390 0FD6  
                      u4710 0858                        u4630 080E                        u6047 16B8  
                      u4551 154C                        u4455 140B                        u5431 0714  
                      u5415 06F3                        u5351 0658                        u5343 0639  
                      u5335 0605                        u5271 054A                        u5263 053C  
                      u5191 048F                        u4391 0FD5                        u4375 0FB9  
                      u4711 0857                        u4631 080D                        u4720 0878  
                      u5520 078D                        u5352 065F                        u5272 0551  
                      u4800 170D                        u4640 0819                        u6057 16E1  
                      u4721 0877                        u5521 078C                        u5425 070A  
                      u5361 0685                        u5353 0666                        u5281 0576  
                      u5273 0558                        u4641 0818                        u4570 155F  
                      u4730 0894                        u5530 07A7                        u5450 0729  
                      u5370 06AF                        u5362 068C                        u5282 057D  
                      u4810 1723                        u4490 13D5                        u5610 0975  
                      u4650 0824                        u4571 155E                        u4731 0893  
                      u5531 07A6                        u5515 076B                        u5451 0728  
                      u5363 0693                        u5291 0592                        u5283 0584  
                      u4811 1722                        u4491 13D4                        u5611 0974  
                      u4475 13BF                        u4651 0823                        u4900 0BB2  
                      u4740 08A0                        u5540 07C5                        u5460 072E  
                      u5292 0599                        u4820 172A                        u5700 149F  
                      _RCEN 048B                        u4565 1551                        u4901 0BB1  
                      u4741 089F                        u5541 07C4                        u5525 0789  
                      u5461 072D                        u5445 0718                        u5381 06BB  
                      u5293 05A0                        u4821 1729                        u4805 1708  
                      u5605 0967                        u4485 1357                        u3950 12D4  
                      u4590 1570                        u4910 0BB7                        u5470 0742  
                      u5390 06D7                        u5382 06C2                        u5630 0985  
                      u5550 090E                        u5710 14C3                        u4670 0836  
                      u3951 12D3                        u4591 156F                        u4911 0BB6  
                      u4751 08AF                        u5535 07A3                        u5471 0741  
                      u5383 06C9                        u5375 06AA                        u5631 0984  
                      u5551 090D                        u4671 0835                        u3960 12DA  
                      u4920 0BD9                        u4760 08C8                        u4752 08B0  
                      u5480 0749                        u4840 173C                        u5640 098B  
                      u5560 0912                        u5800 0378                        u5720 14D5  
                      u4680 0840                        u3961 12D9                        u4585 1560  
                      u4921 0BD8                        u4761 08C7                        u4753 08B5  
                      u5481 0748                        u4841 173B                        u5641 098A  
                      u5625 097A                        u5561 0911                        u5801 0377  
                      u5721 14D4                        u4681 083F                        u4665 0828  
                      u3970 12F6                        u4930 0BDF                        u4754 08B6  
                      u5490 074F                        u4850 1743                        u5650 098F  
                      u5570 0932                        u5810 0468                        u5730 0078  
                      u3971 12F5                        u4595 156C                        u4931 0BDE  
                      u4771 08D7                        u4755 08BB                        u5491 074E  
                      u5395 06D2                        u4851 1742                        u4835 172C  
                      u5651 098E                        u5571 0931                        u5811 0467  
                      u5731 0077                        u4940 0BE4                        u4780 0902  
                      u4772 08D8                        u4756 08BC                        u3980 0D89  
                      u5660 09A4                        u5740 00DE                        u5820 1317  
                      u4941 0BE3                        u4781 0901                        u4773 08DD  
                      u3981 0D88                        u5805 0374                        u5741 00DD  
                      u5821 1316                        u4685 083C                        u4950 0BFF  
                      u4774 08DE                        u3990 0D8F                        u4870 1754  
                      u4790 16F6                        u5670 09B4                        u5590 0953  
                      u5750 00E5                        u5830 1324                        u4951 0BFE  
                      u4775 08E3                        u3991 0D8E                        u4871 1753  
                      u4791 16F5                        u5671 09B3                        u5591 0952  
                      u5751 00E4                        u5831 1323                        u4695 0847  
                      u4960 0C1D                        u4776 08E4                        u4880 1759  
                      u5680 09B8                        u5760 012C                        u4961 0C1C  
                      u4785 08FE                        u4881 1758                        u4865 1746  
                      u5681 09B7                        u5665 099F                        u5585 0945  
                      u5761 012B                        u5690 1305                        u4970 0C57  
                      u4890 0BAC                        u5770 021C                        u5691 1304  
                      u4971 0C56                        u4891 0BAB                        u5771 021B  
                      u5907 14EB                        u5780 0278                        u5781 0277  
                      u5765 0128                        u5917 1665                        u5790 0331  
                      u5791 0330                        u5927 177A                        u4985 0C59  
                      u5785 0274                        u5937 178B                        u4995 0C62  
                      u5947 179B                        u5957 17AB                        u5967 17BB  
                      u5977 17CB                        u5897 137D                        u5987 17DB  
                      u5997 17EB                        _RSEN 0489                        _TXIF 0064  
                      _dec1 00B2                        _dec2 00B1                        _dec3 00B0  
         ?_LCD_Write_String 0024                        _main 1365                        _temp 00AC  
                      _tens 006D                        btemp 007E               ADC_convert@mu 00E2  
                      start 000C          __size_of_LCD_Start 006F          ??_LCD_Write_String 0026  
           ___fldiv@new_exp 004F           ___bmul@multiplier 0021        LCD_Write_4Bit@Nibble 0021  
      __size_of_ADC_convert 0442                       ??_isr 0070            __end_of_LCD_Init 1800  
          __end_of_LCD_Send 0B9B            ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070  
          ?_I2C_Master_Stop 0070               ___fltol@sign1 0074             __end_of___fladd 1000  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___fldiv 0D78             __end_of___awdiv 1593             __end_of___awmod 0862  
           __end_of___flmul 07DA             __end_of___flsub 07FE             __end_of___fltol 1765  
                     _ANSEL 0188             ___awdiv@divisor 0020                       i1l153 1489  
           ___awdiv@counter 0024                       _RCREG 001A                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISD 0088                       _SSPIE 0463  
                     _SSPIF 0063                       _TXREG 0019      __end_of_LCD_Set_Cursor 1455  
                     _conv0 00A8                       _conv1 00A4                       _conv2 00A0  
    __size_of_I2C_Read_Byte 0017                       _valor 00B4                       _setup 14D6  
                     _units 006C                       pclath 000A                       status 0003  
                     wtemp0 007E              _LCD_Write_4Bit 1387              _LCD_Write_Char 13AA  
           __initialization 000F                __end_of_main 1387           _IO_Expander_Write 1326  
        ?_IO_Expander_Write 0070                      ??_main 006B                   ??_LCD_CMD 0022  
         __end_of_LCD_Start 166D           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0075             ?_LCD_Set_Cursor 0024          ??_I2C_Master_Start 0074  
        ??_I2C_Master_Write 0074                      _ADRESH 001E                      _ADRESL 009E  
                    _CCPR1L 0015                      _CCPR2L 001B            ___awdiv@dividend 0022  
                    ?_setup 0070                      _ANSELH 0189                      i1l2081 1455  
                    i1l2083 145B                      i1l2085 1464                      i1l2087 1488  
                    u191_20 145B                      u191_21 145A                      u192_20 1464  
                    u192_21 1463                      u193_25 1479                      _SSPADD 0093  
                    _TRISA0 0428                      _TRISB0 0430                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 13AA            __end_of___xxtofl 09C2      __end_of_LCD_Write_Char 13CD  
 __end_of_IO_Expander_Write 1343                      ___flge 0862                      ___bmul 130F  
             _I2C_Read_Byte 12F8            __end_of_division 15FE                   ??___fladd 0028  
                    ___wmul 13CD                   ??___fldiv 0045                   ??___awdiv 0074  
                 ??___awmod 0074                   ??___flmul 004D                   ??___flsub 0076  
                 ??___fltol 0024            ___awdiv@quotient 0026             ___awmod@divisor 0020  
           ___awmod@counter 0024          __size_of__Umul8_16 0029                      saved_w 007E  
           ADC_convert@data 00D9             ADC_convert@temp 00D5                  ___flge@ff1 0020  
                ___flge@ff2 0024                ___xxtofl@arg 0039                ___xxtofl@exp 0038  
              ___xxtofl@val 002F     __end_of__initialization 0033                   ?_LCD_Init 0070  
                 ?_LCD_Send 0070             ?_LCD_Write_4Bit 0070                  ___fltol@f1 0020  
           ?_LCD_Write_Char 0070         ___bmul@multiplicand 0074              ?_I2C_Read_Byte 0070  
            __pcstackCOMMON 0070                __pidataBANK1 07FE               __end_of_setup 152A  
             division@valor 0075                     ??_setup 0074                  __pbssBANK0 006C  
                __pbssBANK1 00A0                  __pbssBANK3 0190                  ??_LCD_Init 0024  
                ??_LCD_Send 0067   __size_of_I2C_Comunication 007C           __end_of__Umul8_16 141D  
__size_of_IO_Expander_Write 001D                  __pmaintext 1365                     ?___flge 0020  
                   ?___bmul 0074                     ?___wmul 0029                  __pintentry 0004  
                   _ACKSTAT 048E   __size_of_LCD_Write_String 0046                     _LCD_CMD 1343  
                 ?___xxtofl 002F                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 1000                   ?_division 0070                     _i2c_add 00AE  
           ??_I2C_Read_Byte 0074               ??_ADC_convert 0065             __size_of___flge 00A4  
           __size_of___bmul 0017                     ___fladd 0D78                     ___fldiv 0B9B  
                   ___awdiv 152A                     ___awmod 0807                     ___flmul 0479  
                   ___flsub 07DA                     ___fltol 16E9             __size_of___wmul 0027  
          ??_LCD_Set_Cursor 0025                     __ptext1 14D6                     __ptext2 15FE  
                   __ptext3 1765                     __ptext4 12DB                     __ptext5 09C2  
                   __ptext6 1593                     __ptext7 0807                     __ptext8 130F  
                   __ptext9 1490                     _counter 0077                   _T2CONbits 0012  
              __size_of_isr 003B                  ??___xxtofl 0033            ___awmod@dividend 0022  
                   _slave01 006F                     _slave02 0079                     _slave03 0078  
  __size_of_I2C_Master_Init 000D                     _residuo 0076    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                   _LCD_Start 15FE                     clrloop0 12B5  
      end_of_initialization 0033                  ??_division 0028   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010            ADC_convert@place 0063         __end_of_ADC_convert 0479  
                LCD_CMD@CMD 0023                 ___fladd@grs 0033               ___xxtofl@sign 0037  
                 _TRISBbits 0086                   _TRISCbits 0087                 ___fldiv@grs 0051  
               ___fldiv@rem 004A                  ?_LCD_Start 0070            ??_LCD_Write_4Bit 0020  
         LCD_Write_String@i 0029            ??_LCD_Write_Char 0022                 ___flmul@grs 0054  
               _CCP1CONbits 0017                 _CCP2CONbits 001D            _I2C_Comunication 166D  
         __size_of_LCD_Init 009B           __size_of_LCD_Send 01D9                ADC_convert@a 005F  
              ADC_convert@i 00DE                ADC_convert@j 00D7                ADC_convert@x 00DA  
            __end_of___flge 0906              __end_of___bmul 1326              __end_of___wmul 13F4  
          _LCD_Write_String 1490         start_initialization 000F                 __end_of_isr 1490  
         ??_I2C_Master_Init 0074           ??_I2C_Master_Wait 0074           ??_I2C_Master_Stop 0074  
               _ADC_convert 0037                    ??___flge 0028                    ??___bmul 0075  
                  ??___wmul 0076                   __Umul8_16 13F4                 __pdataBANK1 00E8  
                 ___fladd@a 0024                   ___fladd@b 0020                    ?_LCD_CMD 0070  
                 ___fldiv@a 003D                   ___fldiv@b 0041                   ___flmul@a 0049  
                 ___flmul@b 0045                 __pbssCOMMON 0076                   ___flsub@a 003D  
                 ___flsub@b 0041                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00D5           __size_of___xxtofl 00BC                 ??_LCD_Start 002B  
         __size_of_division 006B            _I2C_Master_Start 12BC            _I2C_Master_Write 12E8  
     IO_Expander_Write@Data 0075                    ?___fladd 0020                    ?___fldiv 003D  
                  ?___awdiv 0020                    ?___awmod 0020                    ?___flmul 0045  
                  ?___flsub 003D                    ?___fltol 0020                  ?__Umul8_16 0074  
      I2C_Master_Write@data 0074                   __pstrings 1000              __size_of_setup 0054  
         interrupt_function 0004                    _LCD_Init 1765                    _LCD_Send 09C2  
            ___wmul@product 002D                   clear_ram0 12B4                    _PIE1bits 008C  
                  _PIR1bits 000C       __end_of_I2C_Read_Byte 130F                  _ADCON0bits 001F  
               __stringbase 100F                  _ADCON1bits 009F           ___wmul@multiplier 0029  
  __end_of_I2C_Comunication 16E9            __size_of_LCD_CMD 0022                 _converted01 00CB  
               _converted02 00C1                 _converted03 00B7                 _converted04 0190  
  __end_of_LCD_Write_String 14D6                 ??__Umul8_16 0020            __size_of___fladd 0288  
          __size_of___fldiv 01DD            __size_of___awdiv 0069            __size_of___awmod 005B  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
        __end_of__stringtab 1010             _I2C_Master_Init 12DB                    ___xxtofl 0906  
           _I2C_Master_Wait 12CE             _I2C_Master_Stop 12C5                    __ptext10 13AA  
                  __ptext11 141D                    __ptext20 0D78                    __ptext12 1343  
                  __ptext21 0479                    __ptext13 1387                    __ptext30 12BC  
                  __ptext22 13F4                    __ptext14 1326                    __ptext31 12CE  
                  __ptext23 0862                    __ptext15 0037                    __ptext32 1455  
                  __ptext24 0B9B                    __ptext16 0906                    __ptext25 152A  
                  __ptext17 13CD                    __ptext26 166D                    __ptext18 16E9  
                  __ptext27 12F8                    __ptext19 07DA                    __ptext28 12E8  
                  __ptext29 12C5     __size_of_LCD_Set_Cursor 0038                    _division 1593  
           _BackLight_State 00E8               __size_of_main 0022                    _hundreds 006E  
              ?_ADC_convert 005F    __end_of_I2C_Master_Start 12C5    __end_of_I2C_Master_Write 12F8  
        LCD_Write_Char@Data 0023                    intlevel1 0000                   stringcode 100A  
                _OSCCONbits 008F     __size_of_LCD_Write_4Bit 0023           ADC_convert@digits 00E0  
   __size_of_LCD_Write_Char 0023     __end_of_I2C_Master_Init 12E8     __end_of_I2C_Master_Wait 12DB  
   __end_of_I2C_Master_Stop 12CE             LCD_Init@I2C_Add 0026      __Umul8_16@multiplicand 0074  
                  stringdir 100A                    stringtab 1000           LCD_Set_Cursor@COL 0024  
         LCD_Set_Cursor@ROW 0027                 _SSPCON2bits 0091               ___fladd@signs 0030  
              ___fladd@aexp 0031                ___fladd@bexp 0032        __Umul8_16@multiplier 0026  
             _LCD_Send$1338 00E4           __Umul8_16@product 0022  
