

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Sep 03 01:41:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  008F                     	;# 
   129  0090                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  009F                     	;# 
   147  0105                     	;# 
   148  0107                     	;# 
   149  0108                     	;# 
   150  0109                     	;# 
   151  010C                     	;# 
   152  010C                     	;# 
   153  010D                     	;# 
   154  010E                     	;# 
   155  010F                     	;# 
   156  0185                     	;# 
   157  0187                     	;# 
   158  0188                     	;# 
   159  0189                     	;# 
   160  018C                     	;# 
   161  018D                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  000D                     	;# 
   176  000E                     	;# 
   177  000E                     	;# 
   178  000F                     	;# 
   179  0010                     	;# 
   180  0011                     	;# 
   181  0012                     	;# 
   182  0013                     	;# 
   183  0014                     	;# 
   184  0015                     	;# 
   185  0015                     	;# 
   186  0016                     	;# 
   187  0017                     	;# 
   188  0018                     	;# 
   189  0019                     	;# 
   190  001A                     	;# 
   191  001B                     	;# 
   192  001B                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001E                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  0087                     	;# 
   201  0088                     	;# 
   202  0089                     	;# 
   203  008C                     	;# 
   204  008D                     	;# 
   205  008E                     	;# 
   206  008F                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  009F                     	;# 
   225  0105                     	;# 
   226  0107                     	;# 
   227  0108                     	;# 
   228  0109                     	;# 
   229  010C                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0185                     	;# 
   235  0187                     	;# 
   236  0188                     	;# 
   237  0189                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  008F                     	;# 
   285  0090                     	;# 
   286  0091                     	;# 
   287  0092                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0095                     	;# 
   293  0096                     	;# 
   294  0097                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009A                     	;# 
   298  009B                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  0105                     	;# 
   304  0107                     	;# 
   305  0108                     	;# 
   306  0109                     	;# 
   307  010C                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  0185                     	;# 
   313  0187                     	;# 
   314  0188                     	;# 
   315  0189                     	;# 
   316  018C                     	;# 
   317  018D                     	;# 
   318                           
   319                           	psect	idataBANK1
   320  07FA                     __pidataBANK1:
   321                           
   322                           ;initializer for _BackLight_State
   323  07FA  3408               	retlw	8
   324                           
   325                           	psect	nvBANK1
   326  00E4                     __pnvBANK1:
   327  00E4                     _i2c_add:
   328  00E4                     	ds	1
   329  0013                     _SSPBUF	set	19
   330  0014                     _SSPCON	set	20
   331  0019                     _TXREG	set	25
   332  001A                     _RCREG	set	26
   333  0009                     _PORTE	set	9
   334  0008                     _PORTD	set	8
   335  0007                     _PORTC	set	7
   336  0006                     _PORTB	set	6
   337  0005                     _PORTA	set	5
   338  005E                     _PEIE	set	94
   339  005F                     _GIE	set	95
   340  0063                     _SSPIF	set	99
   341  0064                     _TXIF	set	100
   342  0037                     _RB7	set	55
   343  0028                     _RA0	set	40
   344  0091                     _SSPCON2bits	set	145
   345  0093                     _SSPADD	set	147
   346  0094                     _SSPSTAT	set	148
   347  0091                     _SSPCON2	set	145
   348  008F                     _OSCCONbits	set	143
   349  0088                     _TRISD	set	136
   350  0086                     _TRISBbits	set	134
   351  0463                     _SSPIE	set	1123
   352  048B                     _RCEN	set	1163
   353  048E                     _ACKSTAT	set	1166
   354  048C                     _ACKEN	set	1164
   355  048D                     _ACKDT	set	1165
   356  048A                     _PEN	set	1162
   357  0489                     _RSEN	set	1161
   358  0488                     _SEN	set	1160
   359  043C                     _TRISC4	set	1084
   360  043B                     _TRISC3	set	1083
   361  0430                     _TRISB0	set	1072
   362  0428                     _TRISA0	set	1064
   363  0189                     _ANSELH	set	393
   364  0188                     _ANSEL	set	392
   365                           
   366                           	psect	strings
   367  0800                     __pstrings:
   368  0800                     stringtab:
   369  0800                     __stringtab:
   370                           
   371                           ;	String table - string pointers are 1 byte each
   372  0800  1BFF               	btfsc	btemp+1,7
   373  0801  280A               	ljmp	stringcode
   374  0802  1383               	bcf	3,7
   375  0803  187F               	btfsc	btemp+1,0
   376  0804  1783               	bsf	3,7
   377  0805  0800               	movf	0,w
   378  0806  0A84               	incf	4,f
   379  0807  1903               	skipnz
   380  0808  0AFF               	incf	btemp+1,f
   381  0809  0008               	return
   382  080A                     stringcode:
   383  080A                     stringdir:
   384  080A  3008               	movlw	high stringdir
   385  080B  008A               	movwf	10
   386  080C  0804               	movf	4,w
   387  080D  0A84               	incf	4,f
   388  080E  0782               	addwf	2,f
   389  080F                     __stringbase:
   390  080F  3400               	retlw	0
   391  0810                     __end_of__stringtab:
   392  0810                     STR_2:
   393  0810  3420               	retlw	32	;' '
   394  0811  344D               	retlw	77	;'M'
   395  0812  346F               	retlw	111	;'o'
   396  0813  346E               	retlw	110	;'n'
   397  0814  3465               	retlw	101	;'e'
   398  0815  3464               	retlw	100	;'d'
   399  0816  3461               	retlw	97	;'a'
   400  0817  3473               	retlw	115	;'s'
   401  0818  3420               	retlw	32	;' '
   402  0819  3464               	retlw	100	;'d'
   403  081A  3465               	retlw	101	;'e'
   404  081B  3420               	retlw	32	;' '
   405  081C  3451               	retlw	81	;'Q'
   406  081D  3430               	retlw	48	;'0'
   407  081E  342E               	retlw	46	;'.'
   408  081F  3435               	retlw	53	;'5'
   409  0820  3430               	retlw	48	;'0'
   410  0821  343A               	retlw	58	;':'
   411  0822  3420               	retlw	32	;' '
   412  0823  3400               	retlw	0
   413  0824                     STR_3:
   414  0824  3420               	retlw	32	;' '
   415  0825  344D               	retlw	77	;'M'
   416  0826  346F               	retlw	111	;'o'
   417  0827  346E               	retlw	110	;'n'
   418  0828  3465               	retlw	101	;'e'
   419  0829  3464               	retlw	100	;'d'
   420  082A  3461               	retlw	97	;'a'
   421  082B  3473               	retlw	115	;'s'
   422  082C  3420               	retlw	32	;' '
   423  082D  3464               	retlw	100	;'d'
   424  082E  3465               	retlw	101	;'e'
   425  082F  3420               	retlw	32	;' '
   426  0830  3451               	retlw	81	;'Q'
   427  0831  3430               	retlw	48	;'0'
   428  0832  342E               	retlw	46	;'.'
   429  0833  3432               	retlw	50	;'2'
   430  0834  3435               	retlw	53	;'5'
   431  0835  343A               	retlw	58	;':'
   432  0836  3420               	retlw	32	;' '
   433  0837  3400               	retlw	0
   434  0838                     STR_4:
   435  0838  3420               	retlw	32	;' '
   436  0839  3445               	retlw	69	;'E'
   437  083A  346C               	retlw	108	;'l'
   438  083B  3420               	retlw	32	;' '
   439  083C  3474               	retlw	116	;'t'
   440  083D  346F               	retlw	111	;'o'
   441  083E  3474               	retlw	116	;'t'
   442  083F  3461               	retlw	97	;'a'
   443  0840  346C               	retlw	108	;'l'
   444  0841  3420               	retlw	32	;' '
   445  0842  3465               	retlw	101	;'e'
   446  0843  3473               	retlw	115	;'s'
   447  0844  3420               	retlw	32	;' '
   448  0845  3464               	retlw	100	;'d'
   449  0846  3465               	retlw	101	;'e'
   450  0847  3420               	retlw	32	;' '
   451  0848  343A               	retlw	58	;':'
   452  0849  3420               	retlw	32	;' '
   453  084A  3451               	retlw	81	;'Q'
   454  084B  3400               	retlw	0
   455  084C                     STR_1:
   456  084C  3420               	retlw	32	;' '
   457  084D  344D               	retlw	77	;'M'
   458  084E  346F               	retlw	111	;'o'
   459  084F  346E               	retlw	110	;'n'
   460  0850  3465               	retlw	101	;'e'
   461  0851  3464               	retlw	100	;'d'
   462  0852  3461               	retlw	97	;'a'
   463  0853  3473               	retlw	115	;'s'
   464  0854  3420               	retlw	32	;' '
   465  0855  3464               	retlw	100	;'d'
   466  0856  3465               	retlw	101	;'e'
   467  0857  3420               	retlw	32	;' '
   468  0858  3451               	retlw	81	;'Q'
   469  0859  3431               	retlw	49	;'1'
   470  085A  343A               	retlw	58	;':'
   471  085B  3420               	retlw	32	;' '
   472  085C  3400               	retlw	0
   473  085D                     STR_5:
   474  085D  3425               	retlw	37	;'%'
   475  085E  3464               	retlw	100	;'d'
   476  085F  3400               	retlw	0
   477  085D                     
   478                           	psect	cinit
   479  000F                     start_initialization:	
   480                           ; #config settings
   481                           
   482  000F                     __initialization:
   483                           
   484                           ; Initialize objects allocated to BANK1
   485  000F  1683               	bsf	3,5	;RP0=1, select bank1
   486  0010  1303               	bcf	3,6	;RP1=0, select bank1
   487  0011  120A  118A  27FA  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   488  0016  00E5               	movwf	__pdataBANK1& (0+127)
   489                           
   490                           ; Clear objects allocated to BANK1
   491  0017  1383               	bcf	3,7	;select IRP bank0
   492  0018  30A0               	movlw	low __pbssBANK1
   493  0019  0084               	movwf	4
   494  001A  30D5               	movlw	low (__pbssBANK1+53)
   495  001B  160A  118A  2548  120A  118A  	fcall	clear_ram0
   496                           
   497                           ; Clear objects allocated to BANK0
   498  0020  1283               	bcf	3,5	;RP0=0, select bank0
   499  0021  1303               	bcf	3,6	;RP1=0, select bank0
   500  0022  01E9               	clrf	__pbssBANK0& (0+127)
   501                           
   502                           ; Clear objects allocated to COMMON
   503  0023  01FA               	clrf	__pbssCOMMON& (0+127)
   504  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   505  0025                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0025                     __end_of__initialization:
   509  0025  0183               	clrf	3
   510  0026  160A  118A  2DA3   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssCOMMON
   513  007A                     __pbssCOMMON:
   514  007A                     _residuo:
   515  007A                     	ds	1
   516  007B                     _hundreds:
   517  007B                     	ds	1
   518                           
   519                           	psect	bssBANK0
   520  0069                     __pbssBANK0:
   521  0069                     _tens:
   522  0069                     	ds	1
   523                           
   524                           	psect	bssBANK1
   525  00A0                     __pbssBANK1:
   526  00A0                     _conv2:
   527  00A0                     	ds	4
   528  00A4                     _conv1:
   529  00A4                     	ds	4
   530  00A8                     _conv0:
   531  00A8                     	ds	4
   532  00AC                     _temp:
   533  00AC                     	ds	2
   534  00AE                     _RS:
   535  00AE                     	ds	1
   536  00AF                     _slave03:
   537  00AF                     	ds	1
   538  00B0                     _slave02:
   539  00B0                     	ds	1
   540  00B1                     _slave01:
   541  00B1                     	ds	1
   542  00B2                     _units:
   543  00B2                     	ds	1
   544  00B3                     _valor:
   545  00B3                     	ds	1
   546  00B4                     _POT:
   547  00B4                     	ds	1
   548  00B5                     _CONT:
   549  00B5                     	ds	1
   550  00B6                     _counter:
   551  00B6                     	ds	1
   552  00B7                     _converted03:
   553  00B7                     	ds	10
   554  00C1                     _converted02:
   555  00C1                     	ds	10
   556  00CB                     _converted01:
   557  00CB                     	ds	10
   558                           
   559                           	psect	dataBANK1
   560  00E5                     __pdataBANK1:
   561  00E5                     _BackLight_State:
   562  00E5                     	ds	1
   563                           
   564                           	psect	clrtext
   565  1548                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569  1548  0064               	clrwdt	;clear the watchdog before getting into this loop
   570  1549                     clrloop0:
   571  1549  0180               	clrf	0	;clear RAM location pointed to by FSR
   572  154A  0A84               	incf	4,f	;increment pointer
   573  154B  0604               	xorwf	4,w	;XOR with final address
   574  154C  1903               	btfsc	3,2	;have we reached the end yet?
   575  154D  3400               	retlw	0	;all done for this memory range, return
   576  154E  0604               	xorwf	4,w	;XOR again to restore value
   577  154F  2D49               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackBANK1
   580  00D5                     __pcstackBANK1:
   581  00D5                     ADC_convert@temp:
   582                           
   583                           ; 2 bytes @ 0x0
   584  00D5                     	ds	2
   585  00D7                     ADC_convert@j:
   586                           
   587                           ; 2 bytes @ 0x2
   588  00D7                     	ds	2
   589  00D9                     ADC_convert@data:
   590                           
   591                           ; 1 bytes @ 0x4
   592  00D9                     	ds	1
   593  00DA                     ADC_convert@x:
   594                           
   595                           ; 4 bytes @ 0x5
   596  00DA                     	ds	4
   597  00DE                     ADC_convert@i:
   598                           
   599                           ; 2 bytes @ 0x9
   600  00DE                     	ds	2
   601  00E0                     ADC_convert@digits:
   602                           
   603                           ; 2 bytes @ 0xB
   604  00E0                     	ds	2
   605  00E2                     ADC_convert@mu:
   606                           
   607                           ; 2 bytes @ 0xD
   608  00E2                     	ds	2
   609                           
   610                           	psect	cstackCOMMON
   611  0070                     __pcstackCOMMON:
   612  0070                     ?_setup:
   613  0070                     ?_LCD_Start:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_I2C_Comunication:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_LCD_Send:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Master_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_I2C_Master_Write:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_I2C_Read_Byte:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Master_Stop:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_I2C_Master_Start:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_LCD_Init:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_IO_Expander_Write:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_LCD_CMD:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_isr:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ??_isr:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_main:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_I2C_Master_Wait:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_LCD_Write_4Bit:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_LCD_Write_Char:	
   662                           ; 1 bytes @ 0x0
   663                           
   664                           
   665                           ; 1 bytes @ 0x0
   666  0070                     	ds	2
   667  0072                     ?___flge:
   668  0072                     ??_setup:	
   669                           ; 1 bit 
   670                           
   671  0072                     ??_I2C_Master_Init:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ??_I2C_Master_Write:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     ??_I2C_Read_Byte:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     ??_I2C_Master_Stop:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0072                     ??_I2C_Master_Start:	
   684                           ; 1 bytes @ 0x2
   685                           
   686  0072                     ??_I2C_Master_Wait:	
   687                           ; 1 bytes @ 0x2
   688                           
   689  0072                     ?__Umul8_16:	
   690                           ; 1 bytes @ 0x2
   691                           
   692  0072                     ?___awdiv:	
   693                           ; 2 bytes @ 0x2
   694                           
   695  0072                     ?___fltol:	
   696                           ; 2 bytes @ 0x2
   697                           
   698  0072                     ?___fladd:	
   699                           ; 4 bytes @ 0x2
   700                           
   701  0072                     I2C_Master_Write@data:	
   702                           ; 4 bytes @ 0x2
   703                           
   704  0072                     __Umul8_16@multiplicand:	
   705                           ; 1 bytes @ 0x2
   706                           
   707  0072                     ___awdiv@divisor:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ___flge@ff1:	
   711                           ; 2 bytes @ 0x2
   712                           
   713  0072                     ___fltol@f1:	
   714                           ; 4 bytes @ 0x2
   715                           
   716  0072                     ___fladd@b:	
   717                           ; 4 bytes @ 0x2
   718                           
   719                           
   720                           ; 4 bytes @ 0x2
   721  0072                     	ds	1
   722  0073                     ??_I2C_Comunication:
   723  0073                     ??_IO_Expander_Write:	
   724                           ; 1 bytes @ 0x3
   725                           
   726  0073                     IO_Expander_Write@Data:	
   727                           ; 1 bytes @ 0x3
   728                           
   729                           
   730                           ; 1 bytes @ 0x3
   731  0073                     	ds	1
   732  0074                     ??__Umul8_16:
   733  0074                     ??_LCD_Write_4Bit:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0074                     ___awdiv@dividend:	
   737                           ; 1 bytes @ 0x4
   738                           
   739                           
   740                           ; 2 bytes @ 0x4
   741  0074                     	ds	1
   742  0075                     LCD_Write_4Bit@Nibble:
   743                           
   744                           ; 1 bytes @ 0x5
   745  0075                     	ds	1
   746  0076                     ??_LCD_CMD:
   747  0076                     ??_LCD_Write_Char:	
   748                           ; 1 bytes @ 0x6
   749                           
   750  0076                     ??___awdiv:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0076                     ___fltol@sign1:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     ___flge@ff2:	
   757                           ; 1 bytes @ 0x6
   758                           
   759  0076                     ___fladd@a:	
   760                           ; 4 bytes @ 0x6
   761                           
   762                           
   763                           ; 4 bytes @ 0x6
   764  0076                     	ds	1
   765  0077                     LCD_CMD@CMD:
   766  0077                     LCD_Write_Char@Data:	
   767                           ; 1 bytes @ 0x7
   768                           
   769  0077                     ___fltol@exp1:	
   770                           ; 1 bytes @ 0x7
   771                           
   772                           
   773                           ; 1 bytes @ 0x7
   774  0077                     	ds	1
   775  0078                     ??_LCD_Init:
   776  0078                     ?_LCD_Set_Cursor:	
   777                           ; 1 bytes @ 0x8
   778                           
   779  0078                     ?_LCD_Write_String:	
   780                           ; 1 bytes @ 0x8
   781                           
   782  0078                     ??___wmul:	
   783                           ; 1 bytes @ 0x8
   784                           
   785  0078                     LCD_Set_Cursor@COL:	
   786                           ; 1 bytes @ 0x8
   787                           
   788  0078                     LCD_Write_String@Str:	
   789                           ; 1 bytes @ 0x8
   790                           
   791  0078                     ___wmul@product:	
   792                           ; 2 bytes @ 0x8
   793                           
   794                           
   795                           ; 2 bytes @ 0x8
   796  0078                     	ds	1
   797  0079                     LCD_Set_Cursor@ROW:
   798                           
   799                           ; 1 bytes @ 0x9
   800  0079                     	ds	1
   801  007A                     ??_main:
   802  007A                     ??___flsub:	
   803                           ; 1 bytes @ 0xA
   804                           
   805                           
   806                           	psect	cstackBANK0
   807  0020                     __pcstackBANK0:	
   808                           ; 1 bytes @ 0xA
   809                           
   810  0020                     ??_LCD_Set_Cursor:
   811  0020                     ??_LCD_Write_String:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0020                     ??___flge:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     ??___fltol:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     ??___fladd:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0020                     LCD_Init@I2C_Add:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     ___awdiv@counter:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0020                     __Umul8_16@product:	
   830                           ; 1 bytes @ 0x0
   831                           
   832                           
   833                           ; 2 bytes @ 0x0
   834  0020                     	ds	1
   835  0021                     ___awdiv@sign:
   836                           
   837                           ; 1 bytes @ 0x1
   838  0021                     	ds	1
   839  0022                     ___awdiv@quotient:
   840  0022                     __Umul8_16@word_mpld:	
   841                           ; 2 bytes @ 0x2
   842                           
   843                           
   844                           ; 2 bytes @ 0x2
   845  0022                     	ds	1
   846  0023                     LCD_Write_String@i:
   847                           
   848                           ; 2 bytes @ 0x3
   849  0023                     	ds	1
   850  0024                     __Umul8_16@multiplier:
   851                           
   852                           ; 1 bytes @ 0x4
   853  0024                     	ds	1
   854  0025                     ??_LCD_Start:
   855  0025                     ?___wmul:	
   856                           ; 1 bytes @ 0x5
   857                           
   858  0025                     ___wmul@multiplier:	
   859                           ; 2 bytes @ 0x5
   860                           
   861                           
   862                           ; 2 bytes @ 0x5
   863  0025                     	ds	2
   864  0027                     ___wmul@multiplicand:
   865                           
   866                           ; 2 bytes @ 0x7
   867  0027                     	ds	1
   868  0028                     ___fladd@signs:
   869                           
   870                           ; 1 bytes @ 0x8
   871  0028                     	ds	1
   872  0029                     ?___xxtofl:
   873  0029                     ___fladd@aexp:	
   874                           ; 4 bytes @ 0x9
   875                           
   876  0029                     ___xxtofl@val:	
   877                           ; 1 bytes @ 0x9
   878                           
   879                           
   880                           ; 4 bytes @ 0x9
   881  0029                     	ds	1
   882  002A                     ___fladd@bexp:
   883                           
   884                           ; 1 bytes @ 0xA
   885  002A                     	ds	1
   886  002B                     ___fladd@grs:
   887                           
   888                           ; 1 bytes @ 0xB
   889  002B                     	ds	2
   890  002D                     ??___xxtofl:
   891                           
   892                           ; 1 bytes @ 0xD
   893  002D                     	ds	4
   894  0031                     ___xxtofl@sign:
   895                           
   896                           ; 1 bytes @ 0x11
   897  0031                     	ds	1
   898  0032                     ___xxtofl@exp:
   899                           
   900                           ; 1 bytes @ 0x12
   901  0032                     	ds	1
   902  0033                     ___xxtofl@arg:
   903                           
   904                           ; 4 bytes @ 0x13
   905  0033                     	ds	4
   906  0037                     ?___flsub:
   907  0037                     ?___fldiv:	
   908                           ; 4 bytes @ 0x17
   909                           
   910  0037                     ___flsub@a:	
   911                           ; 4 bytes @ 0x17
   912                           
   913  0037                     ___fldiv@a:	
   914                           ; 4 bytes @ 0x17
   915                           
   916                           
   917                           ; 4 bytes @ 0x17
   918  0037                     	ds	4
   919  003B                     ___flsub@b:
   920  003B                     ___fldiv@b:	
   921                           ; 4 bytes @ 0x1B
   922                           
   923                           
   924                           ; 4 bytes @ 0x1B
   925  003B                     	ds	4
   926  003F                     ??___fldiv:
   927  003F                     ?___flmul:	
   928                           ; 1 bytes @ 0x1F
   929                           
   930  003F                     ___flmul@b:	
   931                           ; 4 bytes @ 0x1F
   932                           
   933                           
   934                           ; 4 bytes @ 0x1F
   935  003F                     	ds	4
   936  0043                     ___flmul@a:
   937                           
   938                           ; 4 bytes @ 0x23
   939  0043                     	ds	1
   940  0044                     ___fldiv@rem:
   941                           
   942                           ; 4 bytes @ 0x24
   943  0044                     	ds	3
   944  0047                     ??___flmul:
   945                           
   946                           ; 1 bytes @ 0x27
   947  0047                     	ds	1
   948  0048                     ___fldiv@sign:
   949                           
   950                           ; 1 bytes @ 0x28
   951  0048                     	ds	1
   952  0049                     ___fldiv@new_exp:
   953                           
   954                           ; 2 bytes @ 0x29
   955  0049                     	ds	2
   956  004B                     ___fldiv@grs:
   957                           
   958                           ; 4 bytes @ 0x2B
   959  004B                     	ds	1
   960  004C                     ___flmul@sign:
   961                           
   962                           ; 1 bytes @ 0x2C
   963  004C                     	ds	1
   964  004D                     ___flmul@aexp:
   965                           
   966                           ; 1 bytes @ 0x2D
   967  004D                     	ds	1
   968  004E                     ___flmul@grs:
   969                           
   970                           ; 4 bytes @ 0x2E
   971  004E                     	ds	1
   972  004F                     ___fldiv@bexp:
   973                           
   974                           ; 1 bytes @ 0x2F
   975  004F                     	ds	1
   976  0050                     ___fldiv@aexp:
   977                           
   978                           ; 1 bytes @ 0x30
   979  0050                     	ds	2
   980  0052                     ___flmul@bexp:
   981                           
   982                           ; 1 bytes @ 0x32
   983  0052                     	ds	1
   984  0053                     ___flmul@prod:
   985                           
   986                           ; 4 bytes @ 0x33
   987  0053                     	ds	4
   988  0057                     ___flmul@temp:
   989                           
   990                           ; 2 bytes @ 0x37
   991  0057                     	ds	2
   992  0059                     ?_ADC_convert:
   993  0059                     ADC_convert@a:	
   994                           ; 1 bytes @ 0x39
   995                           
   996                           
   997                           ; 4 bytes @ 0x39
   998  0059                     	ds	4
   999  005D                     ADC_convert@place:
  1000                           
  1001                           ; 2 bytes @ 0x3D
  1002  005D                     	ds	2
  1003  005F                     ??_ADC_convert:
  1004                           
  1005                           ; 1 bytes @ 0x3F
  1006  005F                     	ds	2
  1007  0061                     ??_LCD_Send:
  1008                           
  1009                           ; 1 bytes @ 0x41
  1010  0061                     	ds	4
  1011  0065                     _LCD_Send$1049:
  1012                           
  1013                           ; 4 bytes @ 0x45
  1014  0065                     	ds	4
  1015                           
  1016                           	psect	maintext
  1017  15A3                     __pmaintext:	
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 81 in file "Master_PIC.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : B00/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         0       0       0       0       0
  1041 ;;Total ram usage:        0 bytes
  1042 ;; Hardware stack levels required when called: 8
  1043 ;; This function calls:
  1044 ;;		_I2C_Comunication
  1045 ;;		_LCD_Send
  1046 ;;		_LCD_Start
  1047 ;;		_setup
  1048 ;; This function is called by:
  1049 ;;		Startup code after reset
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _main
  1055  15A3                     _main:
  1056  15A3                     l4014:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1059                           
  1060                           
  1061                           ;Master_PIC.c: 83: 
  1062  15A3  160A  118A  25D5  160A  118A  	fcall	_setup
  1063  15A8                     l4016:
  1064                           
  1065                           ;Master_PIC.c: 84: 
  1066  15A8  160A  118A  2738  160A  118A  	fcall	_LCD_Start
  1067  15AD                     l4018:
  1068                           
  1069                           ;Master_PIC.c: 87: ;Master_PIC.c: 94:     OSCCONbits.IRCF2 = 1;
  1070  15AD  120A  158A  2064  160A  118A  	fcall	_I2C_Comunication
  1071                           
  1072                           ;Master_PIC.c: 97: 
  1073  15B2  120A  158A  22C2  160A  118A  	fcall	_LCD_Send
  1074  15B7  2DAD               	goto	l4018
  1075  15B8  120A  118A  280C   	ljmp	start
  1076  15BB                     __end_of_main:
  1077                           
  1078                           	psect	text1
  1079  15D5                     __ptext1:	
  1080 ;; *************** function _setup *****************
  1081 ;; Defined at:
  1082 ;;		line 109 in file "Master_PIC.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, pclath, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 2
  1103 ;; This function calls:
  1104 ;;		_I2C_Master_Init
  1105 ;; This function is called by:
  1106 ;;		_main
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _setup
  1112  15D5                     _setup:
  1113  15D5                     l1820:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1116                           
  1117                           
  1118                           ;Master_PIC.c: 111:         RB7 = 1;
  1119  15D5  1683               	bsf	3,5	;RP0=1, select bank3
  1120  15D6  1703               	bsf	3,6	;RP1=1, select bank3
  1121  15D7  0188               	clrf	8	;volatile
  1122                           
  1123                           ;Master_PIC.c: 112:         counter++;
  1124  15D8  0189               	clrf	9	;volatile
  1125  15D9                     l1822:
  1126                           
  1127                           ;Master_PIC.c: 115:     }
  1128  15D9  1683               	bsf	3,5	;RP0=1, select bank1
  1129  15DA  1303               	bcf	3,6	;RP1=0, select bank1
  1130  15DB  1405               	bsf	5,0	;volatile
  1131  15DC                     l1824:
  1132                           
  1133                           ;Master_PIC.c: 118:     }
  1134  15DC  1406               	bsf	6,0	;volatile
  1135  15DD                     l1826:
  1136                           
  1137                           ;Master_PIC.c: 119: }
  1138  15DD  1386               	bcf	6,7	;volatile
  1139                           
  1140                           ;Master_PIC.c: 124:      division(counter);
  1141  15DE  0188               	clrf	8	;volatile
  1142  15DF                     l1828:
  1143                           
  1144                           ;Master_PIC.c: 131:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1145  15DF  160F               	bsf	15,4	;volatile
  1146  15E0                     l1830:
  1147                           
  1148                           ;Master_PIC.c: 132:     if(TXIF == 1){
  1149  15E0  168F               	bsf	15,5	;volatile
  1150  15E1                     l1832:
  1151                           
  1152                           ;Master_PIC.c: 133:         TXREG = tens;
  1153  15E1  170F               	bsf	15,6	;volatile
  1154  15E2                     l1834:
  1155                           
  1156                           ;Master_PIC.c: 134:        }
  1157  15E2  140F               	bsf	15,0	;volatile
  1158                           
  1159                           ;Master_PIC.c: 137:         TXREG = units;
  1160  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  1161  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  1162  15E5  0185               	clrf	5	;volatile
  1163                           
  1164                           ;Master_PIC.c: 138:        }
  1165  15E6  0186               	clrf	6	;volatile
  1166                           
  1167                           ;Master_PIC.c: 139:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1168  15E7  0187               	clrf	7	;volatile
  1169                           
  1170                           ;Master_PIC.c: 140: 
  1171  15E8  0188               	clrf	8	;volatile
  1172                           
  1173                           ;Master_PIC.c: 141:      }
  1174  15E9  0189               	clrf	9	;volatile
  1175  15EA                     l1836:
  1176                           
  1177                           ;Master_PIC.c: 144: 
  1178  15EA  160A  118A  256F  160A  118A  	fcall	_I2C_Master_Init
  1179  15EF                     l122:
  1180  15EF  0008               	return
  1181  15F0                     __end_of_setup:
  1182                           
  1183                           	psect	text2
  1184  1738                     __ptext2:	
  1185 ;; *************** function _LCD_Start *****************
  1186 ;; Defined at:
  1187 ;;		line 205 in file "Master_PIC.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;		None
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  1    wreg      void 
  1194 ;; Registers used:
  1195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         0       0       0       0       0
  1202 ;;      Locals:         0       0       0       0       0
  1203 ;;      Temps:          0       3       0       0       0
  1204 ;;      Totals:         0       3       0       0       0
  1205 ;;Total ram usage:        3 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; Hardware stack levels required when called: 7
  1208 ;; This function calls:
  1209 ;;		_I2C_Master_Init
  1210 ;;		_LCD_Init
  1211 ;;		_LCD_Set_Cursor
  1212 ;;		_LCD_Write_String
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           
  1219                           ;psect for function _LCD_Start
  1220  1738                     _LCD_Start:
  1221  1738                     l3956:	
  1222                           ;incstack = 0
  1223                           ; Regs used in _LCD_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1224                           
  1225                           
  1226                           ;Master_PIC.c: 206:      int temp=a;
  1227  1738  160A  118A  256F  160A  118A  	fcall	_I2C_Master_Init
  1228                           
  1229                           ;Master_PIC.c: 207:      float x=0.0;
  1230  173D  304E               	movlw	78
  1231  173E  120A  158A  20D2  160A  118A  	fcall	_LCD_Init
  1232  1743                     l3958:
  1233                           
  1234                           ;Master_PIC.c: 209:      int i=0,mu=1;
  1235  1743  01F8               	clrf	LCD_Set_Cursor@COL
  1236  1744  0AF8               	incf	LCD_Set_Cursor@COL,f
  1237  1745  3001               	movlw	1
  1238  1746  160A  118A  26BA  160A  118A  	fcall	_LCD_Set_Cursor
  1239  174B                     l3960:
  1240                           
  1241                           ;Master_PIC.c: 210:      int j=0;
  1242  174B  303D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1243  174C  00F8               	movwf	LCD_Write_String@Str
  1244  174D  3080               	movlw	128
  1245  174E  00F9               	movwf	LCD_Write_String@Str+1
  1246  174F  160A  118A  26F2  160A  118A  	fcall	_LCD_Write_String
  1247  1754                     l3962:
  1248                           
  1249                           ;Master_PIC.c: 211:      if(a<0)
  1250  1754  01F8               	clrf	LCD_Set_Cursor@COL
  1251  1755  0AF8               	incf	LCD_Set_Cursor@COL,f
  1252  1756  3002               	movlw	2
  1253  1757  160A  118A  26BA  160A  118A  	fcall	_LCD_Set_Cursor
  1254  175C                     l3964:
  1255                           
  1256                           ;Master_PIC.c: 212:      {
  1257  175C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1258  175D  00F8               	movwf	LCD_Write_String@Str
  1259  175E  3080               	movlw	128
  1260  175F  00F9               	movwf	LCD_Write_String@Str+1
  1261  1760  160A  118A  26F2  160A  118A  	fcall	_LCD_Write_String
  1262  1765                     l3966:
  1263                           
  1264                           ;Master_PIC.c: 213:             a=a*-1;
  1265  1765  01F8               	clrf	LCD_Set_Cursor@COL
  1266  1766  0AF8               	incf	LCD_Set_Cursor@COL,f
  1267  1767  3003               	movlw	3
  1268  1768  160A  118A  26BA  160A  118A  	fcall	_LCD_Set_Cursor
  1269  176D                     l3968:
  1270                           
  1271                           ;Master_PIC.c: 214:             data[i]='-';
  1272  176D  3015               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1273  176E  00F8               	movwf	LCD_Write_String@Str
  1274  176F  3080               	movlw	128
  1275  1770  00F9               	movwf	LCD_Write_String@Str+1
  1276  1771  160A  118A  26F2  160A  118A  	fcall	_LCD_Write_String
  1277  1776                     l3970:
  1278                           
  1279                           ;Master_PIC.c: 215:             i++;
  1280  1776  01F8               	clrf	LCD_Set_Cursor@COL
  1281  1777  0AF8               	incf	LCD_Set_Cursor@COL,f
  1282  1778  3004               	movlw	4
  1283  1779  160A  118A  26BA  160A  118A  	fcall	_LCD_Set_Cursor
  1284  177E                     l3972:
  1285                           
  1286                           ;Master_PIC.c: 216:       }
  1287  177E  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1288  177F  00F8               	movwf	LCD_Write_String@Str
  1289  1780  3080               	movlw	128
  1290  1781  00F9               	movwf	LCD_Write_String@Str+1
  1291  1782  160A  118A  26F2  160A  118A  	fcall	_LCD_Write_String
  1292  1787                     l3974:
  1293                           
  1294                           ;Master_PIC.c: 217: 
  1295  1787  301A               	movlw	26
  1296  1788  1283               	bcf	3,5	;RP0=0, select bank0
  1297  1789  1303               	bcf	3,6	;RP1=0, select bank0
  1298  178A  00A7               	movwf	??_LCD_Start+2
  1299  178B  305E               	movlw	94
  1300  178C  00A6               	movwf	??_LCD_Start+1
  1301  178D  306D               	movlw	109
  1302  178E  00A5               	movwf	??_LCD_Start
  1303  178F                     u5627:
  1304  178F  0BA5               	decfsz	??_LCD_Start,f
  1305  1790  2F8F               	goto	u5627
  1306  1791  0BA6               	decfsz	??_LCD_Start+1,f
  1307  1792  2F8F               	goto	u5627
  1308  1793  0BA7               	decfsz	??_LCD_Start+2,f
  1309  1794  2F8F               	goto	u5627
  1310  1795  2F96               	nop2
  1311  1796                     l140:
  1312  1796  0008               	return
  1313  1797                     __end_of_LCD_Start:
  1314                           
  1315                           	psect	text3
  1316  08D2                     __ptext3:	
  1317 ;; *************** function _LCD_Init *****************
  1318 ;; Defined at:
  1319 ;;		line 121 in file "I2C_Master.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  I2C_Add         1    wreg     unsigned char 
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, pclath, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1333 ;;      Params:         0       0       0       0       0
  1334 ;;      Locals:         0       1       0       0       0
  1335 ;;      Temps:          2       0       0       0       0
  1336 ;;      Totals:         2       1       0       0       0
  1337 ;;Total ram usage:        3 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 6
  1340 ;; This function calls:
  1341 ;;		_IO_Expander_Write
  1342 ;;		_LCD_CMD
  1343 ;; This function is called by:
  1344 ;;		_LCD_Start
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function _LCD_Init
  1350  08D2                     _LCD_Init:
  1351                           
  1352                           ;incstack = 0
  1353                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1354                           ;LCD_Init@I2C_Add stored from wreg
  1355  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1356  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1357  08D4  00A0               	movwf	LCD_Init@I2C_Add
  1358  08D5                     l3804:
  1359                           
  1360                           ;I2C_Master.c: 121: void LCD_Init(unsigned char I2C_Add);I2C_Master.c: 122: {;I2C_Master
      +                          .c: 123:   i2c_add = I2C_Add;
  1361  08D5  0820               	movf	LCD_Init@I2C_Add,w
  1362  08D6  00F8               	movwf	??_LCD_Init
  1363  08D7  0878               	movf	??_LCD_Init,w
  1364  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1365  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1366  08DA  00E4               	movwf	_i2c_add^(0+128)
  1367  08DB                     l3806:
  1368                           
  1369                           ;I2C_Master.c: 124:   IO_Expander_Write(0x00);
  1370  08DB  3000               	movlw	0
  1371  08DC  160A  118A  260C  120A  158A  	fcall	_IO_Expander_Write
  1372  08E1                     l3808:
  1373                           
  1374                           ;I2C_Master.c: 125:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1375  08E1  304E               	movlw	78
  1376  08E2  00F9               	movwf	??_LCD_Init+1
  1377  08E3  30EB               	movlw	235
  1378  08E4  00F8               	movwf	??_LCD_Init
  1379  08E5                     u5637:
  1380  08E5  0BF8               	decfsz	??_LCD_Init,f
  1381  08E6  28E5               	goto	u5637
  1382  08E7  0BF9               	decfsz	??_LCD_Init+1,f
  1383  08E8  28E5               	goto	u5637
  1384                           
  1385                           ;I2C_Master.c: 126:   LCD_CMD(0x03);
  1386  08E9  3003               	movlw	3
  1387  08EA  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1388  08EF                     l3810:
  1389                           
  1390                           ;I2C_Master.c: 127:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1391  08EF  300D               	movlw	13
  1392  08F0  00F9               	movwf	??_LCD_Init+1
  1393  08F1  30FB               	movlw	251
  1394  08F2  00F8               	movwf	??_LCD_Init
  1395  08F3                     u5647:
  1396  08F3  0BF8               	decfsz	??_LCD_Init,f
  1397  08F4  28F3               	goto	u5647
  1398  08F5  0BF9               	decfsz	??_LCD_Init+1,f
  1399  08F6  28F3               	goto	u5647
  1400  08F7  28F8               	nop2
  1401  08F8                     l3812:
  1402                           
  1403                           ;I2C_Master.c: 128:   LCD_CMD(0x03);
  1404  08F8  3003               	movlw	3
  1405  08F9  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1406                           
  1407                           ;I2C_Master.c: 129:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1408  08FE  300D               	movlw	13
  1409  08FF  00F9               	movwf	??_LCD_Init+1
  1410  0900  30FB               	movlw	251
  1411  0901  00F8               	movwf	??_LCD_Init
  1412  0902                     u5657:
  1413  0902  0BF8               	decfsz	??_LCD_Init,f
  1414  0903  2902               	goto	u5657
  1415  0904  0BF9               	decfsz	??_LCD_Init+1,f
  1416  0905  2902               	goto	u5657
  1417  0906  2907               	nop2
  1418  0907                     l3814:
  1419                           
  1420                           ;I2C_Master.c: 130:   LCD_CMD(0x03);
  1421  0907  3003               	movlw	3
  1422  0908  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1423  090D                     l3816:
  1424                           
  1425                           ;I2C_Master.c: 131:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1426  090D  300D               	movlw	13
  1427  090E  00F9               	movwf	??_LCD_Init+1
  1428  090F  30FB               	movlw	251
  1429  0910  00F8               	movwf	??_LCD_Init
  1430  0911                     u5667:
  1431  0911  0BF8               	decfsz	??_LCD_Init,f
  1432  0912  2911               	goto	u5667
  1433  0913  0BF9               	decfsz	??_LCD_Init+1,f
  1434  0914  2911               	goto	u5667
  1435  0915  2916               	nop2
  1436                           
  1437                           ;I2C_Master.c: 132:   LCD_CMD(0x02);
  1438  0916  3002               	movlw	2
  1439  0917  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1440  091C                     l3818:
  1441                           
  1442                           ;I2C_Master.c: 133:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1443  091C  300D               	movlw	13
  1444  091D  00F9               	movwf	??_LCD_Init+1
  1445  091E  30FB               	movlw	251
  1446  091F  00F8               	movwf	??_LCD_Init
  1447  0920                     u5677:
  1448  0920  0BF8               	decfsz	??_LCD_Init,f
  1449  0921  2920               	goto	u5677
  1450  0922  0BF9               	decfsz	??_LCD_Init+1,f
  1451  0923  2920               	goto	u5677
  1452  0924  2925               	nop2
  1453  0925                     l3820:
  1454                           
  1455                           ;I2C_Master.c: 134:   LCD_CMD(0x20 | (2 << 2));
  1456  0925  3028               	movlw	40
  1457  0926  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1458                           
  1459                           ;I2C_Master.c: 135:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1460  092B  3082               	movlw	130
  1461  092C  00F9               	movwf	??_LCD_Init+1
  1462  092D  30DD               	movlw	221
  1463  092E  00F8               	movwf	??_LCD_Init
  1464  092F                     u5687:
  1465  092F  0BF8               	decfsz	??_LCD_Init,f
  1466  0930  292F               	goto	u5687
  1467  0931  0BF9               	decfsz	??_LCD_Init+1,f
  1468  0932  292F               	goto	u5687
  1469  0933  2934               	nop2
  1470  0934                     l3822:
  1471                           
  1472                           ;I2C_Master.c: 136:   LCD_CMD(0x0C);
  1473  0934  300C               	movlw	12
  1474  0935  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1475  093A                     l3824:
  1476                           
  1477                           ;I2C_Master.c: 137:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1478  093A  3082               	movlw	130
  1479  093B  00F9               	movwf	??_LCD_Init+1
  1480  093C  30DD               	movlw	221
  1481  093D  00F8               	movwf	??_LCD_Init
  1482  093E                     u5697:
  1483  093E  0BF8               	decfsz	??_LCD_Init,f
  1484  093F  293E               	goto	u5697
  1485  0940  0BF9               	decfsz	??_LCD_Init+1,f
  1486  0941  293E               	goto	u5697
  1487  0942  2943               	nop2
  1488                           
  1489                           ;I2C_Master.c: 138:   LCD_CMD(0x01);
  1490  0943  3001               	movlw	1
  1491  0944  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1492  0949                     l3826:
  1493                           
  1494                           ;I2C_Master.c: 139:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1495  0949  3082               	movlw	130
  1496  094A  00F9               	movwf	??_LCD_Init+1
  1497  094B  30DD               	movlw	221
  1498  094C  00F8               	movwf	??_LCD_Init
  1499  094D                     u5707:
  1500  094D  0BF8               	decfsz	??_LCD_Init,f
  1501  094E  294D               	goto	u5707
  1502  094F  0BF9               	decfsz	??_LCD_Init+1,f
  1503  0950  294D               	goto	u5707
  1504  0951  2952               	nop2
  1505  0952                     l3828:
  1506                           
  1507                           ;I2C_Master.c: 140:   LCD_CMD(0x04 | 0x02);
  1508  0952  3006               	movlw	6
  1509  0953  160A  118A  25F0  120A  158A  	fcall	_LCD_CMD
  1510                           
  1511                           ;I2C_Master.c: 141:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1512  0958  3082               	movlw	130
  1513  0959  00F9               	movwf	??_LCD_Init+1
  1514  095A  30DD               	movlw	221
  1515  095B  00F8               	movwf	??_LCD_Init
  1516  095C                     u5717:
  1517  095C  0BF8               	decfsz	??_LCD_Init,f
  1518  095D  295C               	goto	u5717
  1519  095E  0BF9               	decfsz	??_LCD_Init+1,f
  1520  095F  295C               	goto	u5717
  1521  0960  2961               	nop2
  1522  0961                     l278:
  1523  0961  0008               	return
  1524  0962                     __end_of_LCD_Init:
  1525                           
  1526                           	psect	text4
  1527  156F                     __ptext4:	
  1528 ;; *************** function _I2C_Master_Init *****************
  1529 ;; Defined at:
  1530 ;;		line 15 in file "I2C_Master.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1544 ;;      Params:         0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used: 1
  1550 ;; Hardware stack levels required when called: 1
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_setup
  1555 ;;		_LCD_Start
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _I2C_Master_Init
  1561  156F                     _I2C_Master_Init:
  1562  156F                     l1648:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1565                           
  1566                           
  1567                           ;I2C_Master.c: 17:   SSPCON = 0x28;
  1568  156F  3028               	movlw	40
  1569  1570  1283               	bcf	3,5	;RP0=0, select bank0
  1570  1571  1303               	bcf	3,6	;RP1=0, select bank0
  1571  1572  0094               	movwf	20	;volatile
  1572  1573                     l1650:
  1573                           
  1574                           ;I2C_Master.c: 18:   SSPCON2 = 0x00;
  1575  1573  1683               	bsf	3,5	;RP0=1, select bank1
  1576  1574  1303               	bcf	3,6	;RP1=0, select bank1
  1577  1575  0191               	clrf	17	;volatile
  1578  1576                     l1652:
  1579                           
  1580                           ;I2C_Master.c: 19:   SSPSTAT = 0x00;
  1581  1576  0194               	clrf	20	;volatile
  1582                           
  1583                           ;I2C_Master.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  1584  1577  30CF               	movlw	207
  1585  1578  0093               	movwf	19	;volatile
  1586  1579                     l1654:
  1587                           
  1588                           ;I2C_Master.c: 21:   TRISC3 = 1;
  1589  1579  1587               	bsf	7,3	;volatile
  1590  157A                     l1656:
  1591                           
  1592                           ;I2C_Master.c: 22:   TRISC4 = 1;
  1593  157A  1607               	bsf	7,4	;volatile
  1594  157B                     l234:
  1595  157B  0008               	return
  1596  157C                     __end_of_I2C_Master_Init:
  1597                           
  1598                           	psect	text5
  1599  0AC2                     __ptext5:	
  1600 ;; *************** function _LCD_Send *****************
  1601 ;; Defined at:
  1602 ;;		line 221 in file "Master_PIC.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1616 ;;      Params:         0       0       0       0       0
  1617 ;;      Locals:         0       4       0       0       0
  1618 ;;      Temps:          0       4       0       0       0
  1619 ;;      Totals:         0       8       0       0       0
  1620 ;;Total ram usage:        8 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 7
  1623 ;; This function calls:
  1624 ;;		_ADC_convert
  1625 ;;		_LCD_Set_Cursor
  1626 ;;		_LCD_Write_String
  1627 ;;		___xxtofl
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _LCD_Send
  1635  0AC2                     _LCD_Send:
  1636  0AC2                     l3992:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _LCD_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1639                           
  1640                           
  1641                           ;Master_PIC.c: 223:      while(digits!=0)
  1642  0AC2  3005               	movlw	5
  1643  0AC3  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0AC4  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0AC5  00E1               	movwf	??_LCD_Send
  1646  0AC6  0861               	movf	??_LCD_Send,w
  1647  0AC7  00F8               	movwf	LCD_Set_Cursor@COL
  1648  0AC8  3001               	movlw	1
  1649  0AC9  160A  118A  26BA  120A  158A  	fcall	_LCD_Set_Cursor
  1650  0ACE                     l3994:
  1651                           
  1652                           ;Master_PIC.c: 224:      {
  1653  0ACE  30CB               	movlw	(low (_converted01| 0))& (0+255)
  1654  0ACF  00F8               	movwf	LCD_Write_String@Str
  1655  0AD0  3000               	movlw	0
  1656  0AD1  00F9               	movwf	LCD_Write_String@Str+1
  1657  0AD2  160A  118A  26F2  120A  158A  	fcall	_LCD_Write_String
  1658  0AD7                     l3996:
  1659                           
  1660                           ;Master_PIC.c: 227: 
  1661  0AD7  3005               	movlw	5
  1662  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0AD9  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0ADA  00E1               	movwf	??_LCD_Send
  1665  0ADB  0861               	movf	??_LCD_Send,w
  1666  0ADC  00F8               	movwf	LCD_Set_Cursor@COL
  1667  0ADD  3002               	movlw	2
  1668  0ADE  160A  118A  26BA  120A  158A  	fcall	_LCD_Set_Cursor
  1669                           
  1670                           ;Master_PIC.c: 228:          x=a/mu;
  1671  0AE3  30C1               	movlw	(low (_converted02| 0))& (0+255)
  1672  0AE4  00F8               	movwf	LCD_Write_String@Str
  1673  0AE5  3000               	movlw	0
  1674  0AE6  00F9               	movwf	LCD_Write_String@Str+1
  1675  0AE7  160A  118A  26F2  120A  158A  	fcall	_LCD_Write_String
  1676  0AEC                     l3998:
  1677                           
  1678                           ;Master_PIC.c: 231:          i++;
  1679  0AEC  3005               	movlw	5
  1680  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0AEF  00E1               	movwf	??_LCD_Send
  1683  0AF0  0861               	movf	??_LCD_Send,w
  1684  0AF1  00F8               	movwf	LCD_Set_Cursor@COL
  1685  0AF2  3003               	movlw	3
  1686  0AF3  160A  118A  26BA  120A  158A  	fcall	_LCD_Set_Cursor
  1687  0AF8                     l4000:
  1688                           
  1689                           ;Master_PIC.c: 232:          digits--;
  1690  0AF8  30B7               	movlw	(low (_converted03| 0))& (0+255)
  1691  0AF9  00F8               	movwf	LCD_Write_String@Str
  1692  0AFA  3000               	movlw	0
  1693  0AFB  00F9               	movwf	LCD_Write_String@Str+1
  1694  0AFC  160A  118A  26F2  120A  158A  	fcall	_LCD_Write_String
  1695  0B01                     l4002:
  1696                           
  1697                           ;Master_PIC.c: 235: 
  1698  0B01  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0B02  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0B03  0831               	movf	_slave01^(0+128),w
  1701  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0B06  00E1               	movwf	??_LCD_Send
  1704  0B07  01E2               	clrf	??_LCD_Send+1
  1705  0B08  01E3               	clrf	??_LCD_Send+2
  1706  0B09  01E4               	clrf	??_LCD_Send+3
  1707  0B0A  0864               	movf	??_LCD_Send+3,w
  1708  0B0B  00AC               	movwf	___xxtofl@val+3
  1709  0B0C  0863               	movf	??_LCD_Send+2,w
  1710  0B0D  00AB               	movwf	___xxtofl@val+2
  1711  0B0E  0862               	movf	??_LCD_Send+1,w
  1712  0B0F  00AA               	movwf	___xxtofl@val+1
  1713  0B10  0861               	movf	??_LCD_Send,w
  1714  0B11  00A9               	movwf	___xxtofl@val
  1715  0B12  3000               	movlw	0
  1716  0B13  120A  158A  2206  120A  158A  	fcall	___xxtofl
  1717  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0B1A  082C               	movf	?___xxtofl+3,w
  1720  0B1B  00E8               	movwf	_LCD_Send$1049+3
  1721  0B1C  082B               	movf	?___xxtofl+2,w
  1722  0B1D  00E7               	movwf	_LCD_Send$1049+2
  1723  0B1E  082A               	movf	?___xxtofl+1,w
  1724  0B1F  00E6               	movwf	_LCD_Send$1049+1
  1725  0B20  0829               	movf	?___xxtofl,w
  1726  0B21  00E5               	movwf	_LCD_Send$1049
  1727  0B22                     l4004:
  1728                           
  1729                           ;Master_PIC.c: 235: 
  1730  0B22  0868               	movf	_LCD_Send$1049+3,w
  1731  0B23  00DC               	movwf	ADC_convert@a+3
  1732  0B24  0867               	movf	_LCD_Send$1049+2,w
  1733  0B25  00DB               	movwf	ADC_convert@a+2
  1734  0B26  0866               	movf	_LCD_Send$1049+1,w
  1735  0B27  00DA               	movwf	ADC_convert@a+1
  1736  0B28  0865               	movf	_LCD_Send$1049,w
  1737  0B29  00D9               	movwf	ADC_convert@a
  1738  0B2A  3002               	movlw	2
  1739  0B2B  00DD               	movwf	ADC_convert@place
  1740  0B2C  3000               	movlw	0
  1741  0B2D  00DE               	movwf	ADC_convert@place+1
  1742  0B2E  30CB               	movlw	(low (_converted01| 0))& (0+255)
  1743  0B2F  120A  118A  2029  120A  158A  	fcall	_ADC_convert
  1744  0B34                     l4006:
  1745                           
  1746                           ;Master_PIC.c: 236:      data[i]='.';
  1747  0B34  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0B35  1303               	bcf	3,6	;RP1=0, select bank1
  1749  0B36  0830               	movf	_slave02^(0+128),w
  1750  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0B39  00E1               	movwf	??_LCD_Send
  1753  0B3A  01E2               	clrf	??_LCD_Send+1
  1754  0B3B  01E3               	clrf	??_LCD_Send+2
  1755  0B3C  01E4               	clrf	??_LCD_Send+3
  1756  0B3D  0864               	movf	??_LCD_Send+3,w
  1757  0B3E  00AC               	movwf	___xxtofl@val+3
  1758  0B3F  0863               	movf	??_LCD_Send+2,w
  1759  0B40  00AB               	movwf	___xxtofl@val+2
  1760  0B41  0862               	movf	??_LCD_Send+1,w
  1761  0B42  00AA               	movwf	___xxtofl@val+1
  1762  0B43  0861               	movf	??_LCD_Send,w
  1763  0B44  00A9               	movwf	___xxtofl@val
  1764  0B45  3000               	movlw	0
  1765  0B46  120A  158A  2206  120A  158A  	fcall	___xxtofl
  1766  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0B4C  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0B4D  082C               	movf	?___xxtofl+3,w
  1769  0B4E  00E8               	movwf	_LCD_Send$1049+3
  1770  0B4F  082B               	movf	?___xxtofl+2,w
  1771  0B50  00E7               	movwf	_LCD_Send$1049+2
  1772  0B51  082A               	movf	?___xxtofl+1,w
  1773  0B52  00E6               	movwf	_LCD_Send$1049+1
  1774  0B53  0829               	movf	?___xxtofl,w
  1775  0B54  00E5               	movwf	_LCD_Send$1049
  1776  0B55                     l4008:
  1777                           
  1778                           ;Master_PIC.c: 236:      data[i]='.';
  1779  0B55  0868               	movf	_LCD_Send$1049+3,w
  1780  0B56  00DC               	movwf	ADC_convert@a+3
  1781  0B57  0867               	movf	_LCD_Send$1049+2,w
  1782  0B58  00DB               	movwf	ADC_convert@a+2
  1783  0B59  0866               	movf	_LCD_Send$1049+1,w
  1784  0B5A  00DA               	movwf	ADC_convert@a+1
  1785  0B5B  0865               	movf	_LCD_Send$1049,w
  1786  0B5C  00D9               	movwf	ADC_convert@a
  1787  0B5D  3002               	movlw	2
  1788  0B5E  00DD               	movwf	ADC_convert@place
  1789  0B5F  3000               	movlw	0
  1790  0B60  00DE               	movwf	ADC_convert@place+1
  1791  0B61  30C1               	movlw	(low (_converted02| 0))& (0+255)
  1792  0B62  120A  118A  2029  120A  158A  	fcall	_ADC_convert
  1793  0B67                     l4010:
  1794                           
  1795                           ;Master_PIC.c: 237:      i++;
  1796  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0B68  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0B69  082F               	movf	_slave03^(0+128),w
  1799  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0B6C  00E1               	movwf	??_LCD_Send
  1802  0B6D  01E2               	clrf	??_LCD_Send+1
  1803  0B6E  01E3               	clrf	??_LCD_Send+2
  1804  0B6F  01E4               	clrf	??_LCD_Send+3
  1805  0B70  0864               	movf	??_LCD_Send+3,w
  1806  0B71  00AC               	movwf	___xxtofl@val+3
  1807  0B72  0863               	movf	??_LCD_Send+2,w
  1808  0B73  00AB               	movwf	___xxtofl@val+2
  1809  0B74  0862               	movf	??_LCD_Send+1,w
  1810  0B75  00AA               	movwf	___xxtofl@val+1
  1811  0B76  0861               	movf	??_LCD_Send,w
  1812  0B77  00A9               	movwf	___xxtofl@val
  1813  0B78  3000               	movlw	0
  1814  0B79  120A  158A  2206  120A  158A  	fcall	___xxtofl
  1815  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  1816  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  1817  0B80  082C               	movf	?___xxtofl+3,w
  1818  0B81  00E8               	movwf	_LCD_Send$1049+3
  1819  0B82  082B               	movf	?___xxtofl+2,w
  1820  0B83  00E7               	movwf	_LCD_Send$1049+2
  1821  0B84  082A               	movf	?___xxtofl+1,w
  1822  0B85  00E6               	movwf	_LCD_Send$1049+1
  1823  0B86  0829               	movf	?___xxtofl,w
  1824  0B87  00E5               	movwf	_LCD_Send$1049
  1825  0B88                     l4012:
  1826                           
  1827                           ;Master_PIC.c: 237:      i++;
  1828  0B88  0868               	movf	_LCD_Send$1049+3,w
  1829  0B89  00DC               	movwf	ADC_convert@a+3
  1830  0B8A  0867               	movf	_LCD_Send$1049+2,w
  1831  0B8B  00DB               	movwf	ADC_convert@a+2
  1832  0B8C  0866               	movf	_LCD_Send$1049+1,w
  1833  0B8D  00DA               	movwf	ADC_convert@a+1
  1834  0B8E  0865               	movf	_LCD_Send$1049,w
  1835  0B8F  00D9               	movwf	ADC_convert@a
  1836  0B90  3002               	movlw	2
  1837  0B91  00DD               	movwf	ADC_convert@place
  1838  0B92  3000               	movlw	0
  1839  0B93  00DE               	movwf	ADC_convert@place+1
  1840  0B94  30B7               	movlw	(low (_converted03| 0))& (0+255)
  1841  0B95  120A  118A  2029  120A  158A  	fcall	_ADC_convert
  1842  0B9A                     l143:
  1843  0B9A  0008               	return
  1844  0B9B                     __end_of_LCD_Send:
  1845                           
  1846                           	psect	text6
  1847  16F2                     __ptext6:	
  1848 ;; *************** function _LCD_Write_String *****************
  1849 ;; Defined at:
  1850 ;;		line 175 in file "I2C_Master.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  Str             2    8[COMMON] PTR unsigned char 
  1853 ;;		 -> converted03(10), converted02(10), converted01(10), STR_4(20), 
  1854 ;;		 -> STR_3(20), STR_2(20), STR_1(17), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  i               2    3[BANK0 ] int 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         2       0       0       0       0
  1867 ;;      Locals:         0       2       0       0       0
  1868 ;;      Temps:          0       3       0       0       0
  1869 ;;      Totals:         2       5       0       0       0
  1870 ;;Total ram usage:        7 bytes
  1871 ;; Hardware stack levels used: 1
  1872 ;; Hardware stack levels required when called: 6
  1873 ;; This function calls:
  1874 ;;		_LCD_Write_Char
  1875 ;; This function is called by:
  1876 ;;		_LCD_Start
  1877 ;;		_LCD_Send
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _LCD_Write_String
  1883  16F2                     _LCD_Write_String:
  1884  16F2                     l3846:	
  1885                           ;incstack = 0
  1886 ;; using string table level
  1887                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1888                           
  1889                           
  1890                           ;I2C_Master.c: 175: void LCD_Write_String(char* Str);I2C_Master.c: 176: {;I2C_Master.c: 
      +                          177:     for(int i=0; Str[i]!='\0'; i++)
  1891  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  1892  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  1893  16F4  01A3               	clrf	LCD_Write_String@i
  1894  16F5  01A4               	clrf	LCD_Write_String@i+1
  1895  16F6  2F1B               	goto	l3852
  1896  16F7                     l3848:
  1897                           
  1898                           ;I2C_Master.c: 178:        LCD_Write_Char(Str[i]);
  1899  16F7  0823               	movf	LCD_Write_String@i,w
  1900  16F8  0778               	addwf	LCD_Write_String@Str,w
  1901  16F9  00A1               	movwf	??_LCD_Write_String+1
  1902  16FA  0879               	movf	LCD_Write_String@Str+1,w
  1903  16FB  00A0               	movwf	??_LCD_Write_String
  1904  16FC  1803               	skipnc
  1905  16FD  0AA0               	incf	??_LCD_Write_String,f
  1906  16FE  1FA3               	btfss	LCD_Write_String@i,7
  1907  16FF  2F01               	goto	u5450
  1908  1700  03A0               	decf	??_LCD_Write_String,f
  1909  1701                     u5450:
  1910  1701  1283               	bcf	3,5	;RP0=0, select bank0
  1911  1702  1303               	bcf	3,6	;RP1=0, select bank0
  1912  1703  0820               	movf	??_LCD_Write_String,w
  1913  1704  00A2               	movwf	??_LCD_Write_String+2
  1914  1705  0822               	movf	??_LCD_Write_String+2,w
  1915  1706  00FF               	movwf	btemp+1
  1916  1707  0821               	movf	??_LCD_Write_String+1,w
  1917  1708  0084               	movwf	4
  1918  1709  120A  158A  2000  160A  118A  	fcall	stringtab
  1919  170E  160A  118A  2629  160A  118A  	fcall	_LCD_Write_Char
  1920  1713                     l3850:
  1921  1713  3001               	movlw	1
  1922  1714  1283               	bcf	3,5	;RP0=0, select bank0
  1923  1715  1303               	bcf	3,6	;RP1=0, select bank0
  1924  1716  07A3               	addwf	LCD_Write_String@i,f
  1925  1717  1803               	skipnc
  1926  1718  0AA4               	incf	LCD_Write_String@i+1,f
  1927  1719  3000               	movlw	0
  1928  171A  07A4               	addwf	LCD_Write_String@i+1,f
  1929  171B                     l3852:
  1930  171B  0823               	movf	LCD_Write_String@i,w
  1931  171C  0778               	addwf	LCD_Write_String@Str,w
  1932  171D  00A1               	movwf	??_LCD_Write_String+1
  1933  171E  0879               	movf	LCD_Write_String@Str+1,w
  1934  171F  00A0               	movwf	??_LCD_Write_String
  1935  1720  1803               	skipnc
  1936  1721  0AA0               	incf	??_LCD_Write_String,f
  1937  1722  1FA3               	btfss	LCD_Write_String@i,7
  1938  1723  2F25               	goto	u5460
  1939  1724  03A0               	decf	??_LCD_Write_String,f
  1940  1725                     u5460:
  1941  1725  1283               	bcf	3,5	;RP0=0, select bank0
  1942  1726  1303               	bcf	3,6	;RP1=0, select bank0
  1943  1727  0820               	movf	??_LCD_Write_String,w
  1944  1728  00A2               	movwf	??_LCD_Write_String+2
  1945  1729  0822               	movf	??_LCD_Write_String+2,w
  1946  172A  00FF               	movwf	btemp+1
  1947  172B  0821               	movf	??_LCD_Write_String+1,w
  1948  172C  0084               	movwf	4
  1949  172D  120A  158A  2000  160A  118A  	fcall	stringtab
  1950  1732  3A00               	xorlw	0
  1951  1733  1D03               	skipz
  1952  1734  2F36               	goto	u5471
  1953  1735  2F37               	goto	u5470
  1954  1736                     u5471:
  1955  1736  2EF7               	goto	l3848
  1956  1737                     u5470:
  1957  1737                     l296:
  1958  1737  0008               	return
  1959  1738                     __end_of_LCD_Write_String:
  1960                           
  1961                           	psect	text7
  1962  1629                     __ptext7:	
  1963 ;; *************** function _LCD_Write_Char *****************
  1964 ;; Defined at:
  1965 ;;		line 168 in file "I2C_Master.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  Data            1    wreg     unsigned char 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  Data            1    7[COMMON] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         1       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0
  1982 ;;      Totals:         2       0       0       0       0
  1983 ;;Total ram usage:        2 bytes
  1984 ;; Hardware stack levels used: 1
  1985 ;; Hardware stack levels required when called: 5
  1986 ;; This function calls:
  1987 ;;		_LCD_Write_4Bit
  1988 ;; This function is called by:
  1989 ;;		_LCD_Write_String
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _LCD_Write_Char
  1995  1629                     _LCD_Write_Char:
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1999                           ;LCD_Write_Char@Data stored from wreg
  2000  1629  00F7               	movwf	LCD_Write_Char@Data
  2001  162A                     l3344:
  2002                           
  2003                           ;I2C_Master.c: 168: void LCD_Write_Char(char Data);I2C_Master.c: 169: {;I2C_Master.c: 17
      +                          0:   RS = 1;
  2004  162A  1683               	bsf	3,5	;RP0=1, select bank1
  2005  162B  1303               	bcf	3,6	;RP1=0, select bank1
  2006  162C  01AE               	clrf	_RS^(0+128)
  2007  162D  0AAE               	incf	_RS^(0+128),f
  2008  162E                     l3346:
  2009                           
  2010                           ;I2C_Master.c: 171:   LCD_Write_4Bit(Data & 0xF0);
  2011  162E  0877               	movf	LCD_Write_Char@Data,w
  2012  162F  39F0               	andlw	240
  2013  1630  160A  118A  25BB  160A  118A  	fcall	_LCD_Write_4Bit
  2014                           
  2015                           ;I2C_Master.c: 172:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2016  1635  0877               	movf	LCD_Write_Char@Data,w
  2017  1636  00F6               	movwf	??_LCD_Write_Char
  2018  1637  3003               	movlw	3
  2019  1638                     u4325:
  2020  1638  1003               	clrc
  2021  1639  0DF6               	rlf	??_LCD_Write_Char,f
  2022  163A  3EFF               	addlw	-1
  2023  163B  1D03               	skipz
  2024  163C  2E38               	goto	u4325
  2025  163D  1003               	clrc
  2026  163E  0D76               	rlf	??_LCD_Write_Char,w
  2027  163F  39F0               	andlw	240
  2028  1640  160A  118A  25BB  160A  118A  	fcall	_LCD_Write_4Bit
  2029  1645                     l290:
  2030  1645  0008               	return
  2031  1646                     __end_of_LCD_Write_Char:
  2032                           
  2033                           	psect	text8
  2034  16BA                     __ptext8:	
  2035 ;; *************** function _LCD_Set_Cursor *****************
  2036 ;; Defined at:
  2037 ;;		line 181 in file "I2C_Master.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  ROW             1    wreg     unsigned char 
  2040 ;;  COL             1    8[COMMON] unsigned char 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  ROW             1    9[COMMON] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         1       0       0       0       0
  2053 ;;      Locals:         1       0       0       0       0
  2054 ;;      Temps:          0       2       0       0       0
  2055 ;;      Totals:         2       2       0       0       0
  2056 ;;Total ram usage:        4 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 6
  2059 ;; This function calls:
  2060 ;;		_LCD_CMD
  2061 ;; This function is called by:
  2062 ;;		_LCD_Start
  2063 ;;		_LCD_Send
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _LCD_Set_Cursor
  2069  16BA                     _LCD_Set_Cursor:
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2073                           ;LCD_Set_Cursor@ROW stored from wreg
  2074  16BA  00F9               	movwf	LCD_Set_Cursor@ROW
  2075  16BB                     l3830:
  2076                           
  2077                           ;I2C_Master.c: 181: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_Master
      +                          .c: 182: {;I2C_Master.c: 183:   switch(ROW)
  2078  16BB  2EDC               	goto	l3840
  2079  16BC                     l3832:
  2080                           
  2081                           ;I2C_Master.c: 186:       LCD_CMD(0xC0 + COL-1);
  2082  16BC  0878               	movf	LCD_Set_Cursor@COL,w
  2083  16BD  3EBF               	addlw	191
  2084  16BE  160A  118A  25F0  160A  118A  	fcall	_LCD_CMD
  2085                           
  2086                           ;I2C_Master.c: 187:       break;
  2087  16C3  2EF1               	goto	l305
  2088  16C4                     l3834:
  2089                           
  2090                           ;I2C_Master.c: 189:       LCD_CMD(0x94 + COL-1);
  2091  16C4  0878               	movf	LCD_Set_Cursor@COL,w
  2092  16C5  3E93               	addlw	147
  2093  16C6  160A  118A  25F0  160A  118A  	fcall	_LCD_CMD
  2094                           
  2095                           ;I2C_Master.c: 190:       break;
  2096  16CB  2EF1               	goto	l305
  2097  16CC                     l3836:
  2098                           
  2099                           ;I2C_Master.c: 192:       LCD_CMD(0xD4 + COL-1);
  2100  16CC  0878               	movf	LCD_Set_Cursor@COL,w
  2101  16CD  3ED3               	addlw	211
  2102  16CE  160A  118A  25F0  160A  118A  	fcall	_LCD_CMD
  2103                           
  2104                           ;I2C_Master.c: 193:       break;
  2105  16D3  2EF1               	goto	l305
  2106  16D4                     l3838:
  2107                           
  2108                           ;I2C_Master.c: 196:       LCD_CMD(0x80 + COL-1);
  2109  16D4  0878               	movf	LCD_Set_Cursor@COL,w
  2110  16D5  3E7F               	addlw	127
  2111  16D6  160A  118A  25F0  160A  118A  	fcall	_LCD_CMD
  2112                           
  2113                           ;I2C_Master.c: 197:   }
  2114  16DB  2EF1               	goto	l305
  2115  16DC                     l3840:
  2116  16DC  0879               	movf	LCD_Set_Cursor@ROW,w
  2117  16DD  1283               	bcf	3,5	;RP0=0, select bank0
  2118  16DE  1303               	bcf	3,6	;RP1=0, select bank0
  2119  16DF  00A0               	movwf	??_LCD_Set_Cursor
  2120  16E0  01A1               	clrf	??_LCD_Set_Cursor+1
  2121                           
  2122                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 1, Range of values is 0 to 0
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte            4     3 (average)
  2128                           ; direct_byte           11     8 (fixed)
  2129                           ; jumptable            260     6 (fixed)
  2130                           ;	Chosen strategy is simple_byte
  2131  16E1  0821               	movf	??_LCD_Set_Cursor+1,w
  2132  16E2  3A00               	xorlw	0	; case 0
  2133  16E3  1903               	skipnz
  2134  16E4  2EE6               	goto	l4116
  2135  16E5  2ED4               	goto	l3838
  2136  16E6                     l4116:
  2137                           
  2138                           ; Switch size 1, requested type "simple"
  2139                           ; Number of cases is 3, Range of values is 2 to 4
  2140                           ; switch strategies available:
  2141                           ; Name         Instructions Cycles
  2142                           ; simple_byte           10     6 (average)
  2143                           ; direct_byte           20    11 (fixed)
  2144                           ; jumptable            263     9 (fixed)
  2145                           ;	Chosen strategy is simple_byte
  2146  16E6  0820               	movf	??_LCD_Set_Cursor,w
  2147  16E7  3A02               	xorlw	2	; case 2
  2148  16E8  1903               	skipnz
  2149  16E9  2EBC               	goto	l3832
  2150  16EA  3A01               	xorlw	1	; case 3
  2151  16EB  1903               	skipnz
  2152  16EC  2EC4               	goto	l3834
  2153  16ED  3A07               	xorlw	7	; case 4
  2154  16EE  1903               	skipnz
  2155  16EF  2ECC               	goto	l3836
  2156  16F0  2ED4               	goto	l3838
  2157  16F1                     l305:
  2158  16F1  0008               	return
  2159  16F2                     __end_of_LCD_Set_Cursor:
  2160                           
  2161                           	psect	text9
  2162  15F0                     __ptext9:	
  2163 ;; *************** function _LCD_CMD *****************
  2164 ;; Defined at:
  2165 ;;		line 161 in file "I2C_Master.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  CMD             1    wreg     unsigned char 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  CMD             1    7[COMMON] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         0       0       0       0       0
  2180 ;;      Locals:         1       0       0       0       0
  2181 ;;      Temps:          1       0       0       0       0
  2182 ;;      Totals:         2       0       0       0       0
  2183 ;;Total ram usage:        2 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 5
  2186 ;; This function calls:
  2187 ;;		_LCD_Write_4Bit
  2188 ;; This function is called by:
  2189 ;;		_LCD_Init
  2190 ;;		_LCD_Set_Cursor
  2191 ;;		_LCD_SL
  2192 ;;		_LCD_SR
  2193 ;;		_LCD_Clear
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _LCD_CMD
  2199  15F0                     _LCD_CMD:
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2203                           ;LCD_CMD@CMD stored from wreg
  2204  15F0  00F7               	movwf	LCD_CMD@CMD
  2205  15F1                     l3338:
  2206                           
  2207                           ;I2C_Master.c: 161: void LCD_CMD(unsigned char CMD);I2C_Master.c: 162: {;I2C_Master.c: 1
      +                          63:   RS = 0;
  2208  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  2209  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  2210  15F3  01AE               	clrf	_RS^(0+128)
  2211  15F4                     l3340:
  2212                           
  2213                           ;I2C_Master.c: 164:   LCD_Write_4Bit(CMD & 0xF0);
  2214  15F4  0877               	movf	LCD_CMD@CMD,w
  2215  15F5  39F0               	andlw	240
  2216  15F6  160A  118A  25BB  160A  118A  	fcall	_LCD_Write_4Bit
  2217  15FB                     l3342:
  2218                           
  2219                           ;I2C_Master.c: 165:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2220  15FB  0877               	movf	LCD_CMD@CMD,w
  2221  15FC  00F6               	movwf	??_LCD_CMD
  2222  15FD  3003               	movlw	3
  2223  15FE                     u4315:
  2224  15FE  1003               	clrc
  2225  15FF  0DF6               	rlf	??_LCD_CMD,f
  2226  1600  3EFF               	addlw	-1
  2227  1601  1D03               	skipz
  2228  1602  2DFE               	goto	u4315
  2229  1603  1003               	clrc
  2230  1604  0D76               	rlf	??_LCD_CMD,w
  2231  1605  39F0               	andlw	240
  2232  1606  160A  118A  25BB  160A  118A  	fcall	_LCD_Write_4Bit
  2233  160B                     l287:
  2234  160B  0008               	return
  2235  160C                     __end_of_LCD_CMD:
  2236                           
  2237                           	psect	text10
  2238  15BB                     __ptext10:	
  2239 ;; *************** function _LCD_Write_4Bit *****************
  2240 ;; Defined at:
  2241 ;;		line 152 in file "I2C_Master.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  Nibble          1    wreg     unsigned char 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  Nibble          1    5[COMMON] unsigned char 
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0, pclath, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2255 ;;      Params:         0       0       0       0       0
  2256 ;;      Locals:         1       0       0       0       0
  2257 ;;      Temps:          1       0       0       0       0
  2258 ;;      Totals:         2       0       0       0       0
  2259 ;;Total ram usage:        2 bytes
  2260 ;; Hardware stack levels used: 1
  2261 ;; Hardware stack levels required when called: 4
  2262 ;; This function calls:
  2263 ;;		_IO_Expander_Write
  2264 ;; This function is called by:
  2265 ;;		_LCD_CMD
  2266 ;;		_LCD_Write_Char
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _LCD_Write_4Bit
  2272  15BB                     _LCD_Write_4Bit:
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  2276                           ;LCD_Write_4Bit@Nibble stored from wreg
  2277  15BB  00F5               	movwf	LCD_Write_4Bit@Nibble
  2278  15BC                     l3124:
  2279                           
  2280                           ;I2C_Master.c: 152: void LCD_Write_4Bit(unsigned char Nibble);I2C_Master.c: 153: {;I2C_M
      +                          aster.c: 155:   Nibble |= RS;
  2281  15BC  1683               	bsf	3,5	;RP0=1, select bank1
  2282  15BD  1303               	bcf	3,6	;RP1=0, select bank1
  2283  15BE  082E               	movf	_RS^(0+128),w
  2284  15BF  00F4               	movwf	??_LCD_Write_4Bit
  2285  15C0  0874               	movf	??_LCD_Write_4Bit,w
  2286  15C1  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  2287  15C2                     l3126:
  2288                           
  2289                           ;I2C_Master.c: 156:   IO_Expander_Write(Nibble | 0x04);
  2290  15C2  0875               	movf	LCD_Write_4Bit@Nibble,w
  2291  15C3  3804               	iorlw	4
  2292  15C4  160A  118A  260C  160A  118A  	fcall	_IO_Expander_Write
  2293  15C9                     l3128:
  2294                           
  2295                           ;I2C_Master.c: 157:   IO_Expander_Write(Nibble & 0xFB);
  2296  15C9  0875               	movf	LCD_Write_4Bit@Nibble,w
  2297  15CA  39FB               	andlw	251
  2298  15CB  160A  118A  260C  160A  118A  	fcall	_IO_Expander_Write
  2299                           
  2300                           ;I2C_Master.c: 158:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  2301  15D0  3021               	movlw	33
  2302  15D1  00F4               	movwf	??_LCD_Write_4Bit
  2303  15D2                     u5727:
  2304  15D2  0BF4               	decfsz	??_LCD_Write_4Bit,f
  2305  15D3  2DD2               	goto	u5727
  2306  15D4                     l284:
  2307  15D4  0008               	return
  2308  15D5                     __end_of_LCD_Write_4Bit:
  2309                           
  2310                           	psect	text11
  2311  160C                     __ptext11:	
  2312 ;; *************** function _IO_Expander_Write *****************
  2313 ;; Defined at:
  2314 ;;		line 144 in file "I2C_Master.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  Data            1    wreg     unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  Data            1    3[COMMON] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         1       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0
  2331 ;;      Totals:         1       0       0       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 3
  2335 ;; This function calls:
  2336 ;;		_I2C_Master_Start
  2337 ;;		_I2C_Master_Stop
  2338 ;;		_I2C_Master_Write
  2339 ;; This function is called by:
  2340 ;;		_LCD_Init
  2341 ;;		_LCD_Write_4Bit
  2342 ;;		_Backlight
  2343 ;;		_noBacklight
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _IO_Expander_Write
  2349  160C                     _IO_Expander_Write:
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2353                           ;IO_Expander_Write@Data stored from wreg
  2354  160C  00F3               	movwf	IO_Expander_Write@Data
  2355  160D                     l3122:
  2356                           
  2357                           ;I2C_Master.c: 144: void IO_Expander_Write(unsigned char Data);I2C_Master.c: 145: {;I2C_
      +                          Master.c: 146:   I2C_Master_Start();
  2358  160D  160A  118A  2550  160A  118A  	fcall	_I2C_Master_Start
  2359                           
  2360                           ;I2C_Master.c: 147:   I2C_Master_Write(i2c_add);
  2361  1612  1683               	bsf	3,5	;RP0=1, select bank1
  2362  1613  1303               	bcf	3,6	;RP1=0, select bank1
  2363  1614  0864               	movf	_i2c_add^(0+128),w
  2364  1615  160A  118A  257C  160A  118A  	fcall	_I2C_Master_Write
  2365                           
  2366                           ;I2C_Master.c: 148:   I2C_Master_Write(Data | BackLight_State);
  2367  161A  0873               	movf	IO_Expander_Write@Data,w
  2368  161B  1683               	bsf	3,5	;RP0=1, select bank1
  2369  161C  1303               	bcf	3,6	;RP1=0, select bank1
  2370  161D  0465               	iorwf	_BackLight_State^(0+128),w
  2371  161E  160A  118A  257C  160A  118A  	fcall	_I2C_Master_Write
  2372                           
  2373                           ;I2C_Master.c: 149:   I2C_Master_Stop();
  2374  1623  160A  118A  2559  160A  118A  	fcall	_I2C_Master_Stop
  2375  1628                     l281:
  2376  1628  0008               	return
  2377  1629                     __end_of_IO_Expander_Write:
  2378                           
  2379                           	psect	text12
  2380  0029                     __ptext12:	
  2381 ;; *************** function _ADC_convert *****************
  2382 ;; Defined at:
  2383 ;;		line 243 in file "Master_PIC.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  data            1    wreg     PTR unsigned char 
  2386 ;;		 -> converted03(10), converted02(10), converted01(10), 
  2387 ;;  a               4   57[BANK0 ] float 
  2388 ;;  place           2   61[BANK0 ] int 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  data            1    4[BANK1 ] PTR unsigned char 
  2391 ;;		 -> converted03(10), converted02(10), converted01(10), 
  2392 ;;  x               4    5[BANK1 ] float 
  2393 ;;  mu              2   13[BANK1 ] int 
  2394 ;;  digits          2   11[BANK1 ] int 
  2395 ;;  i               2    9[BANK1 ] int 
  2396 ;;  j               2    2[BANK1 ] int 
  2397 ;;  temp            2    0[BANK1 ] int 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2407 ;;      Params:         0       6       0       0       0
  2408 ;;      Locals:         0       0      15       0       0
  2409 ;;      Temps:          0       2       0       0       0
  2410 ;;      Totals:         0       8      15       0       0
  2411 ;;Total ram usage:       23 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 3
  2414 ;; This function calls:
  2415 ;;		___awdiv
  2416 ;;		___fldiv
  2417 ;;		___flge
  2418 ;;		___flmul
  2419 ;;		___flsub
  2420 ;;		___fltol
  2421 ;;		___wmul
  2422 ;;		___xxtofl
  2423 ;; This function is called by:
  2424 ;;		_LCD_Send
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           
  2429                           ;psect for function _ADC_convert
  2430  0029                     _ADC_convert:
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2434                           ;ADC_convert@data stored from wreg
  2435  0029  1683               	bsf	3,5	;RP0=1, select bank1
  2436  002A  1303               	bcf	3,6	;RP1=0, select bank1
  2437  002B  00D9               	movwf	ADC_convert@data^(0+128)
  2438  002C                     l3854:
  2439                           
  2440                           ;Master_PIC.c: 243:      x=0.0;;Master_PIC.c: 244:      mu=1;;Master_PIC.c: 245:      di
      +                          gits=place;
  2441  002C  1283               	bcf	3,5	;RP0=0, select bank0
  2442  002D  1303               	bcf	3,6	;RP1=0, select bank0
  2443  002E  085C               	movf	ADC_convert@a+3,w
  2444  002F  00F5               	movwf	___fltol@f1+3
  2445  0030  085B               	movf	ADC_convert@a+2,w
  2446  0031  00F4               	movwf	___fltol@f1+2
  2447  0032  085A               	movf	ADC_convert@a+1,w
  2448  0033  00F3               	movwf	___fltol@f1+1
  2449  0034  0859               	movf	ADC_convert@a,w
  2450  0035  00F2               	movwf	___fltol@f1
  2451  0036  120A  118A  277E  120A  118A  	fcall	___fltol
  2452  003B  0873               	movf	?___fltol+1,w
  2453  003C  1683               	bsf	3,5	;RP0=1, select bank1
  2454  003D  1303               	bcf	3,6	;RP1=0, select bank1
  2455  003E  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  2456  003F  0872               	movf	?___fltol,w
  2457  0040  00D5               	movwf	ADC_convert@temp^(0+128)
  2458  0041                     l3856:
  2459  0041                     l3858:
  2460                           
  2461                           ;Master_PIC.c: 247:      {
  2462  0041  01E0               	clrf	ADC_convert@digits^(0+128)
  2463  0042  01E1               	clrf	(ADC_convert@digits+1)^(0+128)
  2464  0043                     l3860:
  2465                           
  2466                           ;Master_PIC.c: 248:          if(digits==1)mu=1;
  2467  0043  01DE               	clrf	ADC_convert@i^(0+128)
  2468  0044  01DF               	clrf	(ADC_convert@i+1)^(0+128)
  2469  0045                     l3862:
  2470  0045  3001               	movlw	1
  2471  0046  00E2               	movwf	ADC_convert@mu^(0+128)
  2472  0047  3000               	movlw	0
  2473  0048  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  2474  0049                     l3864:
  2475  0049                     l3866:
  2476                           
  2477                           ;Master_PIC.c: 250: 
  2478  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2479  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2480  004B  085C               	movf	ADC_convert@a+3,w
  2481  004C  00F5               	movwf	___flge@ff1+3
  2482  004D  085B               	movf	ADC_convert@a+2,w
  2483  004E  00F4               	movwf	___flge@ff1+2
  2484  004F  085A               	movf	ADC_convert@a+1,w
  2485  0050  00F3               	movwf	___flge@ff1+1
  2486  0051  0859               	movf	ADC_convert@a,w
  2487  0052  00F2               	movwf	___flge@ff1
  2488  0053  3000               	movlw	0
  2489  0054  00F9               	movwf	___flge@ff2+3
  2490  0055  3000               	movlw	0
  2491  0056  00F8               	movwf	___flge@ff2+2
  2492  0057  3000               	movlw	0
  2493  0058  00F7               	movwf	___flge@ff2+1
  2494  0059  3000               	movlw	0
  2495  005A  00F6               	movwf	___flge@ff2
  2496  005B  120A  158A  2162  120A  118A  	fcall	___flge
  2497  0060  1803               	btfsc	3,0
  2498  0061  2863               	goto	u5481
  2499  0062  2864               	goto	u5480
  2500  0063                     u5481:
  2501  0063  28B2               	goto	l3878
  2502  0064                     u5480:
  2503  0064                     l3868:
  2504                           
  2505                           ;Master_PIC.c: 251:          x=a/mu;;Master_PIC.c: 252:          a=a-((int)x*mu);
  2506  0064  30BF               	movlw	191
  2507  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0067  00C2               	movwf	___flmul@b+3
  2510  0068  3080               	movlw	128
  2511  0069  00C1               	movwf	___flmul@b+2
  2512  006A  3000               	movlw	0
  2513  006B  00C0               	movwf	___flmul@b+1
  2514  006C  3000               	movlw	0
  2515  006D  00BF               	movwf	___flmul@b
  2516  006E  085C               	movf	ADC_convert@a+3,w
  2517  006F  00C6               	movwf	___flmul@a+3
  2518  0070  085B               	movf	ADC_convert@a+2,w
  2519  0071  00C5               	movwf	___flmul@a+2
  2520  0072  085A               	movf	ADC_convert@a+1,w
  2521  0073  00C4               	movwf	___flmul@a+1
  2522  0074  0859               	movf	ADC_convert@a,w
  2523  0075  00C3               	movwf	___flmul@a
  2524  0076  120A  118A  241D  120A  118A  	fcall	___flmul
  2525  007B  1283               	bcf	3,5	;RP0=0, select bank0
  2526  007C  1303               	bcf	3,6	;RP1=0, select bank0
  2527  007D  0842               	movf	?___flmul+3,w
  2528  007E  00DC               	movwf	ADC_convert@a+3
  2529  007F  0841               	movf	?___flmul+2,w
  2530  0080  00DB               	movwf	ADC_convert@a+2
  2531  0081  0840               	movf	?___flmul+1,w
  2532  0082  00DA               	movwf	ADC_convert@a+1
  2533  0083  083F               	movf	?___flmul,w
  2534  0084  00D9               	movwf	ADC_convert@a
  2535  0085                     l3870:
  2536                           
  2537                           ;Master_PIC.c: 253:          data[i]=0x30+((int)x);
  2538  0085  302D               	movlw	45
  2539  0086  00DF               	movwf	??_ADC_convert
  2540  0087  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0088  1303               	bcf	3,6	;RP1=0, select bank1
  2542  0089  0859               	movf	ADC_convert@data^(0+128),w
  2543  008A  0084               	movwf	4
  2544  008B  1283               	bcf	3,5	;RP0=0, select bank0
  2545  008C  1303               	bcf	3,6	;RP1=0, select bank0
  2546  008D  085F               	movf	??_ADC_convert,w
  2547  008E  1383               	bcf	3,7	;select IRP bank0
  2548  008F  0080               	movwf	0
  2549  0090                     l3872:
  2550                           
  2551                           ;Master_PIC.c: 254:          i++;
  2552  0090  3001               	movlw	1
  2553  0091  1683               	bsf	3,5	;RP0=1, select bank1
  2554  0092  1303               	bcf	3,6	;RP1=0, select bank1
  2555  0093  07DE               	addwf	ADC_convert@i^(0+128),f
  2556  0094  1803               	skipnc
  2557  0095  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  2558  0096  3000               	movlw	0
  2559  0097  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  2560  0098  28B2               	goto	l3878
  2561  0099                     l3874:
  2562                           
  2563                           ;Master_PIC.c: 258: ;Master_PIC.c: 259:     data[i]='\n';
  2564  0099  300A               	movlw	10
  2565  009A  00F2               	movwf	___awdiv@divisor
  2566  009B  3000               	movlw	0
  2567  009C  00F3               	movwf	___awdiv@divisor+1
  2568  009D  0856               	movf	(ADC_convert@temp+1)^(0+128),w
  2569  009E  00F5               	movwf	___awdiv@dividend+1
  2570  009F  0855               	movf	ADC_convert@temp^(0+128),w
  2571  00A0  00F4               	movwf	___awdiv@dividend
  2572  00A1  160A  118A  2797  120A  118A  	fcall	___awdiv
  2573  00A6  0873               	movf	?___awdiv+1,w
  2574  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2575  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2576  00A9  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  2577  00AA  0872               	movf	?___awdiv,w
  2578  00AB  00D5               	movwf	ADC_convert@temp^(0+128)
  2579  00AC                     l3876:
  2580                           
  2581                           ;Master_PIC.c: 260: }
  2582  00AC  3001               	movlw	1
  2583  00AD  07E0               	addwf	ADC_convert@digits^(0+128),f
  2584  00AE  1803               	skipnc
  2585  00AF  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  2586  00B0  3000               	movlw	0
  2587  00B1  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  2588  00B2                     l3878:
  2589                           
  2590                           ;Master_PIC.c: 257:      }
  2591  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  2592  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  2593  00B4  0855               	movf	ADC_convert@temp^(0+128),w
  2594  00B5  0456               	iorwf	(ADC_convert@temp+1)^(0+128),w
  2595  00B6  1D03               	btfss	3,2
  2596  00B7  28B9               	goto	u5491
  2597  00B8  28BA               	goto	u5490
  2598  00B9                     u5491:
  2599  00B9  2899               	goto	l3874
  2600  00BA                     u5490:
  2601  00BA  29D6               	goto	l3902
  2602  00BB                     l3880:
  2603                           
  2604                           ;Master_PIC.c: 263: char division (char valor){;Master_PIC.c: 264:     hundreds = valor/
      +                          100;
  2605  00BB  0360               	decf	ADC_convert@digits^(0+128),w
  2606  00BC  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2607  00BD  1D03               	btfss	3,2
  2608  00BE  28C0               	goto	u5501
  2609  00BF  28C1               	goto	u5500
  2610  00C0                     u5501:
  2611  00C0  28C6               	goto	l3884
  2612  00C1                     u5500:
  2613  00C1                     l3882:
  2614  00C1  3001               	movlw	1
  2615  00C2  00E2               	movwf	ADC_convert@mu^(0+128)
  2616  00C3  3000               	movlw	0
  2617  00C4  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  2618  00C5  2908               	goto	l3892
  2619  00C6                     l3884:
  2620  00C6  3002               	movlw	2
  2621  00C7  00D7               	movwf	ADC_convert@j^(0+128)
  2622  00C8  3000               	movlw	0
  2623  00C9  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  2624  00CA  28F2               	goto	l3890
  2625  00CB                     l3886:
  2626  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  2627  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  2628  00CD  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  2629  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2630  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2631  00D0  00A6               	movwf	___wmul@multiplier+1
  2632  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  2633  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  2634  00D3  0862               	movf	ADC_convert@mu^(0+128),w
  2635  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2636  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2637  00D6  00A5               	movwf	___wmul@multiplier
  2638  00D7  300A               	movlw	10
  2639  00D8  00A7               	movwf	___wmul@multiplicand
  2640  00D9  3000               	movlw	0
  2641  00DA  00A8               	movwf	___wmul@multiplicand+1
  2642  00DB  160A  118A  266A  120A  118A  	fcall	___wmul
  2643  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2644  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2645  00E2  0826               	movf	?___wmul+1,w
  2646  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2647  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2648  00E5  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  2649  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2650  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2651  00E8  0825               	movf	?___wmul,w
  2652  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  2653  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  2654  00EB  00E2               	movwf	ADC_convert@mu^(0+128)
  2655  00EC                     l3888:
  2656  00EC  3001               	movlw	1
  2657  00ED  07D7               	addwf	ADC_convert@j^(0+128),f
  2658  00EE  1803               	skipnc
  2659  00EF  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  2660  00F0  3000               	movlw	0
  2661  00F1  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  2662  00F2                     l3890:
  2663  00F2  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  2664  00F3  3A80               	xorlw	128
  2665  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2666  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2667  00F6  00DF               	movwf	??_ADC_convert
  2668  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2669  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  2670  00F9  0858               	movf	(ADC_convert@j+1)^(0+128),w
  2671  00FA  3A80               	xorlw	128
  2672  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2673  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2674  00FD  025F               	subwf	??_ADC_convert,w
  2675  00FE  1D03               	skipz
  2676  00FF  2904               	goto	u5515
  2677  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0102  0857               	movf	ADC_convert@j^(0+128),w
  2680  0103  0260               	subwf	ADC_convert@digits^(0+128),w
  2681  0104                     u5515:
  2682  0104  1803               	skipnc
  2683  0105  2907               	goto	u5511
  2684  0106  2908               	goto	u5510
  2685  0107                     u5511:
  2686  0107  28CB               	goto	l3886
  2687  0108                     u5510:
  2688  0108                     l3892:
  2689                           
  2690                           ;Master_PIC.c: 267:     units = residuo%10;
  2691  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2692  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2693  010A  0862               	movf	ADC_convert@mu^(0+128),w
  2694  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2695  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2696  010D  00A9               	movwf	___xxtofl@val
  2697  010E  1683               	bsf	3,5	;RP0=1, select bank1
  2698  010F  1303               	bcf	3,6	;RP1=0, select bank1
  2699  0110  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  2700  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2701  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2702  0113  00AA               	movwf	___xxtofl@val+1
  2703  0114  3000               	movlw	0
  2704  0115  1BAA               	btfsc	___xxtofl@val+1,7
  2705  0116  30FF               	movlw	255
  2706  0117  00AB               	movwf	___xxtofl@val+2
  2707  0118  00AC               	movwf	___xxtofl@val+3
  2708  0119  3001               	movlw	1
  2709  011A  120A  158A  2206  120A  118A  	fcall	___xxtofl
  2710  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0121  082C               	movf	?___xxtofl+3,w
  2713  0122  00BA               	movwf	___fldiv@a+3
  2714  0123  082B               	movf	?___xxtofl+2,w
  2715  0124  00B9               	movwf	___fldiv@a+2
  2716  0125  082A               	movf	?___xxtofl+1,w
  2717  0126  00B8               	movwf	___fldiv@a+1
  2718  0127  0829               	movf	?___xxtofl,w
  2719  0128  00B7               	movwf	___fldiv@a
  2720  0129  085C               	movf	ADC_convert@a+3,w
  2721  012A  00BE               	movwf	___fldiv@b+3
  2722  012B  085B               	movf	ADC_convert@a+2,w
  2723  012C  00BD               	movwf	___fldiv@b+2
  2724  012D  085A               	movf	ADC_convert@a+1,w
  2725  012E  00BC               	movwf	___fldiv@b+1
  2726  012F  0859               	movf	ADC_convert@a,w
  2727  0130  00BB               	movwf	___fldiv@b
  2728  0131  120A  158A  239B  120A  118A  	fcall	___fldiv
  2729  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0138  083A               	movf	?___fldiv+3,w
  2732  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2733  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2734  013B  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  2735  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2736  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2737  013E  0839               	movf	?___fldiv+2,w
  2738  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0141  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  2741  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0144  0838               	movf	?___fldiv+1,w
  2744  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0147  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  2747  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2749  014A  0837               	movf	?___fldiv,w
  2750  014B  1683               	bsf	3,5	;RP0=1, select bank1
  2751  014C  1303               	bcf	3,6	;RP1=0, select bank1
  2752  014D  00DA               	movwf	ADC_convert@x^(0+128)
  2753                           
  2754                           ;Master_PIC.c: 268: 
  2755  014E  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  2756  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0151  00A8               	movwf	___wmul@multiplicand+1
  2759  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0153  1303               	bcf	3,6	;RP1=0, select bank1
  2761  0154  0862               	movf	ADC_convert@mu^(0+128),w
  2762  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0157  00A7               	movwf	___wmul@multiplicand
  2765  0158  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0159  1303               	bcf	3,6	;RP1=0, select bank1
  2767  015A  085D               	movf	(ADC_convert@x+3)^(0+128),w
  2768  015B  00F5               	movwf	___fltol@f1+3
  2769  015C  085C               	movf	(ADC_convert@x+2)^(0+128),w
  2770  015D  00F4               	movwf	___fltol@f1+2
  2771  015E  085B               	movf	(ADC_convert@x+1)^(0+128),w
  2772  015F  00F3               	movwf	___fltol@f1+1
  2773  0160  085A               	movf	ADC_convert@x^(0+128),w
  2774  0161  00F2               	movwf	___fltol@f1
  2775  0162  120A  118A  277E  120A  118A  	fcall	___fltol
  2776  0167  0873               	movf	?___fltol+1,w
  2777  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2779  016A  00A6               	movwf	___wmul@multiplier+1
  2780  016B  0872               	movf	?___fltol,w
  2781  016C  00A5               	movwf	___wmul@multiplier
  2782  016D  160A  118A  266A  120A  118A  	fcall	___wmul
  2783  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0174  0825               	movf	?___wmul,w
  2786  0175  00A9               	movwf	___xxtofl@val
  2787  0176  0826               	movf	?___wmul+1,w
  2788  0177  00AA               	movwf	___xxtofl@val+1
  2789  0178  3000               	movlw	0
  2790  0179  1BAA               	btfsc	___xxtofl@val+1,7
  2791  017A  30FF               	movlw	255
  2792  017B  00AB               	movwf	___xxtofl@val+2
  2793  017C  00AC               	movwf	___xxtofl@val+3
  2794  017D  3001               	movlw	1
  2795  017E  120A  158A  2206  120A  118A  	fcall	___xxtofl
  2796  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2797  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2798  0185  082C               	movf	?___xxtofl+3,w
  2799  0186  00BA               	movwf	___flsub@a+3
  2800  0187  082B               	movf	?___xxtofl+2,w
  2801  0188  00B9               	movwf	___flsub@a+2
  2802  0189  082A               	movf	?___xxtofl+1,w
  2803  018A  00B8               	movwf	___flsub@a+1
  2804  018B  0829               	movf	?___xxtofl,w
  2805  018C  00B7               	movwf	___flsub@a
  2806  018D  085C               	movf	ADC_convert@a+3,w
  2807  018E  00BE               	movwf	___flsub@b+3
  2808  018F  085B               	movf	ADC_convert@a+2,w
  2809  0190  00BD               	movwf	___flsub@b+2
  2810  0191  085A               	movf	ADC_convert@a+1,w
  2811  0192  00BC               	movwf	___flsub@b+1
  2812  0193  0859               	movf	ADC_convert@a,w
  2813  0194  00BB               	movwf	___flsub@b
  2814  0195  160A  118A  2646  120A  118A  	fcall	___flsub
  2815  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2816  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2817  019C  083A               	movf	?___flsub+3,w
  2818  019D  00DC               	movwf	ADC_convert@a+3
  2819  019E  0839               	movf	?___flsub+2,w
  2820  019F  00DB               	movwf	ADC_convert@a+2
  2821  01A0  0838               	movf	?___flsub+1,w
  2822  01A1  00DA               	movwf	ADC_convert@a+1
  2823  01A2  0837               	movf	?___flsub,w
  2824  01A3  00D9               	movwf	ADC_convert@a
  2825  01A4                     l3894:
  2826                           
  2827                           ;Master_PIC.c: 269:     hundreds = hundreds + 48;
  2828  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2829  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2830  01A6  085D               	movf	(ADC_convert@x+3)^(0+128),w
  2831  01A7  00F5               	movwf	___fltol@f1+3
  2832  01A8  085C               	movf	(ADC_convert@x+2)^(0+128),w
  2833  01A9  00F4               	movwf	___fltol@f1+2
  2834  01AA  085B               	movf	(ADC_convert@x+1)^(0+128),w
  2835  01AB  00F3               	movwf	___fltol@f1+1
  2836  01AC  085A               	movf	ADC_convert@x^(0+128),w
  2837  01AD  00F2               	movwf	___fltol@f1
  2838  01AE  120A  118A  277E  120A  118A  	fcall	___fltol
  2839  01B3  0872               	movf	?___fltol,w
  2840  01B4  3E30               	addlw	48
  2841  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2842  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2843  01B7  00DF               	movwf	??_ADC_convert
  2844  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2845  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2846  01BA  085E               	movf	ADC_convert@i^(0+128),w
  2847  01BB  0759               	addwf	ADC_convert@data^(0+128),w
  2848  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2849  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2850  01BE  00E0               	movwf	??_ADC_convert+1
  2851  01BF  0860               	movf	??_ADC_convert+1,w
  2852  01C0  0084               	movwf	4
  2853  01C1  085F               	movf	??_ADC_convert,w
  2854  01C2  1383               	bcf	3,7	;select IRP bank0
  2855  01C3  0080               	movwf	0
  2856  01C4                     l3896:
  2857                           
  2858                           ;Master_PIC.c: 270:     tens = tens + 48;
  2859  01C4  3001               	movlw	1
  2860  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2861  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2862  01C7  07DE               	addwf	ADC_convert@i^(0+128),f
  2863  01C8  1803               	skipnc
  2864  01C9  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  2865  01CA  3000               	movlw	0
  2866  01CB  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  2867  01CC                     l3898:
  2868                           
  2869                           ;Master_PIC.c: 271:     units = units + 48;
  2870  01CC  30FF               	movlw	255
  2871  01CD  07E0               	addwf	ADC_convert@digits^(0+128),f
  2872  01CE  1803               	skipnc
  2873  01CF  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  2874  01D0  30FF               	movlw	255
  2875  01D1  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  2876  01D2                     l3900:
  2877                           
  2878                           ;Master_PIC.c: 272: }
  2879  01D2  3001               	movlw	1
  2880  01D3  00E2               	movwf	ADC_convert@mu^(0+128)
  2881  01D4  3000               	movlw	0
  2882  01D5  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  2883  01D6                     l3902:
  2884                           
  2885                           ;Master_PIC.c: 262: 
  2886  01D6  0860               	movf	ADC_convert@digits^(0+128),w
  2887  01D7  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2888  01D8  1D03               	btfss	3,2
  2889  01D9  29DB               	goto	u5521
  2890  01DA  29DC               	goto	u5520
  2891  01DB                     u5521:
  2892  01DB  28BB               	goto	l3880
  2893  01DC                     u5520:
  2894  01DC                     l3904:
  2895                           
  2896                           ;Master_PIC.c: 275: int concat(int a, int b)
  2897  01DC  302E               	movlw	46
  2898  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2899  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2900  01DF  00DF               	movwf	??_ADC_convert
  2901  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2902  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2903  01E2  085E               	movf	ADC_convert@i^(0+128),w
  2904  01E3  0759               	addwf	ADC_convert@data^(0+128),w
  2905  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2906  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2907  01E6  00E0               	movwf	??_ADC_convert+1
  2908  01E7  0860               	movf	??_ADC_convert+1,w
  2909  01E8  0084               	movwf	4
  2910  01E9  085F               	movf	??_ADC_convert,w
  2911  01EA  1383               	bcf	3,7	;select IRP bank0
  2912  01EB  0080               	movwf	0
  2913  01EC                     l3906:
  2914                           
  2915                           ;Master_PIC.c: 276: {
  2916  01EC  3001               	movlw	1
  2917  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2918  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2919  01EF  07DE               	addwf	ADC_convert@i^(0+128),f
  2920  01F0  1803               	skipnc
  2921  01F1  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  2922  01F2  3000               	movlw	0
  2923  01F3  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  2924  01F4                     l3908:
  2925  01F4                     l3910:
  2926                           
  2927                           ;Master_PIC.c: 278:     char s1[20];
  2928  01F4  3001               	movlw	1
  2929  01F5  00D7               	movwf	ADC_convert@j^(0+128)
  2930  01F6  3000               	movlw	0
  2931  01F7  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  2932  01F8  2A20               	goto	l3916
  2933  01F9                     l3912:
  2934  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2935  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2936  01FB  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  2937  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2938  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2939  01FE  00A6               	movwf	___wmul@multiplier+1
  2940  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2941  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2942  0201  0862               	movf	ADC_convert@mu^(0+128),w
  2943  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2945  0204  00A5               	movwf	___wmul@multiplier
  2946  0205  300A               	movlw	10
  2947  0206  00A7               	movwf	___wmul@multiplicand
  2948  0207  3000               	movlw	0
  2949  0208  00A8               	movwf	___wmul@multiplicand+1
  2950  0209  160A  118A  266A  120A  118A  	fcall	___wmul
  2951  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2952  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0210  0826               	movf	?___wmul+1,w
  2954  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0213  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  2957  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0216  0825               	movf	?___wmul,w
  2960  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0219  00E2               	movwf	ADC_convert@mu^(0+128)
  2963  021A                     l3914:
  2964  021A  3001               	movlw	1
  2965  021B  07D7               	addwf	ADC_convert@j^(0+128),f
  2966  021C  1803               	skipnc
  2967  021D  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  2968  021E  3000               	movlw	0
  2969  021F  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  2970  0220                     l3916:
  2971  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0222  085E               	movf	ADC_convert@place+1,w
  2974  0223  3A80               	xorlw	128
  2975  0224  00DF               	movwf	??_ADC_convert
  2976  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2977  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2978  0227  0858               	movf	(ADC_convert@j+1)^(0+128),w
  2979  0228  3A80               	xorlw	128
  2980  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2981  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2982  022B  025F               	subwf	??_ADC_convert,w
  2983  022C  1D03               	skipz
  2984  022D  2A34               	goto	u5535
  2985  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2986  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2987  0230  0857               	movf	ADC_convert@j^(0+128),w
  2988  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2989  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2990  0233  025D               	subwf	ADC_convert@place,w
  2991  0234                     u5535:
  2992  0234  1803               	skipnc
  2993  0235  2A37               	goto	u5531
  2994  0236  2A38               	goto	u5530
  2995  0237                     u5531:
  2996  0237  29F9               	goto	l3912
  2997  0238                     u5530:
  2998  0238                     l3918:
  2999                           
  3000                           ;Master_PIC.c: 279:     char s2[20];
  3001  0238  1683               	bsf	3,5	;RP0=1, select bank1
  3002  0239  1303               	bcf	3,6	;RP1=0, select bank1
  3003  023A  0862               	movf	ADC_convert@mu^(0+128),w
  3004  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3005  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3006  023D  00A9               	movwf	___xxtofl@val
  3007  023E  1683               	bsf	3,5	;RP0=1, select bank1
  3008  023F  1303               	bcf	3,6	;RP1=0, select bank1
  3009  0240  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3010  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0242  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0243  00AA               	movwf	___xxtofl@val+1
  3013  0244  3000               	movlw	0
  3014  0245  1BAA               	btfsc	___xxtofl@val+1,7
  3015  0246  30FF               	movlw	255
  3016  0247  00AB               	movwf	___xxtofl@val+2
  3017  0248  00AC               	movwf	___xxtofl@val+3
  3018  0249  3001               	movlw	1
  3019  024A  120A  158A  2206  120A  118A  	fcall	___xxtofl
  3020  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0251  082C               	movf	?___xxtofl+3,w
  3023  0252  00C2               	movwf	___flmul@b+3
  3024  0253  082B               	movf	?___xxtofl+2,w
  3025  0254  00C1               	movwf	___flmul@b+2
  3026  0255  082A               	movf	?___xxtofl+1,w
  3027  0256  00C0               	movwf	___flmul@b+1
  3028  0257  0829               	movf	?___xxtofl,w
  3029  0258  00BF               	movwf	___flmul@b
  3030  0259  085C               	movf	ADC_convert@a+3,w
  3031  025A  00F5               	movwf	___fltol@f1+3
  3032  025B  085B               	movf	ADC_convert@a+2,w
  3033  025C  00F4               	movwf	___fltol@f1+2
  3034  025D  085A               	movf	ADC_convert@a+1,w
  3035  025E  00F3               	movwf	___fltol@f1+1
  3036  025F  0859               	movf	ADC_convert@a,w
  3037  0260  00F2               	movwf	___fltol@f1
  3038  0261  120A  118A  277E  120A  118A  	fcall	___fltol
  3039  0266  0872               	movf	?___fltol,w
  3040  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3041  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3042  0269  00A9               	movwf	___xxtofl@val
  3043  026A  0873               	movf	?___fltol+1,w
  3044  026B  00AA               	movwf	___xxtofl@val+1
  3045  026C  3000               	movlw	0
  3046  026D  1BAA               	btfsc	___xxtofl@val+1,7
  3047  026E  30FF               	movlw	255
  3048  026F  00AB               	movwf	___xxtofl@val+2
  3049  0270  00AC               	movwf	___xxtofl@val+3
  3050  0271  3001               	movlw	1
  3051  0272  120A  158A  2206  120A  118A  	fcall	___xxtofl
  3052  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0279  082C               	movf	?___xxtofl+3,w
  3055  027A  00BA               	movwf	___flsub@a+3
  3056  027B  082B               	movf	?___xxtofl+2,w
  3057  027C  00B9               	movwf	___flsub@a+2
  3058  027D  082A               	movf	?___xxtofl+1,w
  3059  027E  00B8               	movwf	___flsub@a+1
  3060  027F  0829               	movf	?___xxtofl,w
  3061  0280  00B7               	movwf	___flsub@a
  3062  0281  085C               	movf	ADC_convert@a+3,w
  3063  0282  00BE               	movwf	___flsub@b+3
  3064  0283  085B               	movf	ADC_convert@a+2,w
  3065  0284  00BD               	movwf	___flsub@b+2
  3066  0285  085A               	movf	ADC_convert@a+1,w
  3067  0286  00BC               	movwf	___flsub@b+1
  3068  0287  0859               	movf	ADC_convert@a,w
  3069  0288  00BB               	movwf	___flsub@b
  3070  0289  160A  118A  2646  120A  118A  	fcall	___flsub
  3071  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3072  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0290  083A               	movf	?___flsub+3,w
  3074  0291  00C6               	movwf	___flmul@a+3
  3075  0292  0839               	movf	?___flsub+2,w
  3076  0293  00C5               	movwf	___flmul@a+2
  3077  0294  0838               	movf	?___flsub+1,w
  3078  0295  00C4               	movwf	___flmul@a+1
  3079  0296  0837               	movf	?___flsub,w
  3080  0297  00C3               	movwf	___flmul@a
  3081  0298  120A  118A  241D  120A  118A  	fcall	___flmul
  3082  029D  1283               	bcf	3,5	;RP0=0, select bank0
  3083  029E  1303               	bcf	3,6	;RP1=0, select bank0
  3084  029F  0842               	movf	?___flmul+3,w
  3085  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3086  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  3087  02A2  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  3088  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3089  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3090  02A5  0841               	movf	?___flmul+2,w
  3091  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  3092  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  3093  02A8  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  3094  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3095  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3096  02AB  0840               	movf	?___flmul+1,w
  3097  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3098  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3099  02AE  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  3100  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3101  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3102  02B1  083F               	movf	?___flmul,w
  3103  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3104  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  3105  02B4  00DA               	movwf	ADC_convert@x^(0+128)
  3106  02B5                     l3920:
  3107                           
  3108                           ;Master_PIC.c: 280: 
  3109  02B5  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3110  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3111  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3112  02B8  00DC               	movwf	ADC_convert@a+3
  3113  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  3114  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  3115  02BB  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3116  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3117  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3118  02BE  00DB               	movwf	ADC_convert@a+2
  3119  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3120  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  3121  02C1  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3122  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3123  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3124  02C4  00DA               	movwf	ADC_convert@a+1
  3125  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  3126  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  3127  02C7  085A               	movf	ADC_convert@x^(0+128),w
  3128  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3129  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3130  02CA  00D9               	movwf	ADC_convert@a
  3131  02CB                     l3922:
  3132  02CB  085C               	movf	ADC_convert@a+3,w
  3133  02CC  00F5               	movwf	___fltol@f1+3
  3134  02CD  085B               	movf	ADC_convert@a+2,w
  3135  02CE  00F4               	movwf	___fltol@f1+2
  3136  02CF  085A               	movf	ADC_convert@a+1,w
  3137  02D0  00F3               	movwf	___fltol@f1+1
  3138  02D1  0859               	movf	ADC_convert@a,w
  3139  02D2  00F2               	movwf	___fltol@f1
  3140  02D3  120A  118A  277E  120A  118A  	fcall	___fltol
  3141  02D8                     l3924:
  3142  02D8                     l3926:
  3143                           
  3144                           ;Master_PIC.c: 283:     sprintf(s1, "%d", a);
  3145  02D8  3001               	movlw	1
  3146  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  3147  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  3148  02DB  00E2               	movwf	ADC_convert@mu^(0+128)
  3149  02DC  3000               	movlw	0
  3150  02DD  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3151  02DE                     l3928:
  3152                           
  3153                           ;Master_PIC.c: 284:     sprintf(s2, "%d", b);
  3154  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3155  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3156  02E0  085E               	movf	ADC_convert@place+1,w
  3157  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3158  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  3159  02E3  00E1               	movwf	(ADC_convert@digits+1)^(0+128)
  3160  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3161  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3162  02E6  085D               	movf	ADC_convert@place,w
  3163  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  3164  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  3165  02E9  00E0               	movwf	ADC_convert@digits^(0+128)
  3166                           
  3167                           ;Master_PIC.c: 285: 
  3168  02EA  2C06               	goto	l3952
  3169  02EB                     l3930:
  3170                           
  3171                           ;Master_PIC.c: 286: ;Master_PIC.c: 287: 
  3172  02EB  0360               	decf	ADC_convert@digits^(0+128),w
  3173  02EC  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3174  02ED  1D03               	btfss	3,2
  3175  02EE  2AF0               	goto	u5541
  3176  02EF  2AF1               	goto	u5540
  3177  02F0                     u5541:
  3178  02F0  2AF6               	goto	l3934
  3179  02F1                     u5540:
  3180  02F1                     l3932:
  3181  02F1  3001               	movlw	1
  3182  02F2  00E2               	movwf	ADC_convert@mu^(0+128)
  3183  02F3  3000               	movlw	0
  3184  02F4  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3185  02F5  2B38               	goto	l3942
  3186  02F6                     l3934:
  3187  02F6  3002               	movlw	2
  3188  02F7  00D7               	movwf	ADC_convert@j^(0+128)
  3189  02F8  3000               	movlw	0
  3190  02F9  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  3191  02FA  2B22               	goto	l3940
  3192  02FB                     l3936:
  3193  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  3194  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  3195  02FD  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3196  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3197  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0300  00A6               	movwf	___wmul@multiplier+1
  3199  0301  1683               	bsf	3,5	;RP0=1, select bank1
  3200  0302  1303               	bcf	3,6	;RP1=0, select bank1
  3201  0303  0862               	movf	ADC_convert@mu^(0+128),w
  3202  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0306  00A5               	movwf	___wmul@multiplier
  3205  0307  300A               	movlw	10
  3206  0308  00A7               	movwf	___wmul@multiplicand
  3207  0309  3000               	movlw	0
  3208  030A  00A8               	movwf	___wmul@multiplicand+1
  3209  030B  160A  118A  266A  120A  118A  	fcall	___wmul
  3210  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0312  0826               	movf	?___wmul+1,w
  3213  0313  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0314  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0315  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  3216  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0318  0825               	movf	?___wmul,w
  3219  0319  1683               	bsf	3,5	;RP0=1, select bank1
  3220  031A  1303               	bcf	3,6	;RP1=0, select bank1
  3221  031B  00E2               	movwf	ADC_convert@mu^(0+128)
  3222  031C                     l3938:
  3223  031C  3001               	movlw	1
  3224  031D  07D7               	addwf	ADC_convert@j^(0+128),f
  3225  031E  1803               	skipnc
  3226  031F  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  3227  0320  3000               	movlw	0
  3228  0321  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  3229  0322                     l3940:
  3230  0322  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  3231  0323  3A80               	xorlw	128
  3232  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0326  00DF               	movwf	??_ADC_convert
  3235  0327  1683               	bsf	3,5	;RP0=1, select bank1
  3236  0328  1303               	bcf	3,6	;RP1=0, select bank1
  3237  0329  0858               	movf	(ADC_convert@j+1)^(0+128),w
  3238  032A  3A80               	xorlw	128
  3239  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3240  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3241  032D  025F               	subwf	??_ADC_convert,w
  3242  032E  1D03               	skipz
  3243  032F  2B34               	goto	u5555
  3244  0330  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0331  1303               	bcf	3,6	;RP1=0, select bank1
  3246  0332  0857               	movf	ADC_convert@j^(0+128),w
  3247  0333  0260               	subwf	ADC_convert@digits^(0+128),w
  3248  0334                     u5555:
  3249  0334  1803               	skipnc
  3250  0335  2B37               	goto	u5551
  3251  0336  2B38               	goto	u5550
  3252  0337                     u5551:
  3253  0337  2AFB               	goto	l3936
  3254  0338                     u5550:
  3255  0338                     l3942:
  3256                           
  3257                           ;Master_PIC.c: 290: 
  3258  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3259  0339  1303               	bcf	3,6	;RP1=0, select bank1
  3260  033A  0862               	movf	ADC_convert@mu^(0+128),w
  3261  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3262  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3263  033D  00A9               	movwf	___xxtofl@val
  3264  033E  1683               	bsf	3,5	;RP0=1, select bank1
  3265  033F  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0340  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3267  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3269  0343  00AA               	movwf	___xxtofl@val+1
  3270  0344  3000               	movlw	0
  3271  0345  1BAA               	btfsc	___xxtofl@val+1,7
  3272  0346  30FF               	movlw	255
  3273  0347  00AB               	movwf	___xxtofl@val+2
  3274  0348  00AC               	movwf	___xxtofl@val+3
  3275  0349  3001               	movlw	1
  3276  034A  120A  158A  2206  120A  118A  	fcall	___xxtofl
  3277  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0351  082C               	movf	?___xxtofl+3,w
  3280  0352  00BA               	movwf	___fldiv@a+3
  3281  0353  082B               	movf	?___xxtofl+2,w
  3282  0354  00B9               	movwf	___fldiv@a+2
  3283  0355  082A               	movf	?___xxtofl+1,w
  3284  0356  00B8               	movwf	___fldiv@a+1
  3285  0357  0829               	movf	?___xxtofl,w
  3286  0358  00B7               	movwf	___fldiv@a
  3287  0359  085C               	movf	ADC_convert@a+3,w
  3288  035A  00BE               	movwf	___fldiv@b+3
  3289  035B  085B               	movf	ADC_convert@a+2,w
  3290  035C  00BD               	movwf	___fldiv@b+2
  3291  035D  085A               	movf	ADC_convert@a+1,w
  3292  035E  00BC               	movwf	___fldiv@b+1
  3293  035F  0859               	movf	ADC_convert@a,w
  3294  0360  00BB               	movwf	___fldiv@b
  3295  0361  120A  158A  239B  120A  118A  	fcall	___fldiv
  3296  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3298  0368  083A               	movf	?___fldiv+3,w
  3299  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3300  036A  1303               	bcf	3,6	;RP1=0, select bank1
  3301  036B  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  3302  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3303  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3304  036E  0839               	movf	?___fldiv+2,w
  3305  036F  1683               	bsf	3,5	;RP0=1, select bank1
  3306  0370  1303               	bcf	3,6	;RP1=0, select bank1
  3307  0371  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  3308  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0374  0838               	movf	?___fldiv+1,w
  3311  0375  1683               	bsf	3,5	;RP0=1, select bank1
  3312  0376  1303               	bcf	3,6	;RP1=0, select bank1
  3313  0377  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  3314  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3315  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3316  037A  0837               	movf	?___fldiv,w
  3317  037B  1683               	bsf	3,5	;RP0=1, select bank1
  3318  037C  1303               	bcf	3,6	;RP1=0, select bank1
  3319  037D  00DA               	movwf	ADC_convert@x^(0+128)
  3320                           
  3321                           ;Master_PIC.c: 291: 
  3322  037E  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3323  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0381  00A8               	movwf	___wmul@multiplicand+1
  3326  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0384  0862               	movf	ADC_convert@mu^(0+128),w
  3329  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3330  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3331  0387  00A7               	movwf	___wmul@multiplicand
  3332  0388  1683               	bsf	3,5	;RP0=1, select bank1
  3333  0389  1303               	bcf	3,6	;RP1=0, select bank1
  3334  038A  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3335  038B  00F5               	movwf	___fltol@f1+3
  3336  038C  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3337  038D  00F4               	movwf	___fltol@f1+2
  3338  038E  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3339  038F  00F3               	movwf	___fltol@f1+1
  3340  0390  085A               	movf	ADC_convert@x^(0+128),w
  3341  0391  00F2               	movwf	___fltol@f1
  3342  0392  120A  118A  277E  120A  118A  	fcall	___fltol
  3343  0397  0873               	movf	?___fltol+1,w
  3344  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3346  039A  00A6               	movwf	___wmul@multiplier+1
  3347  039B  0872               	movf	?___fltol,w
  3348  039C  00A5               	movwf	___wmul@multiplier
  3349  039D  160A  118A  266A  120A  118A  	fcall	___wmul
  3350  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3351  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3352  03A4  0825               	movf	?___wmul,w
  3353  03A5  00A9               	movwf	___xxtofl@val
  3354  03A6  0826               	movf	?___wmul+1,w
  3355  03A7  00AA               	movwf	___xxtofl@val+1
  3356  03A8  3000               	movlw	0
  3357  03A9  1BAA               	btfsc	___xxtofl@val+1,7
  3358  03AA  30FF               	movlw	255
  3359  03AB  00AB               	movwf	___xxtofl@val+2
  3360  03AC  00AC               	movwf	___xxtofl@val+3
  3361  03AD  3001               	movlw	1
  3362  03AE  120A  158A  2206  120A  118A  	fcall	___xxtofl
  3363  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03B5  082C               	movf	?___xxtofl+3,w
  3366  03B6  00BA               	movwf	___flsub@a+3
  3367  03B7  082B               	movf	?___xxtofl+2,w
  3368  03B8  00B9               	movwf	___flsub@a+2
  3369  03B9  082A               	movf	?___xxtofl+1,w
  3370  03BA  00B8               	movwf	___flsub@a+1
  3371  03BB  0829               	movf	?___xxtofl,w
  3372  03BC  00B7               	movwf	___flsub@a
  3373  03BD  085C               	movf	ADC_convert@a+3,w
  3374  03BE  00BE               	movwf	___flsub@b+3
  3375  03BF  085B               	movf	ADC_convert@a+2,w
  3376  03C0  00BD               	movwf	___flsub@b+2
  3377  03C1  085A               	movf	ADC_convert@a+1,w
  3378  03C2  00BC               	movwf	___flsub@b+1
  3379  03C3  0859               	movf	ADC_convert@a,w
  3380  03C4  00BB               	movwf	___flsub@b
  3381  03C5  160A  118A  2646  120A  118A  	fcall	___flsub
  3382  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3383  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3384  03CC  083A               	movf	?___flsub+3,w
  3385  03CD  00DC               	movwf	ADC_convert@a+3
  3386  03CE  0839               	movf	?___flsub+2,w
  3387  03CF  00DB               	movwf	ADC_convert@a+2
  3388  03D0  0838               	movf	?___flsub+1,w
  3389  03D1  00DA               	movwf	ADC_convert@a+1
  3390  03D2  0837               	movf	?___flsub,w
  3391  03D3  00D9               	movwf	ADC_convert@a
  3392  03D4                     l3944:
  3393                           
  3394                           ;Master_PIC.c: 292:     int c = atoi(s1);
  3395  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3396  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3397  03D6  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3398  03D7  00F5               	movwf	___fltol@f1+3
  3399  03D8  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3400  03D9  00F4               	movwf	___fltol@f1+2
  3401  03DA  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3402  03DB  00F3               	movwf	___fltol@f1+1
  3403  03DC  085A               	movf	ADC_convert@x^(0+128),w
  3404  03DD  00F2               	movwf	___fltol@f1
  3405  03DE  120A  118A  277E  120A  118A  	fcall	___fltol
  3406  03E3  0872               	movf	?___fltol,w
  3407  03E4  3E30               	addlw	48
  3408  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3409  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3410  03E7  00DF               	movwf	??_ADC_convert
  3411  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3412  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  3413  03EA  085E               	movf	ADC_convert@i^(0+128),w
  3414  03EB  0759               	addwf	ADC_convert@data^(0+128),w
  3415  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3416  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3417  03EE  00E0               	movwf	??_ADC_convert+1
  3418  03EF  0860               	movf	??_ADC_convert+1,w
  3419  03F0  0084               	movwf	4
  3420  03F1  085F               	movf	??_ADC_convert,w
  3421  03F2  1383               	bcf	3,7	;select IRP bank0
  3422  03F3  0080               	movwf	0
  3423  03F4                     l3946:
  3424                           
  3425                           ;Master_PIC.c: 293: 
  3426  03F4  3001               	movlw	1
  3427  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3428  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3429  03F7  07DE               	addwf	ADC_convert@i^(0+128),f
  3430  03F8  1803               	skipnc
  3431  03F9  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3432  03FA  3000               	movlw	0
  3433  03FB  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3434  03FC                     l3948:
  3435                           
  3436                           ;Master_PIC.c: 294: 
  3437  03FC  30FF               	movlw	255
  3438  03FD  07E0               	addwf	ADC_convert@digits^(0+128),f
  3439  03FE  1803               	skipnc
  3440  03FF  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  3441  0400  30FF               	movlw	255
  3442  0401  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  3443  0402                     l3950:
  3444                           
  3445                           ;Master_PIC.c: 295:     return c;
  3446  0402  3001               	movlw	1
  3447  0403  00E2               	movwf	ADC_convert@mu^(0+128)
  3448  0404  3000               	movlw	0
  3449  0405  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3450  0406                     l3952:
  3451                           
  3452                           ;Master_PIC.c: 285: 
  3453  0406  0860               	movf	ADC_convert@digits^(0+128),w
  3454  0407  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3455  0408  1D03               	btfss	3,2
  3456  0409  2C0B               	goto	u5561
  3457  040A  2C0C               	goto	u5560
  3458  040B                     u5561:
  3459  040B  2AEB               	goto	l3930
  3460  040C                     u5560:
  3461  040C                     l3954:
  3462                           
  3463                           ;Master_PIC.c: 298: 
  3464  040C  300A               	movlw	10
  3465  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3466  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3467  040F  00DF               	movwf	??_ADC_convert
  3468  0410  1683               	bsf	3,5	;RP0=1, select bank1
  3469  0411  1303               	bcf	3,6	;RP1=0, select bank1
  3470  0412  085E               	movf	ADC_convert@i^(0+128),w
  3471  0413  0759               	addwf	ADC_convert@data^(0+128),w
  3472  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0416  00E0               	movwf	??_ADC_convert+1
  3475  0417  0860               	movf	??_ADC_convert+1,w
  3476  0418  0084               	movwf	4
  3477  0419  085F               	movf	??_ADC_convert,w
  3478  041A  1383               	bcf	3,7	;select IRP bank0
  3479  041B  0080               	movwf	0
  3480  041C                     l169:
  3481  041C  0008               	return
  3482  041D                     __end_of_ADC_convert:
  3483                           
  3484                           	psect	text13
  3485  0A06                     __ptext13:	
  3486 ;; *************** function ___xxtofl *****************
  3487 ;; Defined at:
  3488 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;  sign            1    wreg     unsigned char 
  3491 ;;  val             4    9[BANK0 ] long 
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  sign            1   17[BANK0 ] unsigned char 
  3494 ;;  arg             4   19[BANK0 ] unsigned long 
  3495 ;;  exp             1   18[BANK0 ] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  4    9[BANK0 ] unsigned char 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       4       0       0       0
  3506 ;;      Locals:         0       6       0       0       0
  3507 ;;      Temps:          0       4       0       0       0
  3508 ;;      Totals:         0      14       0       0       0
  3509 ;;Total ram usage:       14 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; Hardware stack levels required when called: 1
  3512 ;; This function calls:
  3513 ;;		Nothing
  3514 ;; This function is called by:
  3515 ;;		_LCD_Send
  3516 ;;		_ADC_convert
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           
  3521                           ;psect for function ___xxtofl
  3522  0A06                     ___xxtofl:
  3523                           
  3524                           ;incstack = 0
  3525                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3526                           ;___xxtofl@sign stored from wreg
  3527  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0A08  00B1               	movwf	___xxtofl@sign
  3530  0A09                     l3750:
  3531  0A09  0831               	movf	___xxtofl@sign,w
  3532  0A0A  1903               	btfsc	3,2
  3533  0A0B  2A0D               	goto	u5301
  3534  0A0C  2A0E               	goto	u5300
  3535  0A0D                     u5301:
  3536  0A0D  2A22               	goto	l3756
  3537  0A0E                     u5300:
  3538  0A0E                     l3752:
  3539  0A0E  1FAC               	btfss	___xxtofl@val+3,7
  3540  0A0F  2A11               	goto	u5311
  3541  0A10  2A12               	goto	u5310
  3542  0A11                     u5311:
  3543  0A11  2A22               	goto	l3756
  3544  0A12                     u5310:
  3545  0A12                     l3754:
  3546  0A12  0929               	comf	___xxtofl@val,w
  3547  0A13  00B3               	movwf	___xxtofl@arg
  3548  0A14  092A               	comf	___xxtofl@val+1,w
  3549  0A15  00B4               	movwf	___xxtofl@arg+1
  3550  0A16  092B               	comf	___xxtofl@val+2,w
  3551  0A17  00B5               	movwf	___xxtofl@arg+2
  3552  0A18  092C               	comf	___xxtofl@val+3,w
  3553  0A19  00B6               	movwf	___xxtofl@arg+3
  3554  0A1A  0AB3               	incf	___xxtofl@arg,f
  3555  0A1B  1903               	skipnz
  3556  0A1C  0AB4               	incf	___xxtofl@arg+1,f
  3557  0A1D  1903               	skipnz
  3558  0A1E  0AB5               	incf	___xxtofl@arg+2,f
  3559  0A1F  1903               	skipnz
  3560  0A20  0AB6               	incf	___xxtofl@arg+3,f
  3561  0A21  2A2A               	goto	l839
  3562  0A22                     l3756:
  3563  0A22  082C               	movf	___xxtofl@val+3,w
  3564  0A23  00B6               	movwf	___xxtofl@arg+3
  3565  0A24  082B               	movf	___xxtofl@val+2,w
  3566  0A25  00B5               	movwf	___xxtofl@arg+2
  3567  0A26  082A               	movf	___xxtofl@val+1,w
  3568  0A27  00B4               	movwf	___xxtofl@arg+1
  3569  0A28  0829               	movf	___xxtofl@val,w
  3570  0A29  00B3               	movwf	___xxtofl@arg
  3571  0A2A                     l839:
  3572  0A2A  082C               	movf	___xxtofl@val+3,w
  3573  0A2B  042B               	iorwf	___xxtofl@val+2,w
  3574  0A2C  042A               	iorwf	___xxtofl@val+1,w
  3575  0A2D  0429               	iorwf	___xxtofl@val,w
  3576  0A2E  1D03               	skipz
  3577  0A2F  2A31               	goto	u5321
  3578  0A30  2A32               	goto	u5320
  3579  0A31                     u5321:
  3580  0A31  2A3B               	goto	l3762
  3581  0A32                     u5320:
  3582  0A32                     l3758:
  3583  0A32  3000               	movlw	0
  3584  0A33  00AC               	movwf	?___xxtofl+3
  3585  0A34  3000               	movlw	0
  3586  0A35  00AB               	movwf	?___xxtofl+2
  3587  0A36  3000               	movlw	0
  3588  0A37  00AA               	movwf	?___xxtofl+1
  3589  0A38  3000               	movlw	0
  3590  0A39  00A9               	movwf	?___xxtofl
  3591  0A3A  2AC1               	goto	l841
  3592  0A3B                     l3762:
  3593  0A3B  3096               	movlw	150
  3594  0A3C  00AD               	movwf	??___xxtofl
  3595  0A3D  082D               	movf	??___xxtofl,w
  3596  0A3E  00B2               	movwf	___xxtofl@exp
  3597  0A3F  2A4D               	goto	l3766
  3598  0A40                     l3764:
  3599  0A40  3001               	movlw	1
  3600  0A41  00AD               	movwf	??___xxtofl
  3601  0A42  082D               	movf	??___xxtofl,w
  3602  0A43  07B2               	addwf	___xxtofl@exp,f
  3603  0A44  3001               	movlw	1
  3604  0A45                     u5335:
  3605  0A45  1003               	clrc
  3606  0A46  0CB6               	rrf	___xxtofl@arg+3,f
  3607  0A47  0CB5               	rrf	___xxtofl@arg+2,f
  3608  0A48  0CB4               	rrf	___xxtofl@arg+1,f
  3609  0A49  0CB3               	rrf	___xxtofl@arg,f
  3610  0A4A  3EFF               	addlw	-1
  3611  0A4B  1D03               	skipz
  3612  0A4C  2A45               	goto	u5335
  3613  0A4D                     l3766:
  3614  0A4D  30FE               	movlw	254
  3615  0A4E  0536               	andwf	___xxtofl@arg+3,w
  3616  0A4F  1D03               	btfss	3,2
  3617  0A50  2A52               	goto	u5341
  3618  0A51  2A53               	goto	u5340
  3619  0A52                     u5341:
  3620  0A52  2A40               	goto	l3764
  3621  0A53                     u5340:
  3622  0A53  2A6F               	goto	l845
  3623  0A54                     l3768:
  3624  0A54  3001               	movlw	1
  3625  0A55  00AD               	movwf	??___xxtofl
  3626  0A56  082D               	movf	??___xxtofl,w
  3627  0A57  07B2               	addwf	___xxtofl@exp,f
  3628  0A58                     l3770:
  3629  0A58  3001               	movlw	1
  3630  0A59  07B3               	addwf	___xxtofl@arg,f
  3631  0A5A  3000               	movlw	0
  3632  0A5B  1803               	skipnc
  3633  0A5C  3001               	movlw	1
  3634  0A5D  07B4               	addwf	___xxtofl@arg+1,f
  3635  0A5E  3000               	movlw	0
  3636  0A5F  1803               	skipnc
  3637  0A60  3001               	movlw	1
  3638  0A61  07B5               	addwf	___xxtofl@arg+2,f
  3639  0A62  3000               	movlw	0
  3640  0A63  1803               	skipnc
  3641  0A64  3001               	movlw	1
  3642  0A65  07B6               	addwf	___xxtofl@arg+3,f
  3643  0A66                     l3772:
  3644  0A66  3001               	movlw	1
  3645  0A67                     u5355:
  3646  0A67  1003               	clrc
  3647  0A68  0CB6               	rrf	___xxtofl@arg+3,f
  3648  0A69  0CB5               	rrf	___xxtofl@arg+2,f
  3649  0A6A  0CB4               	rrf	___xxtofl@arg+1,f
  3650  0A6B  0CB3               	rrf	___xxtofl@arg,f
  3651  0A6C  3EFF               	addlw	-1
  3652  0A6D  1D03               	skipz
  3653  0A6E  2A67               	goto	u5355
  3654  0A6F                     l845:
  3655  0A6F  30FF               	movlw	255
  3656  0A70  0536               	andwf	___xxtofl@arg+3,w
  3657  0A71  1D03               	btfss	3,2
  3658  0A72  2A74               	goto	u5361
  3659  0A73  2A75               	goto	u5360
  3660  0A74                     u5361:
  3661  0A74  2A54               	goto	l3768
  3662  0A75                     u5360:
  3663  0A75  2A81               	goto	l3776
  3664  0A76                     l3774:
  3665  0A76  3001               	movlw	1
  3666  0A77  02B2               	subwf	___xxtofl@exp,f
  3667  0A78  3001               	movlw	1
  3668  0A79  00AD               	movwf	??___xxtofl
  3669  0A7A                     u5375:
  3670  0A7A  1003               	clrc
  3671  0A7B  0DB3               	rlf	___xxtofl@arg,f
  3672  0A7C  0DB4               	rlf	___xxtofl@arg+1,f
  3673  0A7D  0DB5               	rlf	___xxtofl@arg+2,f
  3674  0A7E  0DB6               	rlf	___xxtofl@arg+3,f
  3675  0A7F  0BAD               	decfsz	??___xxtofl,f
  3676  0A80  2A7A               	goto	u5375
  3677  0A81                     l3776:
  3678  0A81  1BB5               	btfsc	___xxtofl@arg+2,7
  3679  0A82  2A84               	goto	u5381
  3680  0A83  2A85               	goto	u5380
  3681  0A84                     u5381:
  3682  0A84  2A8B               	goto	l852
  3683  0A85                     u5380:
  3684  0A85                     l3778:
  3685  0A85  3002               	movlw	2
  3686  0A86  0232               	subwf	___xxtofl@exp,w
  3687  0A87  1803               	skipnc
  3688  0A88  2A8A               	goto	u5391
  3689  0A89  2A8B               	goto	u5390
  3690  0A8A                     u5391:
  3691  0A8A  2A76               	goto	l3774
  3692  0A8B                     u5390:
  3693  0A8B                     l852:
  3694  0A8B  1832               	btfsc	___xxtofl@exp,0
  3695  0A8C  2A8E               	goto	u5401
  3696  0A8D  2A8F               	goto	u5400
  3697  0A8E                     u5401:
  3698  0A8E  2A97               	goto	l853
  3699  0A8F                     u5400:
  3700  0A8F                     l3780:
  3701  0A8F  30FF               	movlw	255
  3702  0A90  05B3               	andwf	___xxtofl@arg,f
  3703  0A91  30FF               	movlw	255
  3704  0A92  05B4               	andwf	___xxtofl@arg+1,f
  3705  0A93  307F               	movlw	127
  3706  0A94  05B5               	andwf	___xxtofl@arg+2,f
  3707  0A95  30FF               	movlw	255
  3708  0A96  05B6               	andwf	___xxtofl@arg+3,f
  3709  0A97                     l853:
  3710  0A97  1003               	clrc
  3711  0A98  0CB2               	rrf	___xxtofl@exp,f
  3712  0A99                     l3782:
  3713  0A99  0832               	movf	___xxtofl@exp,w
  3714  0A9A  00AD               	movwf	??___xxtofl
  3715  0A9B  01AE               	clrf	??___xxtofl+1
  3716  0A9C  01AF               	clrf	??___xxtofl+2
  3717  0A9D  01B0               	clrf	??___xxtofl+3
  3718  0A9E  3018               	movlw	24
  3719  0A9F                     u5415:
  3720  0A9F  1003               	clrc
  3721  0AA0  0DAD               	rlf	??___xxtofl,f
  3722  0AA1  0DAE               	rlf	??___xxtofl+1,f
  3723  0AA2  0DAF               	rlf	??___xxtofl+2,f
  3724  0AA3  0DB0               	rlf	??___xxtofl+3,f
  3725  0AA4                     u5410:
  3726  0AA4  3EFF               	addlw	-1
  3727  0AA5  1D03               	skipz
  3728  0AA6  2A9F               	goto	u5415
  3729  0AA7  082D               	movf	??___xxtofl,w
  3730  0AA8  04B3               	iorwf	___xxtofl@arg,f
  3731  0AA9  082E               	movf	??___xxtofl+1,w
  3732  0AAA  04B4               	iorwf	___xxtofl@arg+1,f
  3733  0AAB  082F               	movf	??___xxtofl+2,w
  3734  0AAC  04B5               	iorwf	___xxtofl@arg+2,f
  3735  0AAD  0830               	movf	??___xxtofl+3,w
  3736  0AAE  04B6               	iorwf	___xxtofl@arg+3,f
  3737  0AAF                     l3784:
  3738  0AAF  0831               	movf	___xxtofl@sign,w
  3739  0AB0  1903               	btfsc	3,2
  3740  0AB1  2AB3               	goto	u5421
  3741  0AB2  2AB4               	goto	u5420
  3742  0AB3                     u5421:
  3743  0AB3  2AB9               	goto	l3790
  3744  0AB4                     u5420:
  3745  0AB4                     l3786:
  3746  0AB4  1FAC               	btfss	___xxtofl@val+3,7
  3747  0AB5  2AB7               	goto	u5431
  3748  0AB6  2AB8               	goto	u5430
  3749  0AB7                     u5431:
  3750  0AB7  2AB9               	goto	l3790
  3751  0AB8                     u5430:
  3752  0AB8                     l3788:
  3753  0AB8  17B6               	bsf	___xxtofl@arg+3,7
  3754  0AB9                     l3790:
  3755  0AB9  0836               	movf	___xxtofl@arg+3,w
  3756  0ABA  00AC               	movwf	?___xxtofl+3
  3757  0ABB  0835               	movf	___xxtofl@arg+2,w
  3758  0ABC  00AB               	movwf	?___xxtofl+2
  3759  0ABD  0834               	movf	___xxtofl@arg+1,w
  3760  0ABE  00AA               	movwf	?___xxtofl+1
  3761  0ABF  0833               	movf	___xxtofl@arg,w
  3762  0AC0  00A9               	movwf	?___xxtofl
  3763  0AC1                     l841:
  3764  0AC1  0008               	return
  3765  0AC2                     __end_of___xxtofl:
  3766                           
  3767                           	psect	text14
  3768  166A                     __ptext14:	
  3769 ;; *************** function ___wmul *****************
  3770 ;; Defined at:
  3771 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  multiplier      2    5[BANK0 ] unsigned int 
  3774 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  product         2    8[COMMON] unsigned int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    5[BANK0 ] unsigned int 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3786 ;;      Params:         0       4       0       0       0
  3787 ;;      Locals:         2       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0
  3789 ;;      Totals:         2       4       0       0       0
  3790 ;;Total ram usage:        6 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; Hardware stack levels required when called: 1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_ADC_convert
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           
  3801                           ;psect for function ___wmul
  3802  166A                     ___wmul:
  3803  166A                     l3348:	
  3804                           ;incstack = 0
  3805                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3806                           
  3807  166A  01F8               	clrf	___wmul@product
  3808  166B  01F9               	clrf	___wmul@product+1
  3809  166C                     l3350:
  3810  166C  1283               	bcf	3,5	;RP0=0, select bank0
  3811  166D  1303               	bcf	3,6	;RP1=0, select bank0
  3812  166E  1C25               	btfss	___wmul@multiplier,0
  3813  166F  2E71               	goto	u4331
  3814  1670  2E72               	goto	u4330
  3815  1671                     u4331:
  3816  1671  2E78               	goto	l406
  3817  1672                     u4330:
  3818  1672                     l3352:
  3819  1672  0827               	movf	___wmul@multiplicand,w
  3820  1673  07F8               	addwf	___wmul@product,f
  3821  1674  1803               	skipnc
  3822  1675  0AF9               	incf	___wmul@product+1,f
  3823  1676  0828               	movf	___wmul@multiplicand+1,w
  3824  1677  07F9               	addwf	___wmul@product+1,f
  3825  1678                     l406:
  3826  1678  3001               	movlw	1
  3827  1679                     u4345:
  3828  1679  1003               	clrc
  3829  167A  0DA7               	rlf	___wmul@multiplicand,f
  3830  167B  0DA8               	rlf	___wmul@multiplicand+1,f
  3831  167C  3EFF               	addlw	-1
  3832  167D  1D03               	skipz
  3833  167E  2E79               	goto	u4345
  3834  167F                     l3354:
  3835  167F  3001               	movlw	1
  3836  1680                     u4355:
  3837  1680  1003               	clrc
  3838  1681  0CA6               	rrf	___wmul@multiplier+1,f
  3839  1682  0CA5               	rrf	___wmul@multiplier,f
  3840  1683  3EFF               	addlw	-1
  3841  1684  1D03               	skipz
  3842  1685  2E80               	goto	u4355
  3843  1686                     l3356:
  3844  1686  0825               	movf	___wmul@multiplier,w
  3845  1687  0426               	iorwf	___wmul@multiplier+1,w
  3846  1688  1D03               	btfss	3,2
  3847  1689  2E8B               	goto	u4361
  3848  168A  2E8C               	goto	u4360
  3849  168B                     u4361:
  3850  168B  2E6C               	goto	l3350
  3851  168C                     u4360:
  3852  168C                     l3358:
  3853  168C  0879               	movf	___wmul@product+1,w
  3854  168D  00A6               	movwf	?___wmul+1
  3855  168E  0878               	movf	___wmul@product,w
  3856  168F  00A5               	movwf	?___wmul
  3857  1690                     l408:
  3858  1690  0008               	return
  3859  1691                     __end_of___wmul:
  3860                           
  3861                           	psect	text15
  3862  077E                     __ptext15:	
  3863 ;; *************** function ___fltol *****************
  3864 ;; Defined at:
  3865 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  f1              4    2[COMMON] unsigned int 
  3868 ;; Auto vars:     Size  Location     Type
  3869 ;;  exp1            1    7[COMMON] unsigned char 
  3870 ;;  sign1           1    6[COMMON] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  4    2[COMMON] long 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3880 ;;      Params:         4       0       0       0       0
  3881 ;;      Locals:         2       0       0       0       0
  3882 ;;      Temps:          0       5       0       0       0
  3883 ;;      Totals:         6       5       0       0       0
  3884 ;;Total ram usage:       11 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_ADC_convert
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function ___fltol
  3896  077E                     ___fltol:
  3897  077E                     l3426:	
  3898                           ;incstack = 0
  3899                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3900                           
  3901  077E  1003               	clrc
  3902  077F  0D74               	rlf	___fltol@f1+2,w
  3903  0780  0D75               	rlf	___fltol@f1+3,w
  3904  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0783  00A0               	movwf	??___fltol
  3907  0784  0820               	movf	??___fltol,w
  3908  0785  00F7               	movwf	___fltol@exp1
  3909  0786  0877               	movf	___fltol@exp1,w
  3910  0787  1D03               	btfss	3,2
  3911  0788  2F8A               	goto	u4541
  3912  0789  2F8B               	goto	u4540
  3913  078A                     u4541:
  3914  078A  2F94               	goto	l3432
  3915  078B                     u4540:
  3916  078B                     l3428:
  3917  078B  3000               	movlw	0
  3918  078C  00F5               	movwf	?___fltol+3
  3919  078D  3000               	movlw	0
  3920  078E  00F4               	movwf	?___fltol+2
  3921  078F  3000               	movlw	0
  3922  0790  00F3               	movwf	?___fltol+1
  3923  0791  3000               	movlw	0
  3924  0792  00F2               	movwf	?___fltol
  3925  0793  2FF9               	goto	l592
  3926  0794                     l3432:
  3927  0794  0872               	movf	___fltol@f1,w
  3928  0795  00A0               	movwf	??___fltol
  3929  0796  0873               	movf	___fltol@f1+1,w
  3930  0797  00A1               	movwf	??___fltol+1
  3931  0798  0874               	movf	___fltol@f1+2,w
  3932  0799  00A2               	movwf	??___fltol+2
  3933  079A  0875               	movf	___fltol@f1+3,w
  3934  079B  00A3               	movwf	??___fltol+3
  3935  079C  301F               	movlw	31
  3936  079D                     u4555:
  3937  079D  1003               	clrc
  3938  079E  0CA3               	rrf	??___fltol+3,f
  3939  079F  0CA2               	rrf	??___fltol+2,f
  3940  07A0  0CA1               	rrf	??___fltol+1,f
  3941  07A1  0CA0               	rrf	??___fltol,f
  3942  07A2                     u4550:
  3943  07A2  3EFF               	addlw	-1
  3944  07A3  1D03               	skipz
  3945  07A4  2F9D               	goto	u4555
  3946  07A5  0820               	movf	??___fltol,w
  3947  07A6  00A4               	movwf	??___fltol+4
  3948  07A7  0824               	movf	??___fltol+4,w
  3949  07A8  00F6               	movwf	___fltol@sign1
  3950  07A9                     l3434:
  3951  07A9  17F4               	bsf	___fltol@f1+2,7
  3952  07AA                     l3436:
  3953  07AA  30FF               	movlw	255
  3954  07AB  05F2               	andwf	___fltol@f1,f
  3955  07AC  30FF               	movlw	255
  3956  07AD  05F3               	andwf	___fltol@f1+1,f
  3957  07AE  30FF               	movlw	255
  3958  07AF  05F4               	andwf	___fltol@f1+2,f
  3959  07B0  3000               	movlw	0
  3960  07B1  05F5               	andwf	___fltol@f1+3,f
  3961  07B2                     l3438:
  3962  07B2  3096               	movlw	150
  3963  07B3  02F7               	subwf	___fltol@exp1,f
  3964  07B4                     l3440:
  3965  07B4  1FF7               	btfss	___fltol@exp1,7
  3966  07B5  2FB7               	goto	u4561
  3967  07B6  2FB8               	goto	u4560
  3968  07B7                     u4561:
  3969  07B7  2FD2               	goto	l3450
  3970  07B8                     u4560:
  3971  07B8                     l3442:
  3972  07B8  0877               	movf	___fltol@exp1,w
  3973  07B9  3A80               	xorlw	128
  3974  07BA  3E97               	addlw	151
  3975  07BB  1803               	skipnc
  3976  07BC  2FBE               	goto	u4571
  3977  07BD  2FBF               	goto	u4570
  3978  07BE                     u4571:
  3979  07BE  2FC0               	goto	l3448
  3980  07BF                     u4570:
  3981  07BF  2F8B               	goto	l3428
  3982  07C0                     l3448:
  3983  07C0  3001               	movlw	1
  3984  07C1                     u4585:
  3985  07C1  1003               	clrc
  3986  07C2  0CF5               	rrf	___fltol@f1+3,f
  3987  07C3  0CF4               	rrf	___fltol@f1+2,f
  3988  07C4  0CF3               	rrf	___fltol@f1+1,f
  3989  07C5  0CF2               	rrf	___fltol@f1,f
  3990  07C6  3EFF               	addlw	-1
  3991  07C7  1D03               	skipz
  3992  07C8  2FC1               	goto	u4585
  3993  07C9  3001               	movlw	1
  3994  07CA  00A0               	movwf	??___fltol
  3995  07CB  0820               	movf	??___fltol,w
  3996  07CC  07F7               	addwf	___fltol@exp1,f
  3997  07CD  1D03               	btfss	3,2
  3998  07CE  2FD0               	goto	u4591
  3999  07CF  2FD1               	goto	u4590
  4000  07D0                     u4591:
  4001  07D0  2FC0               	goto	l3448
  4002  07D1                     u4590:
  4003  07D1  2FE9               	goto	l3458
  4004  07D2                     l3450:
  4005  07D2  3020               	movlw	32
  4006  07D3  0277               	subwf	___fltol@exp1,w
  4007  07D4  1C03               	skipc
  4008  07D5  2FD7               	goto	u4601
  4009  07D6  2FD8               	goto	u4600
  4010  07D7                     u4601:
  4011  07D7  2FE4               	goto	l599
  4012  07D8                     u4600:
  4013  07D8  2F8B               	goto	l3428
  4014  07D9                     l3456:
  4015  07D9  3001               	movlw	1
  4016  07DA  00A0               	movwf	??___fltol
  4017  07DB                     u4615:
  4018  07DB  1003               	clrc
  4019  07DC  0DF2               	rlf	___fltol@f1,f
  4020  07DD  0DF3               	rlf	___fltol@f1+1,f
  4021  07DE  0DF4               	rlf	___fltol@f1+2,f
  4022  07DF  0DF5               	rlf	___fltol@f1+3,f
  4023  07E0  0BA0               	decfsz	??___fltol,f
  4024  07E1  2FDB               	goto	u4615
  4025  07E2  3001               	movlw	1
  4026  07E3  02F7               	subwf	___fltol@exp1,f
  4027  07E4                     l599:
  4028  07E4  0877               	movf	___fltol@exp1,w
  4029  07E5  1D03               	btfss	3,2
  4030  07E6  2FE8               	goto	u4621
  4031  07E7  2FE9               	goto	u4620
  4032  07E8                     u4621:
  4033  07E8  2FD9               	goto	l3456
  4034  07E9                     u4620:
  4035  07E9                     l3458:
  4036  07E9  0876               	movf	___fltol@sign1,w
  4037  07EA  1903               	btfsc	3,2
  4038  07EB  2FED               	goto	u4631
  4039  07EC  2FEE               	goto	u4630
  4040  07ED                     u4631:
  4041  07ED  2FF9               	goto	l602
  4042  07EE                     u4630:
  4043  07EE                     l3460:
  4044  07EE  09F2               	comf	___fltol@f1,f
  4045  07EF  09F3               	comf	___fltol@f1+1,f
  4046  07F0  09F4               	comf	___fltol@f1+2,f
  4047  07F1  09F5               	comf	___fltol@f1+3,f
  4048  07F2  0AF2               	incf	___fltol@f1,f
  4049  07F3  1903               	skipnz
  4050  07F4  0AF3               	incf	___fltol@f1+1,f
  4051  07F5  1903               	skipnz
  4052  07F6  0AF4               	incf	___fltol@f1+2,f
  4053  07F7  1903               	skipnz
  4054  07F8  0AF5               	incf	___fltol@f1+3,f
  4055  07F9                     l602:
  4056  07F9                     l592:
  4057  07F9  0008               	return
  4058  07FA                     __end_of___fltol:
  4059                           
  4060                           	psect	text16
  4061  1646                     __ptext16:	
  4062 ;; *************** function ___flsub *****************
  4063 ;; Defined at:
  4064 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  a               4   23[BANK0 ] long 
  4067 ;;  b               4   27[BANK0 ] long 
  4068 ;; Auto vars:     Size  Location     Type
  4069 ;;		None
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  4   23[BANK0 ] long 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       8       0       0       0
  4080 ;;      Locals:         0       0       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       8       0       0       0
  4083 ;;Total ram usage:        8 bytes
  4084 ;; Hardware stack levels used: 1
  4085 ;; Hardware stack levels required when called: 2
  4086 ;; This function calls:
  4087 ;;		___fladd
  4088 ;; This function is called by:
  4089 ;;		_ADC_convert
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function ___flsub
  4095  1646                     ___flsub:
  4096  1646                     l3462:	
  4097                           ;incstack = 0
  4098                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4099                           
  4100  1646  3080               	movlw	128
  4101  1647  1283               	bcf	3,5	;RP0=0, select bank0
  4102  1648  1303               	bcf	3,6	;RP1=0, select bank0
  4103  1649  06BA               	xorwf	___flsub@a+3,f
  4104  164A                     l3464:
  4105  164A  083E               	movf	___flsub@b+3,w
  4106  164B  00F5               	movwf	___fladd@b+3
  4107  164C  083D               	movf	___flsub@b+2,w
  4108  164D  00F4               	movwf	___fladd@b+2
  4109  164E  083C               	movf	___flsub@b+1,w
  4110  164F  00F3               	movwf	___fladd@b+1
  4111  1650  083B               	movf	___flsub@b,w
  4112  1651  00F2               	movwf	___fladd@b
  4113  1652  083A               	movf	___flsub@a+3,w
  4114  1653  00F9               	movwf	___fladd@a+3
  4115  1654  0839               	movf	___flsub@a+2,w
  4116  1655  00F8               	movwf	___fladd@a+2
  4117  1656  0838               	movf	___flsub@a+1,w
  4118  1657  00F7               	movwf	___fladd@a+1
  4119  1658  0837               	movf	___flsub@a,w
  4120  1659  00F6               	movwf	___fladd@a
  4121  165A  120A  158A  2578  160A  118A  	fcall	___fladd
  4122  165F  0875               	movf	?___fladd+3,w
  4123  1660  1283               	bcf	3,5	;RP0=0, select bank0
  4124  1661  1303               	bcf	3,6	;RP1=0, select bank0
  4125  1662  00BA               	movwf	?___flsub+3
  4126  1663  0874               	movf	?___fladd+2,w
  4127  1664  00B9               	movwf	?___flsub+2
  4128  1665  0873               	movf	?___fladd+1,w
  4129  1666  00B8               	movwf	?___flsub+1
  4130  1667  0872               	movf	?___fladd,w
  4131  1668  00B7               	movwf	?___flsub
  4132  1669                     l745:
  4133  1669  0008               	return
  4134  166A                     __end_of___flsub:
  4135                           
  4136                           	psect	text17
  4137  0D78                     __ptext17:	
  4138 ;; *************** function ___fladd *****************
  4139 ;; Defined at:
  4140 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  b               4    2[COMMON] long 
  4143 ;;  a               4    6[COMMON] long 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  grs             1   11[BANK0 ] unsigned char 
  4146 ;;  bexp            1   10[BANK0 ] unsigned char 
  4147 ;;  aexp            1    9[BANK0 ] unsigned char 
  4148 ;;  signs           1    8[BANK0 ] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  4    2[COMMON] unsigned char 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, btemp+1
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4158 ;;      Params:         8       0       0       0       0
  4159 ;;      Locals:         0       4       0       0       0
  4160 ;;      Temps:          0       8       0       0       0
  4161 ;;      Totals:         8      12       0       0       0
  4162 ;;Total ram usage:       20 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 1
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		___flsub
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           
  4173                           ;psect for function ___fladd
  4174  0D78                     ___fladd:
  4175  0D78                     l3130:	
  4176                           ;incstack = 0
  4177                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4178                           
  4179  0D78  0875               	movf	___fladd@b+3,w
  4180  0D79  3980               	andlw	128
  4181  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0D7C  00A0               	movwf	??___fladd
  4184  0D7D  0820               	movf	??___fladd,w
  4185  0D7E  00A8               	movwf	___fladd@signs
  4186  0D7F                     l3132:
  4187  0D7F  0875               	movf	___fladd@b+3,w
  4188  0D80  00A0               	movwf	??___fladd
  4189  0D81  0720               	addwf	??___fladd,w
  4190  0D82  00A1               	movwf	??___fladd+1
  4191  0D83  0821               	movf	??___fladd+1,w
  4192  0D84  00AA               	movwf	___fladd@bexp
  4193  0D85                     l3134:
  4194  0D85  1FF4               	btfss	___fladd@b+2,7
  4195  0D86  2D88               	goto	u3821
  4196  0D87  2D89               	goto	u3820
  4197  0D88                     u3821:
  4198  0D88  2D8A               	goto	l3138
  4199  0D89                     u3820:
  4200  0D89                     l3136:
  4201  0D89  142A               	bsf	___fladd@bexp,0
  4202  0D8A                     l3138:
  4203  0D8A  082A               	movf	___fladd@bexp,w
  4204  0D8B  1903               	btfsc	3,2
  4205  0D8C  2D8E               	goto	u3831
  4206  0D8D  2D8F               	goto	u3830
  4207  0D8E                     u3831:
  4208  0D8E  2D9F               	goto	l3148
  4209  0D8F                     u3830:
  4210  0D8F                     l3140:
  4211  0D8F  0A2A               	incf	___fladd@bexp,w
  4212  0D90  1D03               	btfss	3,2
  4213  0D91  2D93               	goto	u3841
  4214  0D92  2D94               	goto	u3840
  4215  0D93                     u3841:
  4216  0D93  2D9C               	goto	l3144
  4217  0D94                     u3840:
  4218  0D94                     l3142:
  4219  0D94  3000               	movlw	0
  4220  0D95  00F5               	movwf	___fladd@b+3
  4221  0D96  3000               	movlw	0
  4222  0D97  00F4               	movwf	___fladd@b+2
  4223  0D98  3000               	movlw	0
  4224  0D99  00F3               	movwf	___fladd@b+1
  4225  0D9A  3000               	movlw	0
  4226  0D9B  00F2               	movwf	___fladd@b
  4227  0D9C                     l3144:
  4228  0D9C  17F4               	bsf	___fladd@b+2,7
  4229  0D9D                     l3146:
  4230  0D9D  01F5               	clrf	___fladd@b+3
  4231  0D9E  2DA7               	goto	l3150
  4232  0D9F                     l3148:
  4233  0D9F  3000               	movlw	0
  4234  0DA0  00F5               	movwf	___fladd@b+3
  4235  0DA1  3000               	movlw	0
  4236  0DA2  00F4               	movwf	___fladd@b+2
  4237  0DA3  3000               	movlw	0
  4238  0DA4  00F3               	movwf	___fladd@b+1
  4239  0DA5  3000               	movlw	0
  4240  0DA6  00F2               	movwf	___fladd@b
  4241  0DA7                     l3150:
  4242  0DA7  0879               	movf	___fladd@a+3,w
  4243  0DA8  3980               	andlw	128
  4244  0DA9  00A0               	movwf	??___fladd
  4245  0DAA  0820               	movf	??___fladd,w
  4246  0DAB  00A9               	movwf	___fladd@aexp
  4247  0DAC                     l3152:
  4248  0DAC  0829               	movf	___fladd@aexp,w
  4249  0DAD  0628               	xorwf	___fladd@signs,w
  4250  0DAE  1903               	skipnz
  4251  0DAF  2DB1               	goto	u3851
  4252  0DB0  2DB2               	goto	u3850
  4253  0DB1                     u3851:
  4254  0DB1  2DB3               	goto	l3156
  4255  0DB2                     u3850:
  4256  0DB2                     l3154:
  4257  0DB2  1728               	bsf	___fladd@signs,6
  4258  0DB3                     l3156:
  4259  0DB3  0879               	movf	___fladd@a+3,w
  4260  0DB4  00A0               	movwf	??___fladd
  4261  0DB5  0720               	addwf	??___fladd,w
  4262  0DB6  00A1               	movwf	??___fladd+1
  4263  0DB7  0821               	movf	??___fladd+1,w
  4264  0DB8  00A9               	movwf	___fladd@aexp
  4265  0DB9                     l3158:
  4266  0DB9  1FF8               	btfss	___fladd@a+2,7
  4267  0DBA  2DBC               	goto	u3861
  4268  0DBB  2DBD               	goto	u3860
  4269  0DBC                     u3861:
  4270  0DBC  2DBE               	goto	l3162
  4271  0DBD                     u3860:
  4272  0DBD                     l3160:
  4273  0DBD  1429               	bsf	___fladd@aexp,0
  4274  0DBE                     l3162:
  4275  0DBE  0829               	movf	___fladd@aexp,w
  4276  0DBF  1903               	btfsc	3,2
  4277  0DC0  2DC2               	goto	u3871
  4278  0DC1  2DC3               	goto	u3870
  4279  0DC2                     u3871:
  4280  0DC2  2DD3               	goto	l3172
  4281  0DC3                     u3870:
  4282  0DC3                     l3164:
  4283  0DC3  0A29               	incf	___fladd@aexp,w
  4284  0DC4  1D03               	btfss	3,2
  4285  0DC5  2DC7               	goto	u3881
  4286  0DC6  2DC8               	goto	u3880
  4287  0DC7                     u3881:
  4288  0DC7  2DD0               	goto	l3168
  4289  0DC8                     u3880:
  4290  0DC8                     l3166:
  4291  0DC8  3000               	movlw	0
  4292  0DC9  00F9               	movwf	___fladd@a+3
  4293  0DCA  3000               	movlw	0
  4294  0DCB  00F8               	movwf	___fladd@a+2
  4295  0DCC  3000               	movlw	0
  4296  0DCD  00F7               	movwf	___fladd@a+1
  4297  0DCE  3000               	movlw	0
  4298  0DCF  00F6               	movwf	___fladd@a
  4299  0DD0                     l3168:
  4300  0DD0  17F8               	bsf	___fladd@a+2,7
  4301  0DD1                     l3170:
  4302  0DD1  01F9               	clrf	___fladd@a+3
  4303  0DD2  2DDB               	goto	l699
  4304  0DD3                     l3172:
  4305  0DD3  3000               	movlw	0
  4306  0DD4  00F9               	movwf	___fladd@a+3
  4307  0DD5  3000               	movlw	0
  4308  0DD6  00F8               	movwf	___fladd@a+2
  4309  0DD7  3000               	movlw	0
  4310  0DD8  00F7               	movwf	___fladd@a+1
  4311  0DD9  3000               	movlw	0
  4312  0DDA  00F6               	movwf	___fladd@a
  4313  0DDB                     l699:
  4314  0DDB  082A               	movf	___fladd@bexp,w
  4315  0DDC  0229               	subwf	___fladd@aexp,w
  4316  0DDD  1803               	skipnc
  4317  0DDE  2DE0               	goto	u3891
  4318  0DDF  2DE1               	goto	u3890
  4319  0DE0                     u3891:
  4320  0DE0  2E25               	goto	l3208
  4321  0DE1                     u3890:
  4322  0DE1                     l3174:
  4323  0DE1  1F28               	btfss	___fladd@signs,6
  4324  0DE2  2DE4               	goto	u3901
  4325  0DE3  2DE5               	goto	u3900
  4326  0DE4                     u3901:
  4327  0DE4  2DE9               	goto	l3178
  4328  0DE5                     u3900:
  4329  0DE5                     l3176:
  4330  0DE5  3080               	movlw	128
  4331  0DE6  00A0               	movwf	??___fladd
  4332  0DE7  0820               	movf	??___fladd,w
  4333  0DE8  06A8               	xorwf	___fladd@signs,f
  4334  0DE9                     l3178:
  4335  0DE9  082A               	movf	___fladd@bexp,w
  4336  0DEA  00A0               	movwf	??___fladd
  4337  0DEB  0820               	movf	??___fladd,w
  4338  0DEC  00AB               	movwf	___fladd@grs
  4339  0DED                     l3180:
  4340  0DED  0829               	movf	___fladd@aexp,w
  4341  0DEE  00A0               	movwf	??___fladd
  4342  0DEF  0820               	movf	??___fladd,w
  4343  0DF0  00AA               	movwf	___fladd@bexp
  4344  0DF1                     l3182:
  4345  0DF1  082B               	movf	___fladd@grs,w
  4346  0DF2  00A0               	movwf	??___fladd
  4347  0DF3  0820               	movf	??___fladd,w
  4348  0DF4  00A9               	movwf	___fladd@aexp
  4349  0DF5                     l3184:
  4350  0DF5  0872               	movf	___fladd@b,w
  4351  0DF6  00A0               	movwf	??___fladd
  4352  0DF7  0820               	movf	??___fladd,w
  4353  0DF8  00AB               	movwf	___fladd@grs
  4354  0DF9                     l3186:
  4355  0DF9  0876               	movf	___fladd@a,w
  4356  0DFA  00A0               	movwf	??___fladd
  4357  0DFB  0820               	movf	??___fladd,w
  4358  0DFC  00F2               	movwf	___fladd@b
  4359  0DFD                     l3188:
  4360  0DFD  082B               	movf	___fladd@grs,w
  4361  0DFE  00A0               	movwf	??___fladd
  4362  0DFF  0820               	movf	??___fladd,w
  4363  0E00  00F6               	movwf	___fladd@a
  4364  0E01                     l3190:
  4365  0E01  0873               	movf	___fladd@b+1,w
  4366  0E02  00A0               	movwf	??___fladd
  4367  0E03  0820               	movf	??___fladd,w
  4368  0E04  00AB               	movwf	___fladd@grs
  4369  0E05                     l3192:
  4370  0E05  0877               	movf	___fladd@a+1,w
  4371  0E06  00A0               	movwf	??___fladd
  4372  0E07  0820               	movf	??___fladd,w
  4373  0E08  00F3               	movwf	___fladd@b+1
  4374  0E09                     l3194:
  4375  0E09  082B               	movf	___fladd@grs,w
  4376  0E0A  00A0               	movwf	??___fladd
  4377  0E0B  0820               	movf	??___fladd,w
  4378  0E0C  00F7               	movwf	___fladd@a+1
  4379  0E0D                     l3196:
  4380  0E0D  0874               	movf	___fladd@b+2,w
  4381  0E0E  00A0               	movwf	??___fladd
  4382  0E0F  0820               	movf	??___fladd,w
  4383  0E10  00AB               	movwf	___fladd@grs
  4384  0E11                     l3198:
  4385  0E11  0878               	movf	___fladd@a+2,w
  4386  0E12  00A0               	movwf	??___fladd
  4387  0E13  0820               	movf	??___fladd,w
  4388  0E14  00F4               	movwf	___fladd@b+2
  4389  0E15                     l3200:
  4390  0E15  082B               	movf	___fladd@grs,w
  4391  0E16  00A0               	movwf	??___fladd
  4392  0E17  0820               	movf	??___fladd,w
  4393  0E18  00F8               	movwf	___fladd@a+2
  4394  0E19                     l3202:
  4395  0E19  0875               	movf	___fladd@b+3,w
  4396  0E1A  00A0               	movwf	??___fladd
  4397  0E1B  0820               	movf	??___fladd,w
  4398  0E1C  00AB               	movwf	___fladd@grs
  4399  0E1D                     l3204:
  4400  0E1D  0879               	movf	___fladd@a+3,w
  4401  0E1E  00A0               	movwf	??___fladd
  4402  0E1F  0820               	movf	??___fladd,w
  4403  0E20  00F5               	movwf	___fladd@b+3
  4404  0E21                     l3206:
  4405  0E21  082B               	movf	___fladd@grs,w
  4406  0E22  00A0               	movwf	??___fladd
  4407  0E23  0820               	movf	??___fladd,w
  4408  0E24  00F9               	movwf	___fladd@a+3
  4409  0E25                     l3208:
  4410  0E25  01AB               	clrf	___fladd@grs
  4411  0E26                     l3210:
  4412  0E26  0829               	movf	___fladd@aexp,w
  4413  0E27  00A0               	movwf	??___fladd
  4414  0E28  01A1               	clrf	??___fladd+1
  4415  0E29  0821               	movf	??___fladd+1,w
  4416  0E2A  00A3               	movwf	??___fladd+3
  4417  0E2B  082A               	movf	___fladd@bexp,w
  4418  0E2C  0220               	subwf	??___fladd,w
  4419  0E2D  00A2               	movwf	??___fladd+2
  4420  0E2E  1C03               	skipc
  4421  0E2F  03A3               	decf	??___fladd+3,f
  4422  0E30  0823               	movf	??___fladd+3,w
  4423  0E31  3A80               	xorlw	128
  4424  0E32  00FF               	movwf	btemp+1
  4425  0E33  3080               	movlw	128
  4426  0E34  027F               	subwf	btemp+1,w
  4427  0E35  1D03               	skipz
  4428  0E36  2E39               	goto	u3915
  4429  0E37  301A               	movlw	26
  4430  0E38  0222               	subwf	??___fladd+2,w
  4431  0E39                     u3915:
  4432  0E39  1C03               	skipc
  4433  0E3A  2E3C               	goto	u3911
  4434  0E3B  2E3D               	goto	u3910
  4435  0E3C                     u3911:
  4436  0E3C  2E7A               	goto	l3226
  4437  0E3D                     u3910:
  4438  0E3D                     l3212:
  4439  0E3D  0875               	movf	___fladd@b+3,w
  4440  0E3E  0474               	iorwf	___fladd@b+2,w
  4441  0E3F  0473               	iorwf	___fladd@b+1,w
  4442  0E40  0472               	iorwf	___fladd@b,w
  4443  0E41  1D03               	skipz
  4444  0E42  2E44               	goto	u3921
  4445  0E43  2E46               	goto	u3920
  4446  0E44                     u3921:
  4447  0E44  3001               	movlw	1
  4448  0E45  2E47               	goto	u3930
  4449  0E46                     u3920:
  4450  0E46  3000               	movlw	0
  4451  0E47                     u3930:
  4452  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0E49  00A0               	movwf	??___fladd
  4455  0E4A  0820               	movf	??___fladd,w
  4456  0E4B  00AB               	movwf	___fladd@grs
  4457  0E4C  3000               	movlw	0
  4458  0E4D  00F5               	movwf	___fladd@b+3
  4459  0E4E  3000               	movlw	0
  4460  0E4F  00F4               	movwf	___fladd@b+2
  4461  0E50  3000               	movlw	0
  4462  0E51  00F3               	movwf	___fladd@b+1
  4463  0E52  3000               	movlw	0
  4464  0E53  00F2               	movwf	___fladd@b
  4465  0E54  0829               	movf	___fladd@aexp,w
  4466  0E55  00A0               	movwf	??___fladd
  4467  0E56  0820               	movf	??___fladd,w
  4468  0E57  00AA               	movwf	___fladd@bexp
  4469  0E58  2E82               	goto	l703
  4470  0E59                     l705:
  4471  0E59  1C2B               	btfss	___fladd@grs,0
  4472  0E5A  2E5C               	goto	u3941
  4473  0E5B  2E5D               	goto	u3940
  4474  0E5C                     u3941:
  4475  0E5C  2E66               	goto	l3216
  4476  0E5D                     u3940:
  4477  0E5D                     l3214:
  4478  0E5D  082B               	movf	___fladd@grs,w
  4479  0E5E  00A0               	movwf	??___fladd
  4480  0E5F  1003               	clrc
  4481  0E60  0C20               	rrf	??___fladd,w
  4482  0E61  3801               	iorlw	1
  4483  0E62  00A1               	movwf	??___fladd+1
  4484  0E63  0821               	movf	??___fladd+1,w
  4485  0E64  00AB               	movwf	___fladd@grs
  4486  0E65  2E68               	goto	l3218
  4487  0E66                     l3216:
  4488  0E66  1003               	clrc
  4489  0E67  0CAB               	rrf	___fladd@grs,f
  4490  0E68                     l3218:
  4491  0E68  1C72               	btfss	___fladd@b,0
  4492  0E69  2E6B               	goto	u3951
  4493  0E6A  2E6C               	goto	u3950
  4494  0E6B                     u3951:
  4495  0E6B  2E6D               	goto	l3222
  4496  0E6C                     u3950:
  4497  0E6C                     l3220:
  4498  0E6C  17AB               	bsf	___fladd@grs,7
  4499  0E6D                     l3222:
  4500  0E6D  3001               	movlw	1
  4501  0E6E  00A0               	movwf	??___fladd
  4502  0E6F                     u3965:
  4503  0E6F  0D75               	rlf	___fladd@b+3,w
  4504  0E70  0CF5               	rrf	___fladd@b+3,f
  4505  0E71  0CF4               	rrf	___fladd@b+2,f
  4506  0E72  0CF3               	rrf	___fladd@b+1,f
  4507  0E73  0CF2               	rrf	___fladd@b,f
  4508  0E74  0BA0               	decfsz	??___fladd& (0+127),f
  4509  0E75  2E6F               	goto	u3965
  4510  0E76                     l3224:
  4511  0E76  3001               	movlw	1
  4512  0E77  00A0               	movwf	??___fladd
  4513  0E78  0820               	movf	??___fladd,w
  4514  0E79  07AA               	addwf	___fladd@bexp,f
  4515  0E7A                     l3226:
  4516  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4517  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4518  0E7C  0829               	movf	___fladd@aexp,w
  4519  0E7D  022A               	subwf	___fladd@bexp,w
  4520  0E7E  1C03               	skipc
  4521  0E7F  2E81               	goto	u3971
  4522  0E80  2E82               	goto	u3970
  4523  0E81                     u3971:
  4524  0E81  2E59               	goto	l705
  4525  0E82                     u3970:
  4526  0E82                     l703:
  4527  0E82  1B28               	btfsc	___fladd@signs,6
  4528  0E83  2E85               	goto	u3981
  4529  0E84  2E86               	goto	u3980
  4530  0E85                     u3981:
  4531  0E85  2ED1               	goto	l3252
  4532  0E86                     u3980:
  4533  0E86                     l3228:
  4534  0E86  082A               	movf	___fladd@bexp,w
  4535  0E87  1D03               	btfss	3,2
  4536  0E88  2E8A               	goto	u3991
  4537  0E89  2E8B               	goto	u3990
  4538  0E8A                     u3991:
  4539  0E8A  2E94               	goto	l3234
  4540  0E8B                     u3990:
  4541  0E8B                     l3230:
  4542  0E8B  3000               	movlw	0
  4543  0E8C  00F5               	movwf	?___fladd+3
  4544  0E8D  3000               	movlw	0
  4545  0E8E  00F4               	movwf	?___fladd+2
  4546  0E8F  3000               	movlw	0
  4547  0E90  00F3               	movwf	?___fladd+1
  4548  0E91  3000               	movlw	0
  4549  0E92  00F2               	movwf	?___fladd
  4550  0E93  2FFF               	goto	l712
  4551  0E94                     l3234:
  4552  0E94  0876               	movf	___fladd@a,w
  4553  0E95  07F2               	addwf	___fladd@b,f
  4554  0E96  0877               	movf	___fladd@a+1,w
  4555  0E97  1103               	clrz
  4556  0E98  1803               	skipnc
  4557  0E99  3E01               	addlw	1
  4558  0E9A  1903               	skipnz
  4559  0E9B  2E9D               	goto	u4001
  4560  0E9C  07F3               	addwf	___fladd@b+1,f
  4561  0E9D                     u4001:
  4562  0E9D  0878               	movf	___fladd@a+2,w
  4563  0E9E  1103               	clrz
  4564  0E9F  1803               	skipnc
  4565  0EA0  3E01               	addlw	1
  4566  0EA1  1903               	skipnz
  4567  0EA2  2EA4               	goto	u4002
  4568  0EA3  07F4               	addwf	___fladd@b+2,f
  4569  0EA4                     u4002:
  4570  0EA4  0879               	movf	___fladd@a+3,w
  4571  0EA5  1103               	clrz
  4572  0EA6  1803               	skipnc
  4573  0EA7  3E01               	addlw	1
  4574  0EA8  1903               	skipnz
  4575  0EA9  2EAB               	goto	u4003
  4576  0EAA  07F5               	addwf	___fladd@b+3,f
  4577  0EAB                     u4003:
  4578  0EAB                     l3236:
  4579  0EAB  1C75               	btfss	___fladd@b+3,0
  4580  0EAC  2EAE               	goto	u4011
  4581  0EAD  2EAF               	goto	u4010
  4582  0EAE                     u4011:
  4583  0EAE  2F85               	goto	l3286
  4584  0EAF                     u4010:
  4585  0EAF                     l3238:
  4586  0EAF  1C2B               	btfss	___fladd@grs,0
  4587  0EB0  2EB2               	goto	u4021
  4588  0EB1  2EB3               	goto	u4020
  4589  0EB2                     u4021:
  4590  0EB2  2EBC               	goto	l3242
  4591  0EB3                     u4020:
  4592  0EB3                     l3240:
  4593  0EB3  082B               	movf	___fladd@grs,w
  4594  0EB4  00A0               	movwf	??___fladd
  4595  0EB5  1003               	clrc
  4596  0EB6  0C20               	rrf	??___fladd,w
  4597  0EB7  3801               	iorlw	1
  4598  0EB8  00A1               	movwf	??___fladd+1
  4599  0EB9  0821               	movf	??___fladd+1,w
  4600  0EBA  00AB               	movwf	___fladd@grs
  4601  0EBB  2EBE               	goto	l3244
  4602  0EBC                     l3242:
  4603  0EBC  1003               	clrc
  4604  0EBD  0CAB               	rrf	___fladd@grs,f
  4605  0EBE                     l3244:
  4606  0EBE  1C72               	btfss	___fladd@b,0
  4607  0EBF  2EC1               	goto	u4031
  4608  0EC0  2EC2               	goto	u4030
  4609  0EC1                     u4031:
  4610  0EC1  2EC3               	goto	l3248
  4611  0EC2                     u4030:
  4612  0EC2                     l3246:
  4613  0EC2  17AB               	bsf	___fladd@grs,7
  4614  0EC3                     l3248:
  4615  0EC3  3001               	movlw	1
  4616  0EC4  00A0               	movwf	??___fladd
  4617  0EC5                     u4045:
  4618  0EC5  0D75               	rlf	___fladd@b+3,w
  4619  0EC6  0CF5               	rrf	___fladd@b+3,f
  4620  0EC7  0CF4               	rrf	___fladd@b+2,f
  4621  0EC8  0CF3               	rrf	___fladd@b+1,f
  4622  0EC9  0CF2               	rrf	___fladd@b,f
  4623  0ECA  0BA0               	decfsz	??___fladd& (0+127),f
  4624  0ECB  2EC5               	goto	u4045
  4625  0ECC                     l3250:
  4626  0ECC  3001               	movlw	1
  4627  0ECD  00A0               	movwf	??___fladd
  4628  0ECE  0820               	movf	??___fladd,w
  4629  0ECF  07AA               	addwf	___fladd@bexp,f
  4630  0ED0  2F85               	goto	l3286
  4631  0ED1                     l3252:
  4632  0ED1  0875               	movf	___fladd@b+3,w
  4633  0ED2  3A80               	xorlw	128
  4634  0ED3  00FF               	movwf	btemp+1
  4635  0ED4  0879               	movf	___fladd@a+3,w
  4636  0ED5  3A80               	xorlw	128
  4637  0ED6  027F               	subwf	btemp+1,w
  4638  0ED7  1D03               	skipz
  4639  0ED8  2EE3               	goto	u4053
  4640  0ED9  0878               	movf	___fladd@a+2,w
  4641  0EDA  0274               	subwf	___fladd@b+2,w
  4642  0EDB  1D03               	skipz
  4643  0EDC  2EE3               	goto	u4053
  4644  0EDD  0877               	movf	___fladd@a+1,w
  4645  0EDE  0273               	subwf	___fladd@b+1,w
  4646  0EDF  1D03               	skipz
  4647  0EE0  2EE3               	goto	u4053
  4648  0EE1  0876               	movf	___fladd@a,w
  4649  0EE2  0272               	subwf	___fladd@b,w
  4650  0EE3                     u4053:
  4651  0EE3  1803               	skipnc
  4652  0EE4  2EE6               	goto	u4051
  4653  0EE5  2EE7               	goto	u4050
  4654  0EE6                     u4051:
  4655  0EE6  2F3F               	goto	l3262
  4656  0EE7                     u4050:
  4657  0EE7                     l3254:
  4658  0EE7  30FF               	movlw	255
  4659  0EE8  00A0               	movwf	??___fladd
  4660  0EE9  30FF               	movlw	255
  4661  0EEA  00A1               	movwf	??___fladd+1
  4662  0EEB  30FF               	movlw	255
  4663  0EEC  00A2               	movwf	??___fladd+2
  4664  0EED  30FF               	movlw	255
  4665  0EEE  00A3               	movwf	??___fladd+3
  4666  0EEF  0876               	movf	___fladd@a,w
  4667  0EF0  00A4               	movwf	??___fladd+4
  4668  0EF1  0877               	movf	___fladd@a+1,w
  4669  0EF2  00A5               	movwf	??___fladd+5
  4670  0EF3  0878               	movf	___fladd@a+2,w
  4671  0EF4  00A6               	movwf	??___fladd+6
  4672  0EF5  0879               	movf	___fladd@a+3,w
  4673  0EF6  00A7               	movwf	??___fladd+7
  4674  0EF7  0872               	movf	___fladd@b,w
  4675  0EF8  02A4               	subwf	??___fladd+4,f
  4676  0EF9  0873               	movf	___fladd@b+1,w
  4677  0EFA  1C03               	skipc
  4678  0EFB  0F73               	incfsz	___fladd@b+1,w
  4679  0EFC  2EFE               	goto	u4061
  4680  0EFD  2EFF               	goto	u4062
  4681  0EFE                     u4061:
  4682  0EFE  02A5               	subwf	??___fladd+5,f
  4683  0EFF                     u4062:
  4684  0EFF  0874               	movf	___fladd@b+2,w
  4685  0F00  1C03               	skipc
  4686  0F01  0F74               	incfsz	___fladd@b+2,w
  4687  0F02  2F04               	goto	u4063
  4688  0F03  2F05               	goto	u4064
  4689  0F04                     u4063:
  4690  0F04  02A6               	subwf	??___fladd+6,f
  4691  0F05                     u4064:
  4692  0F05  0875               	movf	___fladd@b+3,w
  4693  0F06  1C03               	skipc
  4694  0F07  0F75               	incfsz	___fladd@b+3,w
  4695  0F08  2F0A               	goto	u4065
  4696  0F09  2F0B               	goto	u4066
  4697  0F0A                     u4065:
  4698  0F0A  02A7               	subwf	??___fladd+7,f
  4699  0F0B                     u4066:
  4700  0F0B  0824               	movf	??___fladd+4,w
  4701  0F0C  07A0               	addwf	??___fladd,f
  4702  0F0D  0825               	movf	??___fladd+5,w
  4703  0F0E  1803               	skipnc
  4704  0F0F  0F25               	incfsz	??___fladd+5,w
  4705  0F10  2F12               	goto	u4070
  4706  0F11  2F13               	goto	u4071
  4707  0F12                     u4070:
  4708  0F12  07A1               	addwf	??___fladd+1,f
  4709  0F13                     u4071:
  4710  0F13  0826               	movf	??___fladd+6,w
  4711  0F14  1803               	skipnc
  4712  0F15  0F26               	incfsz	??___fladd+6,w
  4713  0F16  2F18               	goto	u4072
  4714  0F17  2F19               	goto	u4073
  4715  0F18                     u4072:
  4716  0F18  07A2               	addwf	??___fladd+2,f
  4717  0F19                     u4073:
  4718  0F19  0827               	movf	??___fladd+7,w
  4719  0F1A  1803               	skipnc
  4720  0F1B  0A27               	incf	??___fladd+7,w
  4721  0F1C  07A3               	addwf	??___fladd+3,f
  4722  0F1D  0823               	movf	??___fladd+3,w
  4723  0F1E  00F5               	movwf	___fladd@b+3
  4724  0F1F  0822               	movf	??___fladd+2,w
  4725  0F20  00F4               	movwf	___fladd@b+2
  4726  0F21  0821               	movf	??___fladd+1,w
  4727  0F22  00F3               	movwf	___fladd@b+1
  4728  0F23  0820               	movf	??___fladd,w
  4729  0F24  00F2               	movwf	___fladd@b
  4730  0F25                     l3256:
  4731  0F25  3080               	movlw	128
  4732  0F26  00A0               	movwf	??___fladd
  4733  0F27  0820               	movf	??___fladd,w
  4734  0F28  06A8               	xorwf	___fladd@signs,f
  4735  0F29  09AB               	comf	___fladd@grs,f
  4736  0F2A  0AAB               	incf	___fladd@grs,f
  4737  0F2B                     l3258:
  4738  0F2B  082B               	movf	___fladd@grs,w
  4739  0F2C  1D03               	btfss	3,2
  4740  0F2D  2F2F               	goto	u4081
  4741  0F2E  2F30               	goto	u4080
  4742  0F2F                     u4081:
  4743  0F2F  2F4D               	goto	l720
  4744  0F30                     u4080:
  4745  0F30                     l3260:
  4746  0F30  3001               	movlw	1
  4747  0F31  07F2               	addwf	___fladd@b,f
  4748  0F32  3000               	movlw	0
  4749  0F33  1803               	skipnc
  4750  0F34  3001               	movlw	1
  4751  0F35  07F3               	addwf	___fladd@b+1,f
  4752  0F36  3000               	movlw	0
  4753  0F37  1803               	skipnc
  4754  0F38  3001               	movlw	1
  4755  0F39  07F4               	addwf	___fladd@b+2,f
  4756  0F3A  3000               	movlw	0
  4757  0F3B  1803               	skipnc
  4758  0F3C  3001               	movlw	1
  4759  0F3D  07F5               	addwf	___fladd@b+3,f
  4760  0F3E  2F4D               	goto	l720
  4761  0F3F                     l3262:
  4762  0F3F  0876               	movf	___fladd@a,w
  4763  0F40  02F2               	subwf	___fladd@b,f
  4764  0F41  0877               	movf	___fladd@a+1,w
  4765  0F42  1C03               	skipc
  4766  0F43  0F77               	incfsz	___fladd@a+1,w
  4767  0F44  02F3               	subwf	___fladd@b+1,f
  4768  0F45  0878               	movf	___fladd@a+2,w
  4769  0F46  1C03               	skipc
  4770  0F47  0F78               	incfsz	___fladd@a+2,w
  4771  0F48  02F4               	subwf	___fladd@b+2,f
  4772  0F49  0879               	movf	___fladd@a+3,w
  4773  0F4A  1C03               	skipc
  4774  0F4B  0F79               	incfsz	___fladd@a+3,w
  4775  0F4C  02F5               	subwf	___fladd@b+3,f
  4776  0F4D                     l720:
  4777  0F4D  0875               	movf	___fladd@b+3,w
  4778  0F4E  0474               	iorwf	___fladd@b+2,w
  4779  0F4F  0473               	iorwf	___fladd@b+1,w
  4780  0F50  0472               	iorwf	___fladd@b,w
  4781  0F51  1D03               	skipz
  4782  0F52  2F54               	goto	u4091
  4783  0F53  2F55               	goto	u4090
  4784  0F54                     u4091:
  4785  0F54  2F81               	goto	l3284
  4786  0F55                     u4090:
  4787  0F55                     l3264:
  4788  0F55  082B               	movf	___fladd@grs,w
  4789  0F56  1D03               	btfss	3,2
  4790  0F57  2F59               	goto	u4101
  4791  0F58  2F5A               	goto	u4100
  4792  0F59                     u4101:
  4793  0F59  2F81               	goto	l3284
  4794  0F5A                     u4100:
  4795  0F5A                     l3266:
  4796  0F5A  3000               	movlw	0
  4797  0F5B  00F5               	movwf	?___fladd+3
  4798  0F5C  3000               	movlw	0
  4799  0F5D  00F4               	movwf	?___fladd+2
  4800  0F5E  3000               	movlw	0
  4801  0F5F  00F3               	movwf	?___fladd+1
  4802  0F60  3000               	movlw	0
  4803  0F61  00F2               	movwf	?___fladd
  4804  0F62  2FFF               	goto	l712
  4805  0F63                     l3270:
  4806  0F63  3001               	movlw	1
  4807  0F64  00A0               	movwf	??___fladd
  4808  0F65                     u4115:
  4809  0F65  1003               	clrc
  4810  0F66  0DF2               	rlf	___fladd@b,f
  4811  0F67  0DF3               	rlf	___fladd@b+1,f
  4812  0F68  0DF4               	rlf	___fladd@b+2,f
  4813  0F69  0DF5               	rlf	___fladd@b+3,f
  4814  0F6A  0BA0               	decfsz	??___fladd,f
  4815  0F6B  2F65               	goto	u4115
  4816  0F6C                     l3272:
  4817  0F6C  1FAB               	btfss	___fladd@grs,7
  4818  0F6D  2F6F               	goto	u4121
  4819  0F6E  2F70               	goto	u4120
  4820  0F6F                     u4121:
  4821  0F6F  2F71               	goto	l724
  4822  0F70                     u4120:
  4823  0F70                     l3274:
  4824  0F70  1472               	bsf	___fladd@b,0
  4825  0F71                     l724:
  4826  0F71  1C2B               	btfss	___fladd@grs,0
  4827  0F72  2F74               	goto	u4131
  4828  0F73  2F75               	goto	u4130
  4829  0F74                     u4131:
  4830  0F74  2F78               	goto	l3278
  4831  0F75                     u4130:
  4832  0F75                     l3276:
  4833  0F75  1403               	setc
  4834  0F76  0DAB               	rlf	___fladd@grs,f
  4835  0F77  2F7A               	goto	l3280
  4836  0F78                     l3278:
  4837  0F78  1003               	clrc
  4838  0F79  0DAB               	rlf	___fladd@grs,f
  4839  0F7A                     l3280:
  4840  0F7A  082A               	movf	___fladd@bexp,w
  4841  0F7B  1903               	btfsc	3,2
  4842  0F7C  2F7E               	goto	u4141
  4843  0F7D  2F7F               	goto	u4140
  4844  0F7E                     u4141:
  4845  0F7E  2F81               	goto	l3284
  4846  0F7F                     u4140:
  4847  0F7F                     l3282:
  4848  0F7F  3001               	movlw	1
  4849  0F80  02AA               	subwf	___fladd@bexp,f
  4850  0F81                     l3284:
  4851  0F81  1FF4               	btfss	___fladd@b+2,7
  4852  0F82  2F84               	goto	u4151
  4853  0F83  2F85               	goto	u4150
  4854  0F84                     u4151:
  4855  0F84  2F63               	goto	l3270
  4856  0F85                     u4150:
  4857  0F85                     l3286:
  4858  0F85  01A9               	clrf	___fladd@aexp
  4859  0F86                     l3288:
  4860  0F86  1FAB               	btfss	___fladd@grs,7
  4861  0F87  2F89               	goto	u4161
  4862  0F88  2F8A               	goto	u4160
  4863  0F89                     u4161:
  4864  0F89  2F98               	goto	l3296
  4865  0F8A                     u4160:
  4866  0F8A                     l3290:
  4867  0F8A  082B               	movf	___fladd@grs,w
  4868  0F8B  397F               	andlw	127
  4869  0F8C  1903               	btfsc	3,2
  4870  0F8D  2F8F               	goto	u4171
  4871  0F8E  2F90               	goto	u4170
  4872  0F8F                     u4171:
  4873  0F8F  2F93               	goto	l730
  4874  0F90                     u4170:
  4875  0F90                     l3292:
  4876  0F90  01A9               	clrf	___fladd@aexp
  4877  0F91  0AA9               	incf	___fladd@aexp,f
  4878  0F92  2F98               	goto	l3296
  4879  0F93                     l730:
  4880  0F93  1C72               	btfss	___fladd@b,0
  4881  0F94  2F96               	goto	u4181
  4882  0F95  2F97               	goto	u4180
  4883  0F96                     u4181:
  4884  0F96  2F98               	goto	l3296
  4885  0F97                     u4180:
  4886  0F97  2F90               	goto	l3292
  4887  0F98                     l3296:
  4888  0F98  0829               	movf	___fladd@aexp,w
  4889  0F99  1903               	btfsc	3,2
  4890  0F9A  2F9C               	goto	u4191
  4891  0F9B  2F9D               	goto	u4190
  4892  0F9C                     u4191:
  4893  0F9C  2FD1               	goto	l733
  4894  0F9D                     u4190:
  4895  0F9D                     l3298:
  4896  0F9D  3001               	movlw	1
  4897  0F9E  07F2               	addwf	___fladd@b,f
  4898  0F9F  3000               	movlw	0
  4899  0FA0  1803               	skipnc
  4900  0FA1  3001               	movlw	1
  4901  0FA2  07F3               	addwf	___fladd@b+1,f
  4902  0FA3  3000               	movlw	0
  4903  0FA4  1803               	skipnc
  4904  0FA5  3001               	movlw	1
  4905  0FA6  07F4               	addwf	___fladd@b+2,f
  4906  0FA7  3000               	movlw	0
  4907  0FA8  1803               	skipnc
  4908  0FA9  3001               	movlw	1
  4909  0FAA  07F5               	addwf	___fladd@b+3,f
  4910  0FAB                     l3300:
  4911  0FAB  1C75               	btfss	___fladd@b+3,0
  4912  0FAC  2FAE               	goto	u4201
  4913  0FAD  2FAF               	goto	u4200
  4914  0FAE                     u4201:
  4915  0FAE  2FD1               	goto	l733
  4916  0FAF                     u4200:
  4917  0FAF                     l3302:
  4918  0FAF  0872               	movf	___fladd@b,w
  4919  0FB0  00A0               	movwf	??___fladd
  4920  0FB1  0873               	movf	___fladd@b+1,w
  4921  0FB2  00A1               	movwf	??___fladd+1
  4922  0FB3  0874               	movf	___fladd@b+2,w
  4923  0FB4  00A2               	movwf	??___fladd+2
  4924  0FB5  0875               	movf	___fladd@b+3,w
  4925  0FB6  00A3               	movwf	??___fladd+3
  4926  0FB7  3001               	movlw	1
  4927  0FB8  00A4               	movwf	??___fladd+4
  4928  0FB9                     u4215:
  4929  0FB9  0D23               	rlf	??___fladd+3,w
  4930  0FBA  0CA3               	rrf	??___fladd+3,f
  4931  0FBB  0CA2               	rrf	??___fladd+2,f
  4932  0FBC  0CA1               	rrf	??___fladd+1,f
  4933  0FBD  0CA0               	rrf	??___fladd,f
  4934  0FBE                     u4210:
  4935  0FBE  0BA4               	decfsz	??___fladd+4,f
  4936  0FBF  2FB9               	goto	u4215
  4937  0FC0  0823               	movf	??___fladd+3,w
  4938  0FC1  00F5               	movwf	___fladd@b+3
  4939  0FC2  0822               	movf	??___fladd+2,w
  4940  0FC3  00F4               	movwf	___fladd@b+2
  4941  0FC4  0821               	movf	??___fladd+1,w
  4942  0FC5  00F3               	movwf	___fladd@b+1
  4943  0FC6  0820               	movf	??___fladd,w
  4944  0FC7  00F2               	movwf	___fladd@b
  4945  0FC8  0A2A               	incf	___fladd@bexp,w
  4946  0FC9  1903               	btfsc	3,2
  4947  0FCA  2FCC               	goto	u4221
  4948  0FCB  2FCD               	goto	u4220
  4949  0FCC                     u4221:
  4950  0FCC  2FD1               	goto	l733
  4951  0FCD                     u4220:
  4952  0FCD                     l3304:
  4953  0FCD  3001               	movlw	1
  4954  0FCE  00A0               	movwf	??___fladd
  4955  0FCF  0820               	movf	??___fladd,w
  4956  0FD0  07AA               	addwf	___fladd@bexp,f
  4957  0FD1                     l733:
  4958  0FD1  0A2A               	incf	___fladd@bexp,w
  4959  0FD2  1903               	btfsc	3,2
  4960  0FD3  2FD5               	goto	u4231
  4961  0FD4  2FD6               	goto	u4230
  4962  0FD5                     u4231:
  4963  0FD5  2FDB               	goto	l3308
  4964  0FD6                     u4230:
  4965  0FD6                     l3306:
  4966  0FD6  082A               	movf	___fladd@bexp,w
  4967  0FD7  1D03               	btfss	3,2
  4968  0FD8  2FDA               	goto	u4241
  4969  0FD9  2FDB               	goto	u4240
  4970  0FDA                     u4241:
  4971  0FDA  2FE9               	goto	l3314
  4972  0FDB                     u4240:
  4973  0FDB                     l3308:
  4974  0FDB  3000               	movlw	0
  4975  0FDC  00F5               	movwf	___fladd@b+3
  4976  0FDD  3000               	movlw	0
  4977  0FDE  00F4               	movwf	___fladd@b+2
  4978  0FDF  3000               	movlw	0
  4979  0FE0  00F3               	movwf	___fladd@b+1
  4980  0FE1  3000               	movlw	0
  4981  0FE2  00F2               	movwf	___fladd@b
  4982  0FE3                     l3310:
  4983  0FE3  082A               	movf	___fladd@bexp,w
  4984  0FE4  1D03               	btfss	3,2
  4985  0FE5  2FE7               	goto	u4251
  4986  0FE6  2FE8               	goto	u4250
  4987  0FE7                     u4251:
  4988  0FE7  2FE9               	goto	l3314
  4989  0FE8                     u4250:
  4990  0FE8                     l3312:
  4991  0FE8  01A8               	clrf	___fladd@signs
  4992  0FE9                     l3314:
  4993  0FE9  1C2A               	btfss	___fladd@bexp,0
  4994  0FEA  2FEC               	goto	u4261
  4995  0FEB  2FED               	goto	u4260
  4996  0FEC                     u4261:
  4997  0FEC  2FEF               	goto	l3318
  4998  0FED                     u4260:
  4999  0FED                     l3316:
  5000  0FED  17F4               	bsf	___fladd@b+2,7
  5001  0FEE  2FF3               	goto	l741
  5002  0FEF                     l3318:
  5003  0FEF  307F               	movlw	127
  5004  0FF0  00A0               	movwf	??___fladd
  5005  0FF1  0820               	movf	??___fladd,w
  5006  0FF2  05F4               	andwf	___fladd@b+2,f
  5007  0FF3                     l741:
  5008  0FF3  082A               	movf	___fladd@bexp,w
  5009  0FF4  00A0               	movwf	??___fladd
  5010  0FF5  1003               	clrc
  5011  0FF6  0C20               	rrf	??___fladd,w
  5012  0FF7  00A1               	movwf	??___fladd+1
  5013  0FF8  0821               	movf	??___fladd+1,w
  5014  0FF9  00F5               	movwf	___fladd@b+3
  5015  0FFA                     l3320:
  5016  0FFA  1FA8               	btfss	___fladd@signs,7
  5017  0FFB  2FFD               	goto	u4271
  5018  0FFC  2FFE               	goto	u4270
  5019  0FFD                     u4271:
  5020  0FFD  2FFF               	goto	l742
  5021  0FFE                     u4270:
  5022  0FFE                     l3322:
  5023  0FFE  17F5               	bsf	___fladd@b+3,7
  5024  0FFF                     l742:
  5025  0FFF                     l712:
  5026  0FFF  0008               	return
  5027  1000                     __end_of___fladd:
  5028                           
  5029                           	psect	text18
  5030  041D                     __ptext18:	
  5031 ;; *************** function ___flmul *****************
  5032 ;; Defined at:
  5033 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  b               4   31[BANK0 ] unsigned char 
  5036 ;;  a               4   35[BANK0 ] unsigned char 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  prod            4   51[BANK0 ] struct .
  5039 ;;  grs             4   46[BANK0 ] unsigned long 
  5040 ;;  temp            2   55[BANK0 ] struct .
  5041 ;;  bexp            1   50[BANK0 ] unsigned char 
  5042 ;;  aexp            1   45[BANK0 ] unsigned char 
  5043 ;;  sign            1   44[BANK0 ] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  4   31[BANK0 ] unsigned char 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         0       8       0       0       0
  5054 ;;      Locals:         0      13       0       0       0
  5055 ;;      Temps:          0       5       0       0       0
  5056 ;;      Totals:         0      26       0       0       0
  5057 ;;Total ram usage:       26 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 2
  5060 ;; This function calls:
  5061 ;;		__Umul8_16
  5062 ;; This function is called by:
  5063 ;;		_ADC_convert
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function ___flmul
  5069  041D                     ___flmul:
  5070  041D                     l3610:	
  5071                           ;incstack = 0
  5072                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5073                           
  5074  041D  1283               	bcf	3,5	;RP0=0, select bank0
  5075  041E  1303               	bcf	3,6	;RP1=0, select bank0
  5076  041F  0842               	movf	___flmul@b+3,w
  5077  0420  3980               	andlw	128
  5078  0421  00C7               	movwf	??___flmul
  5079  0422  0847               	movf	??___flmul,w
  5080  0423  00CC               	movwf	___flmul@sign
  5081  0424                     l3612:
  5082  0424  0842               	movf	___flmul@b+3,w
  5083  0425  00C7               	movwf	??___flmul
  5084  0426  0747               	addwf	??___flmul,w
  5085  0427  00C8               	movwf	??___flmul+1
  5086  0428  0848               	movf	??___flmul+1,w
  5087  0429  00D2               	movwf	___flmul@bexp
  5088  042A                     l3614:
  5089  042A  1FC1               	btfss	___flmul@b+2,7
  5090  042B  2C2D               	goto	u4931
  5091  042C  2C2E               	goto	u4930
  5092  042D                     u4931:
  5093  042D  2C2F               	goto	l3618
  5094  042E                     u4930:
  5095  042E                     l3616:
  5096  042E  1452               	bsf	___flmul@bexp,0
  5097  042F                     l3618:
  5098  042F  0852               	movf	___flmul@bexp,w
  5099  0430  1903               	btfsc	3,2
  5100  0431  2C33               	goto	u4941
  5101  0432  2C34               	goto	u4940
  5102  0433                     u4941:
  5103  0433  2C43               	goto	l3626
  5104  0434                     u4940:
  5105  0434                     l3620:
  5106  0434  0A52               	incf	___flmul@bexp,w
  5107  0435  1D03               	btfss	3,2
  5108  0436  2C38               	goto	u4951
  5109  0437  2C39               	goto	u4950
  5110  0438                     u4951:
  5111  0438  2C41               	goto	l3624
  5112  0439                     u4950:
  5113  0439                     l3622:
  5114  0439  3000               	movlw	0
  5115  043A  00C2               	movwf	___flmul@b+3
  5116  043B  3000               	movlw	0
  5117  043C  00C1               	movwf	___flmul@b+2
  5118  043D  3000               	movlw	0
  5119  043E  00C0               	movwf	___flmul@b+1
  5120  043F  3000               	movlw	0
  5121  0440  00BF               	movwf	___flmul@b
  5122  0441                     l3624:
  5123  0441  17C1               	bsf	___flmul@b+2,7
  5124  0442  2C4B               	goto	l3628
  5125  0443                     l3626:
  5126  0443  3000               	movlw	0
  5127  0444  00C2               	movwf	___flmul@b+3
  5128  0445  3000               	movlw	0
  5129  0446  00C1               	movwf	___flmul@b+2
  5130  0447  3000               	movlw	0
  5131  0448  00C0               	movwf	___flmul@b+1
  5132  0449  3000               	movlw	0
  5133  044A  00BF               	movwf	___flmul@b
  5134  044B                     l3628:
  5135  044B  0846               	movf	___flmul@a+3,w
  5136  044C  3980               	andlw	128
  5137  044D  00C7               	movwf	??___flmul
  5138  044E  0847               	movf	??___flmul,w
  5139  044F  06CC               	xorwf	___flmul@sign,f
  5140  0450                     l3630:
  5141  0450  0846               	movf	___flmul@a+3,w
  5142  0451  00C7               	movwf	??___flmul
  5143  0452  0747               	addwf	??___flmul,w
  5144  0453  00C8               	movwf	??___flmul+1
  5145  0454  0848               	movf	??___flmul+1,w
  5146  0455  00CD               	movwf	___flmul@aexp
  5147  0456                     l3632:
  5148  0456  1FC5               	btfss	___flmul@a+2,7
  5149  0457  2C59               	goto	u4961
  5150  0458  2C5A               	goto	u4960
  5151  0459                     u4961:
  5152  0459  2C5B               	goto	l3636
  5153  045A                     u4960:
  5154  045A                     l3634:
  5155  045A  144D               	bsf	___flmul@aexp,0
  5156  045B                     l3636:
  5157  045B  084D               	movf	___flmul@aexp,w
  5158  045C  1903               	btfsc	3,2
  5159  045D  2C5F               	goto	u4971
  5160  045E  2C60               	goto	u4970
  5161  045F                     u4971:
  5162  045F  2C6F               	goto	l3644
  5163  0460                     u4970:
  5164  0460                     l3638:
  5165  0460  0A4D               	incf	___flmul@aexp,w
  5166  0461  1D03               	btfss	3,2
  5167  0462  2C64               	goto	u4981
  5168  0463  2C65               	goto	u4980
  5169  0464                     u4981:
  5170  0464  2C6D               	goto	l3642
  5171  0465                     u4980:
  5172  0465                     l3640:
  5173  0465  3000               	movlw	0
  5174  0466  00C6               	movwf	___flmul@a+3
  5175  0467  3000               	movlw	0
  5176  0468  00C5               	movwf	___flmul@a+2
  5177  0469  3000               	movlw	0
  5178  046A  00C4               	movwf	___flmul@a+1
  5179  046B  3000               	movlw	0
  5180  046C  00C3               	movwf	___flmul@a
  5181  046D                     l3642:
  5182  046D  17C5               	bsf	___flmul@a+2,7
  5183  046E  2C77               	goto	l3646
  5184  046F                     l3644:
  5185  046F  3000               	movlw	0
  5186  0470  00C6               	movwf	___flmul@a+3
  5187  0471  3000               	movlw	0
  5188  0472  00C5               	movwf	___flmul@a+2
  5189  0473  3000               	movlw	0
  5190  0474  00C4               	movwf	___flmul@a+1
  5191  0475  3000               	movlw	0
  5192  0476  00C3               	movwf	___flmul@a
  5193  0477                     l3646:
  5194  0477  084D               	movf	___flmul@aexp,w
  5195  0478  1903               	btfsc	3,2
  5196  0479  2C7B               	goto	u4991
  5197  047A  2C7C               	goto	u4990
  5198  047B                     u4991:
  5199  047B  2C81               	goto	l3650
  5200  047C                     u4990:
  5201  047C                     l3648:
  5202  047C  0852               	movf	___flmul@bexp,w
  5203  047D  1D03               	btfss	3,2
  5204  047E  2C80               	goto	u5001
  5205  047F  2C81               	goto	u5000
  5206  0480                     u5001:
  5207  0480  2C8A               	goto	l3654
  5208  0481                     u5000:
  5209  0481                     l3650:
  5210  0481  3000               	movlw	0
  5211  0482  00C2               	movwf	?___flmul+3
  5212  0483  3000               	movlw	0
  5213  0484  00C1               	movwf	?___flmul+2
  5214  0485  3000               	movlw	0
  5215  0486  00C0               	movwf	?___flmul+1
  5216  0487  3000               	movlw	0
  5217  0488  00BF               	movwf	?___flmul
  5218  0489  2F7D               	goto	l795
  5219  048A                     l3654:
  5220  048A  083F               	movf	___flmul@b,w
  5221  048B  00C7               	movwf	??___flmul
  5222  048C  0847               	movf	??___flmul,w
  5223  048D  00F2               	movwf	__Umul8_16@multiplicand
  5224  048E  0845               	movf	___flmul@a+2,w
  5225  048F  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5226  0494  0873               	movf	?__Umul8_16+1,w
  5227  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5228  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5229  0497  00D8               	movwf	___flmul@temp+1
  5230  0498  0872               	movf	?__Umul8_16,w
  5231  0499  00D7               	movwf	___flmul@temp
  5232  049A                     l3656:
  5233  049A  0857               	movf	___flmul@temp,w
  5234  049B  00C7               	movwf	??___flmul
  5235  049C  01C8               	clrf	??___flmul+1
  5236  049D  01C9               	clrf	??___flmul+2
  5237  049E  01CA               	clrf	??___flmul+3
  5238  049F  084A               	movf	??___flmul+3,w
  5239  04A0  00D1               	movwf	___flmul@grs+3
  5240  04A1  0849               	movf	??___flmul+2,w
  5241  04A2  00D0               	movwf	___flmul@grs+2
  5242  04A3  0848               	movf	??___flmul+1,w
  5243  04A4  00CF               	movwf	___flmul@grs+1
  5244  04A5  0847               	movf	??___flmul,w
  5245  04A6  00CE               	movwf	___flmul@grs
  5246  04A7                     l3658:
  5247  04A7  0858               	movf	___flmul@temp+1,w
  5248  04A8  00C7               	movwf	??___flmul
  5249  04A9  01C8               	clrf	??___flmul+1
  5250  04AA  01C9               	clrf	??___flmul+2
  5251  04AB  01CA               	clrf	??___flmul+3
  5252  04AC  084A               	movf	??___flmul+3,w
  5253  04AD  00D6               	movwf	___flmul@prod+3
  5254  04AE  0849               	movf	??___flmul+2,w
  5255  04AF  00D5               	movwf	___flmul@prod+2
  5256  04B0  0848               	movf	??___flmul+1,w
  5257  04B1  00D4               	movwf	___flmul@prod+1
  5258  04B2  0847               	movf	??___flmul,w
  5259  04B3  00D3               	movwf	___flmul@prod
  5260  04B4  0840               	movf	___flmul@b+1,w
  5261  04B5  00C7               	movwf	??___flmul
  5262  04B6  0847               	movf	??___flmul,w
  5263  04B7  00F2               	movwf	__Umul8_16@multiplicand
  5264  04B8  0844               	movf	___flmul@a+1,w
  5265  04B9  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5266  04BE  0873               	movf	?__Umul8_16+1,w
  5267  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  5268  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  5269  04C1  00D8               	movwf	___flmul@temp+1
  5270  04C2  0872               	movf	?__Umul8_16,w
  5271  04C3  00D7               	movwf	___flmul@temp
  5272  04C4                     l3660:
  5273  04C4  0857               	movf	___flmul@temp,w
  5274  04C5  00C7               	movwf	??___flmul
  5275  04C6  01C8               	clrf	??___flmul+1
  5276  04C7  01C9               	clrf	??___flmul+2
  5277  04C8  01CA               	clrf	??___flmul+3
  5278  04C9  0847               	movf	??___flmul,w
  5279  04CA  07CE               	addwf	___flmul@grs,f
  5280  04CB  0848               	movf	??___flmul+1,w
  5281  04CC  1103               	clrz
  5282  04CD  1803               	skipnc
  5283  04CE  3E01               	addlw	1
  5284  04CF  1903               	skipnz
  5285  04D0  2CD2               	goto	u5011
  5286  04D1  07CF               	addwf	___flmul@grs+1,f
  5287  04D2                     u5011:
  5288  04D2  0849               	movf	??___flmul+2,w
  5289  04D3  1103               	clrz
  5290  04D4  1803               	skipnc
  5291  04D5  3E01               	addlw	1
  5292  04D6  1903               	skipnz
  5293  04D7  2CD9               	goto	u5012
  5294  04D8  07D0               	addwf	___flmul@grs+2,f
  5295  04D9                     u5012:
  5296  04D9  084A               	movf	??___flmul+3,w
  5297  04DA  1103               	clrz
  5298  04DB  1803               	skipnc
  5299  04DC  3E01               	addlw	1
  5300  04DD  1903               	skipnz
  5301  04DE  2CE0               	goto	u5013
  5302  04DF  07D1               	addwf	___flmul@grs+3,f
  5303  04E0                     u5013:
  5304  04E0                     l3662:
  5305  04E0  0858               	movf	___flmul@temp+1,w
  5306  04E1  00C7               	movwf	??___flmul
  5307  04E2  01C8               	clrf	??___flmul+1
  5308  04E3  01C9               	clrf	??___flmul+2
  5309  04E4  01CA               	clrf	??___flmul+3
  5310  04E5  0847               	movf	??___flmul,w
  5311  04E6  07D3               	addwf	___flmul@prod,f
  5312  04E7  0848               	movf	??___flmul+1,w
  5313  04E8  1103               	clrz
  5314  04E9  1803               	skipnc
  5315  04EA  3E01               	addlw	1
  5316  04EB  1903               	skipnz
  5317  04EC  2CEE               	goto	u5021
  5318  04ED  07D4               	addwf	___flmul@prod+1,f
  5319  04EE                     u5021:
  5320  04EE  0849               	movf	??___flmul+2,w
  5321  04EF  1103               	clrz
  5322  04F0  1803               	skipnc
  5323  04F1  3E01               	addlw	1
  5324  04F2  1903               	skipnz
  5325  04F3  2CF5               	goto	u5022
  5326  04F4  07D5               	addwf	___flmul@prod+2,f
  5327  04F5                     u5022:
  5328  04F5  084A               	movf	??___flmul+3,w
  5329  04F6  1103               	clrz
  5330  04F7  1803               	skipnc
  5331  04F8  3E01               	addlw	1
  5332  04F9  1903               	skipnz
  5333  04FA  2CFC               	goto	u5023
  5334  04FB  07D6               	addwf	___flmul@prod+3,f
  5335  04FC                     u5023:
  5336  04FC  0841               	movf	___flmul@b+2,w
  5337  04FD  00C7               	movwf	??___flmul
  5338  04FE  0847               	movf	??___flmul,w
  5339  04FF  00F2               	movwf	__Umul8_16@multiplicand
  5340  0500  0843               	movf	___flmul@a,w
  5341  0501  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5342  0506  0873               	movf	?__Umul8_16+1,w
  5343  0507  1283               	bcf	3,5	;RP0=0, select bank0
  5344  0508  1303               	bcf	3,6	;RP1=0, select bank0
  5345  0509  00D8               	movwf	___flmul@temp+1
  5346  050A  0872               	movf	?__Umul8_16,w
  5347  050B  00D7               	movwf	___flmul@temp
  5348  050C                     l3664:
  5349  050C  0857               	movf	___flmul@temp,w
  5350  050D  00C7               	movwf	??___flmul
  5351  050E  01C8               	clrf	??___flmul+1
  5352  050F  01C9               	clrf	??___flmul+2
  5353  0510  01CA               	clrf	??___flmul+3
  5354  0511  0847               	movf	??___flmul,w
  5355  0512  07CE               	addwf	___flmul@grs,f
  5356  0513  0848               	movf	??___flmul+1,w
  5357  0514  1103               	clrz
  5358  0515  1803               	skipnc
  5359  0516  3E01               	addlw	1
  5360  0517  1903               	skipnz
  5361  0518  2D1A               	goto	u5031
  5362  0519  07CF               	addwf	___flmul@grs+1,f
  5363  051A                     u5031:
  5364  051A  0849               	movf	??___flmul+2,w
  5365  051B  1103               	clrz
  5366  051C  1803               	skipnc
  5367  051D  3E01               	addlw	1
  5368  051E  1903               	skipnz
  5369  051F  2D21               	goto	u5032
  5370  0520  07D0               	addwf	___flmul@grs+2,f
  5371  0521                     u5032:
  5372  0521  084A               	movf	??___flmul+3,w
  5373  0522  1103               	clrz
  5374  0523  1803               	skipnc
  5375  0524  3E01               	addlw	1
  5376  0525  1903               	skipnz
  5377  0526  2D28               	goto	u5033
  5378  0527  07D1               	addwf	___flmul@grs+3,f
  5379  0528                     u5033:
  5380  0528                     l3666:
  5381  0528  0858               	movf	___flmul@temp+1,w
  5382  0529  00C7               	movwf	??___flmul
  5383  052A  01C8               	clrf	??___flmul+1
  5384  052B  01C9               	clrf	??___flmul+2
  5385  052C  01CA               	clrf	??___flmul+3
  5386  052D  0847               	movf	??___flmul,w
  5387  052E  07D3               	addwf	___flmul@prod,f
  5388  052F  0848               	movf	??___flmul+1,w
  5389  0530  1103               	clrz
  5390  0531  1803               	skipnc
  5391  0532  3E01               	addlw	1
  5392  0533  1903               	skipnz
  5393  0534  2D36               	goto	u5041
  5394  0535  07D4               	addwf	___flmul@prod+1,f
  5395  0536                     u5041:
  5396  0536  0849               	movf	??___flmul+2,w
  5397  0537  1103               	clrz
  5398  0538  1803               	skipnc
  5399  0539  3E01               	addlw	1
  5400  053A  1903               	skipnz
  5401  053B  2D3D               	goto	u5042
  5402  053C  07D5               	addwf	___flmul@prod+2,f
  5403  053D                     u5042:
  5404  053D  084A               	movf	??___flmul+3,w
  5405  053E  1103               	clrz
  5406  053F  1803               	skipnc
  5407  0540  3E01               	addlw	1
  5408  0541  1903               	skipnz
  5409  0542  2D44               	goto	u5043
  5410  0543  07D6               	addwf	___flmul@prod+3,f
  5411  0544                     u5043:
  5412  0544                     l3668:
  5413  0544  3008               	movlw	8
  5414  0545  00C7               	movwf	??___flmul
  5415  0546                     u5055:
  5416  0546  1003               	clrc
  5417  0547  0DCE               	rlf	___flmul@grs,f
  5418  0548  0DCF               	rlf	___flmul@grs+1,f
  5419  0549  0DD0               	rlf	___flmul@grs+2,f
  5420  054A  0DD1               	rlf	___flmul@grs+3,f
  5421  054B  0BC7               	decfsz	??___flmul,f
  5422  054C  2D46               	goto	u5055
  5423  054D                     l3670:
  5424  054D  0840               	movf	___flmul@b+1,w
  5425  054E  00C7               	movwf	??___flmul
  5426  054F  0847               	movf	??___flmul,w
  5427  0550  00F2               	movwf	__Umul8_16@multiplicand
  5428  0551  0843               	movf	___flmul@a,w
  5429  0552  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5430  0557  0873               	movf	?__Umul8_16+1,w
  5431  0558  1283               	bcf	3,5	;RP0=0, select bank0
  5432  0559  1303               	bcf	3,6	;RP1=0, select bank0
  5433  055A  00D8               	movwf	___flmul@temp+1
  5434  055B  0872               	movf	?__Umul8_16,w
  5435  055C  00D7               	movwf	___flmul@temp
  5436  055D                     l3672:
  5437  055D  0857               	movf	___flmul@temp,w
  5438  055E  00C7               	movwf	??___flmul
  5439  055F  0858               	movf	___flmul@temp+1,w
  5440  0560  00C8               	movwf	??___flmul+1
  5441  0561  01C9               	clrf	??___flmul+2
  5442  0562  01CA               	clrf	??___flmul+3
  5443  0563  0847               	movf	??___flmul,w
  5444  0564  07CE               	addwf	___flmul@grs,f
  5445  0565  0848               	movf	??___flmul+1,w
  5446  0566  1103               	clrz
  5447  0567  1803               	skipnc
  5448  0568  3E01               	addlw	1
  5449  0569  1903               	skipnz
  5450  056A  2D6C               	goto	u5061
  5451  056B  07CF               	addwf	___flmul@grs+1,f
  5452  056C                     u5061:
  5453  056C  0849               	movf	??___flmul+2,w
  5454  056D  1103               	clrz
  5455  056E  1803               	skipnc
  5456  056F  3E01               	addlw	1
  5457  0570  1903               	skipnz
  5458  0571  2D73               	goto	u5062
  5459  0572  07D0               	addwf	___flmul@grs+2,f
  5460  0573                     u5062:
  5461  0573  084A               	movf	??___flmul+3,w
  5462  0574  1103               	clrz
  5463  0575  1803               	skipnc
  5464  0576  3E01               	addlw	1
  5465  0577  1903               	skipnz
  5466  0578  2D7A               	goto	u5063
  5467  0579  07D1               	addwf	___flmul@grs+3,f
  5468  057A                     u5063:
  5469  057A                     l3674:
  5470  057A  083F               	movf	___flmul@b,w
  5471  057B  00C7               	movwf	??___flmul
  5472  057C  0847               	movf	??___flmul,w
  5473  057D  00F2               	movwf	__Umul8_16@multiplicand
  5474  057E  0844               	movf	___flmul@a+1,w
  5475  057F  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5476  0584  0873               	movf	?__Umul8_16+1,w
  5477  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0587  00D8               	movwf	___flmul@temp+1
  5480  0588  0872               	movf	?__Umul8_16,w
  5481  0589  00D7               	movwf	___flmul@temp
  5482  058A                     l3676:
  5483  058A  0857               	movf	___flmul@temp,w
  5484  058B  00C7               	movwf	??___flmul
  5485  058C  0858               	movf	___flmul@temp+1,w
  5486  058D  00C8               	movwf	??___flmul+1
  5487  058E  01C9               	clrf	??___flmul+2
  5488  058F  01CA               	clrf	??___flmul+3
  5489  0590  0847               	movf	??___flmul,w
  5490  0591  07CE               	addwf	___flmul@grs,f
  5491  0592  0848               	movf	??___flmul+1,w
  5492  0593  1103               	clrz
  5493  0594  1803               	skipnc
  5494  0595  3E01               	addlw	1
  5495  0596  1903               	skipnz
  5496  0597  2D99               	goto	u5071
  5497  0598  07CF               	addwf	___flmul@grs+1,f
  5498  0599                     u5071:
  5499  0599  0849               	movf	??___flmul+2,w
  5500  059A  1103               	clrz
  5501  059B  1803               	skipnc
  5502  059C  3E01               	addlw	1
  5503  059D  1903               	skipnz
  5504  059E  2DA0               	goto	u5072
  5505  059F  07D0               	addwf	___flmul@grs+2,f
  5506  05A0                     u5072:
  5507  05A0  084A               	movf	??___flmul+3,w
  5508  05A1  1103               	clrz
  5509  05A2  1803               	skipnc
  5510  05A3  3E01               	addlw	1
  5511  05A4  1903               	skipnz
  5512  05A5  2DA7               	goto	u5073
  5513  05A6  07D1               	addwf	___flmul@grs+3,f
  5514  05A7                     u5073:
  5515  05A7                     l3678:
  5516  05A7  3008               	movlw	8
  5517  05A8  00C7               	movwf	??___flmul
  5518  05A9                     u5085:
  5519  05A9  1003               	clrc
  5520  05AA  0DCE               	rlf	___flmul@grs,f
  5521  05AB  0DCF               	rlf	___flmul@grs+1,f
  5522  05AC  0DD0               	rlf	___flmul@grs+2,f
  5523  05AD  0DD1               	rlf	___flmul@grs+3,f
  5524  05AE  0BC7               	decfsz	??___flmul,f
  5525  05AF  2DA9               	goto	u5085
  5526  05B0  083F               	movf	___flmul@b,w
  5527  05B1  00C7               	movwf	??___flmul
  5528  05B2  0847               	movf	??___flmul,w
  5529  05B3  00F2               	movwf	__Umul8_16@multiplicand
  5530  05B4  0843               	movf	___flmul@a,w
  5531  05B5  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5532  05BA  0873               	movf	?__Umul8_16+1,w
  5533  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  5534  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  5535  05BD  00D8               	movwf	___flmul@temp+1
  5536  05BE  0872               	movf	?__Umul8_16,w
  5537  05BF  00D7               	movwf	___flmul@temp
  5538  05C0                     l3680:
  5539  05C0  0857               	movf	___flmul@temp,w
  5540  05C1  00C7               	movwf	??___flmul
  5541  05C2  0858               	movf	___flmul@temp+1,w
  5542  05C3  00C8               	movwf	??___flmul+1
  5543  05C4  01C9               	clrf	??___flmul+2
  5544  05C5  01CA               	clrf	??___flmul+3
  5545  05C6  0847               	movf	??___flmul,w
  5546  05C7  07CE               	addwf	___flmul@grs,f
  5547  05C8  0848               	movf	??___flmul+1,w
  5548  05C9  1103               	clrz
  5549  05CA  1803               	skipnc
  5550  05CB  3E01               	addlw	1
  5551  05CC  1903               	skipnz
  5552  05CD  2DCF               	goto	u5091
  5553  05CE  07CF               	addwf	___flmul@grs+1,f
  5554  05CF                     u5091:
  5555  05CF  0849               	movf	??___flmul+2,w
  5556  05D0  1103               	clrz
  5557  05D1  1803               	skipnc
  5558  05D2  3E01               	addlw	1
  5559  05D3  1903               	skipnz
  5560  05D4  2DD6               	goto	u5092
  5561  05D5  07D0               	addwf	___flmul@grs+2,f
  5562  05D6                     u5092:
  5563  05D6  084A               	movf	??___flmul+3,w
  5564  05D7  1103               	clrz
  5565  05D8  1803               	skipnc
  5566  05D9  3E01               	addlw	1
  5567  05DA  1903               	skipnz
  5568  05DB  2DDD               	goto	u5093
  5569  05DC  07D1               	addwf	___flmul@grs+3,f
  5570  05DD                     u5093:
  5571  05DD                     l3682:
  5572  05DD  0840               	movf	___flmul@b+1,w
  5573  05DE  00C7               	movwf	??___flmul
  5574  05DF  0847               	movf	??___flmul,w
  5575  05E0  00F2               	movwf	__Umul8_16@multiplicand
  5576  05E1  0845               	movf	___flmul@a+2,w
  5577  05E2  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5578  05E7  0873               	movf	?__Umul8_16+1,w
  5579  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  5580  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  5581  05EA  00D8               	movwf	___flmul@temp+1
  5582  05EB  0872               	movf	?__Umul8_16,w
  5583  05EC  00D7               	movwf	___flmul@temp
  5584  05ED  0857               	movf	___flmul@temp,w
  5585  05EE  00C7               	movwf	??___flmul
  5586  05EF  0858               	movf	___flmul@temp+1,w
  5587  05F0  00C8               	movwf	??___flmul+1
  5588  05F1  01C9               	clrf	??___flmul+2
  5589  05F2  01CA               	clrf	??___flmul+3
  5590  05F3  0847               	movf	??___flmul,w
  5591  05F4  07D3               	addwf	___flmul@prod,f
  5592  05F5  0848               	movf	??___flmul+1,w
  5593  05F6  1103               	clrz
  5594  05F7  1803               	skipnc
  5595  05F8  3E01               	addlw	1
  5596  05F9  1903               	skipnz
  5597  05FA  2DFC               	goto	u5101
  5598  05FB  07D4               	addwf	___flmul@prod+1,f
  5599  05FC                     u5101:
  5600  05FC  0849               	movf	??___flmul+2,w
  5601  05FD  1103               	clrz
  5602  05FE  1803               	skipnc
  5603  05FF  3E01               	addlw	1
  5604  0600  1903               	skipnz
  5605  0601  2E03               	goto	u5102
  5606  0602  07D5               	addwf	___flmul@prod+2,f
  5607  0603                     u5102:
  5608  0603  084A               	movf	??___flmul+3,w
  5609  0604  1103               	clrz
  5610  0605  1803               	skipnc
  5611  0606  3E01               	addlw	1
  5612  0607  1903               	skipnz
  5613  0608  2E0A               	goto	u5103
  5614  0609  07D6               	addwf	___flmul@prod+3,f
  5615  060A                     u5103:
  5616  060A                     l3684:
  5617  060A  0841               	movf	___flmul@b+2,w
  5618  060B  00C7               	movwf	??___flmul
  5619  060C  0847               	movf	??___flmul,w
  5620  060D  00F2               	movwf	__Umul8_16@multiplicand
  5621  060E  0844               	movf	___flmul@a+1,w
  5622  060F  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5623  0614  0873               	movf	?__Umul8_16+1,w
  5624  0615  1283               	bcf	3,5	;RP0=0, select bank0
  5625  0616  1303               	bcf	3,6	;RP1=0, select bank0
  5626  0617  00D8               	movwf	___flmul@temp+1
  5627  0618  0872               	movf	?__Umul8_16,w
  5628  0619  00D7               	movwf	___flmul@temp
  5629  061A                     l3686:
  5630  061A  0857               	movf	___flmul@temp,w
  5631  061B  00C7               	movwf	??___flmul
  5632  061C  0858               	movf	___flmul@temp+1,w
  5633  061D  00C8               	movwf	??___flmul+1
  5634  061E  01C9               	clrf	??___flmul+2
  5635  061F  01CA               	clrf	??___flmul+3
  5636  0620  0847               	movf	??___flmul,w
  5637  0621  07D3               	addwf	___flmul@prod,f
  5638  0622  0848               	movf	??___flmul+1,w
  5639  0623  1103               	clrz
  5640  0624  1803               	skipnc
  5641  0625  3E01               	addlw	1
  5642  0626  1903               	skipnz
  5643  0627  2E29               	goto	u5111
  5644  0628  07D4               	addwf	___flmul@prod+1,f
  5645  0629                     u5111:
  5646  0629  0849               	movf	??___flmul+2,w
  5647  062A  1103               	clrz
  5648  062B  1803               	skipnc
  5649  062C  3E01               	addlw	1
  5650  062D  1903               	skipnz
  5651  062E  2E30               	goto	u5112
  5652  062F  07D5               	addwf	___flmul@prod+2,f
  5653  0630                     u5112:
  5654  0630  084A               	movf	??___flmul+3,w
  5655  0631  1103               	clrz
  5656  0632  1803               	skipnc
  5657  0633  3E01               	addlw	1
  5658  0634  1903               	skipnz
  5659  0635  2E37               	goto	u5113
  5660  0636  07D6               	addwf	___flmul@prod+3,f
  5661  0637                     u5113:
  5662  0637  0841               	movf	___flmul@b+2,w
  5663  0638  00C7               	movwf	??___flmul
  5664  0639  0847               	movf	??___flmul,w
  5665  063A  00F2               	movwf	__Umul8_16@multiplicand
  5666  063B  0845               	movf	___flmul@a+2,w
  5667  063C  160A  118A  2691  120A  118A  	fcall	__Umul8_16
  5668  0641  0873               	movf	?__Umul8_16+1,w
  5669  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0643  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0644  00D8               	movwf	___flmul@temp+1
  5672  0645  0872               	movf	?__Umul8_16,w
  5673  0646  00D7               	movwf	___flmul@temp
  5674  0647                     l3688:
  5675  0647  0857               	movf	___flmul@temp,w
  5676  0648  00C7               	movwf	??___flmul
  5677  0649  0858               	movf	___flmul@temp+1,w
  5678  064A  00C8               	movwf	??___flmul+1
  5679  064B  01C9               	clrf	??___flmul+2
  5680  064C  01CA               	clrf	??___flmul+3
  5681  064D  3008               	movlw	8
  5682  064E                     u5125:
  5683  064E  1003               	clrc
  5684  064F  0DC7               	rlf	??___flmul,f
  5685  0650  0DC8               	rlf	??___flmul+1,f
  5686  0651  0DC9               	rlf	??___flmul+2,f
  5687  0652  0DCA               	rlf	??___flmul+3,f
  5688  0653                     u5120:
  5689  0653  3EFF               	addlw	-1
  5690  0654  1D03               	skipz
  5691  0655  2E4E               	goto	u5125
  5692  0656  0847               	movf	??___flmul,w
  5693  0657  07D3               	addwf	___flmul@prod,f
  5694  0658  0848               	movf	??___flmul+1,w
  5695  0659  1103               	clrz
  5696  065A  1803               	skipnc
  5697  065B  3E01               	addlw	1
  5698  065C  1903               	skipnz
  5699  065D  2E5F               	goto	u5131
  5700  065E  07D4               	addwf	___flmul@prod+1,f
  5701  065F                     u5131:
  5702  065F  0849               	movf	??___flmul+2,w
  5703  0660  1103               	clrz
  5704  0661  1803               	skipnc
  5705  0662  3E01               	addlw	1
  5706  0663  1903               	skipnz
  5707  0664  2E66               	goto	u5132
  5708  0665  07D5               	addwf	___flmul@prod+2,f
  5709  0666                     u5132:
  5710  0666  084A               	movf	??___flmul+3,w
  5711  0667  1103               	clrz
  5712  0668  1803               	skipnc
  5713  0669  3E01               	addlw	1
  5714  066A  1903               	skipnz
  5715  066B  2E6D               	goto	u5133
  5716  066C  07D6               	addwf	___flmul@prod+3,f
  5717  066D                     u5133:
  5718  066D                     l3690:
  5719  066D  084E               	movf	___flmul@grs,w
  5720  066E  00C7               	movwf	??___flmul
  5721  066F  084F               	movf	___flmul@grs+1,w
  5722  0670  00C8               	movwf	??___flmul+1
  5723  0671  0850               	movf	___flmul@grs+2,w
  5724  0672  00C9               	movwf	??___flmul+2
  5725  0673  0851               	movf	___flmul@grs+3,w
  5726  0674  00CA               	movwf	??___flmul+3
  5727  0675  3018               	movlw	24
  5728  0676                     u5145:
  5729  0676  1003               	clrc
  5730  0677  0CCA               	rrf	??___flmul+3,f
  5731  0678  0CC9               	rrf	??___flmul+2,f
  5732  0679  0CC8               	rrf	??___flmul+1,f
  5733  067A  0CC7               	rrf	??___flmul,f
  5734  067B                     u5140:
  5735  067B  3EFF               	addlw	-1
  5736  067C  1D03               	skipz
  5737  067D  2E76               	goto	u5145
  5738  067E  0847               	movf	??___flmul,w
  5739  067F  07D3               	addwf	___flmul@prod,f
  5740  0680  0848               	movf	??___flmul+1,w
  5741  0681  1103               	clrz
  5742  0682  1803               	skipnc
  5743  0683  3E01               	addlw	1
  5744  0684  1903               	skipnz
  5745  0685  2E87               	goto	u5151
  5746  0686  07D4               	addwf	___flmul@prod+1,f
  5747  0687                     u5151:
  5748  0687  0849               	movf	??___flmul+2,w
  5749  0688  1103               	clrz
  5750  0689  1803               	skipnc
  5751  068A  3E01               	addlw	1
  5752  068B  1903               	skipnz
  5753  068C  2E8E               	goto	u5152
  5754  068D  07D5               	addwf	___flmul@prod+2,f
  5755  068E                     u5152:
  5756  068E  084A               	movf	??___flmul+3,w
  5757  068F  1103               	clrz
  5758  0690  1803               	skipnc
  5759  0691  3E01               	addlw	1
  5760  0692  1903               	skipnz
  5761  0693  2E95               	goto	u5153
  5762  0694  07D6               	addwf	___flmul@prod+3,f
  5763  0695                     u5153:
  5764  0695                     l3692:
  5765  0695  3008               	movlw	8
  5766  0696  00C7               	movwf	??___flmul
  5767  0697                     u5165:
  5768  0697  1003               	clrc
  5769  0698  0DCE               	rlf	___flmul@grs,f
  5770  0699  0DCF               	rlf	___flmul@grs+1,f
  5771  069A  0DD0               	rlf	___flmul@grs+2,f
  5772  069B  0DD1               	rlf	___flmul@grs+3,f
  5773  069C  0BC7               	decfsz	??___flmul,f
  5774  069D  2E97               	goto	u5165
  5775  069E                     l3694:
  5776  069E  0852               	movf	___flmul@bexp,w
  5777  069F  074D               	addwf	___flmul@aexp,w
  5778  06A0  00C7               	movwf	??___flmul
  5779  06A1  01C8               	clrf	??___flmul+1
  5780  06A2  0DC8               	rlf	??___flmul+1,f
  5781  06A3  0847               	movf	??___flmul,w
  5782  06A4  3E82               	addlw	130
  5783  06A5  00D7               	movwf	___flmul@temp
  5784  06A6  0848               	movf	??___flmul+1,w
  5785  06A7  1803               	skipnc
  5786  06A8  3E01               	addlw	1
  5787  06A9  3EFF               	addlw	255
  5788  06AA  00D8               	movwf	___flmul@temp+1
  5789  06AB  2EC9               	goto	l3706
  5790  06AC                     l3696:
  5791  06AC  3001               	movlw	1
  5792  06AD  00C7               	movwf	??___flmul
  5793  06AE                     u5175:
  5794  06AE  1003               	clrc
  5795  06AF  0DD3               	rlf	___flmul@prod,f
  5796  06B0  0DD4               	rlf	___flmul@prod+1,f
  5797  06B1  0DD5               	rlf	___flmul@prod+2,f
  5798  06B2  0DD6               	rlf	___flmul@prod+3,f
  5799  06B3  0BC7               	decfsz	??___flmul,f
  5800  06B4  2EAE               	goto	u5175
  5801  06B5                     l3698:
  5802  06B5  1FD1               	btfss	___flmul@grs+3,7
  5803  06B6  2EB8               	goto	u5181
  5804  06B7  2EB9               	goto	u5180
  5805  06B8                     u5181:
  5806  06B8  2EBA               	goto	l3702
  5807  06B9                     u5180:
  5808  06B9                     l3700:
  5809  06B9  1453               	bsf	___flmul@prod,0
  5810  06BA                     l3702:
  5811  06BA  3001               	movlw	1
  5812  06BB  00C7               	movwf	??___flmul
  5813  06BC                     u5195:
  5814  06BC  1003               	clrc
  5815  06BD  0DCE               	rlf	___flmul@grs,f
  5816  06BE  0DCF               	rlf	___flmul@grs+1,f
  5817  06BF  0DD0               	rlf	___flmul@grs+2,f
  5818  06C0  0DD1               	rlf	___flmul@grs+3,f
  5819  06C1  0BC7               	decfsz	??___flmul,f
  5820  06C2  2EBC               	goto	u5195
  5821  06C3                     l3704:
  5822  06C3  30FF               	movlw	255
  5823  06C4  07D7               	addwf	___flmul@temp,f
  5824  06C5  1803               	skipnc
  5825  06C6  0AD8               	incf	___flmul@temp+1,f
  5826  06C7  30FF               	movlw	255
  5827  06C8  07D8               	addwf	___flmul@temp+1,f
  5828  06C9                     l3706:
  5829  06C9  1FD5               	btfss	___flmul@prod+2,7
  5830  06CA  2ECC               	goto	u5201
  5831  06CB  2ECD               	goto	u5200
  5832  06CC                     u5201:
  5833  06CC  2EAC               	goto	l3696
  5834  06CD                     u5200:
  5835  06CD                     l3708:
  5836  06CD  01CD               	clrf	___flmul@aexp
  5837  06CE                     l3710:
  5838  06CE  1FD1               	btfss	___flmul@grs+3,7
  5839  06CF  2ED1               	goto	u5211
  5840  06D0  2ED2               	goto	u5210
  5841  06D1                     u5211:
  5842  06D1  2EEE               	goto	l3718
  5843  06D2                     u5210:
  5844  06D2                     l3712:
  5845  06D2  30FF               	movlw	255
  5846  06D3  054E               	andwf	___flmul@grs,w
  5847  06D4  00C7               	movwf	??___flmul
  5848  06D5  30FF               	movlw	255
  5849  06D6  054F               	andwf	___flmul@grs+1,w
  5850  06D7  00C8               	movwf	??___flmul+1
  5851  06D8  30FF               	movlw	255
  5852  06D9  0550               	andwf	___flmul@grs+2,w
  5853  06DA  00C9               	movwf	??___flmul+2
  5854  06DB  307F               	movlw	127
  5855  06DC  0551               	andwf	___flmul@grs+3,w
  5856  06DD  00CA               	movwf	??___flmul+3
  5857  06DE  084A               	movf	??___flmul+3,w
  5858  06DF  0449               	iorwf	??___flmul+2,w
  5859  06E0  0448               	iorwf	??___flmul+1,w
  5860  06E1  0447               	iorwf	??___flmul,w
  5861  06E2  1903               	skipnz
  5862  06E3  2EE5               	goto	u5221
  5863  06E4  2EE6               	goto	u5220
  5864  06E5                     u5221:
  5865  06E5  2EE9               	goto	l801
  5866  06E6                     u5220:
  5867  06E6                     l3714:
  5868  06E6  01CD               	clrf	___flmul@aexp
  5869  06E7  0ACD               	incf	___flmul@aexp,f
  5870  06E8  2EEE               	goto	l3718
  5871  06E9                     l801:
  5872  06E9  1C53               	btfss	___flmul@prod,0
  5873  06EA  2EEC               	goto	u5231
  5874  06EB  2EED               	goto	u5230
  5875  06EC                     u5231:
  5876  06EC  2EEE               	goto	l3718
  5877  06ED                     u5230:
  5878  06ED  2EE6               	goto	l3714
  5879  06EE                     l3718:
  5880  06EE  084D               	movf	___flmul@aexp,w
  5881  06EF  1903               	btfsc	3,2
  5882  06F0  2EF2               	goto	u5241
  5883  06F1  2EF3               	goto	u5240
  5884  06F2                     u5241:
  5885  06F2  2F24               	goto	l3728
  5886  06F3                     u5240:
  5887  06F3                     l3720:
  5888  06F3  3001               	movlw	1
  5889  06F4  07D3               	addwf	___flmul@prod,f
  5890  06F5  3000               	movlw	0
  5891  06F6  1803               	skipnc
  5892  06F7  3001               	movlw	1
  5893  06F8  07D4               	addwf	___flmul@prod+1,f
  5894  06F9  3000               	movlw	0
  5895  06FA  1803               	skipnc
  5896  06FB  3001               	movlw	1
  5897  06FC  07D5               	addwf	___flmul@prod+2,f
  5898  06FD  3000               	movlw	0
  5899  06FE  1803               	skipnc
  5900  06FF  3001               	movlw	1
  5901  0700  07D6               	addwf	___flmul@prod+3,f
  5902  0701                     l3722:
  5903  0701  1C56               	btfss	___flmul@prod+3,0
  5904  0702  2F04               	goto	u5251
  5905  0703  2F05               	goto	u5250
  5906  0704                     u5251:
  5907  0704  2F24               	goto	l3728
  5908  0705                     u5250:
  5909  0705                     l3724:
  5910  0705  0853               	movf	___flmul@prod,w
  5911  0706  00C7               	movwf	??___flmul
  5912  0707  0854               	movf	___flmul@prod+1,w
  5913  0708  00C8               	movwf	??___flmul+1
  5914  0709  0855               	movf	___flmul@prod+2,w
  5915  070A  00C9               	movwf	??___flmul+2
  5916  070B  0856               	movf	___flmul@prod+3,w
  5917  070C  00CA               	movwf	??___flmul+3
  5918  070D  3001               	movlw	1
  5919  070E  00CB               	movwf	??___flmul+4
  5920  070F                     u5265:
  5921  070F  0D4A               	rlf	??___flmul+3,w
  5922  0710  0CCA               	rrf	??___flmul+3,f
  5923  0711  0CC9               	rrf	??___flmul+2,f
  5924  0712  0CC8               	rrf	??___flmul+1,f
  5925  0713  0CC7               	rrf	??___flmul,f
  5926  0714                     u5260:
  5927  0714  0BCB               	decfsz	??___flmul+4,f
  5928  0715  2F0F               	goto	u5265
  5929  0716  084A               	movf	??___flmul+3,w
  5930  0717  00D6               	movwf	___flmul@prod+3
  5931  0718  0849               	movf	??___flmul+2,w
  5932  0719  00D5               	movwf	___flmul@prod+2
  5933  071A  0848               	movf	??___flmul+1,w
  5934  071B  00D4               	movwf	___flmul@prod+1
  5935  071C  0847               	movf	??___flmul,w
  5936  071D  00D3               	movwf	___flmul@prod
  5937  071E                     l3726:
  5938  071E  3001               	movlw	1
  5939  071F  07D7               	addwf	___flmul@temp,f
  5940  0720  1803               	skipnc
  5941  0721  0AD8               	incf	___flmul@temp+1,f
  5942  0722  3000               	movlw	0
  5943  0723  07D8               	addwf	___flmul@temp+1,f
  5944  0724                     l3728:
  5945  0724  0858               	movf	___flmul@temp+1,w
  5946  0725  3A80               	xorlw	128
  5947  0726  00FF               	movwf	btemp+1
  5948  0727  3080               	movlw	128
  5949  0728  027F               	subwf	btemp+1,w
  5950  0729  1D03               	skipz
  5951  072A  2F2D               	goto	u5275
  5952  072B  30FF               	movlw	255
  5953  072C  0257               	subwf	___flmul@temp,w
  5954  072D                     u5275:
  5955  072D  1C03               	skipc
  5956  072E  2F30               	goto	u5271
  5957  072F  2F31               	goto	u5270
  5958  0730                     u5271:
  5959  0730  2F3C               	goto	l3732
  5960  0731                     u5270:
  5961  0731                     l3730:
  5962  0731  307F               	movlw	127
  5963  0732  1283               	bcf	3,5	;RP0=0, select bank0
  5964  0733  1303               	bcf	3,6	;RP1=0, select bank0
  5965  0734  00D6               	movwf	___flmul@prod+3
  5966  0735  3080               	movlw	128
  5967  0736  00D5               	movwf	___flmul@prod+2
  5968  0737  3000               	movlw	0
  5969  0738  00D4               	movwf	___flmul@prod+1
  5970  0739  3000               	movlw	0
  5971  073A  00D3               	movwf	___flmul@prod
  5972  073B  2F71               	goto	l807
  5973  073C                     l3732:
  5974  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5975  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5976  073E  0858               	movf	___flmul@temp+1,w
  5977  073F  3A80               	xorlw	128
  5978  0740  00FF               	movwf	btemp+1
  5979  0741  3080               	movlw	128
  5980  0742  027F               	subwf	btemp+1,w
  5981  0743  1D03               	skipz
  5982  0744  2F47               	goto	u5285
  5983  0745  3001               	movlw	1
  5984  0746  0257               	subwf	___flmul@temp,w
  5985  0747                     u5285:
  5986  0747  1803               	skipnc
  5987  0748  2F4A               	goto	u5281
  5988  0749  2F4B               	goto	u5280
  5989  074A                     u5281:
  5990  074A  2F57               	goto	l3738
  5991  074B                     u5280:
  5992  074B                     l3734:
  5993  074B  3000               	movlw	0
  5994  074C  1283               	bcf	3,5	;RP0=0, select bank0
  5995  074D  1303               	bcf	3,6	;RP1=0, select bank0
  5996  074E  00D6               	movwf	___flmul@prod+3
  5997  074F  3000               	movlw	0
  5998  0750  00D5               	movwf	___flmul@prod+2
  5999  0751  3000               	movlw	0
  6000  0752  00D4               	movwf	___flmul@prod+1
  6001  0753  3000               	movlw	0
  6002  0754  00D3               	movwf	___flmul@prod
  6003  0755                     l3736:
  6004  0755  01CC               	clrf	___flmul@sign
  6005  0756  2F71               	goto	l807
  6006  0757                     l3738:
  6007  0757  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0758  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0759  0857               	movf	___flmul@temp,w
  6010  075A  00C7               	movwf	??___flmul
  6011  075B  0847               	movf	??___flmul,w
  6012  075C  00D2               	movwf	___flmul@bexp
  6013  075D  30FF               	movlw	255
  6014  075E  05D3               	andwf	___flmul@prod,f
  6015  075F  30FF               	movlw	255
  6016  0760  05D4               	andwf	___flmul@prod+1,f
  6017  0761  307F               	movlw	127
  6018  0762  05D5               	andwf	___flmul@prod+2,f
  6019  0763  3000               	movlw	0
  6020  0764  05D6               	andwf	___flmul@prod+3,f
  6021  0765                     l3740:
  6022  0765  1C52               	btfss	___flmul@bexp,0
  6023  0766  2F68               	goto	u5291
  6024  0767  2F69               	goto	u5290
  6025  0768                     u5291:
  6026  0768  2F6A               	goto	l3744
  6027  0769                     u5290:
  6028  0769                     l3742:
  6029  0769  17D5               	bsf	___flmul@prod+2,7
  6030  076A                     l3744:
  6031  076A  0852               	movf	___flmul@bexp,w
  6032  076B  00C7               	movwf	??___flmul
  6033  076C  1003               	clrc
  6034  076D  0C47               	rrf	??___flmul,w
  6035  076E  00C8               	movwf	??___flmul+1
  6036  076F  0848               	movf	??___flmul+1,w
  6037  0770  00D6               	movwf	___flmul@prod+3
  6038  0771                     l807:
  6039  0771  084C               	movf	___flmul@sign,w
  6040  0772  00C7               	movwf	??___flmul
  6041  0773  0847               	movf	??___flmul,w
  6042  0774  04D6               	iorwf	___flmul@prod+3,f
  6043  0775                     l3746:
  6044  0775  0856               	movf	___flmul@prod+3,w
  6045  0776  00C2               	movwf	?___flmul+3
  6046  0777  0855               	movf	___flmul@prod+2,w
  6047  0778  00C1               	movwf	?___flmul+2
  6048  0779  0854               	movf	___flmul@prod+1,w
  6049  077A  00C0               	movwf	?___flmul+1
  6050  077B  0853               	movf	___flmul@prod,w
  6051  077C  00BF               	movwf	?___flmul
  6052  077D                     l795:
  6053  077D  0008               	return
  6054  077E                     __end_of___flmul:
  6055                           
  6056                           	psect	text19
  6057  1691                     __ptext19:	
  6058 ;; *************** function __Umul8_16 *****************
  6059 ;; Defined at:
  6060 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  multiplier      1    wreg     unsigned char 
  6063 ;;  multiplicand    1    2[COMMON] unsigned char 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6066 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6067 ;;  product         2    0[BANK0 ] unsigned int 
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  2    2[COMMON] unsigned int 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         2       0       0       0       0
  6078 ;;      Locals:         0       5       0       0       0
  6079 ;;      Temps:          2       0       0       0       0
  6080 ;;      Totals:         4       5       0       0       0
  6081 ;;Total ram usage:        9 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 1
  6084 ;; This function calls:
  6085 ;;		Nothing
  6086 ;; This function is called by:
  6087 ;;		___flmul
  6088 ;; This function uses a non-reentrant model
  6089 ;;
  6090                           
  6091                           
  6092                           ;psect for function __Umul8_16
  6093  1691                     __Umul8_16:
  6094                           
  6095                           ;incstack = 0
  6096                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6097                           ;__Umul8_16@multiplier stored from wreg
  6098  1691  1283               	bcf	3,5	;RP0=0, select bank0
  6099  1692  1303               	bcf	3,6	;RP1=0, select bank0
  6100  1693  00A4               	movwf	__Umul8_16@multiplier
  6101  1694                     l3324:
  6102  1694  01A0               	clrf	__Umul8_16@product
  6103  1695  01A1               	clrf	__Umul8_16@product+1
  6104  1696                     l3326:
  6105  1696  0872               	movf	__Umul8_16@multiplicand,w
  6106  1697  00F4               	movwf	??__Umul8_16
  6107  1698  01F5               	clrf	??__Umul8_16+1
  6108  1699  0874               	movf	??__Umul8_16,w
  6109  169A  00A2               	movwf	__Umul8_16@word_mpld
  6110  169B  0875               	movf	??__Umul8_16+1,w
  6111  169C  00A3               	movwf	__Umul8_16@word_mpld+1
  6112  169D                     l3328:
  6113  169D  1C24               	btfss	__Umul8_16@multiplier,0
  6114  169E  2EA0               	goto	u4281
  6115  169F  2EA1               	goto	u4280
  6116  16A0                     u4281:
  6117  16A0  2EA7               	goto	l814
  6118  16A1                     u4280:
  6119  16A1                     l3330:
  6120  16A1  0822               	movf	__Umul8_16@word_mpld,w
  6121  16A2  07A0               	addwf	__Umul8_16@product,f
  6122  16A3  1803               	skipnc
  6123  16A4  0AA1               	incf	__Umul8_16@product+1,f
  6124  16A5  0823               	movf	__Umul8_16@word_mpld+1,w
  6125  16A6  07A1               	addwf	__Umul8_16@product+1,f
  6126  16A7                     l814:
  6127  16A7  3001               	movlw	1
  6128  16A8                     u4295:
  6129  16A8  1003               	clrc
  6130  16A9  0DA2               	rlf	__Umul8_16@word_mpld,f
  6131  16AA  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6132  16AB  3EFF               	addlw	-1
  6133  16AC  1D03               	skipz
  6134  16AD  2EA8               	goto	u4295
  6135  16AE  1003               	clrc
  6136  16AF  0CA4               	rrf	__Umul8_16@multiplier,f
  6137  16B0                     l3332:
  6138  16B0  0824               	movf	__Umul8_16@multiplier,w
  6139  16B1  1D03               	btfss	3,2
  6140  16B2  2EB4               	goto	u4301
  6141  16B3  2EB5               	goto	u4300
  6142  16B4                     u4301:
  6143  16B4  2E9D               	goto	l3328
  6144  16B5                     u4300:
  6145  16B5                     l3334:
  6146  16B5  0821               	movf	__Umul8_16@product+1,w
  6147  16B6  00F3               	movwf	?__Umul8_16+1
  6148  16B7  0820               	movf	__Umul8_16@product,w
  6149  16B8  00F2               	movwf	?__Umul8_16
  6150  16B9                     l816:
  6151  16B9  0008               	return
  6152  16BA                     __end_of__Umul8_16:
  6153                           
  6154                           	psect	text20
  6155  0962                     __ptext20:	
  6156 ;; *************** function ___flge *****************
  6157 ;; Defined at:
  6158 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  ff1             4    2[COMMON] unsigned int 
  6161 ;;  ff2             4    6[COMMON] unsigned int 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;		None
  6164 ;; Return value:  Size  Location     Type
  6165 ;;		None               void
  6166 ;; Registers used:
  6167 ;;		wreg, status,2, status,0
  6168 ;; Tracked objects:
  6169 ;;		On entry : 0/0
  6170 ;;		On exit  : 0/0
  6171 ;;		Unchanged: 0/0
  6172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6173 ;;      Params:         8       0       0       0       0
  6174 ;;      Locals:         0       0       0       0       0
  6175 ;;      Temps:          0       4       0       0       0
  6176 ;;      Totals:         8       4       0       0       0
  6177 ;;Total ram usage:       12 bytes
  6178 ;; Hardware stack levels used: 1
  6179 ;; Hardware stack levels required when called: 1
  6180 ;; This function calls:
  6181 ;;		Nothing
  6182 ;; This function is called by:
  6183 ;;		_ADC_convert
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function ___flge
  6189  0962                     ___flge:
  6190  0962                     l3406:	
  6191                           ;incstack = 0
  6192                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6193                           
  6194  0962  3000               	movlw	0
  6195  0963  0572               	andwf	___flge@ff1,w
  6196  0964  1283               	bcf	3,5	;RP0=0, select bank0
  6197  0965  1303               	bcf	3,6	;RP1=0, select bank0
  6198  0966  00A0               	movwf	??___flge
  6199  0967  3000               	movlw	0
  6200  0968  0573               	andwf	___flge@ff1+1,w
  6201  0969  00A1               	movwf	??___flge+1
  6202  096A  3080               	movlw	128
  6203  096B  0574               	andwf	___flge@ff1+2,w
  6204  096C  00A2               	movwf	??___flge+2
  6205  096D  307F               	movlw	127
  6206  096E  0575               	andwf	___flge@ff1+3,w
  6207  096F  00A3               	movwf	??___flge+3
  6208  0970  0823               	movf	??___flge+3,w
  6209  0971  0422               	iorwf	??___flge+2,w
  6210  0972  0421               	iorwf	??___flge+1,w
  6211  0973  0420               	iorwf	??___flge,w
  6212  0974  1D03               	skipz
  6213  0975  2977               	goto	u4471
  6214  0976  2978               	goto	u4470
  6215  0977                     u4471:
  6216  0977  2980               	goto	l580
  6217  0978                     u4470:
  6218  0978                     l3408:
  6219  0978  3000               	movlw	0
  6220  0979  00F5               	movwf	___flge@ff1+3
  6221  097A  3000               	movlw	0
  6222  097B  00F4               	movwf	___flge@ff1+2
  6223  097C  3000               	movlw	0
  6224  097D  00F3               	movwf	___flge@ff1+1
  6225  097E  3000               	movlw	0
  6226  097F  00F2               	movwf	___flge@ff1
  6227  0980                     l580:
  6228  0980  3000               	movlw	0
  6229  0981  0576               	andwf	___flge@ff2,w
  6230  0982  00A0               	movwf	??___flge
  6231  0983  3000               	movlw	0
  6232  0984  0577               	andwf	___flge@ff2+1,w
  6233  0985  00A1               	movwf	??___flge+1
  6234  0986  3080               	movlw	128
  6235  0987  0578               	andwf	___flge@ff2+2,w
  6236  0988  00A2               	movwf	??___flge+2
  6237  0989  307F               	movlw	127
  6238  098A  0579               	andwf	___flge@ff2+3,w
  6239  098B  00A3               	movwf	??___flge+3
  6240  098C  0823               	movf	??___flge+3,w
  6241  098D  0422               	iorwf	??___flge+2,w
  6242  098E  0421               	iorwf	??___flge+1,w
  6243  098F  0420               	iorwf	??___flge,w
  6244  0990  1D03               	skipz
  6245  0991  2993               	goto	u4481
  6246  0992  2994               	goto	u4480
  6247  0993                     u4481:
  6248  0993  299C               	goto	l3412
  6249  0994                     u4480:
  6250  0994                     l3410:
  6251  0994  3000               	movlw	0
  6252  0995  00F9               	movwf	___flge@ff2+3
  6253  0996  3000               	movlw	0
  6254  0997  00F8               	movwf	___flge@ff2+2
  6255  0998  3000               	movlw	0
  6256  0999  00F7               	movwf	___flge@ff2+1
  6257  099A  3000               	movlw	0
  6258  099B  00F6               	movwf	___flge@ff2
  6259  099C                     l3412:
  6260  099C  1FF5               	btfss	___flge@ff1+3,7
  6261  099D  299F               	goto	u4491
  6262  099E  29A0               	goto	u4490
  6263  099F                     u4491:
  6264  099F  29C4               	goto	l3416
  6265  09A0                     u4490:
  6266  09A0                     l3414:
  6267  09A0  3000               	movlw	0
  6268  09A1  00A0               	movwf	??___flge
  6269  09A2  3000               	movlw	0
  6270  09A3  00A1               	movwf	??___flge+1
  6271  09A4  3000               	movlw	0
  6272  09A5  00A2               	movwf	??___flge+2
  6273  09A6  3080               	movlw	128
  6274  09A7  00A3               	movwf	??___flge+3
  6275  09A8  0872               	movf	___flge@ff1,w
  6276  09A9  02A0               	subwf	??___flge,f
  6277  09AA  0873               	movf	___flge@ff1+1,w
  6278  09AB  1C03               	skipc
  6279  09AC  0F73               	incfsz	___flge@ff1+1,w
  6280  09AD  29AF               	goto	u4501
  6281  09AE  29B0               	goto	u4502
  6282  09AF                     u4501:
  6283  09AF  02A1               	subwf	??___flge+1,f
  6284  09B0                     u4502:
  6285  09B0  0874               	movf	___flge@ff1+2,w
  6286  09B1  1C03               	skipc
  6287  09B2  0F74               	incfsz	___flge@ff1+2,w
  6288  09B3  29B5               	goto	u4503
  6289  09B4  29B6               	goto	u4504
  6290  09B5                     u4503:
  6291  09B5  02A2               	subwf	??___flge+2,f
  6292  09B6                     u4504:
  6293  09B6  0875               	movf	___flge@ff1+3,w
  6294  09B7  1C03               	skipc
  6295  09B8  0F75               	incfsz	___flge@ff1+3,w
  6296  09B9  29BB               	goto	u4505
  6297  09BA  29BC               	goto	u4506
  6298  09BB                     u4505:
  6299  09BB  02A3               	subwf	??___flge+3,f
  6300  09BC                     u4506:
  6301  09BC  0823               	movf	??___flge+3,w
  6302  09BD  00F5               	movwf	___flge@ff1+3
  6303  09BE  0822               	movf	??___flge+2,w
  6304  09BF  00F4               	movwf	___flge@ff1+2
  6305  09C0  0821               	movf	??___flge+1,w
  6306  09C1  00F3               	movwf	___flge@ff1+1
  6307  09C2  0820               	movf	??___flge,w
  6308  09C3  00F2               	movwf	___flge@ff1
  6309  09C4                     l3416:
  6310  09C4  1FF9               	btfss	___flge@ff2+3,7
  6311  09C5  29C7               	goto	u4511
  6312  09C6  29C8               	goto	u4510
  6313  09C7                     u4511:
  6314  09C7  29EC               	goto	l583
  6315  09C8                     u4510:
  6316  09C8                     l3418:
  6317  09C8  3000               	movlw	0
  6318  09C9  00A0               	movwf	??___flge
  6319  09CA  3000               	movlw	0
  6320  09CB  00A1               	movwf	??___flge+1
  6321  09CC  3000               	movlw	0
  6322  09CD  00A2               	movwf	??___flge+2
  6323  09CE  3080               	movlw	128
  6324  09CF  00A3               	movwf	??___flge+3
  6325  09D0  0876               	movf	___flge@ff2,w
  6326  09D1  02A0               	subwf	??___flge,f
  6327  09D2  0877               	movf	___flge@ff2+1,w
  6328  09D3  1C03               	skipc
  6329  09D4  0F77               	incfsz	___flge@ff2+1,w
  6330  09D5  29D7               	goto	u4521
  6331  09D6  29D8               	goto	u4522
  6332  09D7                     u4521:
  6333  09D7  02A1               	subwf	??___flge+1,f
  6334  09D8                     u4522:
  6335  09D8  0878               	movf	___flge@ff2+2,w
  6336  09D9  1C03               	skipc
  6337  09DA  0F78               	incfsz	___flge@ff2+2,w
  6338  09DB  29DD               	goto	u4523
  6339  09DC  29DE               	goto	u4524
  6340  09DD                     u4523:
  6341  09DD  02A2               	subwf	??___flge+2,f
  6342  09DE                     u4524:
  6343  09DE  0879               	movf	___flge@ff2+3,w
  6344  09DF  1C03               	skipc
  6345  09E0  0F79               	incfsz	___flge@ff2+3,w
  6346  09E1  29E3               	goto	u4525
  6347  09E2  29E4               	goto	u4526
  6348  09E3                     u4525:
  6349  09E3  02A3               	subwf	??___flge+3,f
  6350  09E4                     u4526:
  6351  09E4  0823               	movf	??___flge+3,w
  6352  09E5  00F9               	movwf	___flge@ff2+3
  6353  09E6  0822               	movf	??___flge+2,w
  6354  09E7  00F8               	movwf	___flge@ff2+2
  6355  09E8  0821               	movf	??___flge+1,w
  6356  09E9  00F7               	movwf	___flge@ff2+1
  6357  09EA  0820               	movf	??___flge,w
  6358  09EB  00F6               	movwf	___flge@ff2
  6359  09EC                     l583:
  6360  09EC  3080               	movlw	128
  6361  09ED  06F5               	xorwf	___flge@ff1+3,f
  6362  09EE  3080               	movlw	128
  6363  09EF  06F9               	xorwf	___flge@ff2+3,f
  6364  09F0  0879               	movf	___flge@ff2+3,w
  6365  09F1  0275               	subwf	___flge@ff1+3,w
  6366  09F2  1D03               	skipz
  6367  09F3  29FE               	goto	u4535
  6368  09F4  0878               	movf	___flge@ff2+2,w
  6369  09F5  0274               	subwf	___flge@ff1+2,w
  6370  09F6  1D03               	skipz
  6371  09F7  29FE               	goto	u4535
  6372  09F8  0877               	movf	___flge@ff2+1,w
  6373  09F9  0273               	subwf	___flge@ff1+1,w
  6374  09FA  1D03               	skipz
  6375  09FB  29FE               	goto	u4535
  6376  09FC  0876               	movf	___flge@ff2,w
  6377  09FD  0272               	subwf	___flge@ff1,w
  6378  09FE                     u4535:
  6379  09FE  1803               	skipnc
  6380  09FF  2A01               	goto	u4531
  6381  0A00  2A02               	goto	u4530
  6382  0A01                     u4531:
  6383  0A01  2A04               	goto	l3422
  6384  0A02                     u4530:
  6385  0A02                     l3420:
  6386  0A02  1003               	clrc
  6387  0A03  2A05               	goto	l584
  6388  0A04                     l3422:
  6389  0A04  1403               	setc
  6390  0A05                     l584:
  6391  0A05  0008               	return
  6392  0A06                     __end_of___flge:
  6393                           
  6394                           	psect	text21
  6395  0B9B                     __ptext21:	
  6396 ;; *************** function ___fldiv *****************
  6397 ;; Defined at:
  6398 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  a               4   23[BANK0 ] unsigned int 
  6401 ;;  b               4   27[BANK0 ] unsigned int 
  6402 ;; Auto vars:     Size  Location     Type
  6403 ;;  grs             4   43[BANK0 ] unsigned long 
  6404 ;;  rem             4   36[BANK0 ] unsigned long 
  6405 ;;  new_exp         2   41[BANK0 ] int 
  6406 ;;  aexp            1   48[BANK0 ] unsigned char 
  6407 ;;  bexp            1   47[BANK0 ] unsigned char 
  6408 ;;  sign            1   40[BANK0 ] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  4   23[BANK0 ] unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0, btemp+1
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6418 ;;      Params:         0       8       0       0       0
  6419 ;;      Locals:         0      13       0       0       0
  6420 ;;      Temps:          0       5       0       0       0
  6421 ;;      Totals:         0      26       0       0       0
  6422 ;;Total ram usage:       26 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 1
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_ADC_convert
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function ___fldiv
  6434  0B9B                     ___fldiv:
  6435  0B9B                     l3468:	
  6436                           ;incstack = 0
  6437                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6438                           
  6439  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  6440  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  6441  0B9D  083E               	movf	___fldiv@b+3,w
  6442  0B9E  3980               	andlw	128
  6443  0B9F  00BF               	movwf	??___fldiv
  6444  0BA0  083F               	movf	??___fldiv,w
  6445  0BA1  00C8               	movwf	___fldiv@sign
  6446  0BA2                     l3470:
  6447  0BA2  083E               	movf	___fldiv@b+3,w
  6448  0BA3  00BF               	movwf	??___fldiv
  6449  0BA4  073F               	addwf	??___fldiv,w
  6450  0BA5  00C0               	movwf	??___fldiv+1
  6451  0BA6  0840               	movf	??___fldiv+1,w
  6452  0BA7  00CF               	movwf	___fldiv@bexp
  6453  0BA8                     l3472:
  6454  0BA8  1FBD               	btfss	___fldiv@b+2,7
  6455  0BA9  2BAB               	goto	u4641
  6456  0BAA  2BAC               	goto	u4640
  6457  0BAB                     u4641:
  6458  0BAB  2BAD               	goto	l3476
  6459  0BAC                     u4640:
  6460  0BAC                     l3474:
  6461  0BAC  144F               	bsf	___fldiv@bexp,0
  6462  0BAD                     l3476:
  6463  0BAD  084F               	movf	___fldiv@bexp,w
  6464  0BAE  1903               	btfsc	3,2
  6465  0BAF  2BB1               	goto	u4651
  6466  0BB0  2BB2               	goto	u4650
  6467  0BB1                     u4651:
  6468  0BB1  2BC2               	goto	l3486
  6469  0BB2                     u4650:
  6470  0BB2                     l3478:
  6471  0BB2  0A4F               	incf	___fldiv@bexp,w
  6472  0BB3  1D03               	btfss	3,2
  6473  0BB4  2BB6               	goto	u4661
  6474  0BB5  2BB7               	goto	u4660
  6475  0BB6                     u4661:
  6476  0BB6  2BBF               	goto	l3482
  6477  0BB7                     u4660:
  6478  0BB7                     l3480:
  6479  0BB7  3000               	movlw	0
  6480  0BB8  00BE               	movwf	___fldiv@b+3
  6481  0BB9  3000               	movlw	0
  6482  0BBA  00BD               	movwf	___fldiv@b+2
  6483  0BBB  3000               	movlw	0
  6484  0BBC  00BC               	movwf	___fldiv@b+1
  6485  0BBD  3000               	movlw	0
  6486  0BBE  00BB               	movwf	___fldiv@b
  6487  0BBF                     l3482:
  6488  0BBF  17BD               	bsf	___fldiv@b+2,7
  6489  0BC0                     l3484:
  6490  0BC0  01BE               	clrf	___fldiv@b+3
  6491  0BC1  2BCA               	goto	l3488
  6492  0BC2                     l3486:
  6493  0BC2  3000               	movlw	0
  6494  0BC3  00BE               	movwf	___fldiv@b+3
  6495  0BC4  3000               	movlw	0
  6496  0BC5  00BD               	movwf	___fldiv@b+2
  6497  0BC6  3000               	movlw	0
  6498  0BC7  00BC               	movwf	___fldiv@b+1
  6499  0BC8  3000               	movlw	0
  6500  0BC9  00BB               	movwf	___fldiv@b
  6501  0BCA                     l3488:
  6502  0BCA  083A               	movf	___fldiv@a+3,w
  6503  0BCB  3980               	andlw	128
  6504  0BCC  00BF               	movwf	??___fldiv
  6505  0BCD  083F               	movf	??___fldiv,w
  6506  0BCE  06C8               	xorwf	___fldiv@sign,f
  6507  0BCF                     l3490:
  6508  0BCF  083A               	movf	___fldiv@a+3,w
  6509  0BD0  00BF               	movwf	??___fldiv
  6510  0BD1  073F               	addwf	??___fldiv,w
  6511  0BD2  00C0               	movwf	??___fldiv+1
  6512  0BD3  0840               	movf	??___fldiv+1,w
  6513  0BD4  00D0               	movwf	___fldiv@aexp
  6514  0BD5                     l3492:
  6515  0BD5  1FB9               	btfss	___fldiv@a+2,7
  6516  0BD6  2BD8               	goto	u4671
  6517  0BD7  2BD9               	goto	u4670
  6518  0BD8                     u4671:
  6519  0BD8  2BDA               	goto	l3496
  6520  0BD9                     u4670:
  6521  0BD9                     l3494:
  6522  0BD9  1450               	bsf	___fldiv@aexp,0
  6523  0BDA                     l3496:
  6524  0BDA  0850               	movf	___fldiv@aexp,w
  6525  0BDB  1903               	btfsc	3,2
  6526  0BDC  2BDE               	goto	u4681
  6527  0BDD  2BDF               	goto	u4680
  6528  0BDE                     u4681:
  6529  0BDE  2BEF               	goto	l3506
  6530  0BDF                     u4680:
  6531  0BDF                     l3498:
  6532  0BDF  0A50               	incf	___fldiv@aexp,w
  6533  0BE0  1D03               	btfss	3,2
  6534  0BE1  2BE3               	goto	u4691
  6535  0BE2  2BE4               	goto	u4690
  6536  0BE3                     u4691:
  6537  0BE3  2BEC               	goto	l3502
  6538  0BE4                     u4690:
  6539  0BE4                     l3500:
  6540  0BE4  3000               	movlw	0
  6541  0BE5  00BA               	movwf	___fldiv@a+3
  6542  0BE6  3000               	movlw	0
  6543  0BE7  00B9               	movwf	___fldiv@a+2
  6544  0BE8  3000               	movlw	0
  6545  0BE9  00B8               	movwf	___fldiv@a+1
  6546  0BEA  3000               	movlw	0
  6547  0BEB  00B7               	movwf	___fldiv@a
  6548  0BEC                     l3502:
  6549  0BEC  17B9               	bsf	___fldiv@a+2,7
  6550  0BED                     l3504:
  6551  0BED  01BA               	clrf	___fldiv@a+3
  6552  0BEE  2BF7               	goto	l755
  6553  0BEF                     l3506:
  6554  0BEF  3000               	movlw	0
  6555  0BF0  00BA               	movwf	___fldiv@a+3
  6556  0BF1  3000               	movlw	0
  6557  0BF2  00B9               	movwf	___fldiv@a+2
  6558  0BF3  3000               	movlw	0
  6559  0BF4  00B8               	movwf	___fldiv@a+1
  6560  0BF5  3000               	movlw	0
  6561  0BF6  00B7               	movwf	___fldiv@a
  6562  0BF7                     l755:
  6563  0BF7  083A               	movf	___fldiv@a+3,w
  6564  0BF8  0439               	iorwf	___fldiv@a+2,w
  6565  0BF9  0438               	iorwf	___fldiv@a+1,w
  6566  0BFA  0437               	iorwf	___fldiv@a,w
  6567  0BFB  1D03               	skipz
  6568  0BFC  2BFE               	goto	u4701
  6569  0BFD  2BFF               	goto	u4700
  6570  0BFE                     u4701:
  6571  0BFE  2C18               	goto	l3516
  6572  0BFF                     u4700:
  6573  0BFF                     l3508:
  6574  0BFF  3000               	movlw	0
  6575  0C00  00BE               	movwf	___fldiv@b+3
  6576  0C01  3000               	movlw	0
  6577  0C02  00BD               	movwf	___fldiv@b+2
  6578  0C03  3000               	movlw	0
  6579  0C04  00BC               	movwf	___fldiv@b+1
  6580  0C05  3000               	movlw	0
  6581  0C06  00BB               	movwf	___fldiv@b
  6582  0C07  3080               	movlw	128
  6583  0C08  04BD               	iorwf	___fldiv@b+2,f
  6584  0C09  307F               	movlw	127
  6585  0C0A  04BE               	iorwf	___fldiv@b+3,f
  6586  0C0B                     l3510:
  6587  0C0B  0848               	movf	___fldiv@sign,w
  6588  0C0C  00BF               	movwf	??___fldiv
  6589  0C0D  083F               	movf	??___fldiv,w
  6590  0C0E  04BE               	iorwf	___fldiv@b+3,f
  6591  0C0F                     l3512:
  6592  0C0F  083E               	movf	___fldiv@b+3,w
  6593  0C10  00BA               	movwf	?___fldiv+3
  6594  0C11  083D               	movf	___fldiv@b+2,w
  6595  0C12  00B9               	movwf	?___fldiv+2
  6596  0C13  083C               	movf	___fldiv@b+1,w
  6597  0C14  00B8               	movwf	?___fldiv+1
  6598  0C15  083B               	movf	___fldiv@b,w
  6599  0C16  00B7               	movwf	?___fldiv
  6600  0C17  2D77               	goto	l757
  6601  0C18                     l3516:
  6602  0C18  084F               	movf	___fldiv@bexp,w
  6603  0C19  1D03               	btfss	3,2
  6604  0C1A  2C1C               	goto	u4711
  6605  0C1B  2C1D               	goto	u4710
  6606  0C1C                     u4711:
  6607  0C1C  2C26               	goto	l3522
  6608  0C1D                     u4710:
  6609  0C1D                     l3518:
  6610  0C1D  3000               	movlw	0
  6611  0C1E  00BA               	movwf	?___fldiv+3
  6612  0C1F  3000               	movlw	0
  6613  0C20  00B9               	movwf	?___fldiv+2
  6614  0C21  3000               	movlw	0
  6615  0C22  00B8               	movwf	?___fldiv+1
  6616  0C23  3000               	movlw	0
  6617  0C24  00B7               	movwf	?___fldiv
  6618  0C25  2D77               	goto	l757
  6619  0C26                     l3522:
  6620  0C26  084F               	movf	___fldiv@bexp,w
  6621  0C27  00BF               	movwf	??___fldiv
  6622  0C28  01C0               	clrf	??___fldiv+1
  6623  0C29  0840               	movf	??___fldiv+1,w
  6624  0C2A  00C2               	movwf	??___fldiv+3
  6625  0C2B  0850               	movf	___fldiv@aexp,w
  6626  0C2C  023F               	subwf	??___fldiv,w
  6627  0C2D  00C1               	movwf	??___fldiv+2
  6628  0C2E  1C03               	skipc
  6629  0C2F  03C2               	decf	??___fldiv+3,f
  6630  0C30  0841               	movf	??___fldiv+2,w
  6631  0C31  3E7F               	addlw	127
  6632  0C32  00C9               	movwf	___fldiv@new_exp
  6633  0C33  0842               	movf	??___fldiv+3,w
  6634  0C34  1803               	skipnc
  6635  0C35  3E01               	addlw	1
  6636  0C36  3E00               	addlw	0
  6637  0C37  00CA               	movwf	___fldiv@new_exp+1
  6638  0C38                     l3524:
  6639  0C38  083E               	movf	___fldiv@b+3,w
  6640  0C39  00C7               	movwf	___fldiv@rem+3
  6641  0C3A  083D               	movf	___fldiv@b+2,w
  6642  0C3B  00C6               	movwf	___fldiv@rem+2
  6643  0C3C  083C               	movf	___fldiv@b+1,w
  6644  0C3D  00C5               	movwf	___fldiv@rem+1
  6645  0C3E  083B               	movf	___fldiv@b,w
  6646  0C3F  00C4               	movwf	___fldiv@rem
  6647  0C40                     l3526:
  6648  0C40  3000               	movlw	0
  6649  0C41  00BE               	movwf	___fldiv@b+3
  6650  0C42  3000               	movlw	0
  6651  0C43  00BD               	movwf	___fldiv@b+2
  6652  0C44  3000               	movlw	0
  6653  0C45  00BC               	movwf	___fldiv@b+1
  6654  0C46  3000               	movlw	0
  6655  0C47  00BB               	movwf	___fldiv@b
  6656  0C48                     l3528:
  6657  0C48  3000               	movlw	0
  6658  0C49  00CE               	movwf	___fldiv@grs+3
  6659  0C4A  3000               	movlw	0
  6660  0C4B  00CD               	movwf	___fldiv@grs+2
  6661  0C4C  3000               	movlw	0
  6662  0C4D  00CC               	movwf	___fldiv@grs+1
  6663  0C4E  3000               	movlw	0
  6664  0C4F  00CB               	movwf	___fldiv@grs
  6665  0C50                     l3530:
  6666  0C50  01D0               	clrf	___fldiv@aexp
  6667  0C51  2C9C               	goto	l3550
  6668  0C52                     l3532:
  6669  0C52  0850               	movf	___fldiv@aexp,w
  6670  0C53  1903               	btfsc	3,2
  6671  0C54  2C56               	goto	u4721
  6672  0C55  2C57               	goto	u4720
  6673  0C56                     u4721:
  6674  0C56  2C77               	goto	l3542
  6675  0C57                     u4720:
  6676  0C57                     l3534:
  6677  0C57  3001               	movlw	1
  6678  0C58  00BF               	movwf	??___fldiv
  6679  0C59                     u4735:
  6680  0C59  1003               	clrc
  6681  0C5A  0DC4               	rlf	___fldiv@rem,f
  6682  0C5B  0DC5               	rlf	___fldiv@rem+1,f
  6683  0C5C  0DC6               	rlf	___fldiv@rem+2,f
  6684  0C5D  0DC7               	rlf	___fldiv@rem+3,f
  6685  0C5E  0BBF               	decfsz	??___fldiv,f
  6686  0C5F  2C59               	goto	u4735
  6687  0C60  3001               	movlw	1
  6688  0C61  00BF               	movwf	??___fldiv
  6689  0C62                     u4745:
  6690  0C62  1003               	clrc
  6691  0C63  0DBB               	rlf	___fldiv@b,f
  6692  0C64  0DBC               	rlf	___fldiv@b+1,f
  6693  0C65  0DBD               	rlf	___fldiv@b+2,f
  6694  0C66  0DBE               	rlf	___fldiv@b+3,f
  6695  0C67  0BBF               	decfsz	??___fldiv,f
  6696  0C68  2C62               	goto	u4745
  6697  0C69                     l3536:
  6698  0C69  1FCE               	btfss	___fldiv@grs+3,7
  6699  0C6A  2C6C               	goto	u4751
  6700  0C6B  2C6D               	goto	u4750
  6701  0C6C                     u4751:
  6702  0C6C  2C6E               	goto	l3540
  6703  0C6D                     u4750:
  6704  0C6D                     l3538:
  6705  0C6D  143B               	bsf	___fldiv@b,0
  6706  0C6E                     l3540:
  6707  0C6E  3001               	movlw	1
  6708  0C6F  00BF               	movwf	??___fldiv
  6709  0C70                     u4765:
  6710  0C70  1003               	clrc
  6711  0C71  0DCB               	rlf	___fldiv@grs,f
  6712  0C72  0DCC               	rlf	___fldiv@grs+1,f
  6713  0C73  0DCD               	rlf	___fldiv@grs+2,f
  6714  0C74  0DCE               	rlf	___fldiv@grs+3,f
  6715  0C75  0BBF               	decfsz	??___fldiv,f
  6716  0C76  2C70               	goto	u4765
  6717  0C77                     l3542:
  6718  0C77  083A               	movf	___fldiv@a+3,w
  6719  0C78  0247               	subwf	___fldiv@rem+3,w
  6720  0C79  1D03               	skipz
  6721  0C7A  2C85               	goto	u4775
  6722  0C7B  0839               	movf	___fldiv@a+2,w
  6723  0C7C  0246               	subwf	___fldiv@rem+2,w
  6724  0C7D  1D03               	skipz
  6725  0C7E  2C85               	goto	u4775
  6726  0C7F  0838               	movf	___fldiv@a+1,w
  6727  0C80  0245               	subwf	___fldiv@rem+1,w
  6728  0C81  1D03               	skipz
  6729  0C82  2C85               	goto	u4775
  6730  0C83  0837               	movf	___fldiv@a,w
  6731  0C84  0244               	subwf	___fldiv@rem,w
  6732  0C85                     u4775:
  6733  0C85  1C03               	skipc
  6734  0C86  2C88               	goto	u4771
  6735  0C87  2C89               	goto	u4770
  6736  0C88                     u4771:
  6737  0C88  2C98               	goto	l3548
  6738  0C89                     u4770:
  6739  0C89                     l3544:
  6740  0C89  174E               	bsf	___fldiv@grs+3,6
  6741  0C8A                     l3546:
  6742  0C8A  0837               	movf	___fldiv@a,w
  6743  0C8B  02C4               	subwf	___fldiv@rem,f
  6744  0C8C  0838               	movf	___fldiv@a+1,w
  6745  0C8D  1C03               	skipc
  6746  0C8E  0F38               	incfsz	___fldiv@a+1,w
  6747  0C8F  02C5               	subwf	___fldiv@rem+1,f
  6748  0C90  0839               	movf	___fldiv@a+2,w
  6749  0C91  1C03               	skipc
  6750  0C92  0F39               	incfsz	___fldiv@a+2,w
  6751  0C93  02C6               	subwf	___fldiv@rem+2,f
  6752  0C94  083A               	movf	___fldiv@a+3,w
  6753  0C95  1C03               	skipc
  6754  0C96  0F3A               	incfsz	___fldiv@a+3,w
  6755  0C97  02C7               	subwf	___fldiv@rem+3,f
  6756  0C98                     l3548:
  6757  0C98  3001               	movlw	1
  6758  0C99  00BF               	movwf	??___fldiv
  6759  0C9A  083F               	movf	??___fldiv,w
  6760  0C9B  07D0               	addwf	___fldiv@aexp,f
  6761  0C9C                     l3550:
  6762  0C9C  301A               	movlw	26
  6763  0C9D  0250               	subwf	___fldiv@aexp,w
  6764  0C9E  1C03               	skipc
  6765  0C9F  2CA1               	goto	u4781
  6766  0CA0  2CA2               	goto	u4780
  6767  0CA1                     u4781:
  6768  0CA1  2C52               	goto	l3532
  6769  0CA2                     u4780:
  6770  0CA2                     l3552:
  6771  0CA2  0847               	movf	___fldiv@rem+3,w
  6772  0CA3  0446               	iorwf	___fldiv@rem+2,w
  6773  0CA4  0445               	iorwf	___fldiv@rem+1,w
  6774  0CA5  0444               	iorwf	___fldiv@rem,w
  6775  0CA6  1903               	skipnz
  6776  0CA7  2CA9               	goto	u4791
  6777  0CA8  2CAA               	goto	u4790
  6778  0CA9                     u4791:
  6779  0CA9  2CC9               	goto	l3566
  6780  0CAA                     u4790:
  6781  0CAA                     l3554:
  6782  0CAA  144B               	bsf	___fldiv@grs,0
  6783  0CAB  2CC9               	goto	l3566
  6784  0CAC                     l3556:
  6785  0CAC  3001               	movlw	1
  6786  0CAD  00BF               	movwf	??___fldiv
  6787  0CAE                     u4805:
  6788  0CAE  1003               	clrc
  6789  0CAF  0DBB               	rlf	___fldiv@b,f
  6790  0CB0  0DBC               	rlf	___fldiv@b+1,f
  6791  0CB1  0DBD               	rlf	___fldiv@b+2,f
  6792  0CB2  0DBE               	rlf	___fldiv@b+3,f
  6793  0CB3  0BBF               	decfsz	??___fldiv,f
  6794  0CB4  2CAE               	goto	u4805
  6795  0CB5                     l3558:
  6796  0CB5  1FCE               	btfss	___fldiv@grs+3,7
  6797  0CB6  2CB8               	goto	u4811
  6798  0CB7  2CB9               	goto	u4810
  6799  0CB8                     u4811:
  6800  0CB8  2CBA               	goto	l3562
  6801  0CB9                     u4810:
  6802  0CB9                     l3560:
  6803  0CB9  143B               	bsf	___fldiv@b,0
  6804  0CBA                     l3562:
  6805  0CBA  3001               	movlw	1
  6806  0CBB  00BF               	movwf	??___fldiv
  6807  0CBC                     u4825:
  6808  0CBC  1003               	clrc
  6809  0CBD  0DCB               	rlf	___fldiv@grs,f
  6810  0CBE  0DCC               	rlf	___fldiv@grs+1,f
  6811  0CBF  0DCD               	rlf	___fldiv@grs+2,f
  6812  0CC0  0DCE               	rlf	___fldiv@grs+3,f
  6813  0CC1  0BBF               	decfsz	??___fldiv,f
  6814  0CC2  2CBC               	goto	u4825
  6815  0CC3                     l3564:
  6816  0CC3  30FF               	movlw	255
  6817  0CC4  07C9               	addwf	___fldiv@new_exp,f
  6818  0CC5  1803               	skipnc
  6819  0CC6  0ACA               	incf	___fldiv@new_exp+1,f
  6820  0CC7  30FF               	movlw	255
  6821  0CC8  07CA               	addwf	___fldiv@new_exp+1,f
  6822  0CC9                     l3566:
  6823  0CC9  1FBD               	btfss	___fldiv@b+2,7
  6824  0CCA  2CCC               	goto	u4831
  6825  0CCB  2CCD               	goto	u4830
  6826  0CCC                     u4831:
  6827  0CCC  2CAC               	goto	l3556
  6828  0CCD                     u4830:
  6829  0CCD                     l3568:
  6830  0CCD  01D0               	clrf	___fldiv@aexp
  6831  0CCE                     l3570:
  6832  0CCE  1FCE               	btfss	___fldiv@grs+3,7
  6833  0CCF  2CD1               	goto	u4841
  6834  0CD0  2CD2               	goto	u4840
  6835  0CD1                     u4841:
  6836  0CD1  2CEE               	goto	l3578
  6837  0CD2                     u4840:
  6838  0CD2                     l3572:
  6839  0CD2  30FF               	movlw	255
  6840  0CD3  054B               	andwf	___fldiv@grs,w
  6841  0CD4  00BF               	movwf	??___fldiv
  6842  0CD5  30FF               	movlw	255
  6843  0CD6  054C               	andwf	___fldiv@grs+1,w
  6844  0CD7  00C0               	movwf	??___fldiv+1
  6845  0CD8  30FF               	movlw	255
  6846  0CD9  054D               	andwf	___fldiv@grs+2,w
  6847  0CDA  00C1               	movwf	??___fldiv+2
  6848  0CDB  307F               	movlw	127
  6849  0CDC  054E               	andwf	___fldiv@grs+3,w
  6850  0CDD  00C2               	movwf	??___fldiv+3
  6851  0CDE  0842               	movf	??___fldiv+3,w
  6852  0CDF  0441               	iorwf	??___fldiv+2,w
  6853  0CE0  0440               	iorwf	??___fldiv+1,w
  6854  0CE1  043F               	iorwf	??___fldiv,w
  6855  0CE2  1903               	skipnz
  6856  0CE3  2CE5               	goto	u4851
  6857  0CE4  2CE6               	goto	u4850
  6858  0CE5                     u4851:
  6859  0CE5  2CE9               	goto	l771
  6860  0CE6                     u4850:
  6861  0CE6                     l3574:
  6862  0CE6  01D0               	clrf	___fldiv@aexp
  6863  0CE7  0AD0               	incf	___fldiv@aexp,f
  6864  0CE8  2CEE               	goto	l3578
  6865  0CE9                     l771:
  6866  0CE9  1C3B               	btfss	___fldiv@b,0
  6867  0CEA  2CEC               	goto	u4861
  6868  0CEB  2CED               	goto	u4860
  6869  0CEC                     u4861:
  6870  0CEC  2CEE               	goto	l3578
  6871  0CED                     u4860:
  6872  0CED  2CE6               	goto	l3574
  6873  0CEE                     l3578:
  6874  0CEE  0850               	movf	___fldiv@aexp,w
  6875  0CEF  1903               	btfsc	3,2
  6876  0CF0  2CF2               	goto	u4871
  6877  0CF1  2CF3               	goto	u4870
  6878  0CF2                     u4871:
  6879  0CF2  2D24               	goto	l3588
  6880  0CF3                     u4870:
  6881  0CF3                     l3580:
  6882  0CF3  3001               	movlw	1
  6883  0CF4  07BB               	addwf	___fldiv@b,f
  6884  0CF5  3000               	movlw	0
  6885  0CF6  1803               	skipnc
  6886  0CF7  3001               	movlw	1
  6887  0CF8  07BC               	addwf	___fldiv@b+1,f
  6888  0CF9  3000               	movlw	0
  6889  0CFA  1803               	skipnc
  6890  0CFB  3001               	movlw	1
  6891  0CFC  07BD               	addwf	___fldiv@b+2,f
  6892  0CFD  3000               	movlw	0
  6893  0CFE  1803               	skipnc
  6894  0CFF  3001               	movlw	1
  6895  0D00  07BE               	addwf	___fldiv@b+3,f
  6896  0D01                     l3582:
  6897  0D01  1C3E               	btfss	___fldiv@b+3,0
  6898  0D02  2D04               	goto	u4881
  6899  0D03  2D05               	goto	u4880
  6900  0D04                     u4881:
  6901  0D04  2D24               	goto	l3588
  6902  0D05                     u4880:
  6903  0D05                     l3584:
  6904  0D05  083B               	movf	___fldiv@b,w
  6905  0D06  00BF               	movwf	??___fldiv
  6906  0D07  083C               	movf	___fldiv@b+1,w
  6907  0D08  00C0               	movwf	??___fldiv+1
  6908  0D09  083D               	movf	___fldiv@b+2,w
  6909  0D0A  00C1               	movwf	??___fldiv+2
  6910  0D0B  083E               	movf	___fldiv@b+3,w
  6911  0D0C  00C2               	movwf	??___fldiv+3
  6912  0D0D  3001               	movlw	1
  6913  0D0E  00C3               	movwf	??___fldiv+4
  6914  0D0F                     u4895:
  6915  0D0F  0D42               	rlf	??___fldiv+3,w
  6916  0D10  0CC2               	rrf	??___fldiv+3,f
  6917  0D11  0CC1               	rrf	??___fldiv+2,f
  6918  0D12  0CC0               	rrf	??___fldiv+1,f
  6919  0D13  0CBF               	rrf	??___fldiv,f
  6920  0D14                     u4890:
  6921  0D14  0BC3               	decfsz	??___fldiv+4,f
  6922  0D15  2D0F               	goto	u4895
  6923  0D16  0842               	movf	??___fldiv+3,w
  6924  0D17  00BE               	movwf	___fldiv@b+3
  6925  0D18  0841               	movf	??___fldiv+2,w
  6926  0D19  00BD               	movwf	___fldiv@b+2
  6927  0D1A  0840               	movf	??___fldiv+1,w
  6928  0D1B  00BC               	movwf	___fldiv@b+1
  6929  0D1C  083F               	movf	??___fldiv,w
  6930  0D1D  00BB               	movwf	___fldiv@b
  6931  0D1E                     l3586:
  6932  0D1E  3001               	movlw	1
  6933  0D1F  07C9               	addwf	___fldiv@new_exp,f
  6934  0D20  1803               	skipnc
  6935  0D21  0ACA               	incf	___fldiv@new_exp+1,f
  6936  0D22  3000               	movlw	0
  6937  0D23  07CA               	addwf	___fldiv@new_exp+1,f
  6938  0D24                     l3588:
  6939  0D24  084A               	movf	___fldiv@new_exp+1,w
  6940  0D25  3A80               	xorlw	128
  6941  0D26  00FF               	movwf	btemp+1
  6942  0D27  3080               	movlw	128
  6943  0D28  027F               	subwf	btemp+1,w
  6944  0D29  1D03               	skipz
  6945  0D2A  2D2D               	goto	u4905
  6946  0D2B  30FF               	movlw	255
  6947  0D2C  0249               	subwf	___fldiv@new_exp,w
  6948  0D2D                     u4905:
  6949  0D2D  1C03               	skipc
  6950  0D2E  2D30               	goto	u4901
  6951  0D2F  2D31               	goto	u4900
  6952  0D30                     u4901:
  6953  0D30  2D3F               	goto	l3592
  6954  0D31                     u4900:
  6955  0D31                     l3590:
  6956  0D31  30FF               	movlw	255
  6957  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  6958  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  6959  0D34  00C9               	movwf	___fldiv@new_exp
  6960  0D35  3000               	movlw	0
  6961  0D36  00CA               	movwf	___fldiv@new_exp+1
  6962  0D37  3000               	movlw	0
  6963  0D38  00BE               	movwf	___fldiv@b+3
  6964  0D39  3000               	movlw	0
  6965  0D3A  00BD               	movwf	___fldiv@b+2
  6966  0D3B  3000               	movlw	0
  6967  0D3C  00BC               	movwf	___fldiv@b+1
  6968  0D3D  3000               	movlw	0
  6969  0D3E  00BB               	movwf	___fldiv@b
  6970  0D3F                     l3592:
  6971  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  6972  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  6973  0D41  084A               	movf	___fldiv@new_exp+1,w
  6974  0D42  3A80               	xorlw	128
  6975  0D43  00FF               	movwf	btemp+1
  6976  0D44  3080               	movlw	128
  6977  0D45  027F               	subwf	btemp+1,w
  6978  0D46  1D03               	skipz
  6979  0D47  2D4A               	goto	u4915
  6980  0D48  3001               	movlw	1
  6981  0D49  0249               	subwf	___fldiv@new_exp,w
  6982  0D4A                     u4915:
  6983  0D4A  1803               	skipnc
  6984  0D4B  2D4D               	goto	u4911
  6985  0D4C  2D4E               	goto	u4910
  6986  0D4D                     u4911:
  6987  0D4D  2D5B               	goto	l777
  6988  0D4E                     u4910:
  6989  0D4E                     l3594:
  6990  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  6991  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  6992  0D50  01C9               	clrf	___fldiv@new_exp
  6993  0D51  01CA               	clrf	___fldiv@new_exp+1
  6994  0D52                     l3596:
  6995  0D52  3000               	movlw	0
  6996  0D53  00BE               	movwf	___fldiv@b+3
  6997  0D54  3000               	movlw	0
  6998  0D55  00BD               	movwf	___fldiv@b+2
  6999  0D56  3000               	movlw	0
  7000  0D57  00BC               	movwf	___fldiv@b+1
  7001  0D58  3000               	movlw	0
  7002  0D59  00BB               	movwf	___fldiv@b
  7003  0D5A                     l3598:
  7004  0D5A  01C8               	clrf	___fldiv@sign
  7005  0D5B                     l777:
  7006  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  7007  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  7008  0D5D  0849               	movf	___fldiv@new_exp,w
  7009  0D5E  00BF               	movwf	??___fldiv
  7010  0D5F  083F               	movf	??___fldiv,w
  7011  0D60  00CF               	movwf	___fldiv@bexp
  7012  0D61                     l3600:
  7013  0D61  1C4F               	btfss	___fldiv@bexp,0
  7014  0D62  2D64               	goto	u4921
  7015  0D63  2D65               	goto	u4920
  7016  0D64                     u4921:
  7017  0D64  2D67               	goto	l3604
  7018  0D65                     u4920:
  7019  0D65                     l3602:
  7020  0D65  17BD               	bsf	___fldiv@b+2,7
  7021  0D66  2D6B               	goto	l779
  7022  0D67                     l3604:
  7023  0D67  307F               	movlw	127
  7024  0D68  00BF               	movwf	??___fldiv
  7025  0D69  083F               	movf	??___fldiv,w
  7026  0D6A  05BD               	andwf	___fldiv@b+2,f
  7027  0D6B                     l779:
  7028  0D6B  084F               	movf	___fldiv@bexp,w
  7029  0D6C  00BF               	movwf	??___fldiv
  7030  0D6D  1003               	clrc
  7031  0D6E  0C3F               	rrf	??___fldiv,w
  7032  0D6F  00C0               	movwf	??___fldiv+1
  7033  0D70  0840               	movf	??___fldiv+1,w
  7034  0D71  00BE               	movwf	___fldiv@b+3
  7035  0D72  0848               	movf	___fldiv@sign,w
  7036  0D73  00BF               	movwf	??___fldiv
  7037  0D74  083F               	movf	??___fldiv,w
  7038  0D75  04BE               	iorwf	___fldiv@b+3,f
  7039  0D76  2C0F               	goto	l3512
  7040  0D77                     l757:
  7041  0D77  0008               	return
  7042  0D78                     __end_of___fldiv:
  7043                           
  7044                           	psect	text22
  7045  1797                     __ptext22:	
  7046 ;; *************** function ___awdiv *****************
  7047 ;; Defined at:
  7048 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;  divisor         2    2[COMMON] int 
  7051 ;;  dividend        2    4[COMMON] int 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  quotient        2    2[BANK0 ] int 
  7054 ;;  sign            1    1[BANK0 ] unsigned char 
  7055 ;;  counter         1    0[BANK0 ] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2    2[COMMON] int 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7065 ;;      Params:         4       0       0       0       0
  7066 ;;      Locals:         0       4       0       0       0
  7067 ;;      Temps:          1       0       0       0       0
  7068 ;;      Totals:         5       4       0       0       0
  7069 ;;Total ram usage:        9 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 1
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_ADC_convert
  7076 ;;		_division
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function ___awdiv
  7082  1797                     ___awdiv:
  7083  1797                     l3362:	
  7084                           ;incstack = 0
  7085                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7086                           
  7087  1797  1283               	bcf	3,5	;RP0=0, select bank0
  7088  1798  1303               	bcf	3,6	;RP1=0, select bank0
  7089  1799  01A1               	clrf	___awdiv@sign
  7090  179A                     l3364:
  7091  179A  1FF3               	btfss	___awdiv@divisor+1,7
  7092  179B  2F9D               	goto	u4371
  7093  179C  2F9E               	goto	u4370
  7094  179D                     u4371:
  7095  179D  2FA5               	goto	l3370
  7096  179E                     u4370:
  7097  179E                     l3366:
  7098  179E  09F2               	comf	___awdiv@divisor,f
  7099  179F  09F3               	comf	___awdiv@divisor+1,f
  7100  17A0  0AF2               	incf	___awdiv@divisor,f
  7101  17A1  1903               	skipnz
  7102  17A2  0AF3               	incf	___awdiv@divisor+1,f
  7103  17A3                     l3368:
  7104  17A3  01A1               	clrf	___awdiv@sign
  7105  17A4  0AA1               	incf	___awdiv@sign,f
  7106  17A5                     l3370:
  7107  17A5  1FF5               	btfss	___awdiv@dividend+1,7
  7108  17A6  2FA8               	goto	u4381
  7109  17A7  2FA9               	goto	u4380
  7110  17A8                     u4381:
  7111  17A8  2FB2               	goto	l3376
  7112  17A9                     u4380:
  7113  17A9                     l3372:
  7114  17A9  09F4               	comf	___awdiv@dividend,f
  7115  17AA  09F5               	comf	___awdiv@dividend+1,f
  7116  17AB  0AF4               	incf	___awdiv@dividend,f
  7117  17AC  1903               	skipnz
  7118  17AD  0AF5               	incf	___awdiv@dividend+1,f
  7119  17AE                     l3374:
  7120  17AE  3001               	movlw	1
  7121  17AF  00F6               	movwf	??___awdiv
  7122  17B0  0876               	movf	??___awdiv,w
  7123  17B1  06A1               	xorwf	___awdiv@sign,f
  7124  17B2                     l3376:
  7125  17B2  01A2               	clrf	___awdiv@quotient
  7126  17B3  01A3               	clrf	___awdiv@quotient+1
  7127  17B4                     l3378:
  7128  17B4  0872               	movf	___awdiv@divisor,w
  7129  17B5  0473               	iorwf	___awdiv@divisor+1,w
  7130  17B6  1903               	btfsc	3,2
  7131  17B7  2FB9               	goto	u4391
  7132  17B8  2FBA               	goto	u4390
  7133  17B9                     u4391:
  7134  17B9  2FF1               	goto	l3398
  7135  17BA                     u4390:
  7136  17BA                     l3380:
  7137  17BA  01A0               	clrf	___awdiv@counter
  7138  17BB  0AA0               	incf	___awdiv@counter,f
  7139  17BC  2FC8               	goto	l3386
  7140  17BD                     l3382:
  7141  17BD  3001               	movlw	1
  7142  17BE                     u4405:
  7143  17BE  1003               	clrc
  7144  17BF  0DF2               	rlf	___awdiv@divisor,f
  7145  17C0  0DF3               	rlf	___awdiv@divisor+1,f
  7146  17C1  3EFF               	addlw	-1
  7147  17C2  1D03               	skipz
  7148  17C3  2FBE               	goto	u4405
  7149  17C4                     l3384:
  7150  17C4  3001               	movlw	1
  7151  17C5  00F6               	movwf	??___awdiv
  7152  17C6  0876               	movf	??___awdiv,w
  7153  17C7  07A0               	addwf	___awdiv@counter,f
  7154  17C8                     l3386:
  7155  17C8  1FF3               	btfss	___awdiv@divisor+1,7
  7156  17C9  2FCB               	goto	u4411
  7157  17CA  2FCC               	goto	u4410
  7158  17CB                     u4411:
  7159  17CB  2FBD               	goto	l3382
  7160  17CC                     u4410:
  7161  17CC                     l3388:
  7162  17CC  3001               	movlw	1
  7163  17CD                     u4425:
  7164  17CD  1003               	clrc
  7165  17CE  0DA2               	rlf	___awdiv@quotient,f
  7166  17CF  0DA3               	rlf	___awdiv@quotient+1,f
  7167  17D0  3EFF               	addlw	-1
  7168  17D1  1D03               	skipz
  7169  17D2  2FCD               	goto	u4425
  7170  17D3  0873               	movf	___awdiv@divisor+1,w
  7171  17D4  0275               	subwf	___awdiv@dividend+1,w
  7172  17D5  1D03               	skipz
  7173  17D6  2FD9               	goto	u4435
  7174  17D7  0872               	movf	___awdiv@divisor,w
  7175  17D8  0274               	subwf	___awdiv@dividend,w
  7176  17D9                     u4435:
  7177  17D9  1C03               	skipc
  7178  17DA  2FDC               	goto	u4431
  7179  17DB  2FDD               	goto	u4430
  7180  17DC                     u4431:
  7181  17DC  2FE4               	goto	l3394
  7182  17DD                     u4430:
  7183  17DD                     l3390:
  7184  17DD  0872               	movf	___awdiv@divisor,w
  7185  17DE  02F4               	subwf	___awdiv@dividend,f
  7186  17DF  0873               	movf	___awdiv@divisor+1,w
  7187  17E0  1C03               	skipc
  7188  17E1  03F5               	decf	___awdiv@dividend+1,f
  7189  17E2  02F5               	subwf	___awdiv@dividend+1,f
  7190  17E3                     l3392:
  7191  17E3  1422               	bsf	___awdiv@quotient,0
  7192  17E4                     l3394:
  7193  17E4  3001               	movlw	1
  7194  17E5                     u4445:
  7195  17E5  1003               	clrc
  7196  17E6  0CF3               	rrf	___awdiv@divisor+1,f
  7197  17E7  0CF2               	rrf	___awdiv@divisor,f
  7198  17E8  3EFF               	addlw	-1
  7199  17E9  1D03               	skipz
  7200  17EA  2FE5               	goto	u4445
  7201  17EB                     l3396:
  7202  17EB  3001               	movlw	1
  7203  17EC  02A0               	subwf	___awdiv@counter,f
  7204  17ED  1D03               	btfss	3,2
  7205  17EE  2FF0               	goto	u4451
  7206  17EF  2FF1               	goto	u4450
  7207  17F0                     u4451:
  7208  17F0  2FCC               	goto	l3388
  7209  17F1                     u4450:
  7210  17F1                     l3398:
  7211  17F1  0821               	movf	___awdiv@sign,w
  7212  17F2  1903               	btfsc	3,2
  7213  17F3  2FF5               	goto	u4461
  7214  17F4  2FF6               	goto	u4460
  7215  17F5                     u4461:
  7216  17F5  2FFB               	goto	l3402
  7217  17F6                     u4460:
  7218  17F6                     l3400:
  7219  17F6  09A2               	comf	___awdiv@quotient,f
  7220  17F7  09A3               	comf	___awdiv@quotient+1,f
  7221  17F8  0AA2               	incf	___awdiv@quotient,f
  7222  17F9  1903               	skipnz
  7223  17FA  0AA3               	incf	___awdiv@quotient+1,f
  7224  17FB                     l3402:
  7225  17FB  0823               	movf	___awdiv@quotient+1,w
  7226  17FC  00F3               	movwf	?___awdiv+1
  7227  17FD  0822               	movf	___awdiv@quotient,w
  7228  17FE  00F2               	movwf	?___awdiv
  7229  17FF                     l559:
  7230  17FF  0008               	return
  7231  1800                     __end_of___awdiv:
  7232                           
  7233                           	psect	text23
  7234  0864                     __ptext23:	
  7235 ;; *************** function _I2C_Comunication *****************
  7236 ;; Defined at:
  7237 ;;		line 184 in file "Master_PIC.c"
  7238 ;; Parameters:    Size  Location     Type
  7239 ;;		None
  7240 ;; Auto vars:     Size  Location     Type
  7241 ;;		None
  7242 ;; Return value:  Size  Location     Type
  7243 ;;                  1    wreg      void 
  7244 ;; Registers used:
  7245 ;;		wreg, status,2, status,0, pclath, cstack
  7246 ;; Tracked objects:
  7247 ;;		On entry : 0/0
  7248 ;;		On exit  : 0/0
  7249 ;;		Unchanged: 0/0
  7250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7251 ;;      Params:         0       0       0       0       0
  7252 ;;      Locals:         0       0       0       0       0
  7253 ;;      Temps:          3       0       0       0       0
  7254 ;;      Totals:         3       0       0       0       0
  7255 ;;Total ram usage:        3 bytes
  7256 ;; Hardware stack levels used: 1
  7257 ;; Hardware stack levels required when called: 3
  7258 ;; This function calls:
  7259 ;;		_I2C_Master_Start
  7260 ;;		_I2C_Master_Stop
  7261 ;;		_I2C_Master_Write
  7262 ;;		_I2C_Read_Byte
  7263 ;; This function is called by:
  7264 ;;		_main
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function _I2C_Comunication
  7270  0864                     _I2C_Comunication:
  7271  0864                     l3976:	
  7272                           ;incstack = 0
  7273                           ; Regs used in _I2C_Comunication: [wreg+status,2+status,0+pclath+cstack]
  7274                           
  7275                           
  7276                           ;Master_PIC.c: 186: 
  7277  0864  3051               	movlw	81
  7278  0865  160A  118A  257C  120A  158A  	fcall	_I2C_Master_Write
  7279                           
  7280                           ;Master_PIC.c: 187: 
  7281  086A  160A  118A  258C  120A  158A  	fcall	_I2C_Read_Byte
  7282  086F  00F3               	movwf	??_I2C_Comunication
  7283  0870  0873               	movf	??_I2C_Comunication,w
  7284  0871  1683               	bsf	3,5	;RP0=1, select bank1
  7285  0872  1303               	bcf	3,6	;RP1=0, select bank1
  7286  0873  00B1               	movwf	_slave01^(0+128)
  7287                           
  7288                           ;Master_PIC.c: 188:     LCD_Set_Cursor(2, 5);
  7289  0874  160A  118A  2559  120A  158A  	fcall	_I2C_Master_Stop
  7290  0879                     l3978:
  7291                           
  7292                           ;Master_PIC.c: 189:     LCD_Write_String(converted02);
  7293  0879  3003               	movlw	3
  7294  087A  00F5               	movwf	??_I2C_Comunication+2
  7295  087B  3008               	movlw	8
  7296  087C  00F4               	movwf	??_I2C_Comunication+1
  7297  087D  3077               	movlw	119
  7298  087E  00F3               	movwf	??_I2C_Comunication
  7299  087F                     u5737:
  7300  087F  0BF3               	decfsz	??_I2C_Comunication,f
  7301  0880  287F               	goto	u5737
  7302  0881  0BF4               	decfsz	??_I2C_Comunication+1,f
  7303  0882  287F               	goto	u5737
  7304  0883  0BF5               	decfsz	??_I2C_Comunication+2,f
  7305  0884  287F               	goto	u5737
  7306  0885                     l3980:
  7307                           
  7308                           ;Master_PIC.c: 191: 
  7309  0885  160A  118A  2550  120A  158A  	fcall	_I2C_Master_Start
  7310  088A                     l3982:
  7311                           
  7312                           ;Master_PIC.c: 192:     LCD_Set_Cursor(3, 5);
  7313  088A  3061               	movlw	97
  7314  088B  160A  118A  257C  120A  158A  	fcall	_I2C_Master_Write
  7315  0890                     l3984:
  7316                           
  7317                           ;Master_PIC.c: 193:     LCD_Write_String(converted03);
  7318  0890  160A  118A  258C  120A  158A  	fcall	_I2C_Read_Byte
  7319  0895  00F3               	movwf	??_I2C_Comunication
  7320  0896  0873               	movf	??_I2C_Comunication,w
  7321  0897  1683               	bsf	3,5	;RP0=1, select bank1
  7322  0898  1303               	bcf	3,6	;RP1=0, select bank1
  7323  0899  00B0               	movwf	_slave02^(0+128)
  7324  089A                     l3986:
  7325                           
  7326                           ;Master_PIC.c: 194: 
  7327  089A  160A  118A  2559  120A  158A  	fcall	_I2C_Master_Stop
  7328  089F                     l3988:
  7329                           
  7330                           ;Master_PIC.c: 195: 
  7331  089F  3003               	movlw	3
  7332  08A0  00F5               	movwf	??_I2C_Comunication+2
  7333  08A1  3008               	movlw	8
  7334  08A2  00F4               	movwf	??_I2C_Comunication+1
  7335  08A3  3077               	movlw	119
  7336  08A4  00F3               	movwf	??_I2C_Comunication
  7337  08A5                     u5747:
  7338  08A5  0BF3               	decfsz	??_I2C_Comunication,f
  7339  08A6  28A5               	goto	u5747
  7340  08A7  0BF4               	decfsz	??_I2C_Comunication+1,f
  7341  08A8  28A5               	goto	u5747
  7342  08A9  0BF5               	decfsz	??_I2C_Comunication+2,f
  7343  08AA  28A5               	goto	u5747
  7344                           
  7345                           ;Master_PIC.c: 197:     ADC_convert(converted02, slave02, 2);
  7346  08AB  160A  118A  2550  120A  158A  	fcall	_I2C_Master_Start
  7347                           
  7348                           ;Master_PIC.c: 198:     ADC_convert(converted03, slave03, 2);
  7349  08B0  3071               	movlw	113
  7350  08B1  160A  118A  257C  120A  158A  	fcall	_I2C_Master_Write
  7351                           
  7352                           ;Master_PIC.c: 199: }
  7353  08B6  160A  118A  258C  120A  158A  	fcall	_I2C_Read_Byte
  7354  08BB  00F3               	movwf	??_I2C_Comunication
  7355  08BC  0873               	movf	??_I2C_Comunication,w
  7356  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  7357  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  7358  08BF  00AF               	movwf	_slave03^(0+128)
  7359                           
  7360                           ;Master_PIC.c: 200: 
  7361  08C0  160A  118A  2559  120A  158A  	fcall	_I2C_Master_Stop
  7362  08C5                     l3990:
  7363                           
  7364                           ;Master_PIC.c: 201: 
  7365  08C5  3003               	movlw	3
  7366  08C6  00F5               	movwf	??_I2C_Comunication+2
  7367  08C7  3008               	movlw	8
  7368  08C8  00F4               	movwf	??_I2C_Comunication+1
  7369  08C9  3077               	movlw	119
  7370  08CA  00F3               	movwf	??_I2C_Comunication
  7371  08CB                     u5757:
  7372  08CB  0BF3               	decfsz	??_I2C_Comunication,f
  7373  08CC  28CB               	goto	u5757
  7374  08CD  0BF4               	decfsz	??_I2C_Comunication+1,f
  7375  08CE  28CB               	goto	u5757
  7376  08CF  0BF5               	decfsz	??_I2C_Comunication+2,f
  7377  08D0  28CB               	goto	u5757
  7378  08D1                     l137:
  7379  08D1  0008               	return
  7380  08D2                     __end_of_I2C_Comunication:
  7381                           
  7382                           	psect	text24
  7383  158C                     __ptext24:	
  7384 ;; *************** function _I2C_Read_Byte *****************
  7385 ;; Defined at:
  7386 ;;		line 71 in file "I2C_Master.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0, pclath, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7400 ;;      Params:         0       0       0       0       0
  7401 ;;      Locals:         0       0       0       0       0
  7402 ;;      Temps:          0       0       0       0       0
  7403 ;;      Totals:         0       0       0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 2
  7407 ;; This function calls:
  7408 ;;		_I2C_Master_Wait
  7409 ;; This function is called by:
  7410 ;;		_I2C_Comunication
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _I2C_Read_Byte
  7416  158C                     _I2C_Read_Byte:
  7417  158C                     l3794:	
  7418                           ;incstack = 0
  7419                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7420                           
  7421                           
  7422                           ;I2C_Master.c: 74:  I2C_Master_Wait();
  7423  158C  160A  118A  2562  160A  118A  	fcall	_I2C_Master_Wait
  7424  1591                     l3796:
  7425                           
  7426                           ;I2C_Master.c: 75:     RCEN = 1;
  7427  1591  1683               	bsf	3,5	;RP0=1, select bank1
  7428  1592  1303               	bcf	3,6	;RP1=0, select bank1
  7429  1593  1591               	bsf	17,3	;volatile
  7430  1594                     l264:	
  7431                           ;I2C_Master.c: 76:  while(!SSPIF);
  7432                           
  7433  1594  1283               	bcf	3,5	;RP0=0, select bank0
  7434  1595  1D8C               	btfss	12,3	;volatile
  7435  1596  2D98               	goto	u5441
  7436  1597  2D99               	goto	u5440
  7437  1598                     u5441:
  7438  1598  2D94               	goto	l264
  7439  1599                     u5440:
  7440  1599                     l266:
  7441                           
  7442                           ;I2C_Master.c: 77:  SSPIF = 0;
  7443  1599  118C               	bcf	12,3	;volatile
  7444  159A                     l3798:
  7445                           
  7446                           ;I2C_Master.c: 78:     I2C_Master_Wait();
  7447  159A  160A  118A  2562  160A  118A  	fcall	_I2C_Master_Wait
  7448  159F                     l3800:
  7449                           
  7450                           ;I2C_Master.c: 79:     return SSPBUF;
  7451  159F  1283               	bcf	3,5	;RP0=0, select bank0
  7452  15A0  1303               	bcf	3,6	;RP1=0, select bank0
  7453  15A1  0813               	movf	19,w	;volatile
  7454  15A2                     l267:
  7455  15A2  0008               	return
  7456  15A3                     __end_of_I2C_Read_Byte:
  7457                           
  7458                           	psect	text25
  7459  157C                     __ptext25:	
  7460 ;; *************** function _I2C_Master_Write *****************
  7461 ;; Defined at:
  7462 ;;		line 62 in file "I2C_Master.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  data            1    wreg     unsigned char 
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;  data            1    2[COMMON] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      unsigned char 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7476 ;;      Params:         0       0       0       0       0
  7477 ;;      Locals:         1       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0
  7479 ;;      Totals:         1       0       0       0       0
  7480 ;;Total ram usage:        1 bytes
  7481 ;; Hardware stack levels used: 1
  7482 ;; Hardware stack levels required when called: 2
  7483 ;; This function calls:
  7484 ;;		_I2C_Master_Wait
  7485 ;; This function is called by:
  7486 ;;		_I2C_Comunication
  7487 ;;		_IO_Expander_Write
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           
  7492                           ;psect for function _I2C_Master_Write
  7493  157C                     _I2C_Master_Write:
  7494                           
  7495                           ;incstack = 0
  7496                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7497                           ;I2C_Master_Write@data stored from wreg
  7498  157C  00F2               	movwf	I2C_Master_Write@data
  7499  157D                     l3110:
  7500                           
  7501                           ;I2C_Master.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_Master.c: 63: 
      +                          {;I2C_Master.c: 64:     I2C_Master_Wait();
  7502  157D  160A  118A  2562  160A  118A  	fcall	_I2C_Master_Wait
  7503  1582                     l3112:
  7504                           
  7505                           ;I2C_Master.c: 65:     SSPBUF = data;
  7506  1582  0872               	movf	I2C_Master_Write@data,w
  7507  1583  1283               	bcf	3,5	;RP0=0, select bank0
  7508  1584  1303               	bcf	3,6	;RP1=0, select bank0
  7509  1585  0093               	movwf	19	;volatile
  7510  1586                     l258:	
  7511                           ;I2C_Master.c: 66:     while(!SSPIF);
  7512                           
  7513  1586  1D8C               	btfss	12,3	;volatile
  7514  1587  2D89               	goto	u3811
  7515  1588  2D8A               	goto	u3810
  7516  1589                     u3811:
  7517  1589  2D86               	goto	l258
  7518  158A                     u3810:
  7519  158A                     l260:
  7520                           
  7521                           ;I2C_Master.c: 67:  SSPIF = 0;
  7522  158A  118C               	bcf	12,3	;volatile
  7523  158B                     l261:	
  7524                           ;I2C_Master.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7525                           
  7526  158B  0008               	return
  7527  158C                     __end_of_I2C_Master_Write:
  7528                           
  7529                           	psect	text26
  7530  1559                     __ptext26:	
  7531 ;; *************** function _I2C_Master_Stop *****************
  7532 ;; Defined at:
  7533 ;;		line 42 in file "I2C_Master.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2, status,0, pclath, cstack
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used: 1
  7553 ;; Hardware stack levels required when called: 2
  7554 ;; This function calls:
  7555 ;;		_I2C_Master_Wait
  7556 ;; This function is called by:
  7557 ;;		_I2C_Comunication
  7558 ;;		_IO_Expander_Write
  7559 ;; This function uses a non-reentrant model
  7560 ;;
  7561                           
  7562                           
  7563                           ;psect for function _I2C_Master_Stop
  7564  1559                     _I2C_Master_Stop:
  7565  1559                     l3114:	
  7566                           ;incstack = 0
  7567                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7568                           
  7569                           
  7570                           ;I2C_Master.c: 44:     I2C_Master_Wait();
  7571  1559  160A  118A  2562  160A  118A  	fcall	_I2C_Master_Wait
  7572  155E                     l3116:
  7573                           
  7574                           ;I2C_Master.c: 45:     PEN = 1;
  7575  155E  1683               	bsf	3,5	;RP0=1, select bank1
  7576  155F  1303               	bcf	3,6	;RP1=0, select bank1
  7577  1560  1511               	bsf	17,2	;volatile
  7578  1561                     l249:
  7579  1561  0008               	return
  7580  1562                     __end_of_I2C_Master_Stop:
  7581                           
  7582                           	psect	text27
  7583  1550                     __ptext27:	
  7584 ;; *************** function _I2C_Master_Start *****************
  7585 ;; Defined at:
  7586 ;;		line 30 in file "I2C_Master.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;		None
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      void 
  7593 ;; Registers used:
  7594 ;;		wreg, status,2, status,0, pclath, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7600 ;;      Params:         0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0
  7603 ;;      Totals:         0       0       0       0       0
  7604 ;;Total ram usage:        0 bytes
  7605 ;; Hardware stack levels used: 1
  7606 ;; Hardware stack levels required when called: 2
  7607 ;; This function calls:
  7608 ;;		_I2C_Master_Wait
  7609 ;; This function is called by:
  7610 ;;		_I2C_Comunication
  7611 ;;		_IO_Expander_Write
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _I2C_Master_Start
  7617  1550                     _I2C_Master_Start:
  7618  1550                     l3118:	
  7619                           ;incstack = 0
  7620                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7621                           
  7622                           
  7623                           ;I2C_Master.c: 32:     I2C_Master_Wait();
  7624  1550  160A  118A  2562  160A  118A  	fcall	_I2C_Master_Wait
  7625  1555                     l3120:
  7626                           
  7627                           ;I2C_Master.c: 33:     SEN = 1;
  7628  1555  1683               	bsf	3,5	;RP0=1, select bank1
  7629  1556  1303               	bcf	3,6	;RP1=0, select bank1
  7630  1557  1411               	bsf	17,0	;volatile
  7631  1558                     l243:
  7632  1558  0008               	return
  7633  1559                     __end_of_I2C_Master_Start:
  7634                           
  7635                           	psect	text28
  7636  1562                     __ptext28:	
  7637 ;; *************** function _I2C_Master_Wait *****************
  7638 ;; Defined at:
  7639 ;;		line 25 in file "I2C_Master.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7653 ;;      Params:         0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0
  7655 ;;      Temps:          0       0       0       0       0
  7656 ;;      Totals:         0       0       0       0       0
  7657 ;;Total ram usage:        0 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; Hardware stack levels required when called: 1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		_I2C_Master_Start
  7664 ;;		_I2C_Master_Stop
  7665 ;;		_I2C_Master_Write
  7666 ;;		_I2C_Read_Byte
  7667 ;;		_I2C_Master_RepeatedStart
  7668 ;;		_I2C_ACK
  7669 ;;		_I2C_NACK
  7670 ;;		_I2C_Master_Read
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _I2C_Master_Wait
  7676  1562                     _I2C_Master_Wait:
  7677  1562                     l3106:	
  7678                           ;incstack = 0
  7679                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7680                           
  7681  1562                     l237:	
  7682                           ;I2C_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7683                           
  7684  1562  1683               	bsf	3,5	;RP0=1, select bank1
  7685  1563  1303               	bcf	3,6	;RP1=0, select bank1
  7686  1564  1914               	btfsc	20,2	;volatile
  7687  1565  2D67               	goto	u3791
  7688  1566  2D68               	goto	u3790
  7689  1567                     u3791:
  7690  1567  2D62               	goto	l237
  7691  1568                     u3790:
  7692  1568                     l3108:
  7693  1568  0811               	movf	17,w	;volatile
  7694  1569  391F               	andlw	31
  7695  156A  1D03               	btfss	3,2
  7696  156B  2D6D               	goto	u3801
  7697  156C  2D6E               	goto	u3800
  7698  156D                     u3801:
  7699  156D  2D62               	goto	l237
  7700  156E                     u3800:
  7701  156E                     l240:
  7702  156E  0008               	return
  7703  156F                     __end_of_I2C_Master_Wait:
  7704                           
  7705                           	psect	text29
  7706  1541                     __ptext29:	
  7707 ;; *************** function _isr *****************
  7708 ;; Defined at:
  7709 ;;		line 73 in file "Master_PIC.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;		None
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		None
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         0       0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0
  7725 ;;      Temps:          2       0       0       0       0
  7726 ;;      Totals:         2       0       0       0       0
  7727 ;;Total ram usage:        2 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		Interrupt level 1
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function _isr
  7738  1541                     _isr:
  7739  1541                     i1l111:
  7740  1541  0871               	movf	??_isr+1,w
  7741  1542  008A               	movwf	10
  7742  1543  0E70               	swapf	??_isr,w
  7743  1544  0083               	movwf	3
  7744  1545  0EFE               	swapf	btemp,f
  7745  1546  0E7E               	swapf	btemp,w
  7746  1547  0009               	retfie
  7747  1548                     __end_of_isr:
  7748  007E                     btemp	set	126	;btemp
  7749  007E                     wtemp0	set	126
  7750                           
  7751                           	psect	intentry
  7752  0004                     __pintentry:	
  7753                           ;incstack = 0
  7754                           ; Regs used in _isr: []
  7755                           
  7756  0004                     interrupt_function:
  7757  007E                     saved_w	set	btemp
  7758  0004  00FE               	movwf	btemp
  7759  0005  0E03               	swapf	3,w
  7760  0006  00F0               	movwf	??_isr
  7761  0007  080A               	movf	10,w
  7762  0008  00F1               	movwf	??_isr+1
  7763  0009  160A  118A  2D41   	ljmp	_isr
  7764                           
  7765                           	psect	config
  7766                           
  7767                           ;Config register CONFIG1 @ 0x2007
  7768                           ;	Oscillator Selection bits
  7769                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7770                           ;	Watchdog Timer Enable bit
  7771                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7772                           ;	Power-up Timer Enable bit
  7773                           ;	PWRTE = OFF, PWRT disabled
  7774                           ;	RE3/MCLR pin function select bit
  7775                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7776                           ;	Code Protection bit
  7777                           ;	CP = OFF, Program memory code protection is disabled
  7778                           ;	Data Code Protection bit
  7779                           ;	CPD = OFF, Data memory code protection is disabled
  7780                           ;	Brown Out Reset Selection bits
  7781                           ;	BOREN = OFF, BOR disabled
  7782                           ;	Internal External Switchover bit
  7783                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7784                           ;	Fail-Safe Clock Monitor Enabled bit
  7785                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7786                           ;	Low Voltage Programming Enable bit
  7787                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7788                           ;	In-Circuit Debugger Mode bit
  7789                           ;	DEBUG = 0x1, unprogrammed default
  7790  2007                     	org	8199
  7791  2007  20D4               	dw	8404
  7792                           
  7793                           ;Config register CONFIG2 @ 0x2008
  7794                           ;	Brown-out Reset Selection bit
  7795                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7796                           ;	Flash Program Memory Self Write Enable bits
  7797                           ;	WRT = OFF, Write protection off
  7798  2008                     	org	8200
  7799  2008  3FFF               	dw	16383

Data Sizes:
    Strings     80
    Constant    0
    Data        1
    BSS         56
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      74
    BANK1            80     15      70
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S804__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S804__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 20
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), STR_4(CODE[20]), 
		 -> STR_3(CODE[20]), STR_2(CODE[20]), STR_1(CODE[17]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), 


Critical Paths under _main in COMMON

    _LCD_Start->_LCD_Init
    _LCD_Start->_LCD_Set_Cursor
    _LCD_Start->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Send->_LCD_Set_Cursor
    _LCD_Send->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___flge
    _ADC_convert->___wmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___fladd
    ___flsub->___wmul
    _I2C_Comunication->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Send
    _LCD_Start->_LCD_Write_String
    _LCD_Send->_ADC_convert
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Send->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21901
                   _I2C_Comunication
                           _LCD_Send
                          _LCD_Start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            3     3      0    2205
                                              5 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Send                                             8     8      0   19665
                                             65 BANK0      8     8      0
                        _ADC_convert
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     949
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     974
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _ADC_convert                                         23    17      6   16354
                                             57 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1286
                                              9 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1176
                                              8 COMMON     2     2      0
                                              5 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     967
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3727
                                             23 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3122
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             31 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             23 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Comunication                                     3     3      0      31
                                              3 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Comunication
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _LCD_Send
     _ADC_convert
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___flsub (ARG)
           ___fladd
           ___fltol (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flsub
       ___fltol
       ___wmul
       ___xxtofl
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     ___xxtofl
   _LCD_Start
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String
   _setup
     _I2C_Master_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      46       7       87.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      9C      12        0.0%
ABS                  0      0      9C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Sep 03 01:41:49 2021

              ___fldiv@aexp 0050                ___fldiv@bexp 004F                           pc 0002  
              ___fldiv@sign 0048                          _RS 00AE                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0027         __Umul8_16@word_mpld 0022  
                       l122 15EF                         l140 1796                         l143 0B9A  
                       l240 156E                         l137 08D1                         l305 16F1  
                       l234 157B                         l243 1558                         l260 158A  
                       l237 1562                         l261 158B                         l406 1678  
                       l264 1594                         l408 1690                         l249 1561  
                       l169 041C                         l281 1628                         l258 1586  
                       l266 1599                         l602 07F9                         l290 1645  
                       l267 15A2                         l284 15D4                         l278 0961  
                       l703 0E82                         l287 160B                         l720 0F4D  
                       l712 0FFF                         l296 1737                         l801 06E9  
                       l705 0E59                         l730 0F93                         l580 0980  
                       l724 0F71                         l741 0FF3                         l733 0FD1  
                       l814 16A7                         l742 0FFF                         l559 17FF  
                       l583 09EC                         l807 0771                         l584 0A05  
                       l816 16B9                         l592 07F9                         l745 1669  
                       l841 0AC1                         l771 0CE9                         l755 0BF7  
                       l852 0A8B                         l757 0D77                         l853 0A97  
                       l845 0A6F                         l599 07E4                         l839 0A2A  
                       l777 0D5B                         l779 0D6B                         l795 077D  
                       l699 0DDB                         _GIE 005F                         _RA0 0028  
                       _RB7 0037                         _PEN 048A                         _SEN 0488  
                       _POT 00B4                         _isr 1541                         fsr0 0004  
                       indf 0000           ?_I2C_Comunication 0070                ___flmul@aexp 004D  
              ___flmul@bexp 0052                ___flmul@sign 004C                ___flmul@temp 0057  
              ___flmul@prod 0053             __end_of_LCD_CMD 160C          ??_I2C_Comunication 0073  
       LCD_Write_String@Str 0078              _LCD_Set_Cursor 16BA                ___fltol@exp1 0077  
                      l3110 157D                        l3120 1555                        l3112 1582  
                      l3200 0E15                        l4000 0AF8                        l3106 1562  
                      l3114 1559                        l3210 0E26                        l3202 0E19  
                      l3130 0D78                        l3122 160D                        l4010 0B67  
                      l4002 0B01                        l3108 1568                        l3116 155E  
                      l3300 0FAB                        l3220 0E6C                        l3212 0E3D  
                      l3204 0E1D                        l3140 0D8F                        l3132 0D7F  
                      l3124 15BC                        l4012 0B88                        l4004 0B22  
                      l3118 1550                        l3310 0FE3                        l3302 0FAF  
                      l3230 0E8B                        l3222 0E6D                        l3214 0E5D  
                      l3206 0E21                        l3150 0DA7                        l3142 0D94  
                      l3134 0D85                        l3126 15C2                        l4006 0B34  
                      l4014 15A3                        l3400 17F6                        l3320 0FFA  
                      l3312 0FE8                        l3304 0FCD                        l3240 0EB3  
                      l3224 0E76                        l3216 0E66                        l3208 0E25  
                      l3160 0DBD                        l3152 0DAC                        l3144 0D9C  
                      l3136 0D89                        l3128 15C9                        l4008 0B55  
                      l4016 15A8                        l3402 17FB                        l3410 0994  
                      l3330 16A1                        l3322 0FFE                        l3314 0FE9  
                      l3306 0FD6                        l3250 0ECC                        l3242 0EBC  
                      l3234 0E94                        l3218 0E68                        l3226 0E7A  
                      l3170 0DD1                        l3162 0DBE                        l3154 0DB2  
                      l3146 0D9D                        l3138 0D8A                        l1650 1573  
                      l4018 15AD                        l3500 0BE4                        l3420 0A02  
                      l3412 099C                        l3332 16B0                        l3324 1694  
                      l3316 0FED                        l3308 0FDB                        l3260 0F30  
                      l3244 0EBE                        l3236 0EAB                        l3228 0E86  
                      l3252 0ED1                        l3180 0DED                        l3164 0DC3  
                      l3172 0DD3                        l3156 0DB3                        l3148 0D9F  
                      l3340 15F4                        l4116 16E6                        l1652 1576  
                      l1820 15D5                        l3510 0C0B                        l3502 0BEC  
                      l3422 0A04                        l3414 09A0                        l3406 0962  
                      l3334 16B5                        l3326 1696                        l3318 0FEF  
                      l3270 0F63                        l3254 0EE7                        l3262 0F3F  
                      l3246 0EC2                        l3238 0EAF                        l3190 0E01  
                      l3182 0DF1                        l3174 0DE1                        l3166 0DC8  
                      l3158 0DB9                        l3350 166C                        l3342 15FB  
                      l1654 1579                        l1830 15E0                        l1822 15D9  
                      l3600 0D61                        l3512 0C0F                        l3504 0BED  
                      l3416 09C4                        l3408 0978                        l3328 169D  
                      l3280 0F7A                        l3272 0F6C                        l3264 0F55  
                      l3256 0F25                        l3248 0EC3                        l3192 0E05  
                      l3184 0DF5                        l3176 0DE5                        l3168 0DD0  
                      l3440 07B4                        l3432 0794                        l3352 1672  
                      l3344 162A                        l1656 157A                        l1648 156F  
                      l1832 15E1                        l1824 15DC                        l3370 17A5  
                      l3362 1797                        l3602 0D65                        l3530 0C50  
                      l3522 0C26                        l3506 0BEF                        l3418 09C8  
                      l3610 041D                        l3290 0F8A                        l3282 0F7F  
                      l3274 0F70                        l3266 0F5A                        l3258 0F2B  
                      l3194 0E09                        l3186 0DF9                        l3178 0DE9  
                      l3442 07B8                        l3450 07D2                        l3434 07A9  
                      l3426 077E                        l3354 167F                        l3338 15F1  
                      l3346 162E                        l1834 15E2                        l1826 15DD  
                      l3380 17BA                        l3372 17A9                        l3364 179A  
                      l3604 0D67                        l3540 0C6E                        l3532 0C52  
                      l3524 0C38                        l3508 0BFF                        l3516 0C18  
                      l3700 06B9                        l3620 0434                        l3612 0424  
                      l3292 0F90                        l3276 0F75                        l3284 0F81  
                      l3196 0E0D                        l3188 0DFD                        l3460 07EE  
                      l3436 07AA                        l3428 078B                        l3356 1686  
                      l3348 166A                        l1836 15EA                        l1828 15DF  
                      l3390 17DD                        l3382 17BD                        l3374 17AE  
                      l3366 179E                        l3534 0C57                        l3542 0C77  
                      l3550 0C9C                        l3526 0C40                        l3518 0C1D  
                      l3470 0BA2                        l3710 06CE                        l3702 06BA  
                      l3630 0450                        l3622 0439                        l3614 042A  
                      l3278 0F78                        l3286 0F85                        l3198 0E11  
                      l3462 1646                        l3438 07B2                        l3358 168C  
                      l3800 159F                        l3392 17E3                        l3384 17C4  
                      l3376 17B2                        l3368 17A3                        l3560 0CB9  
                      l3552 0CA2                        l3544 0C89                        l3536 0C69  
                      l3528 0C48                        l3480 0BB7                        l3472 0BA8  
                      l3720 06F3                        l3712 06D2                        l3704 06C3  
                      l3640 0465                        l3632 0456                        l3624 0441  
                      l3616 042E                        l3296 0F98                        l3288 0F86  
                      l3464 164A                        l3456 07D9                        l3448 07C0  
                      l3394 17E4                        l3386 17C8                        l3378 17B4  
                      l3570 0CCE                        l3562 0CBA                        l3554 0CAA  
                      l3546 0C8A                        l3538 0C6D                        l3490 0BCF  
                      l3482 0BBF                        l3474 0BAC                        l3730 0731  
                      l3722 0701                        l3714 06E6                        l3706 06C9  
                      l3650 0481                        l3642 046D                        l3634 045A  
                      l3626 0443                        l3618 042F                        l3298 0F9D  
                      l3458 07E9                        l3810 08EF                        l3396 17EB  
                      l3388 17CC                        l3580 0CF3                        l3572 0CD2  
                      l3564 0CC3                        l3556 0CAC                        l3548 0C98  
                      l3492 0BD5                        l3484 0BC0                        l3476 0BAD  
                      l3468 0B9B                        l3740 0765                        l3732 073C  
                      l3724 0705                        l3708 06CD                        l3660 04C4  
                      l3644 046F                        l3636 045B                        l3628 044B  
                      l3900 01D2                        l3820 0925                        l3812 08F8  
                      l3804 08D5                        l3398 17F1                        l3590 0D31  
                      l3582 0D01                        l3574 0CE6                        l3558 0CB5  
                      l3566 0CC9                        l3494 0BD9                        l3478 0BB2  
                      l3486 0BC2                        l3742 0769                        l3734 074B  
                      l3726 071E                        l3718 06EE                        l3670 054D  
                      l3662 04E0                        l3654 048A                        l3646 0477  
                      l3638 0460                        l3750 0A09                        l3910 01F4  
                      l3902 01D6                        l3830 16BB                        l3822 0934  
                      l3814 0907                        l3806 08DB                        l3592 0D3F  
                      l3584 0D05                        l3568 0CCD                        l3496 0BDA  
                      l3488 0BCA                        l3744 076A                        l3736 0755  
                      l3728 0724                        l3680 05C0                        l3672 055D  
                      l3664 050C                        l3656 049A                        l3648 047C  
                      l3752 0A0E                        l3920 02B5                        l3912 01F9  
                      l3904 01DC                        l3832 16BC                        l3840 16DC  
                      l3824 093A                        l3816 090D                        l3808 08E1  
                      l3594 0D4E                        l3586 0D1E                        l3578 0CEE  
                      l3498 0BDF                        l3746 0775                        l3738 0757  
                      l3690 066D                        l3682 05DD                        l3674 057A  
                      l3666 0528                        l3658 04A7                        l3770 0A58  
                      l3762 0A3B                        l3754 0A12                        l3930 02EB  
                      l3922 02CB                        l3914 021A                        l3906 01EC  
                      l3834 16C4                        l3850 1713                        l3826 0949  
                      l3818 091C                        l3596 0D52                        l3588 0D24  
                      l3692 0695                        l3684 060A                        l3676 058A  
                      l3668 0544                        l3780 0A8F                        l3772 0A66  
                      l3764 0A40                        l3756 0A22                        l3940 0322  
                      l3932 02F1                        l3924 02D8                        l3916 0220  
                      l3908 01F4                        l3860 0043                        l3836 16CC  
                      l3852 171B                        l3828 0952                        l3598 0D5A  
                      l3694 069E                        l3686 061A                        l3678 05A7  
                      l3790 0AB9                        l3782 0A99                        l3774 0A76  
                      l3766 0A4D                        l3758 0A32                        l3950 0402  
                      l3942 0338                        l3934 02F6                        l3926 02D8  
                      l3918 0238                        l3870 0085                        l3862 0045  
                      l3854 002C                        l3838 16D4                        l3846 16F2  
                      l3696 06AC                        l3688 0647                        l3784 0AAF  
                      l3776 0A81                        l3768 0A54                        l3944 03D4  
                      l3936 02FB                        l3952 0406                        l3928 02DE  
                      l3880 00BB                        l3872 0090                        l3864 0049  
                      l3856 0041                        l3848 16F7                        l3960 174B  
                      l3794 158C                        l3698 06B5                        l3786 0AB4  
                      l3778 0A85                        l3954 040C                        l3946 03F4  
                      l3938 031C                        l3890 00F2                        l3882 00C1  
                      l3874 0099                        l3866 0049                        l3858 0041  
                      l3970 1776                        l3962 1754                        l3796 1591  
                      l3980 0885                        l3788 0AB8                        l3948 03FC  
                      l3892 0108                        l3884 00C6                        l3876 00AC  
                      l3868 0064                        l3972 177E                        l3964 175C  
                      l3956 1738                        l3798 159A                        l3990 08C5  
                      l3982 088A                        l3894 01A4                        l3886 00CB  
                      l3878 00B2                        l3974 1787                        l3966 1765  
                      l3958 1743                        l3984 0890                        l3976 0864  
                      l3896 01C4                        l3888 00EC                        l3992 0AC2  
                      l3968 176D                        l3986 089A                        l3978 0879  
                      l3898 01CC                        l3994 0ACE                        l3988 089F  
                      l3996 0AD7                        ?_isr 0070                        l3998 0AEC  
                      STR_1 084C                        STR_2 0810                        STR_3 0824  
                      STR_4 0838                        STR_5 085D                        _CONT 00B5  
                      u4001 0E9D                        u4010 0EAF                        u4002 0EA4  
                      u4011 0EAE                        u4003 0EAB                        u4100 0F5A  
                      u4020 0EB3                        u4101 0F59                        u4021 0EB2  
                      u4030 0EC2                        u4031 0EC1                        u5000 0481  
                      u4200 0FAF                        u4120 0F70                        u5001 0480  
                      u4201 0FAE                        u4121 0F6F                        u4210 0FBE  
                      u4130 0F75                        u4050 0EE7                        u5011 04D2  
                      u4131 0F74                        u4115 0F65                        u4051 0EE6  
                      u4300 16B5                        u5012 04D9                        u4220 0FCD  
                      u4140 0F7F                        u4301 16B4                        u5101 05FC  
                      u5021 04EE                        u5013 04E0                        u4221 0FCC  
                      u4141 0F7E                        u4061 0EFE                        u4053 0EE3  
                      u4045 0EC5                        u5102 0603                        u5022 04F5  
                      u4230 0FD6                        u4150 0F85                        u4070 0F12  
                      u4062 0EFF                        u5111 0629                        u5103 060A  
                      u5031 051A                        u5023 04FC                        u4231 0FD5  
                      u4215 0FB9                        u4151 0F84                        u4071 0F13  
                      u4063 0F04                        u5200 06CD                        u5120 0653  
                      u5112 0630                        u5032 0521                        u4240 0FDB  
                      u4160 0F8A                        u4080 0F30                        u4072 0F18  
                      u4064 0F05                        u5201 06CC                        u5113 0637  
                      u5041 0536                        u5033 0528                        u4241 0FDA  
                      u4161 0F89                        u4081 0F2F                        u4073 0F19  
                      u4065 0F0A                        u4410 17CC                        u5210 06D2  
                      u5042 053D                        u4250 0FE8                        u4170 0F90  
                      u4090 0F55                        u4066 0F0B                        u4330 1672  
                      u4411 17CB                        u5211 06D1                        u5131 065F  
                      u5043 0544                        u4251 0FE7                        u4171 0F8F  
                      u4091 0F54                        u4331 1671                        u4315 15FE  
                      u5220 06E6                        u5140 067B                        u5132 0666  
                      u4260 0FED                        u4180 0F97                        u5300 0A0E  
                      u4405 17BE                        u4501 09AF                        u5221 06E5  
                      u5133 066D                        u5125 064E                        u5061 056C  
                      u4261 0FEC                        u4181 0F96                        u5301 0A0D  
                      u4325 1638                        u4430 17DD                        u4510 09C8  
                      u4502 09B0                        u5230 06ED                        u5062 0573  
                      u4270 0FFE                        u4190 0F9D                        u5310 0A12  
                      u4431 17DC                        u4511 09C7                        u4503 09B5  
                      u5231 06EC                        u5151 0687                        u5071 0599  
                      u5063 057A                        u5055 0546                        u4271 0FFD  
                      u4191 0F9C                        u5311 0A11                        u3800 156E  
                      u4504 09B6                        u4280 16A1                        u5240 06F3  
                      u5152 068E                        u5072 05A0                        u4600 07D8  
                      u4360 168C                        u5400 0A8F                        u5320 0A32  
                      u3801 156D                        u4425 17CD                        u4521 09D7  
                      u4505 09BB                        u4281 16A0                        u5241 06F2  
                      u5153 0695                        u5145 0676                        u5073 05A7  
                      u4601 07D7                        u4361 168B                        u4345 1679  
                      u5401 0A8E                        u5321 0A31                        u3810 158A  
                      u4450 17F1                        u4370 179E                        u4530 0A02  
                      u4522 09D8                        u4506 09BC                        u5250 0705  
                      u5410 0AA4                        u3811 1589                        u4451 17F0  
                      u4435 17D9                        u4371 179D                        u4531 0A01  
                      u4523 09DD                        u5251 0704                        u5091 05CF  
                      u4355 1680                        _PEIE 005E                        u4460 17F6  
                      u4380 17A9                        u4700 0BFF                        u4524 09DE  
                      u5260 0714                        u5180 06B9                        u5092 05D6  
                      u3900 0DE5                        u3820 0D89                        u4620 07E9  
                      u4540 078B                        u5420 0AB4                        u5340 0A53  
                      u5500 00C1                        u4461 17F5                        u4445 17E5  
                      u4381 17A8                        u4701 0BFE                        u4525 09E3  
                      u5181 06B8                        u5165 0697                        u5093 05DD  
                      u5085 05A9                        u3901 0DE4                        u3821 0D88  
                      u4621 07E8                        u4541 078A                        u5421 0AB3  
                      u5341 0A52                        u5501 00C0                        u4390 17BA  
                      u4710 0C1D                        u4526 09E4                        u4470 0978  
                      u5270 0731                        u3910 0E3D                        u3830 0D8F  
                      u4630 07EE                        u4550 07A2                        u5430 0AB8  
                      u5510 0108                        u4391 17B9                        u4711 0C1C  
                      u4535 09FE                        u4471 0977                        u4295 16A8  
                      u5271 0730                        u5175 06AE                        u3911 0E3C  
                      u3831 0D8E                        u4631 07ED                        u4615 07DB  
                      u5431 0AB7                        u5415 0A9F                        u5335 0A45  
                      u5511 0107                        u5440 1599                        u4720 0C57  
                      u4640 0BAC                        u4480 0994                        u5280 074B  
                      u3920 0E46                        u3840 0D94                        u4560 07B8  
                      u5360 0A75                        u5520 01DC                        u5441 1598  
                      u4721 0C56                        u4641 0BAB                        u4481 0993  
                      u5281 074A                        u5265 070F                        u3921 0E44  
                      u3841 0D93                        u4561 07B7                        u5361 0A74  
                      u5521 01DB                        u4810 0CB9                        u4650 0BB2  
                      u4490 09A0                        u5290 0769                        u3930 0E47  
                      u3850 0DB2                        u4570 07BF                        u5530 0238  
                      u5450 1701                        u4811 0CB8                        u4651 0BB1  
                      u4491 099F                        u5291 0768                        u5275 072D  
                      u5195 06BC                        u3915 0E39                        u3851 0DB1  
                      u4571 07BE                        u4555 079D                        u5355 0A67  
                      u5531 0237                        u5515 0104                        u4900 0D31  
                      u4660 0BB7                        u3940 0E5D                        u3860 0DBD  
                      u5380 0A85                        u5540 02F1                        u5460 1725  
                      _RCEN 048B                        u4901 0D30                        u4805 0CAE  
                      u4661 0BB6                        u5285 0747                        u3941 0E5C  
                      u3861 0DBC                        u5381 0A84                        u5541 02F0  
                      u3790 1568                        u4910 0D4E                        u4830 0CCD  
                      u4750 0C6D                        u4670 0BD9                        u3950 0E6C  
                      u3870 0DC3                        u4590 07D1                        u5390 0A8B  
                      u5550 0338                        u5470 1737                        u3791 1567  
                      u4911 0D4D                        u4831 0CCC                        u4751 0C6C  
                      u4735 0C59                        u4671 0BD8                        u3951 0E6B  
                      u3871 0DC2                        u4591 07D0                        u5391 0A8A  
                      u5375 0A7A                        u5551 0337                        u5535 0234  
                      u5471 1736                        u4920 0D65                        u4840 0CD2  
                      u4680 0BDF                        u3880 0DC8                        u5560 040C  
                      u5480 0064                        u4921 0D64                        u4905 0D2D  
                      u4841 0CD1                        u4825 0CBC                        u4745 0C62  
                      u4681 0BDE                        u3881 0DC7                        u4585 07C1  
                      u5561 040B                        u5481 0063                        u4850 0CE6  
                      u4770 0C89                        u4690 0BE4                        u4930 042E  
                      u3970 0E82                        u3890 0DE1                        u5490 00BA  
                      u4915 0D4A                        u4851 0CE5                        u4771 0C88  
                      u4691 0BE3                        u4931 042D                        u3971 0E81  
                      u3891 0DE0                        u5555 0334                        u5491 00B9  
                      u5707 094D                        u5627 178F                        u4860 0CED  
                      u4780 0CA2                        u4940 0434                        u3980 0E86  
                      u4861 0CEC                        u4781 0CA1                        u4765 0C70  
                      u4941 0433                        u3981 0E85                        u3965 0E6F  
                      u5717 095C                        u5637 08E5                        u4870 0CF3  
                      u4790 0CAA                        u4950 0439                        u3990 0E8B  
                      u4871 0CF2                        u4791 0CA9                        u4775 0C85  
                      u4951 0438                        u3991 0E8A                        u5727 15D2  
                      u5647 08F3                        u4880 0D05                        u4960 045A  
                      u5737 087F                        u4881 0D04                        u4961 0459  
                      u5657 0902                        u4890 0D14                        u4970 0460  
                      u5747 08A5                        u4971 045F                        u5667 0911  
                      u4980 0465                        u5757 08CB                        u4981 0464  
                      u5677 0920                        u4990 047C                        u4895 0D0F  
                      u4991 047B                        u5687 092F                        u5697 093E  
                      _RSEN 0489                        _TXIF 0064           ?_LCD_Write_String 0078  
                      _main 15A3                        _temp 00AC                        _tens 0069  
                      btemp 007E               ADC_convert@mu 00E2                        start 000C  
        __size_of_LCD_Start 005F          ??_LCD_Write_String 0020             ___fldiv@new_exp 0049  
      LCD_Write_4Bit@Nibble 0075        __size_of_ADC_convert 03F4                       ??_isr 0070  
          __end_of_LCD_Init 0962            __end_of_LCD_Send 0B9B            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070               ___fltol@sign1 0076  
           __end_of___fladd 1000                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___fldiv 0D78             __end_of___awdiv 1800  
           __end_of___flmul 077E             __end_of___flsub 166A             __end_of___fltol 07FA  
                     _ANSEL 0188             ___awdiv@divisor 0072                       i1l111 1541  
           ___awdiv@counter 0020                       _RCREG 001A                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISD 0088                       _SSPIE 0463  
                     _SSPIF 0063                       _TXREG 0019      __end_of_LCD_Set_Cursor 16F2  
                     _conv0 00A8                       _conv1 00A4                       _conv2 00A0  
    __size_of_I2C_Read_Byte 0017                       _valor 00B3                       _setup 15D5  
                     _units 00B2                       pclath 000A                       status 0003  
                     wtemp0 007E              _LCD_Write_4Bit 15BB              _LCD_Write_Char 1629  
           __initialization 000F                __end_of_main 15BB           _IO_Expander_Write 160C  
        ?_IO_Expander_Write 0070                      ??_main 007A                   ??_LCD_CMD 0076  
         __end_of_LCD_Start 1797           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0073             ?_LCD_Set_Cursor 0078          ??_I2C_Master_Start 0072  
        ??_I2C_Master_Write 0072            ___awdiv@dividend 0074                      ?_setup 0070  
                    _ANSELH 0189                      _SSPADD 0093                      _TRISA0 0428  
                    _TRISB0 0430                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013      __end_of_LCD_Write_4Bit 15D5  
          __end_of___xxtofl 0AC2      __end_of_LCD_Write_Char 1646   __end_of_IO_Expander_Write 1629  
                    ___flge 0962               _I2C_Read_Byte 158C                   ??___fladd 0020  
                    ___wmul 166A                   ??___fldiv 003F                   ??___awdiv 0076  
                 ??___flmul 0047                   ??___flsub 007A                   ??___fltol 0020  
          ___awdiv@quotient 0022          __size_of__Umul8_16 0029                      saved_w 007E  
           ADC_convert@data 00D9             ADC_convert@temp 00D5                  ___flge@ff1 0072  
                ___flge@ff2 0076                ___xxtofl@arg 0033                ___xxtofl@exp 0032  
              ___xxtofl@val 0029     __end_of__initialization 0025                   ?_LCD_Init 0070  
                 ?_LCD_Send 0070             ?_LCD_Write_4Bit 0070                  ___fltol@f1 0072  
           ?_LCD_Write_Char 0070              ?_I2C_Read_Byte 0070              __pcstackCOMMON 0070  
              __pidataBANK1 07FA               __end_of_setup 15F0                     ??_setup 0072  
                __pbssBANK0 0069                  __pbssBANK1 00A0                  ??_LCD_Init 0078  
                ??_LCD_Send 0061   __size_of_I2C_Comunication 006E           __end_of__Umul8_16 16BA  
__size_of_IO_Expander_Write 001D                  __pmaintext 15A3                     ?___flge 0072  
                   ?___wmul 0025                  __pintentry 0004                     _ACKSTAT 048E  
 __size_of_LCD_Write_String 0046                     _LCD_CMD 15F0                   ?___xxtofl 0029  
                   _SSPCON2 0091                     _SSPSTAT 0094                  __stringtab 0800  
                   _i2c_add 00E4             ??_I2C_Read_Byte 0072               ??_ADC_convert 005F  
           __size_of___flge 00A4                     ___fladd 0D78                     ___fldiv 0B9B  
                   ___awdiv 1797                     ___flmul 041D                     ___flsub 1646  
                   ___fltol 077E             __size_of___wmul 0027            ??_LCD_Set_Cursor 0020  
                   __ptext1 15D5                     __ptext2 1738                     __ptext3 08D2  
                   __ptext4 156F                     __ptext5 0AC2                     __ptext6 16F2  
                   __ptext7 1629                     __ptext8 16BA                     __ptext9 15F0  
                   _counter 00B6                __size_of_isr 0007                  ??___xxtofl 002D  
                   _slave01 00B1                     _slave02 00B0                     _slave03 00AF  
  __size_of_I2C_Master_Init 000D                     _residuo 007A    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                   _LCD_Start 1738                     clrloop0 1549  
      end_of_initialization 0025   __size_of_I2C_Master_Start 0009   __size_of_I2C_Master_Write 0010  
          ADC_convert@place 005D         __end_of_ADC_convert 041D                  LCD_CMD@CMD 0077  
               ___fladd@grs 002B               ___xxtofl@sign 0031                   _TRISBbits 0086  
               ___fldiv@grs 004B                 ___fldiv@rem 0044                  ?_LCD_Start 0070  
          ??_LCD_Write_4Bit 0074           LCD_Write_String@i 0023            ??_LCD_Write_Char 0076  
               ___flmul@grs 004E            _I2C_Comunication 0864           __size_of_LCD_Init 0090  
         __size_of_LCD_Send 00D9                ADC_convert@a 0059                ADC_convert@i 00DE  
              ADC_convert@j 00D7                ADC_convert@x 00DA              __end_of___flge 0A06  
            __end_of___wmul 1691            _LCD_Write_String 16F2         start_initialization 000F  
               __end_of_isr 1548           ??_I2C_Master_Init 0072           ??_I2C_Master_Wait 0072  
         ??_I2C_Master_Stop 0072                 _ADC_convert 0029                    ??___flge 0020  
                  ??___wmul 0078                   __Umul8_16 1691                 __pdataBANK1 00E5  
                 ___fladd@a 0076                   ___fladd@b 0072                    ?_LCD_CMD 0070  
                 ___fldiv@a 0037                   ___fldiv@b 003B                   ___flmul@a 0043  
                 ___flmul@b 003F                 __pbssCOMMON 007A                   ___flsub@a 0037  
                 ___flsub@b 003B                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00D5           __size_of___xxtofl 00BC                 ??_LCD_Start 0025  
                 __pnvBANK1 00E4            _I2C_Master_Start 1550            _I2C_Master_Write 157C  
     IO_Expander_Write@Data 0073                    ?___fladd 0072                    ?___fldiv 0037  
                  ?___awdiv 0072                    ?___flmul 003F                    ?___flsub 0037  
                  ?___fltol 0072                  ?__Umul8_16 0072        I2C_Master_Write@data 0072  
                 __pstrings 0800              __size_of_setup 001B           interrupt_function 0004  
                  _LCD_Init 08D2                    _LCD_Send 0AC2              ___wmul@product 0078  
                 clear_ram0 1548       __end_of_I2C_Read_Byte 15A3                 __stringbase 080F  
         ___wmul@multiplier 0025    __end_of_I2C_Comunication 08D2            __size_of_LCD_CMD 001C  
               _converted01 00CB                 _converted02 00C1                 _converted03 00B7  
  __end_of_LCD_Write_String 1738                 ??__Umul8_16 0074            __size_of___fladd 0288  
          __size_of___fldiv 01DD            __size_of___awdiv 0069            __size_of___flmul 0361  
          __size_of___flsub 0024            __size_of___fltol 007C          __end_of__stringtab 0810  
           _I2C_Master_Init 156F                    ___xxtofl 0A06             _I2C_Master_Wait 1562  
           _I2C_Master_Stop 1559                    __ptext10 15BB                    __ptext11 160C  
                  __ptext20 0962                    __ptext12 0029                    __ptext21 0B9B  
                  __ptext13 0A06                    __ptext22 1797                    __ptext14 166A  
                  __ptext23 0864                    __ptext15 077E                    __ptext24 158C  
                  __ptext16 1646                    __ptext25 157C                    __ptext17 0D78  
                  __ptext26 1559                    __ptext18 041D                    __ptext27 1550  
                  __ptext19 1691                    __ptext28 1562                    __ptext29 1541  
   __size_of_LCD_Set_Cursor 0038             _BackLight_State 00E5               __size_of_main 0018  
                  _hundreds 007B                ?_ADC_convert 0059    __end_of_I2C_Master_Start 1559  
  __end_of_I2C_Master_Write 158C          LCD_Write_Char@Data 0077                    intlevel1 0000  
                 stringcode 080A                  _OSCCONbits 008F     __size_of_LCD_Write_4Bit 001A  
         ADC_convert@digits 00E0     __size_of_LCD_Write_Char 001D     __end_of_I2C_Master_Init 157C  
   __end_of_I2C_Master_Wait 156F     __end_of_I2C_Master_Stop 1562             LCD_Init@I2C_Add 0020  
    __Umul8_16@multiplicand 0072                    stringdir 080A                    stringtab 0800  
         LCD_Set_Cursor@COL 0078           LCD_Set_Cursor@ROW 0079                 _SSPCON2bits 0091  
             ___fladd@signs 0028                ___fladd@aexp 0029                ___fladd@bexp 002A  
      __Umul8_16@multiplier 0024               _LCD_Send$1049 0065           __Umul8_16@product 0020  
