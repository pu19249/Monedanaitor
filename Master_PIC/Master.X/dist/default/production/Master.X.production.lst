

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Sep 06 03:12:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     	;# 
    89  0001                     	;# 
    90  0002                     	;# 
    91  0003                     	;# 
    92  0004                     	;# 
    93  0005                     	;# 
    94  0006                     	;# 
    95  0007                     	;# 
    96  0008                     	;# 
    97  0009                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0015                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  0087                     	;# 
   127  0088                     	;# 
   128  0089                     	;# 
   129  008C                     	;# 
   130  008D                     	;# 
   131  008E                     	;# 
   132  008F                     	;# 
   133  0090                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0095                     	;# 
   141  0096                     	;# 
   142  0097                     	;# 
   143  0098                     	;# 
   144  0099                     	;# 
   145  009A                     	;# 
   146  009B                     	;# 
   147  009C                     	;# 
   148  009D                     	;# 
   149  009E                     	;# 
   150  009F                     	;# 
   151  0105                     	;# 
   152  0107                     	;# 
   153  0108                     	;# 
   154  0109                     	;# 
   155  010C                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010F                     	;# 
   160  0185                     	;# 
   161  0187                     	;# 
   162  0188                     	;# 
   163  0189                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0000                     	;# 
   167  0001                     	;# 
   168  0002                     	;# 
   169  0003                     	;# 
   170  0004                     	;# 
   171  0005                     	;# 
   172  0006                     	;# 
   173  0007                     	;# 
   174  0008                     	;# 
   175  0009                     	;# 
   176  000A                     	;# 
   177  000B                     	;# 
   178  000C                     	;# 
   179  000D                     	;# 
   180  000E                     	;# 
   181  000E                     	;# 
   182  000F                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0017                     	;# 
   192  0018                     	;# 
   193  0019                     	;# 
   194  001A                     	;# 
   195  001B                     	;# 
   196  001B                     	;# 
   197  001C                     	;# 
   198  001D                     	;# 
   199  001E                     	;# 
   200  001F                     	;# 
   201  0081                     	;# 
   202  0085                     	;# 
   203  0086                     	;# 
   204  0087                     	;# 
   205  0088                     	;# 
   206  0089                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  008F                     	;# 
   211  0090                     	;# 
   212  0091                     	;# 
   213  0092                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  0105                     	;# 
   230  0107                     	;# 
   231  0108                     	;# 
   232  0109                     	;# 
   233  010C                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  0185                     	;# 
   239  0187                     	;# 
   240  0188                     	;# 
   241  0189                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  008F                     	;# 
   289  0090                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0094                     	;# 
   296  0095                     	;# 
   297  0096                     	;# 
   298  0097                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009A                     	;# 
   302  009B                     	;# 
   303  009C                     	;# 
   304  009D                     	;# 
   305  009E                     	;# 
   306  009F                     	;# 
   307  0105                     	;# 
   308  0107                     	;# 
   309  0108                     	;# 
   310  0109                     	;# 
   311  010C                     	;# 
   312  010C                     	;# 
   313  010D                     	;# 
   314  010E                     	;# 
   315  010F                     	;# 
   316  0185                     	;# 
   317  0187                     	;# 
   318  0188                     	;# 
   319  0189                     	;# 
   320  018C                     	;# 
   321  018D                     	;# 
   322                           
   323                           	psect	idataBANK1
   324  07FE                     __pidataBANK1:
   325                           
   326                           ;initializer for _BackLight_State
   327  07FE  3408               	retlw	8
   328  0013                     _SSPBUF	set	19
   329  0014                     _SSPCON	set	20
   330  0019                     _TXREG	set	25
   331  001A                     _RCREG	set	26
   332  0009                     _PORTE	set	9
   333  0008                     _PORTD	set	8
   334  0007                     _PORTC	set	7
   335  0006                     _PORTB	set	6
   336  0005                     _PORTA	set	5
   337  0018                     _RCSTAbits	set	24
   338  000B                     _INTCONbits	set	11
   339  0012                     _T2CONbits	set	18
   340  000C                     _PIR1bits	set	12
   341  001B                     _CCPR2L	set	27
   342  001D                     _CCP2CONbits	set	29
   343  0017                     _CCP1CONbits	set	23
   344  001E                     _ADRESH	set	30
   345  0015                     _CCPR1L	set	21
   346  001F                     _ADCON0bits	set	31
   347  005E                     _PEIE	set	94
   348  005F                     _GIE	set	95
   349  0063                     _SSPIF	set	99
   350  0064                     _TXIF	set	100
   351  0037                     _RB7	set	55
   352  0028                     _RA0	set	40
   353  0066                     _ADIF	set	102
   354  0091                     _SSPCON2bits	set	145
   355  0093                     _SSPADD	set	147
   356  0094                     _SSPSTAT	set	148
   357  0091                     _SSPCON2	set	145
   358  009A                     _SPBRGH	set	154
   359  0099                     _SPBRG	set	153
   360  0098                     _TXSTAbits	set	152
   361  008C                     _PIE1bits	set	140
   362  0092                     _PR2	set	146
   363  0087                     _TRISCbits	set	135
   364  009F                     _ADCON1bits	set	159
   365  008F                     _OSCCONbits	set	143
   366  009E                     _ADRESL	set	158
   367  0463                     _SSPIE	set	1123
   368  048B                     _RCEN	set	1163
   369  048E                     _ACKSTAT	set	1166
   370  048C                     _ACKEN	set	1164
   371  048D                     _ACKDT	set	1165
   372  048A                     _PEN	set	1162
   373  0489                     _RSEN	set	1161
   374  0488                     _SEN	set	1160
   375  043C                     _TRISC4	set	1084
   376  043B                     _TRISC3	set	1083
   377  0428                     _TRISA0	set	1064
   378  0187                     _BAUDCTLbits	set	391
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381                           
   382                           	psect	strings
   383  1000                     __pstrings:
   384  1000                     stringtab:
   385  1000                     __stringtab:
   386                           
   387                           ;	String table - string pointers are 1 byte each
   388  1000  1BFF               	btfsc	btemp+1,7
   389  1001  280A               	ljmp	stringcode
   390  1002  1383               	bcf	3,7
   391  1003  187F               	btfsc	btemp+1,0
   392  1004  1783               	bsf	3,7
   393  1005  0800               	movf	0,w
   394  1006  0A84               	incf	4,f
   395  1007  1903               	skipnz
   396  1008  0AFF               	incf	btemp+1,f
   397  1009  0008               	return
   398  100A                     stringcode:
   399  100A                     stringdir:
   400  100A  3010               	movlw	high stringdir
   401  100B  008A               	movwf	10
   402  100C  0804               	movf	4,w
   403  100D  0A84               	incf	4,f
   404  100E  0782               	addwf	2,f
   405  100F                     __stringbase:
   406  100F  3400               	retlw	0
   407  1010                     __end_of__stringtab:
   408  1010                     STR_4:
   409  1010  3420               	retlw	32	;' '
   410  1011  3454               	retlw	84	;'T'
   411  1012  346F               	retlw	111	;'o'
   412  1013  3474               	retlw	116	;'t'
   413  1014  3461               	retlw	97	;'a'
   414  1015  346C               	retlw	108	;'l'
   415  1016  342D               	retlw	45	;'-'
   416  1017  343E               	retlw	62	;'>'
   417  1018  3451               	retlw	81	;'Q'
   418  1019  3400               	retlw	0
   419  101A                     STR_1:
   420  101A  3420               	retlw	32	;' '
   421  101B  3451               	retlw	81	;'Q'
   422  101C  3431               	retlw	49	;'1'
   423  101D  342E               	retlw	46	;'.'
   424  101E  3430               	retlw	48	;'0'
   425  101F  3430               	retlw	48	;'0'
   426  1020  342D               	retlw	45	;'-'
   427  1021  343E               	retlw	62	;'>'
   428  1022  3400               	retlw	0
   429  1023                     STR_2:
   430  1023  3420               	retlw	32	;' '
   431  1024  3451               	retlw	81	;'Q'
   432  1025  3430               	retlw	48	;'0'
   433  1026  342E               	retlw	46	;'.'
   434  1027  3435               	retlw	53	;'5'
   435  1028  3430               	retlw	48	;'0'
   436  1029  342D               	retlw	45	;'-'
   437  102A  343E               	retlw	62	;'>'
   438  102B  3400               	retlw	0
   439  102C                     STR_3:
   440  102C  3420               	retlw	32	;' '
   441  102D  3451               	retlw	81	;'Q'
   442  102E  3430               	retlw	48	;'0'
   443  102F  342E               	retlw	46	;'.'
   444  1030  3432               	retlw	50	;'2'
   445  1031  3435               	retlw	53	;'5'
   446  1032  342D               	retlw	45	;'-'
   447  1033  343E               	retlw	62	;'>'
   448  1034  3400               	retlw	0
   449                           
   450                           	psect	cinit
   451  000F                     start_initialization:	
   452                           ; #config settings
   453                           
   454  000F                     __initialization:
   455                           
   456                           ; Initialize objects allocated to BANK1
   457  000F  1683               	bsf	3,5	;RP0=1, select bank1
   458  0010  1303               	bcf	3,6	;RP1=0, select bank1
   459  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   460  0016  00E9               	movwf	__pdataBANK1& (0+127)
   461                           
   462                           ; Clear objects allocated to BANK3
   463  0017  1783               	bsf	3,7	;select IRP bank2
   464  0018  3090               	movlw	low __pbssBANK3
   465  0019  0084               	movwf	4
   466  001A  30B8               	movlw	low (__pbssBANK3+40)
   467  001B  160A  118A  2240  120A  118A  	fcall	clear_ram0
   468                           
   469                           ; Clear objects allocated to BANK1
   470  0020  1383               	bcf	3,7	;select IRP bank0
   471  0021  30A0               	movlw	low __pbssBANK1
   472  0022  0084               	movwf	4
   473  0023  30D6               	movlw	low (__pbssBANK1+54)
   474  0024  160A  118A  2240  120A  118A  	fcall	clear_ram0
   475                           
   476                           ; Clear objects allocated to BANK0
   477  0029  1283               	bcf	3,5	;RP0=0, select bank0
   478  002A  1303               	bcf	3,6	;RP1=0, select bank0
   479  002B  01EC               	clrf	__pbssBANK0& (0+127)
   480  002C  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   481  002D  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   482  002E  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   483                           
   484                           ; Clear objects allocated to COMMON
   485  002F  01F6               	clrf	__pbssCOMMON& (0+127)
   486  0030  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   487  0031  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   488  0032  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   489  0033                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492  0033                     __end_of__initialization:
   493  0033  0183               	clrf	3
   494  0034  160A  118A  2B5E   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	bssCOMMON
   497  0076                     __pbssCOMMON:
   498  0076                     _units:
   499  0076                     	ds	1
   500  0077                     _tens:
   501  0077                     	ds	1
   502  0078                     _residuo:
   503  0078                     	ds	1
   504  0079                     _hundreds:
   505  0079                     	ds	1
   506                           
   507                           	psect	bssBANK0
   508  006C                     __pbssBANK0:
   509  006C                     _sum:
   510  006C                     	ds	1
   511  006D                     _slave03:
   512  006D                     	ds	1
   513  006E                     _slave02:
   514  006E                     	ds	1
   515  006F                     _slave01:
   516  006F                     	ds	1
   517                           
   518                           	psect	bssBANK1
   519  00A0                     __pbssBANK1:
   520  00A0                     _conv2:
   521  00A0                     	ds	4
   522  00A4                     _conv1:
   523  00A4                     	ds	4
   524  00A8                     _conv0:
   525  00A8                     	ds	4
   526  00AC                     _temp:
   527  00AC                     	ds	2
   528  00AE                     _i2c_add:
   529  00AE                     	ds	1
   530  00AF                     _RS:
   531  00AF                     	ds	1
   532  00B0                     _resta:
   533  00B0                     	ds	1
   534  00B1                     _dec3:
   535  00B1                     	ds	1
   536  00B2                     _dec2:
   537  00B2                     	ds	1
   538  00B3                     _dec1:
   539  00B3                     	ds	1
   540  00B4                     _valor:
   541  00B4                     	ds	1
   542  00B5                     _POT:
   543  00B5                     	ds	1
   544  00B6                     _CONT:
   545  00B6                     	ds	1
   546  00B7                     _counter:
   547  00B7                     	ds	1
   548  00B8                     _converted03:
   549  00B8                     	ds	10
   550  00C2                     _converted02:
   551  00C2                     	ds	10
   552  00CC                     _converted01:
   553  00CC                     	ds	10
   554                           
   555                           	psect	dataBANK1
   556  00E9                     __pdataBANK1:
   557  00E9                     _BackLight_State:
   558  00E9                     	ds	1
   559                           
   560                           	psect	bssBANK3
   561  0190                     __pbssBANK3:
   562  0190                     _converted04:
   563  0190                     	ds	40
   564                           
   565                           	psect	clrtext
   566  1240                     clear_ram0:	
   567                           ;	Called with FSR containing the base address, and
   568                           ;	W with the last address+1
   569                           
   570  1240  0064               	clrwdt	;clear the watchdog before getting into this loop
   571  1241                     clrloop0:
   572  1241  0180               	clrf	0	;clear RAM location pointed to by FSR
   573  1242  0A84               	incf	4,f	;increment pointer
   574  1243  0604               	xorwf	4,w	;XOR with final address
   575  1244  1903               	btfsc	3,2	;have we reached the end yet?
   576  1245  3400               	retlw	0	;all done for this memory range, return
   577  1246  0604               	xorwf	4,w	;XOR again to restore value
   578  1247  2A41               	goto	clrloop0	;do the next byte
   579                           
   580                           	psect	cstackBANK1
   581  00D6                     __pcstackBANK1:
   582  00D6                     ADC_convert@temp:
   583                           
   584                           ; 2 bytes @ 0x0
   585  00D6                     	ds	2
   586  00D8                     ADC_convert@j:
   587                           
   588                           ; 2 bytes @ 0x2
   589  00D8                     	ds	2
   590  00DA                     ADC_convert@data:
   591                           
   592                           ; 1 bytes @ 0x4
   593  00DA                     	ds	1
   594  00DB                     ADC_convert@x:
   595                           
   596                           ; 4 bytes @ 0x5
   597  00DB                     	ds	4
   598  00DF                     ADC_convert@i:
   599                           
   600                           ; 2 bytes @ 0x9
   601  00DF                     	ds	2
   602  00E1                     ADC_convert@digits:
   603                           
   604                           ; 2 bytes @ 0xB
   605  00E1                     	ds	2
   606  00E3                     ADC_convert@mu:
   607                           
   608                           ; 2 bytes @ 0xD
   609  00E3                     	ds	2
   610  00E5                     _LCD_Send$1379:
   611                           
   612                           ; 4 bytes @ 0xF
   613  00E5                     	ds	4
   614                           
   615                           	psect	cstackCOMMON
   616  0070                     __pcstackCOMMON:
   617  0070                     ?_setup:
   618  0070                     ?_LCD_Start:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_LCD_Send:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_I2C_Comunication:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Text:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_I2C_Master_Init:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_division:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_I2C_Master_Start:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_I2C_Master_Write:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_I2C_Read_Byte:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_LCD_Init:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_LCD_Write_Char:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?_IO_Expander_Write:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_LCD_CMD:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ?_isr:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ??_isr:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_main:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_I2C_Master_Wait:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_LCD_Write_4Bit:	
   673                           ; 1 bytes @ 0x0
   674                           
   675                           
   676                           ; 1 bytes @ 0x0
   677  0070                     	ds	4
   678  0074                     ??_setup:
   679  0074                     ??_I2C_Master_Init:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     ??_I2C_Master_Start:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     ??_I2C_Master_Write:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     ??_I2C_Read_Byte:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     ??_I2C_Master_Stop:	
   692                           ; 1 bytes @ 0x4
   693                           
   694  0074                     ??_I2C_Master_Wait:	
   695                           ; 1 bytes @ 0x4
   696                           
   697  0074                     ?___bmul:	
   698                           ; 1 bytes @ 0x4
   699                           
   700  0074                     ??___awdiv:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ??___awmod:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ?__Umul8_16:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     I2C_Master_Write@data:	
   710                           ; 2 bytes @ 0x4
   711                           
   712  0074                     ___bmul@multiplicand:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     ___fltol@sign1:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     __Umul8_16@multiplicand:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 1 bytes @ 0x4
   723  0074                     	ds	1
   724  0075                     ??_IO_Expander_Write:
   725  0075                     ??___bmul:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0075                     division@valor:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     IO_Expander_Write@Data:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     ___fltol@exp1:	
   735                           ; 1 bytes @ 0x5
   736                           
   737                           
   738                           ; 1 bytes @ 0x5
   739  0075                     	ds	1
   740  0076                     ??___wmul:
   741  0076                     ??___flsub:	
   742                           ; 1 bytes @ 0x6
   743                           
   744                           
   745                           	psect	cstackBANK0
   746  0020                     __pcstackBANK0:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0020                     ?___flge:
   750  0020                     ??_I2C_Comunication:	
   751                           ; 1 bit 
   752                           
   753  0020                     ??__Umul8_16:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0020                     ??_LCD_Write_4Bit:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0020                     ?___awdiv:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0020                     ?___awmod:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0020                     ?___fltol:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0020                     ?___fladd:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0020                     ___bmul@product:	
   772                           ; 4 bytes @ 0x0
   773                           
   774  0020                     ___awdiv@divisor:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0020                     ___awmod@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780  0020                     ___flge@ff1:	
   781                           ; 2 bytes @ 0x0
   782                           
   783  0020                     ___fltol@f1:	
   784                           ; 4 bytes @ 0x0
   785                           
   786  0020                     ___fladd@b:	
   787                           ; 4 bytes @ 0x0
   788                           
   789                           
   790                           ; 4 bytes @ 0x0
   791  0020                     	ds	1
   792  0021                     LCD_Write_4Bit@Nibble:
   793  0021                     ___bmul@multiplier:	
   794                           ; 1 bytes @ 0x1
   795                           
   796                           
   797                           ; 1 bytes @ 0x1
   798  0021                     	ds	1
   799  0022                     ??_LCD_Write_Char:
   800  0022                     ??_LCD_CMD:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0022                     ___awdiv@dividend:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0022                     ___awmod@dividend:	
   807                           ; 2 bytes @ 0x2
   808                           
   809  0022                     __Umul8_16@product:	
   810                           ; 2 bytes @ 0x2
   811                           
   812                           
   813                           ; 2 bytes @ 0x2
   814  0022                     	ds	1
   815  0023                     LCD_CMD@CMD:
   816  0023                     LCD_Write_Char@Data:	
   817                           ; 1 bytes @ 0x3
   818                           
   819                           
   820                           ; 1 bytes @ 0x3
   821  0023                     	ds	1
   822  0024                     ??_LCD_Init:
   823  0024                     ?_LCD_Set_Cursor:	
   824                           ; 1 bytes @ 0x4
   825                           
   826  0024                     ?_LCD_Write_String:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0024                     ??___fltol:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     LCD_Set_Cursor@COL:	
   833                           ; 1 bytes @ 0x4
   834                           
   835  0024                     ___awdiv@counter:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0024                     ___awmod@counter:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0024                     LCD_Write_String@Str:	
   842                           ; 1 bytes @ 0x4
   843                           
   844  0024                     __Umul8_16@word_mpld:	
   845                           ; 2 bytes @ 0x4
   846                           
   847  0024                     ___flge@ff2:	
   848                           ; 2 bytes @ 0x4
   849                           
   850  0024                     ___fladd@a:	
   851                           ; 4 bytes @ 0x4
   852                           
   853                           
   854                           ; 4 bytes @ 0x4
   855  0024                     	ds	1
   856  0025                     ??_LCD_Set_Cursor:
   857  0025                     ___awdiv@sign:	
   858                           ; 1 bytes @ 0x5
   859                           
   860  0025                     ___awmod@sign:	
   861                           ; 1 bytes @ 0x5
   862                           
   863                           
   864                           ; 1 bytes @ 0x5
   865  0025                     	ds	1
   866  0026                     ??_LCD_Write_String:
   867  0026                     LCD_Init@I2C_Add:	
   868                           ; 1 bytes @ 0x6
   869                           
   870  0026                     __Umul8_16@multiplier:	
   871                           ; 1 bytes @ 0x6
   872                           
   873  0026                     ___awdiv@quotient:	
   874                           ; 1 bytes @ 0x6
   875                           
   876                           
   877                           ; 2 bytes @ 0x6
   878  0026                     	ds	1
   879  0027                     LCD_Set_Cursor@ROW:
   880                           
   881                           ; 1 bytes @ 0x7
   882  0027                     	ds	1
   883  0028                     ??_division:
   884  0028                     ??___flge:	
   885                           ; 1 bytes @ 0x8
   886                           
   887  0028                     ??___fladd:	
   888                           ; 1 bytes @ 0x8
   889                           
   890                           
   891                           ; 1 bytes @ 0x8
   892  0028                     	ds	1
   893  0029                     ?___wmul:
   894  0029                     LCD_Write_String@i:	
   895                           ; 2 bytes @ 0x9
   896                           
   897  0029                     ___wmul@multiplier:	
   898                           ; 2 bytes @ 0x9
   899                           
   900                           
   901                           ; 2 bytes @ 0x9
   902  0029                     	ds	2
   903  002B                     ??_LCD_Start:
   904  002B                     ??_Text:	
   905                           ; 1 bytes @ 0xB
   906                           
   907  002B                     ___wmul@multiplicand:	
   908                           ; 1 bytes @ 0xB
   909                           
   910                           
   911                           ; 2 bytes @ 0xB
   912  002B                     	ds	2
   913  002D                     ___wmul@product:
   914                           
   915                           ; 2 bytes @ 0xD
   916  002D                     	ds	2
   917  002F                     ?___xxtofl:
   918  002F                     ___xxtofl@val:	
   919                           ; 4 bytes @ 0xF
   920                           
   921                           
   922                           ; 4 bytes @ 0xF
   923  002F                     	ds	1
   924  0030                     ___fladd@signs:
   925                           
   926                           ; 1 bytes @ 0x10
   927  0030                     	ds	1
   928  0031                     ___fladd@aexp:
   929                           
   930                           ; 1 bytes @ 0x11
   931  0031                     	ds	1
   932  0032                     ___fladd@bexp:
   933                           
   934                           ; 1 bytes @ 0x12
   935  0032                     	ds	1
   936  0033                     ??___xxtofl:
   937  0033                     ___fladd@grs:	
   938                           ; 1 bytes @ 0x13
   939                           
   940                           
   941                           ; 1 bytes @ 0x13
   942  0033                     	ds	4
   943  0037                     ___xxtofl@sign:
   944                           
   945                           ; 1 bytes @ 0x17
   946  0037                     	ds	1
   947  0038                     ___xxtofl@exp:
   948                           
   949                           ; 1 bytes @ 0x18
   950  0038                     	ds	1
   951  0039                     ___xxtofl@arg:
   952                           
   953                           ; 4 bytes @ 0x19
   954  0039                     	ds	4
   955  003D                     ?___flsub:
   956  003D                     ?___fldiv:	
   957                           ; 4 bytes @ 0x1D
   958                           
   959  003D                     ___flsub@a:	
   960                           ; 4 bytes @ 0x1D
   961                           
   962  003D                     ___fldiv@a:	
   963                           ; 4 bytes @ 0x1D
   964                           
   965                           
   966                           ; 4 bytes @ 0x1D
   967  003D                     	ds	4
   968  0041                     ___flsub@b:
   969  0041                     ___fldiv@b:	
   970                           ; 4 bytes @ 0x21
   971                           
   972                           
   973                           ; 4 bytes @ 0x21
   974  0041                     	ds	4
   975  0045                     ??___fldiv:
   976  0045                     ?___flmul:	
   977                           ; 1 bytes @ 0x25
   978                           
   979  0045                     ___flmul@b:	
   980                           ; 4 bytes @ 0x25
   981                           
   982                           
   983                           ; 4 bytes @ 0x25
   984  0045                     	ds	4
   985  0049                     ___flmul@a:
   986                           
   987                           ; 4 bytes @ 0x29
   988  0049                     	ds	1
   989  004A                     ___fldiv@rem:
   990                           
   991                           ; 4 bytes @ 0x2A
   992  004A                     	ds	3
   993  004D                     ??___flmul:
   994                           
   995                           ; 1 bytes @ 0x2D
   996  004D                     	ds	1
   997  004E                     ___fldiv@sign:
   998                           
   999                           ; 1 bytes @ 0x2E
  1000  004E                     	ds	1
  1001  004F                     ___fldiv@new_exp:
  1002                           
  1003                           ; 2 bytes @ 0x2F
  1004  004F                     	ds	2
  1005  0051                     ___fldiv@grs:
  1006                           
  1007                           ; 4 bytes @ 0x31
  1008  0051                     	ds	1
  1009  0052                     ___flmul@sign:
  1010                           
  1011                           ; 1 bytes @ 0x32
  1012  0052                     	ds	1
  1013  0053                     ___flmul@aexp:
  1014                           
  1015                           ; 1 bytes @ 0x33
  1016  0053                     	ds	1
  1017  0054                     ___flmul@grs:
  1018                           
  1019                           ; 4 bytes @ 0x34
  1020  0054                     	ds	1
  1021  0055                     ___fldiv@bexp:
  1022                           
  1023                           ; 1 bytes @ 0x35
  1024  0055                     	ds	1
  1025  0056                     ___fldiv@aexp:
  1026                           
  1027                           ; 1 bytes @ 0x36
  1028  0056                     	ds	2
  1029  0058                     ___flmul@bexp:
  1030                           
  1031                           ; 1 bytes @ 0x38
  1032  0058                     	ds	1
  1033  0059                     ___flmul@prod:
  1034                           
  1035                           ; 4 bytes @ 0x39
  1036  0059                     	ds	4
  1037  005D                     ___flmul@temp:
  1038                           
  1039                           ; 2 bytes @ 0x3D
  1040  005D                     	ds	2
  1041  005F                     ?_ADC_convert:
  1042  005F                     ADC_convert@a:	
  1043                           ; 1 bytes @ 0x3F
  1044                           
  1045                           
  1046                           ; 4 bytes @ 0x3F
  1047  005F                     	ds	4
  1048  0063                     ADC_convert@place:
  1049                           
  1050                           ; 2 bytes @ 0x43
  1051  0063                     	ds	2
  1052  0065                     ??_ADC_convert:
  1053                           
  1054                           ; 1 bytes @ 0x45
  1055  0065                     	ds	2
  1056  0067                     ??_LCD_Send:
  1057                           
  1058                           ; 1 bytes @ 0x47
  1059  0067                     	ds	4
  1060  006B                     ??_main:
  1061                           
  1062                           ; 1 bytes @ 0x4B
  1063  006B                     	ds	1
  1064                           
  1065                           	psect	maintext
  1066  135E                     __pmaintext:	
  1067 ;;
  1068 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1069 ;;
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 93 in file "Master_PIC.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : B00/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       1       0       0       0
  1089 ;;      Totals:         0       1       0       0       0
  1090 ;;Total ram usage:        1 bytes
  1091 ;; Hardware stack levels required when called: 8
  1092 ;; This function calls:
  1093 ;;		_I2C_Comunication
  1094 ;;		_LCD_Send
  1095 ;;		_LCD_Start
  1096 ;;		_Text
  1097 ;;		_setup
  1098 ;; This function is called by:
  1099 ;;		Startup code after reset
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _main
  1105  135E                     _main:
  1106  135E                     l4359:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1109                           
  1110  135E  160A  118A  2601  160A  118A  	fcall	_setup
  1111  1363                     l4361:
  1112  1363  160A  118A  2592  160A  118A  	fcall	_LCD_Start
  1113  1368                     l4363:
  1114  1368  120A  158A  21CA  160A  118A  	fcall	_LCD_Send
  1115  136D  160A  118A  2670  160A  118A  	fcall	_I2C_Comunication
  1116  1372                     l4365:
  1117  1372  3041               	movlw	65
  1118  1373  1283               	bcf	3,5	;RP0=0, select bank0
  1119  1374  1303               	bcf	3,6	;RP1=0, select bank0
  1120  1375  00EB               	movwf	??_main
  1121  1376                     u5937:
  1122  1376  0BEB               	decfsz	??_main,f
  1123  1377  2B76               	goto	u5937
  1124  1378  2B79               	nop2
  1125  1379                     l4367:
  1126  1379  1283               	bcf	3,5	;RP0=0, select bank0
  1127  137A  1303               	bcf	3,6	;RP1=0, select bank0
  1128  137B  149F               	bsf	31,1	;volatile
  1129  137C                     l4369:
  1130  137C  160A  118A  24C2  160A  118A  	fcall	_Text
  1131  1381  2B68               	goto	l4363
  1132  1382  120A  118A  280C   	ljmp	start
  1133  1385                     __end_of_main:
  1134                           
  1135                           	psect	text1
  1136  1601                     __ptext1:	
  1137 ;; *************** function _setup *****************
  1138 ;; Defined at:
  1139 ;;		line 123 in file "Master_PIC.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;		None
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, pclath, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1153 ;;      Params:         0       0       0       0       0
  1154 ;;      Locals:         0       0       0       0       0
  1155 ;;      Temps:          1       0       0       0       0
  1156 ;;      Totals:         1       0       0       0       0
  1157 ;;Total ram usage:        1 bytes
  1158 ;; Hardware stack levels used: 1
  1159 ;; Hardware stack levels required when called: 2
  1160 ;; This function calls:
  1161 ;;		_I2C_Master_Init
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           
  1168                           ;psect for function _setup
  1169  1601                     _setup:
  1170  1601                     l1891:	
  1171                           ;incstack = 0
  1172                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1173                           
  1174  1601  3001               	movlw	1
  1175  1602  1683               	bsf	3,5	;RP0=1, select bank3
  1176  1603  1703               	bsf	3,6	;RP1=1, select bank3
  1177  1604  0088               	movwf	8	;volatile
  1178  1605                     l1893:
  1179  1605  0189               	clrf	9	;volatile
  1180  1606                     l1895:
  1181  1606  1683               	bsf	3,5	;RP0=1, select bank1
  1182  1607  1303               	bcf	3,6	;RP1=0, select bank1
  1183  1608  1405               	bsf	5,0	;volatile
  1184  1609                     l1897:
  1185                           
  1186                           ;Master_PIC.c: 141:     OSCCONbits.IRCF0 = 1;
  1187  1609  160F               	bsf	15,4	;volatile
  1188  160A                     l1899:
  1189                           
  1190                           ;Master_PIC.c: 142:     OSCCONbits.IRCF1 = 1;
  1191  160A  168F               	bsf	15,5	;volatile
  1192  160B                     l1901:
  1193                           
  1194                           ;Master_PIC.c: 143:     OSCCONbits.IRCF2 = 1;
  1195  160B  170F               	bsf	15,6	;volatile
  1196  160C                     l1903:
  1197                           
  1198                           ;Master_PIC.c: 144:     OSCCONbits.SCS = 1;
  1199  160C  140F               	bsf	15,0	;volatile
  1200  160D                     l1905:
  1201                           
  1202                           ;Master_PIC.c: 147:     ADCON0bits.CHS = 0;
  1203  160D  30C3               	movlw	-61
  1204  160E  1283               	bcf	3,5	;RP0=0, select bank0
  1205  160F  1303               	bcf	3,6	;RP1=0, select bank0
  1206  1610  059F               	andwf	31,f	;volatile
  1207  1611                     l1907:
  1208                           
  1209                           ;Master_PIC.c: 148:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1210  1611  3042               	movlw	66
  1211  1612  00F4               	movwf	??_setup
  1212  1613                     u5947:
  1213  1613  0BF4               	decfsz	??_setup,f
  1214  1614  2E13               	goto	u5947
  1215  1615  0000               	nop
  1216  1616                     l1909:
  1217                           
  1218                           ;Master_PIC.c: 150:     ADCON0bits.ADCS0 = 0;
  1219  1616  1283               	bcf	3,5	;RP0=0, select bank0
  1220  1617  1303               	bcf	3,6	;RP1=0, select bank0
  1221  1618  131F               	bcf	31,6	;volatile
  1222  1619                     l1911:
  1223                           
  1224                           ;Master_PIC.c: 151:     ADCON0bits.ADCS1 = 1;
  1225  1619  179F               	bsf	31,7	;volatile
  1226  161A                     l1913:
  1227                           
  1228                           ;Master_PIC.c: 152:     ADCON0bits.ADON = 1;
  1229  161A  141F               	bsf	31,0	;volatile
  1230  161B                     l1915:
  1231                           
  1232                           ;Master_PIC.c: 153:     ADCON1bits.ADFM = 0;
  1233  161B  1683               	bsf	3,5	;RP0=1, select bank1
  1234  161C  1303               	bcf	3,6	;RP1=0, select bank1
  1235  161D  139F               	bcf	31,7	;volatile
  1236  161E                     l1917:
  1237                           
  1238                           ;Master_PIC.c: 154:     ADCON1bits.VCFG1 = 0;
  1239  161E  129F               	bcf	31,5	;volatile
  1240  161F                     l1919:
  1241                           
  1242                           ;Master_PIC.c: 155:     ADCON1bits.VCFG0 = 0;
  1243  161F  121F               	bcf	31,4	;volatile
  1244  1620                     l1921:
  1245                           
  1246                           ;Master_PIC.c: 158:     TRISCbits.TRISC2 = 1;
  1247  1620  1507               	bsf	7,2	;volatile
  1248  1621                     l1923:
  1249                           
  1250                           ;Master_PIC.c: 159:     TRISCbits.TRISC1 = 1;
  1251  1621  1487               	bsf	7,1	;volatile
  1252  1622                     l1925:
  1253                           
  1254                           ;Master_PIC.c: 160:     PR2 = 250;
  1255  1622  30FA               	movlw	250
  1256  1623  0092               	movwf	18	;volatile
  1257  1624                     l1927:
  1258                           
  1259                           ;Master_PIC.c: 161:     CCP1CONbits.P1M = 0;
  1260  1624  303F               	movlw	-193
  1261  1625  1283               	bcf	3,5	;RP0=0, select bank0
  1262  1626  1303               	bcf	3,6	;RP1=0, select bank0
  1263  1627  0597               	andwf	23,f	;volatile
  1264  1628                     l1929:
  1265                           
  1266                           ;Master_PIC.c: 162:     CCP2CONbits.CCP2M = 0b1111;
  1267  1628  300F               	movlw	15
  1268  1629  049D               	iorwf	29,f	;volatile
  1269  162A                     l1931:
  1270                           
  1271                           ;Master_PIC.c: 163:     CCP1CONbits.CCP1M = 0b00001100;
  1272  162A  0817               	movf	23,w	;volatile
  1273  162B  39F0               	andlw	-16
  1274  162C  380C               	iorlw	12
  1275  162D  0097               	movwf	23	;volatile
  1276  162E                     l1933:
  1277                           
  1278                           ;Master_PIC.c: 166:     CCPR1L = 0x0F;
  1279  162E  300F               	movlw	15
  1280  162F  0095               	movwf	21	;volatile
  1281  1630                     l1935:
  1282                           
  1283                           ;Master_PIC.c: 167:     CCP1CONbits.DC1B = 0;
  1284  1630  30CF               	movlw	-49
  1285  1631  0597               	andwf	23,f	;volatile
  1286  1632                     l1937:
  1287                           
  1288                           ;Master_PIC.c: 168:     CCPR2L = 0x0F;
  1289  1632  300F               	movlw	15
  1290  1633  009B               	movwf	27	;volatile
  1291  1634                     l1939:
  1292                           
  1293                           ;Master_PIC.c: 169:     CCP2CONbits.DC2B0 = 0;
  1294  1634  121D               	bcf	29,4	;volatile
  1295  1635                     l1941:
  1296                           
  1297                           ;Master_PIC.c: 170:     CCP2CONbits.DC2B1 = 0;
  1298  1635  129D               	bcf	29,5	;volatile
  1299  1636                     l1943:
  1300                           
  1301                           ;Master_PIC.c: 173:     PIR1bits.TMR2IF = 0;
  1302  1636  108C               	bcf	12,1	;volatile
  1303  1637                     l1945:
  1304                           
  1305                           ;Master_PIC.c: 174:     T2CONbits.T2CKPS0 = 0;
  1306  1637  1012               	bcf	18,0	;volatile
  1307  1638                     l1947:
  1308                           
  1309                           ;Master_PIC.c: 175:     T2CONbits.T2CKPS1 = 1;
  1310  1638  1492               	bsf	18,1	;volatile
  1311  1639                     l1949:
  1312                           
  1313                           ;Master_PIC.c: 176:     T2CONbits.TMR2ON = 1;
  1314  1639  1512               	bsf	18,2	;volatile
  1315  163A                     l168:	
  1316                           ;Master_PIC.c: 177:     while (PIR1bits.TMR2IF == 0);
  1317                           
  1318  163A  1C8C               	btfss	12,1	;volatile
  1319  163B  2E3D               	goto	u1901
  1320  163C  2E3E               	goto	u1900
  1321  163D                     u1901:
  1322  163D  2E3A               	goto	l168
  1323  163E                     u1900:
  1324  163E                     l170:
  1325                           
  1326                           ;Master_PIC.c: 178:     PIR1bits.TMR2IF = 0;
  1327  163E  108C               	bcf	12,1	;volatile
  1328                           
  1329                           ;Master_PIC.c: 179:     TRISCbits.TRISC2 = 0;
  1330  163F  1683               	bsf	3,5	;RP0=1, select bank1
  1331  1640  1303               	bcf	3,6	;RP1=0, select bank1
  1332  1641  1107               	bcf	7,2	;volatile
  1333                           
  1334                           ;Master_PIC.c: 180:     TRISCbits.TRISC1 = 0;
  1335  1642  1087               	bcf	7,1	;volatile
  1336                           
  1337                           ;Master_PIC.c: 183:     INTCONbits.GIE = 1;
  1338  1643  178B               	bsf	11,7	;volatile
  1339                           
  1340                           ;Master_PIC.c: 184:     INTCONbits.PEIE = 1;
  1341  1644  170B               	bsf	11,6	;volatile
  1342                           
  1343                           ;Master_PIC.c: 185:     PIE1bits.ADIE = 1;
  1344  1645  170C               	bsf	12,6	;volatile
  1345                           
  1346                           ;Master_PIC.c: 186:     PIR1bits.ADIF = 0;
  1347  1646  1283               	bcf	3,5	;RP0=0, select bank0
  1348  1647  1303               	bcf	3,6	;RP1=0, select bank0
  1349  1648  130C               	bcf	12,6	;volatile
  1350                           
  1351                           ;Master_PIC.c: 187:     PIE1bits.RCIE = 0;
  1352  1649  1683               	bsf	3,5	;RP0=1, select bank1
  1353  164A  1303               	bcf	3,6	;RP1=0, select bank1
  1354  164B  128C               	bcf	12,5	;volatile
  1355                           
  1356                           ;Master_PIC.c: 188:     PIE1bits.TXIE = 0;
  1357  164C  120C               	bcf	12,4	;volatile
  1358                           
  1359                           ;Master_PIC.c: 191:     TXSTAbits.SYNC = 0;
  1360  164D  1218               	bcf	24,4	;volatile
  1361                           
  1362                           ;Master_PIC.c: 192:     TXSTAbits.BRGH = 1;
  1363  164E  1518               	bsf	24,2	;volatile
  1364                           
  1365                           ;Master_PIC.c: 193:     BAUDCTLbits.BRG16 = 0;
  1366  164F  1683               	bsf	3,5	;RP0=1, select bank3
  1367  1650  1703               	bsf	3,6	;RP1=1, select bank3
  1368  1651  1187               	bcf	7,3	;volatile
  1369  1652                     l1951:
  1370                           
  1371                           ;Master_PIC.c: 195:     SPBRG = 25;
  1372  1652  3019               	movlw	25
  1373  1653  1683               	bsf	3,5	;RP0=1, select bank1
  1374  1654  1303               	bcf	3,6	;RP1=0, select bank1
  1375  1655  0099               	movwf	25	;volatile
  1376                           
  1377                           ;Master_PIC.c: 196:     SPBRGH = 1;
  1378  1656  3001               	movlw	1
  1379  1657  009A               	movwf	26	;volatile
  1380  1658                     l1953:
  1381                           
  1382                           ;Master_PIC.c: 198:     RCSTAbits.SPEN = 1;
  1383  1658  1283               	bcf	3,5	;RP0=0, select bank0
  1384  1659  1303               	bcf	3,6	;RP1=0, select bank0
  1385  165A  1798               	bsf	24,7	;volatile
  1386  165B                     l1955:
  1387                           
  1388                           ;Master_PIC.c: 199:     RCSTAbits.RX9 = 0;
  1389  165B  1318               	bcf	24,6	;volatile
  1390  165C                     l1957:
  1391                           
  1392                           ;Master_PIC.c: 200:     RCSTAbits.CREN = 1;
  1393  165C  1618               	bsf	24,4	;volatile
  1394  165D                     l1959:
  1395                           
  1396                           ;Master_PIC.c: 201:     TXSTAbits.TX9 = 0;
  1397  165D  1683               	bsf	3,5	;RP0=1, select bank1
  1398  165E  1303               	bcf	3,6	;RP1=0, select bank1
  1399  165F  1318               	bcf	24,6	;volatile
  1400  1660                     l1961:
  1401                           
  1402                           ;Master_PIC.c: 203:     TXSTAbits.TXEN = 1;
  1403  1660  1698               	bsf	24,5	;volatile
  1404  1661                     l1963:
  1405                           
  1406                           ;Master_PIC.c: 205:     PIR1bits.RCIF = 0;
  1407  1661  1283               	bcf	3,5	;RP0=0, select bank0
  1408  1662  1303               	bcf	3,6	;RP1=0, select bank0
  1409  1663  128C               	bcf	12,5	;volatile
  1410  1664                     l1965:
  1411                           
  1412                           ;Master_PIC.c: 206:     PIR1bits.TXIF = 0;
  1413  1664  120C               	bcf	12,4	;volatile
  1414  1665                     l1967:
  1415                           
  1416                           ;Master_PIC.c: 209:     PORTA = 0x00;
  1417  1665  0185               	clrf	5	;volatile
  1418  1666                     l1969:
  1419                           
  1420                           ;Master_PIC.c: 210:     PORTB = 0x00;
  1421  1666  0186               	clrf	6	;volatile
  1422  1667                     l1971:
  1423                           
  1424                           ;Master_PIC.c: 211:     PORTC = 0x00;
  1425  1667  0187               	clrf	7	;volatile
  1426  1668                     l1973:
  1427                           
  1428                           ;Master_PIC.c: 212:     PORTD = 0x00;
  1429  1668  0188               	clrf	8	;volatile
  1430  1669                     l1975:
  1431                           
  1432                           ;Master_PIC.c: 213:     PORTE = 0x00;
  1433  1669  0189               	clrf	9	;volatile
  1434  166A                     l1977:
  1435                           
  1436                           ;Master_PIC.c: 216:     I2C_Master_Init();
  1437  166A  160A  118A  2267  160A  118A  	fcall	_I2C_Master_Init
  1438  166F                     l171:
  1439  166F  0008               	return
  1440  1670                     __end_of_setup:
  1441                           
  1442                           	psect	text2
  1443  14C2                     __ptext2:	
  1444 ;; *************** function _Text *****************
  1445 ;; Defined at:
  1446 ;;		line 233 in file "Master_PIC.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0
  1462 ;;      Temps:          0       3       0       0       0
  1463 ;;      Totals:         0       3       0       0       0
  1464 ;;Total ram usage:        3 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; Hardware stack levels required when called: 3
  1467 ;; This function calls:
  1468 ;;		_division
  1469 ;; This function is called by:
  1470 ;;		_main
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function _Text
  1476  14C2                     _Text:
  1477  14C2                     l4337:	
  1478                           ;incstack = 0
  1479                           ; Regs used in _Text: [wreg+status,2+status,0+pclath+cstack]
  1480                           
  1481                           
  1482                           ;Master_PIC.c: 234:      _delay((unsigned long)((250)*(8000000/4000.0)));
  1483  14C2  3003               	movlw	3
  1484  14C3  1283               	bcf	3,5	;RP0=0, select bank0
  1485  14C4  1303               	bcf	3,6	;RP1=0, select bank0
  1486  14C5  00AD               	movwf	??_Text+2
  1487  14C6  308A               	movlw	138
  1488  14C7  00AC               	movwf	??_Text+1
  1489  14C8  3055               	movlw	85
  1490  14C9  00AB               	movwf	??_Text
  1491  14CA                     u5957:
  1492  14CA  0BAB               	decfsz	??_Text,f
  1493  14CB  2CCA               	goto	u5957
  1494  14CC  0BAC               	decfsz	??_Text+1,f
  1495  14CD  2CCA               	goto	u5957
  1496  14CE  0BAD               	decfsz	??_Text+2,f
  1497  14CF  2CCA               	goto	u5957
  1498  14D0                     l4339:
  1499                           
  1500                           ;Master_PIC.c: 235:      division(sum);
  1501  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  1502  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  1503  14D2  086C               	movf	_sum,w
  1504  14D3  160A  118A  2527  160A  118A  	fcall	_division
  1505  14D8                     l4341:
  1506                           
  1507                           ;Master_PIC.c: 237:      if (RCREG == 'b'){
  1508  14D8  3062               	movlw	98
  1509  14D9  1283               	bcf	3,5	;RP0=0, select bank0
  1510  14DA  1303               	bcf	3,6	;RP1=0, select bank0
  1511  14DB  061A               	xorwf	26,w	;volatile
  1512  14DC  1D03               	btfss	3,2
  1513  14DD  2CDF               	goto	u5871
  1514  14DE  2CE0               	goto	u5870
  1515  14DF                     u5871:
  1516  14DF  2D26               	goto	l184
  1517  14E0                     u5870:
  1518  14E0                     l4343:
  1519                           
  1520                           ;Master_PIC.c: 258:          if (RCREG == 'b'){
  1521  14E0  3062               	movlw	98
  1522  14E1  061A               	xorwf	26,w	;volatile
  1523  14E2  1D03               	btfss	3,2
  1524  14E3  2CE5               	goto	u5881
  1525  14E4  2CE6               	goto	u5880
  1526  14E5                     u5881:
  1527  14E5  2D26               	goto	l184
  1528  14E6                     u5880:
  1529  14E6                     l4345:
  1530                           
  1531                           ;Master_PIC.c: 259:      _delay((unsigned long)((50)*(8000000/4000.0)));
  1532  14E6  3082               	movlw	130
  1533  14E7  1283               	bcf	3,5	;RP0=0, select bank0
  1534  14E8  1303               	bcf	3,6	;RP1=0, select bank0
  1535  14E9  00AC               	movwf	??_Text+1
  1536  14EA  30DD               	movlw	221
  1537  14EB  00AB               	movwf	??_Text
  1538  14EC                     u5967:
  1539  14EC  0BAB               	decfsz	??_Text,f
  1540  14ED  2CEC               	goto	u5967
  1541  14EE  0BAC               	decfsz	??_Text+1,f
  1542  14EF  2CEC               	goto	u5967
  1543  14F0                     l4347:
  1544                           
  1545                           ;Master_PIC.c: 260:     if(TXIF == 1){
  1546  14F0  1283               	bcf	3,5	;RP0=0, select bank0
  1547  14F1  1303               	bcf	3,6	;RP1=0, select bank0
  1548  14F2  1E0C               	btfss	12,4	;volatile
  1549  14F3  2CF5               	goto	u5891
  1550  14F4  2CF6               	goto	u5890
  1551  14F5                     u5891:
  1552  14F5  2CF8               	goto	l181
  1553  14F6                     u5890:
  1554  14F6                     l4349:
  1555                           
  1556                           ;Master_PIC.c: 261:         TXREG = hundreds;
  1557  14F6  0879               	movf	_hundreds,w
  1558  14F7  0099               	movwf	25	;volatile
  1559  14F8                     l181:	
  1560                           ;Master_PIC.c: 262:     }
  1561                           
  1562                           
  1563                           ;Master_PIC.c: 267:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1564  14F8  3082               	movlw	130
  1565  14F9  1283               	bcf	3,5	;RP0=0, select bank0
  1566  14FA  1303               	bcf	3,6	;RP1=0, select bank0
  1567  14FB  00AC               	movwf	??_Text+1
  1568  14FC  30DD               	movlw	221
  1569  14FD  00AB               	movwf	??_Text
  1570  14FE                     u5977:
  1571  14FE  0BAB               	decfsz	??_Text,f
  1572  14FF  2CFE               	goto	u5977
  1573  1500  0BAC               	decfsz	??_Text+1,f
  1574  1501  2CFE               	goto	u5977
  1575  1502                     l4351:
  1576                           
  1577                           ;Master_PIC.c: 268:     if(TXIF == 1){
  1578  1502  1283               	bcf	3,5	;RP0=0, select bank0
  1579  1503  1303               	bcf	3,6	;RP1=0, select bank0
  1580  1504  1E0C               	btfss	12,4	;volatile
  1581  1505  2D07               	goto	u5901
  1582  1506  2D08               	goto	u5900
  1583  1507                     u5901:
  1584  1507  2D0A               	goto	l182
  1585  1508                     u5900:
  1586  1508                     l4353:
  1587                           
  1588                           ;Master_PIC.c: 269:         TXREG = tens;
  1589  1508  0877               	movf	_tens,w
  1590  1509  0099               	movwf	25	;volatile
  1591  150A                     l182:	
  1592                           ;Master_PIC.c: 270:        }
  1593                           
  1594                           
  1595                           ;Master_PIC.c: 271:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1596  150A  3082               	movlw	130
  1597  150B  1283               	bcf	3,5	;RP0=0, select bank0
  1598  150C  1303               	bcf	3,6	;RP1=0, select bank0
  1599  150D  00AC               	movwf	??_Text+1
  1600  150E  30DD               	movlw	221
  1601  150F  00AB               	movwf	??_Text
  1602  1510                     u5987:
  1603  1510  0BAB               	decfsz	??_Text,f
  1604  1511  2D10               	goto	u5987
  1605  1512  0BAC               	decfsz	??_Text+1,f
  1606  1513  2D10               	goto	u5987
  1607  1514                     l4355:
  1608                           
  1609                           ;Master_PIC.c: 272:     if(TXIF == 1){
  1610  1514  1283               	bcf	3,5	;RP0=0, select bank0
  1611  1515  1303               	bcf	3,6	;RP1=0, select bank0
  1612  1516  1E0C               	btfss	12,4	;volatile
  1613  1517  2D19               	goto	u5911
  1614  1518  2D1A               	goto	u5910
  1615  1519                     u5911:
  1616  1519  2D1C               	goto	l183
  1617  151A                     u5910:
  1618  151A                     l4357:
  1619                           
  1620                           ;Master_PIC.c: 273:         TXREG = units;
  1621  151A  0876               	movf	_units,w
  1622  151B  0099               	movwf	25	;volatile
  1623  151C                     l183:	
  1624                           ;Master_PIC.c: 274:        }
  1625                           
  1626                           
  1627                           ;Master_PIC.c: 275:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1628  151C  3082               	movlw	130
  1629  151D  1283               	bcf	3,5	;RP0=0, select bank0
  1630  151E  1303               	bcf	3,6	;RP1=0, select bank0
  1631  151F  00AC               	movwf	??_Text+1
  1632  1520  30DD               	movlw	221
  1633  1521  00AB               	movwf	??_Text
  1634  1522                     u5997:
  1635  1522  0BAB               	decfsz	??_Text,f
  1636  1523  2D22               	goto	u5997
  1637  1524  0BAC               	decfsz	??_Text+1,f
  1638  1525  2D22               	goto	u5997
  1639  1526                     l184:
  1640  1526  0008               	return
  1641  1527                     __end_of_Text:
  1642                           
  1643                           	psect	text3
  1644  1592                     __ptext3:	
  1645 ;; *************** function _LCD_Start *****************
  1646 ;; Defined at:
  1647 ;;		line 304 in file "Master_PIC.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       3       0       0       0
  1664 ;;      Totals:         0       3       0       0       0
  1665 ;;Total ram usage:        3 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 7
  1668 ;; This function calls:
  1669 ;;		_I2C_Master_Init
  1670 ;;		_LCD_Init
  1671 ;;		_LCD_Set_Cursor
  1672 ;;		_LCD_Write_String
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           
  1679                           ;psect for function _LCD_Start
  1680  1592                     _LCD_Start:
  1681  1592                     l4249:	
  1682                           ;incstack = 0
  1683                           ; Regs used in _LCD_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1684                           
  1685                           
  1686                           ;Master_PIC.c: 305:     I2C_Master_Init();
  1687  1592  160A  118A  2267  160A  118A  	fcall	_I2C_Master_Init
  1688                           
  1689                           ;Master_PIC.c: 306:     LCD_Init(0x4E);
  1690  1597  304E               	movlw	78
  1691  1598  160A  118A  2765  160A  118A  	fcall	_LCD_Init
  1692  159D                     l4251:
  1693                           
  1694                           ;Master_PIC.c: 308:     LCD_Set_Cursor(1, 1);
  1695  159D  1283               	bcf	3,5	;RP0=0, select bank0
  1696  159E  1303               	bcf	3,6	;RP1=0, select bank0
  1697  159F  01A4               	clrf	LCD_Set_Cursor@COL
  1698  15A0  0AA4               	incf	LCD_Set_Cursor@COL,f
  1699  15A1  3001               	movlw	1
  1700  15A2  160A  118A  23AE  160A  118A  	fcall	_LCD_Set_Cursor
  1701  15A7                     l4253:
  1702                           
  1703                           ;Master_PIC.c: 309:     LCD_Write_String(" Q1.00->");
  1704  15A7  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1705  15A8  1283               	bcf	3,5	;RP0=0, select bank0
  1706  15A9  1303               	bcf	3,6	;RP1=0, select bank0
  1707  15AA  00A4               	movwf	LCD_Write_String@Str
  1708  15AB  3080               	movlw	128
  1709  15AC  00A5               	movwf	LCD_Write_String@Str+1
  1710  15AD  160A  118A  2421  160A  118A  	fcall	_LCD_Write_String
  1711  15B2                     l4255:
  1712                           
  1713                           ;Master_PIC.c: 310:     LCD_Set_Cursor(2, 1);
  1714  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  1715  15B3  1303               	bcf	3,6	;RP1=0, select bank0
  1716  15B4  01A4               	clrf	LCD_Set_Cursor@COL
  1717  15B5  0AA4               	incf	LCD_Set_Cursor@COL,f
  1718  15B6  3002               	movlw	2
  1719  15B7  160A  118A  23AE  160A  118A  	fcall	_LCD_Set_Cursor
  1720  15BC                     l4257:
  1721                           
  1722                           ;Master_PIC.c: 311:     LCD_Write_String(" Q0.50->");
  1723  15BC  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1724  15BD  1283               	bcf	3,5	;RP0=0, select bank0
  1725  15BE  1303               	bcf	3,6	;RP1=0, select bank0
  1726  15BF  00A4               	movwf	LCD_Write_String@Str
  1727  15C0  3080               	movlw	128
  1728  15C1  00A5               	movwf	LCD_Write_String@Str+1
  1729  15C2  160A  118A  2421  160A  118A  	fcall	_LCD_Write_String
  1730  15C7                     l4259:
  1731                           
  1732                           ;Master_PIC.c: 312:     LCD_Set_Cursor(3, 1);
  1733  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  1734  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  1735  15C9  01A4               	clrf	LCD_Set_Cursor@COL
  1736  15CA  0AA4               	incf	LCD_Set_Cursor@COL,f
  1737  15CB  3003               	movlw	3
  1738  15CC  160A  118A  23AE  160A  118A  	fcall	_LCD_Set_Cursor
  1739  15D1                     l4261:
  1740                           
  1741                           ;Master_PIC.c: 313:     LCD_Write_String(" Q0.25->");
  1742  15D1  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1743  15D2  1283               	bcf	3,5	;RP0=0, select bank0
  1744  15D3  1303               	bcf	3,6	;RP1=0, select bank0
  1745  15D4  00A4               	movwf	LCD_Write_String@Str
  1746  15D5  3080               	movlw	128
  1747  15D6  00A5               	movwf	LCD_Write_String@Str+1
  1748  15D7  160A  118A  2421  160A  118A  	fcall	_LCD_Write_String
  1749  15DC                     l4263:
  1750                           
  1751                           ;Master_PIC.c: 314:     LCD_Set_Cursor(4, 1);
  1752  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  1753  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  1754  15DE  01A4               	clrf	LCD_Set_Cursor@COL
  1755  15DF  0AA4               	incf	LCD_Set_Cursor@COL,f
  1756  15E0  3004               	movlw	4
  1757  15E1  160A  118A  23AE  160A  118A  	fcall	_LCD_Set_Cursor
  1758  15E6                     l4265:
  1759                           
  1760                           ;Master_PIC.c: 315:     LCD_Write_String(" Total->Q");
  1761  15E6  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1762  15E7  1283               	bcf	3,5	;RP0=0, select bank0
  1763  15E8  1303               	bcf	3,6	;RP1=0, select bank0
  1764  15E9  00A4               	movwf	LCD_Write_String@Str
  1765  15EA  3080               	movlw	128
  1766  15EB  00A5               	movwf	LCD_Write_String@Str+1
  1767  15EC  160A  118A  2421  160A  118A  	fcall	_LCD_Write_String
  1768  15F1                     l4267:
  1769                           
  1770                           ;Master_PIC.c: 316:     _delay((unsigned long)((2500)*(8000000/4000.0)));
  1771  15F1  301A               	movlw	26
  1772  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  1773  15F3  1303               	bcf	3,6	;RP1=0, select bank0
  1774  15F4  00AD               	movwf	??_LCD_Start+2
  1775  15F5  305E               	movlw	94
  1776  15F6  00AC               	movwf	??_LCD_Start+1
  1777  15F7  306D               	movlw	109
  1778  15F8  00AB               	movwf	??_LCD_Start
  1779  15F9                     u6007:
  1780  15F9  0BAB               	decfsz	??_LCD_Start,f
  1781  15FA  2DF9               	goto	u6007
  1782  15FB  0BAC               	decfsz	??_LCD_Start+1,f
  1783  15FC  2DF9               	goto	u6007
  1784  15FD  0BAD               	decfsz	??_LCD_Start+2,f
  1785  15FE  2DF9               	goto	u6007
  1786  15FF  2E00               	nop2
  1787  1600                     l190:
  1788  1600  0008               	return
  1789  1601                     __end_of_LCD_Start:
  1790                           
  1791                           	psect	text4
  1792  1765                     __ptext4:	
  1793 ;; *************** function _LCD_Init *****************
  1794 ;; Defined at:
  1795 ;;		line 122 in file "I2C_Master.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  I2C_Add         1    wreg     unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  I2C_Add         1    6[BANK0 ] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       1       0       0       0
  1811 ;;      Temps:          0       2       0       0       0
  1812 ;;      Totals:         0       3       0       0       0
  1813 ;;Total ram usage:        3 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 6
  1816 ;; This function calls:
  1817 ;;		_IO_Expander_Write
  1818 ;;		_LCD_CMD
  1819 ;; This function is called by:
  1820 ;;		_LCD_Start
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function _LCD_Init
  1826  1765                     _LCD_Init:
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1830                           ;LCD_Init@I2C_Add stored from wreg
  1831  1765  1283               	bcf	3,5	;RP0=0, select bank0
  1832  1766  1303               	bcf	3,6	;RP1=0, select bank0
  1833  1767  00A6               	movwf	LCD_Init@I2C_Add
  1834  1768                     l4081:
  1835                           
  1836                           ;I2C_Master.c: 122: void LCD_Init(unsigned char I2C_Add);I2C_Master.c: 123: {;I2C_Master
      +                          .c: 124:   i2c_add = I2C_Add;
  1837  1768  0826               	movf	LCD_Init@I2C_Add,w
  1838  1769  00A4               	movwf	??_LCD_Init
  1839  176A  0824               	movf	??_LCD_Init,w
  1840  176B  1683               	bsf	3,5	;RP0=1, select bank1
  1841  176C  1303               	bcf	3,6	;RP1=0, select bank1
  1842  176D  00AE               	movwf	_i2c_add^(0+128)
  1843  176E                     l4083:
  1844                           
  1845                           ;I2C_Master.c: 125:   IO_Expander_Write(0x00);
  1846  176E  3000               	movlw	0
  1847  176F  160A  118A  22B2  160A  118A  	fcall	_IO_Expander_Write
  1848  1774                     l4085:
  1849                           
  1850                           ;I2C_Master.c: 126:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1851  1774  304E               	movlw	78
  1852  1775  1283               	bcf	3,5	;RP0=0, select bank0
  1853  1776  1303               	bcf	3,6	;RP1=0, select bank0
  1854  1777  00A5               	movwf	??_LCD_Init+1
  1855  1778  30EA               	movlw	234
  1856  1779  00A4               	movwf	??_LCD_Init
  1857  177A                     u6017:
  1858  177A  0BA4               	decfsz	??_LCD_Init,f
  1859  177B  2F7A               	goto	u6017
  1860  177C  0BA5               	decfsz	??_LCD_Init+1,f
  1861  177D  2F7A               	goto	u6017
  1862  177E  0000               	nop
  1863                           
  1864                           ;I2C_Master.c: 127:   LCD_CMD(0x03);
  1865  177F  3003               	movlw	3
  1866  1780  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1867  1785                     l4087:
  1868                           
  1869                           ;I2C_Master.c: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1870  1785  300D               	movlw	13
  1871  1786  1283               	bcf	3,5	;RP0=0, select bank0
  1872  1787  1303               	bcf	3,6	;RP1=0, select bank0
  1873  1788  00A5               	movwf	??_LCD_Init+1
  1874  1789  30FB               	movlw	251
  1875  178A  00A4               	movwf	??_LCD_Init
  1876  178B                     u6027:
  1877  178B  0BA4               	decfsz	??_LCD_Init,f
  1878  178C  2F8B               	goto	u6027
  1879  178D  0BA5               	decfsz	??_LCD_Init+1,f
  1880  178E  2F8B               	goto	u6027
  1881  178F                     l4089:
  1882                           
  1883                           ;I2C_Master.c: 129:   LCD_CMD(0x03);
  1884  178F  3003               	movlw	3
  1885  1790  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1886                           
  1887                           ;I2C_Master.c: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1888  1795  300D               	movlw	13
  1889  1796  1283               	bcf	3,5	;RP0=0, select bank0
  1890  1797  1303               	bcf	3,6	;RP1=0, select bank0
  1891  1798  00A5               	movwf	??_LCD_Init+1
  1892  1799  30FB               	movlw	251
  1893  179A  00A4               	movwf	??_LCD_Init
  1894  179B                     u6037:
  1895  179B  0BA4               	decfsz	??_LCD_Init,f
  1896  179C  2F9B               	goto	u6037
  1897  179D  0BA5               	decfsz	??_LCD_Init+1,f
  1898  179E  2F9B               	goto	u6037
  1899  179F                     l4091:
  1900                           
  1901                           ;I2C_Master.c: 131:   LCD_CMD(0x03);
  1902  179F  3003               	movlw	3
  1903  17A0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1904  17A5                     l4093:
  1905                           
  1906                           ;I2C_Master.c: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1907  17A5  300D               	movlw	13
  1908  17A6  1283               	bcf	3,5	;RP0=0, select bank0
  1909  17A7  1303               	bcf	3,6	;RP1=0, select bank0
  1910  17A8  00A5               	movwf	??_LCD_Init+1
  1911  17A9  30FB               	movlw	251
  1912  17AA  00A4               	movwf	??_LCD_Init
  1913  17AB                     u6047:
  1914  17AB  0BA4               	decfsz	??_LCD_Init,f
  1915  17AC  2FAB               	goto	u6047
  1916  17AD  0BA5               	decfsz	??_LCD_Init+1,f
  1917  17AE  2FAB               	goto	u6047
  1918                           
  1919                           ;I2C_Master.c: 133:   LCD_CMD(0x02);
  1920  17AF  3002               	movlw	2
  1921  17B0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1922  17B5                     l4095:
  1923                           
  1924                           ;I2C_Master.c: 134:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1925  17B5  300D               	movlw	13
  1926  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  1927  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  1928  17B8  00A5               	movwf	??_LCD_Init+1
  1929  17B9  30FB               	movlw	251
  1930  17BA  00A4               	movwf	??_LCD_Init
  1931  17BB                     u6057:
  1932  17BB  0BA4               	decfsz	??_LCD_Init,f
  1933  17BC  2FBB               	goto	u6057
  1934  17BD  0BA5               	decfsz	??_LCD_Init+1,f
  1935  17BE  2FBB               	goto	u6057
  1936  17BF                     l4097:
  1937                           
  1938                           ;I2C_Master.c: 135:   LCD_CMD(0x20 | (2 << 2));
  1939  17BF  3028               	movlw	40
  1940  17C0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1941                           
  1942                           ;I2C_Master.c: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1943  17C5  3082               	movlw	130
  1944  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  1945  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  1946  17C8  00A5               	movwf	??_LCD_Init+1
  1947  17C9  30DD               	movlw	221
  1948  17CA  00A4               	movwf	??_LCD_Init
  1949  17CB                     u6067:
  1950  17CB  0BA4               	decfsz	??_LCD_Init,f
  1951  17CC  2FCB               	goto	u6067
  1952  17CD  0BA5               	decfsz	??_LCD_Init+1,f
  1953  17CE  2FCB               	goto	u6067
  1954  17CF                     l4099:
  1955                           
  1956                           ;I2C_Master.c: 137:   LCD_CMD(0x0C);
  1957  17CF  300C               	movlw	12
  1958  17D0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1959  17D5                     l4101:
  1960                           
  1961                           ;I2C_Master.c: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1962  17D5  3082               	movlw	130
  1963  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  1964  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  1965  17D8  00A5               	movwf	??_LCD_Init+1
  1966  17D9  30DD               	movlw	221
  1967  17DA  00A4               	movwf	??_LCD_Init
  1968  17DB                     u6077:
  1969  17DB  0BA4               	decfsz	??_LCD_Init,f
  1970  17DC  2FDB               	goto	u6077
  1971  17DD  0BA5               	decfsz	??_LCD_Init+1,f
  1972  17DE  2FDB               	goto	u6077
  1973                           
  1974                           ;I2C_Master.c: 139:   LCD_CMD(0x01);
  1975  17DF  3001               	movlw	1
  1976  17E0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1977  17E5                     l4103:
  1978                           
  1979                           ;I2C_Master.c: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1980  17E5  3082               	movlw	130
  1981  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  1982  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  1983  17E8  00A5               	movwf	??_LCD_Init+1
  1984  17E9  30DD               	movlw	221
  1985  17EA  00A4               	movwf	??_LCD_Init
  1986  17EB                     u6087:
  1987  17EB  0BA4               	decfsz	??_LCD_Init,f
  1988  17EC  2FEB               	goto	u6087
  1989  17ED  0BA5               	decfsz	??_LCD_Init+1,f
  1990  17EE  2FEB               	goto	u6087
  1991  17EF                     l4105:
  1992                           
  1993                           ;I2C_Master.c: 141:   LCD_CMD(0x04 | 0x02);
  1994  17EF  3006               	movlw	6
  1995  17F0  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  1996                           
  1997                           ;I2C_Master.c: 142:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1998  17F5  3082               	movlw	130
  1999  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  2000  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  2001  17F8  00A5               	movwf	??_LCD_Init+1
  2002  17F9  30DD               	movlw	221
  2003  17FA  00A4               	movwf	??_LCD_Init
  2004  17FB                     u6097:
  2005  17FB  0BA4               	decfsz	??_LCD_Init,f
  2006  17FC  2FFB               	goto	u6097
  2007  17FD  0BA5               	decfsz	??_LCD_Init+1,f
  2008  17FE  2FFB               	goto	u6097
  2009  17FF                     l325:
  2010  17FF  0008               	return
  2011  1800                     __end_of_LCD_Init:
  2012                           
  2013                           	psect	text5
  2014  1267                     __ptext5:	
  2015 ;; *************** function _I2C_Master_Init *****************
  2016 ;; Defined at:
  2017 ;;		line 15 in file "I2C_Master.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0
  2034 ;;      Totals:         0       0       0       0       0
  2035 ;;Total ram usage:        0 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 1
  2038 ;; This function calls:
  2039 ;;		Nothing
  2040 ;; This function is called by:
  2041 ;;		_setup
  2042 ;;		_LCD_Start
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           
  2047                           ;psect for function _I2C_Master_Init
  2048  1267                     _I2C_Master_Init:
  2049  1267                     l1697:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  2052                           
  2053                           
  2054                           ;I2C_Master.c: 17:   SSPCON = 0x28;
  2055  1267  3028               	movlw	40
  2056  1268  1283               	bcf	3,5	;RP0=0, select bank0
  2057  1269  1303               	bcf	3,6	;RP1=0, select bank0
  2058  126A  0094               	movwf	20	;volatile
  2059  126B                     l1699:
  2060                           
  2061                           ;I2C_Master.c: 18:   SSPCON2 = 0x00;
  2062  126B  1683               	bsf	3,5	;RP0=1, select bank1
  2063  126C  1303               	bcf	3,6	;RP1=0, select bank1
  2064  126D  0191               	clrf	17	;volatile
  2065  126E                     l1701:
  2066                           
  2067                           ;I2C_Master.c: 19:   SSPSTAT = 0x00;
  2068  126E  0194               	clrf	20	;volatile
  2069                           
  2070                           ;I2C_Master.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  2071  126F  30CF               	movlw	207
  2072  1270  0093               	movwf	19	;volatile
  2073  1271                     l1703:
  2074                           
  2075                           ;I2C_Master.c: 21:   TRISC3 = 1;
  2076  1271  1587               	bsf	7,3	;volatile
  2077  1272                     l1705:
  2078                           
  2079                           ;I2C_Master.c: 22:   TRISC4 = 1;
  2080  1272  1607               	bsf	7,4	;volatile
  2081  1273                     l281:
  2082  1273  0008               	return
  2083  1274                     __end_of_I2C_Master_Init:
  2084                           
  2085                           	psect	text6
  2086  09CA                     __ptext6:	
  2087 ;; *************** function _LCD_Send *****************
  2088 ;; Defined at:
  2089 ;;		line 320 in file "Master_PIC.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;		None
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;		None
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2103 ;;      Params:         0       0       0       0       0
  2104 ;;      Locals:         0       0       4       0       0
  2105 ;;      Temps:          0       4       0       0       0
  2106 ;;      Totals:         0       4       4       0       0
  2107 ;;Total ram usage:        8 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 7
  2110 ;; This function calls:
  2111 ;;		_ADC_convert
  2112 ;;		_LCD_Set_Cursor
  2113 ;;		_LCD_Write_Char
  2114 ;;		_LCD_Write_String
  2115 ;;		___bmul
  2116 ;;		___xxtofl
  2117 ;;		_division
  2118 ;; This function is called by:
  2119 ;;		_main
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _LCD_Send
  2125  09CA                     _LCD_Send:
  2126  09CA                     l4269:	
  2127                           ;incstack = 0
  2128                           ; Regs used in _LCD_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2129                           
  2130                           
  2131                           ;Master_PIC.c: 321:     _delay((unsigned long)((2500)*(8000000/4000.0)));
  2132  09CA  301A               	movlw	26
  2133  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  2134  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  2135  09CD  00E9               	movwf	??_LCD_Send+2
  2136  09CE  305E               	movlw	94
  2137  09CF  00E8               	movwf	??_LCD_Send+1
  2138  09D0  306D               	movlw	109
  2139  09D1  00E7               	movwf	??_LCD_Send
  2140  09D2                     u6107:
  2141  09D2  0BE7               	decfsz	??_LCD_Send,f
  2142  09D3  29D2               	goto	u6107
  2143  09D4  0BE8               	decfsz	??_LCD_Send+1,f
  2144  09D5  29D2               	goto	u6107
  2145  09D6  0BE9               	decfsz	??_LCD_Send+2,f
  2146  09D7  29D2               	goto	u6107
  2147  09D8  29D9               	nop2
  2148  09D9                     l4271:
  2149                           
  2150                           ;Master_PIC.c: 323:     LCD_Set_Cursor(1, 10);
  2151  09D9  300A               	movlw	10
  2152  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2153  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2154  09DC  00E7               	movwf	??_LCD_Send
  2155  09DD  0867               	movf	??_LCD_Send,w
  2156  09DE  00A4               	movwf	LCD_Set_Cursor@COL
  2157  09DF  3001               	movlw	1
  2158  09E0  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2159  09E5                     l4273:
  2160                           
  2161                           ;Master_PIC.c: 324:     LCD_Write_String(converted01);
  2162  09E5  30CC               	movlw	(low (_converted01| 0))& (0+255)
  2163  09E6  1283               	bcf	3,5	;RP0=0, select bank0
  2164  09E7  1303               	bcf	3,6	;RP1=0, select bank0
  2165  09E8  00A4               	movwf	LCD_Write_String@Str
  2166  09E9  3000               	movlw	0
  2167  09EA  00A5               	movwf	LCD_Write_String@Str+1
  2168  09EB  160A  118A  2421  120A  158A  	fcall	_LCD_Write_String
  2169  09F0                     l4275:
  2170                           
  2171                           ;Master_PIC.c: 327:     LCD_Set_Cursor(2, 10);
  2172  09F0  300A               	movlw	10
  2173  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  2174  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  2175  09F3  00E7               	movwf	??_LCD_Send
  2176  09F4  0867               	movf	??_LCD_Send,w
  2177  09F5  00A4               	movwf	LCD_Set_Cursor@COL
  2178  09F6  3002               	movlw	2
  2179  09F7  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2180  09FC                     l4277:
  2181                           
  2182                           ;Master_PIC.c: 328:     LCD_Write_String(converted02);
  2183  09FC  30C2               	movlw	(low (_converted02| 0))& (0+255)
  2184  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  2185  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  2186  09FF  00A4               	movwf	LCD_Write_String@Str
  2187  0A00  3000               	movlw	0
  2188  0A01  00A5               	movwf	LCD_Write_String@Str+1
  2189  0A02  160A  118A  2421  120A  158A  	fcall	_LCD_Write_String
  2190  0A07                     l4279:
  2191                           
  2192                           ;Master_PIC.c: 331:     LCD_Set_Cursor(3, 10);
  2193  0A07  300A               	movlw	10
  2194  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0A0A  00E7               	movwf	??_LCD_Send
  2197  0A0B  0867               	movf	??_LCD_Send,w
  2198  0A0C  00A4               	movwf	LCD_Set_Cursor@COL
  2199  0A0D  3003               	movlw	3
  2200  0A0E  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2201  0A13                     l4281:
  2202                           
  2203                           ;Master_PIC.c: 332:     LCD_Write_String(converted03);
  2204  0A13  30B8               	movlw	(low (_converted03| 0))& (0+255)
  2205  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0A15  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0A16  00A4               	movwf	LCD_Write_String@Str
  2208  0A17  3000               	movlw	0
  2209  0A18  00A5               	movwf	LCD_Write_String@Str+1
  2210  0A19  160A  118A  2421  120A  158A  	fcall	_LCD_Write_String
  2211  0A1E                     l4283:
  2212                           
  2213                           ;Master_PIC.c: 334:     ADC_convert(converted01, slave01, 2);
  2214  0A1E  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0A1F  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0A20  086F               	movf	_slave01,w
  2217  0A21  00E7               	movwf	??_LCD_Send
  2218  0A22  01E8               	clrf	??_LCD_Send+1
  2219  0A23  01E9               	clrf	??_LCD_Send+2
  2220  0A24  01EA               	clrf	??_LCD_Send+3
  2221  0A25  086A               	movf	??_LCD_Send+3,w
  2222  0A26  00B2               	movwf	___xxtofl@val+3
  2223  0A27  0869               	movf	??_LCD_Send+2,w
  2224  0A28  00B1               	movwf	___xxtofl@val+2
  2225  0A29  0868               	movf	??_LCD_Send+1,w
  2226  0A2A  00B0               	movwf	___xxtofl@val+1
  2227  0A2B  0867               	movf	??_LCD_Send,w
  2228  0A2C  00AF               	movwf	___xxtofl@val
  2229  0A2D  3000               	movlw	0
  2230  0A2E  120A  158A  210E  120A  158A  	fcall	___xxtofl
  2231  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0A34  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0A35  0832               	movf	?___xxtofl+3,w
  2234  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  2235  0A37  1303               	bcf	3,6	;RP1=0, select bank1
  2236  0A38  00E8               	movwf	(_LCD_Send$1379+3)^(0+128)
  2237  0A39  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0A3A  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0A3B  0831               	movf	?___xxtofl+2,w
  2240  0A3C  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0A3D  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0A3E  00E7               	movwf	(_LCD_Send$1379+2)^(0+128)
  2243  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0A41  0830               	movf	?___xxtofl+1,w
  2246  0A42  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0A43  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0A44  00E6               	movwf	(_LCD_Send$1379+1)^(0+128)
  2249  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0A47  082F               	movf	?___xxtofl,w
  2252  0A48  1683               	bsf	3,5	;RP0=1, select bank1
  2253  0A49  1303               	bcf	3,6	;RP1=0, select bank1
  2254  0A4A  00E5               	movwf	_LCD_Send$1379^(0+128)
  2255  0A4B                     l4285:
  2256                           
  2257                           ;Master_PIC.c: 334:     ADC_convert(converted01, slave01, 2);
  2258  0A4B  0868               	movf	(_LCD_Send$1379+3)^(0+128),w
  2259  0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0A4E  00E2               	movwf	ADC_convert@a+3
  2262  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0A50  1303               	bcf	3,6	;RP1=0, select bank1
  2264  0A51  0867               	movf	(_LCD_Send$1379+2)^(0+128),w
  2265  0A52  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0A53  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0A54  00E1               	movwf	ADC_convert@a+2
  2268  0A55  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0A56  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0A57  0866               	movf	(_LCD_Send$1379+1)^(0+128),w
  2271  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0A5A  00E0               	movwf	ADC_convert@a+1
  2274  0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0A5D  0865               	movf	_LCD_Send$1379^(0+128),w
  2277  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0A60  00DF               	movwf	ADC_convert@a
  2280  0A61  3002               	movlw	2
  2281  0A62  00E3               	movwf	ADC_convert@place
  2282  0A63  3000               	movlw	0
  2283  0A64  00E4               	movwf	ADC_convert@place+1
  2284  0A65  30CC               	movlw	(low (_converted01| 0))& (0+255)
  2285  0A66  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2286  0A6B                     l4287:
  2287                           
  2288                           ;Master_PIC.c: 335:     ADC_convert(converted02, slave02, 2);
  2289  0A6B  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0A6C  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0A6D  086E               	movf	_slave02,w
  2292  0A6E  00E7               	movwf	??_LCD_Send
  2293  0A6F  01E8               	clrf	??_LCD_Send+1
  2294  0A70  01E9               	clrf	??_LCD_Send+2
  2295  0A71  01EA               	clrf	??_LCD_Send+3
  2296  0A72  086A               	movf	??_LCD_Send+3,w
  2297  0A73  00B2               	movwf	___xxtofl@val+3
  2298  0A74  0869               	movf	??_LCD_Send+2,w
  2299  0A75  00B1               	movwf	___xxtofl@val+2
  2300  0A76  0868               	movf	??_LCD_Send+1,w
  2301  0A77  00B0               	movwf	___xxtofl@val+1
  2302  0A78  0867               	movf	??_LCD_Send,w
  2303  0A79  00AF               	movwf	___xxtofl@val
  2304  0A7A  3000               	movlw	0
  2305  0A7B  120A  158A  210E  120A  158A  	fcall	___xxtofl
  2306  0A80  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0A81  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0A82  0832               	movf	?___xxtofl+3,w
  2309  0A83  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0A84  1303               	bcf	3,6	;RP1=0, select bank1
  2311  0A85  00E8               	movwf	(_LCD_Send$1379+3)^(0+128)
  2312  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0A88  0831               	movf	?___xxtofl+2,w
  2315  0A89  1683               	bsf	3,5	;RP0=1, select bank1
  2316  0A8A  1303               	bcf	3,6	;RP1=0, select bank1
  2317  0A8B  00E7               	movwf	(_LCD_Send$1379+2)^(0+128)
  2318  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0A8E  0830               	movf	?___xxtofl+1,w
  2321  0A8F  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0A90  1303               	bcf	3,6	;RP1=0, select bank1
  2323  0A91  00E6               	movwf	(_LCD_Send$1379+1)^(0+128)
  2324  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0A94  082F               	movf	?___xxtofl,w
  2327  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0A97  00E5               	movwf	_LCD_Send$1379^(0+128)
  2330  0A98                     l4289:
  2331                           
  2332                           ;Master_PIC.c: 335:     ADC_convert(converted02, slave02, 2);
  2333  0A98  0868               	movf	(_LCD_Send$1379+3)^(0+128),w
  2334  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0A9B  00E2               	movwf	ADC_convert@a+3
  2337  0A9C  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0A9D  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0A9E  0867               	movf	(_LCD_Send$1379+2)^(0+128),w
  2340  0A9F  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0AA0  1303               	bcf	3,6	;RP1=0, select bank0
  2342  0AA1  00E1               	movwf	ADC_convert@a+2
  2343  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  2345  0AA4  0866               	movf	(_LCD_Send$1379+1)^(0+128),w
  2346  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  2347  0AA6  1303               	bcf	3,6	;RP1=0, select bank0
  2348  0AA7  00E0               	movwf	ADC_convert@a+1
  2349  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0AA9  1303               	bcf	3,6	;RP1=0, select bank1
  2351  0AAA  0865               	movf	_LCD_Send$1379^(0+128),w
  2352  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0AAD  00DF               	movwf	ADC_convert@a
  2355  0AAE  3002               	movlw	2
  2356  0AAF  00E3               	movwf	ADC_convert@place
  2357  0AB0  3000               	movlw	0
  2358  0AB1  00E4               	movwf	ADC_convert@place+1
  2359  0AB2  30C2               	movlw	(low (_converted02| 0))& (0+255)
  2360  0AB3  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2361  0AB8                     l4291:
  2362                           
  2363                           ;Master_PIC.c: 336:     ADC_convert(converted03, slave03, 2);
  2364  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  2366  0ABA  086D               	movf	_slave03,w
  2367  0ABB  00E7               	movwf	??_LCD_Send
  2368  0ABC  01E8               	clrf	??_LCD_Send+1
  2369  0ABD  01E9               	clrf	??_LCD_Send+2
  2370  0ABE  01EA               	clrf	??_LCD_Send+3
  2371  0ABF  086A               	movf	??_LCD_Send+3,w
  2372  0AC0  00B2               	movwf	___xxtofl@val+3
  2373  0AC1  0869               	movf	??_LCD_Send+2,w
  2374  0AC2  00B1               	movwf	___xxtofl@val+2
  2375  0AC3  0868               	movf	??_LCD_Send+1,w
  2376  0AC4  00B0               	movwf	___xxtofl@val+1
  2377  0AC5  0867               	movf	??_LCD_Send,w
  2378  0AC6  00AF               	movwf	___xxtofl@val
  2379  0AC7  3000               	movlw	0
  2380  0AC8  120A  158A  210E  120A  158A  	fcall	___xxtofl
  2381  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0ACE  1303               	bcf	3,6	;RP1=0, select bank0
  2383  0ACF  0832               	movf	?___xxtofl+3,w
  2384  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0AD1  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0AD2  00E8               	movwf	(_LCD_Send$1379+3)^(0+128)
  2387  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0AD5  0831               	movf	?___xxtofl+2,w
  2390  0AD6  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0AD7  1303               	bcf	3,6	;RP1=0, select bank1
  2392  0AD8  00E7               	movwf	(_LCD_Send$1379+2)^(0+128)
  2393  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0ADB  0830               	movf	?___xxtofl+1,w
  2396  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0ADD  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0ADE  00E6               	movwf	(_LCD_Send$1379+1)^(0+128)
  2399  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0AE1  082F               	movf	?___xxtofl,w
  2402  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0AE4  00E5               	movwf	_LCD_Send$1379^(0+128)
  2405  0AE5                     l4293:
  2406                           
  2407                           ;Master_PIC.c: 336:     ADC_convert(converted03, slave03, 2);
  2408  0AE5  0868               	movf	(_LCD_Send$1379+3)^(0+128),w
  2409  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0AE8  00E2               	movwf	ADC_convert@a+3
  2412  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  2413  0AEA  1303               	bcf	3,6	;RP1=0, select bank1
  2414  0AEB  0867               	movf	(_LCD_Send$1379+2)^(0+128),w
  2415  0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0AED  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0AEE  00E1               	movwf	ADC_convert@a+2
  2418  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  2419  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  2420  0AF1  0866               	movf	(_LCD_Send$1379+1)^(0+128),w
  2421  0AF2  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0AF3  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0AF4  00E0               	movwf	ADC_convert@a+1
  2424  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0AF6  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0AF7  0865               	movf	_LCD_Send$1379^(0+128),w
  2427  0AF8  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0AF9  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0AFA  00DF               	movwf	ADC_convert@a
  2430  0AFB  3002               	movlw	2
  2431  0AFC  00E3               	movwf	ADC_convert@place
  2432  0AFD  3000               	movlw	0
  2433  0AFE  00E4               	movwf	ADC_convert@place+1
  2434  0AFF  30B8               	movlw	(low (_converted03| 0))& (0+255)
  2435  0B00  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2436  0B05                     l4295:
  2437                           
  2438                           ;Master_PIC.c: 338:     dec1 = slave02 * 50;
  2439  0B05  3032               	movlw	50
  2440  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0B07  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0B08  00E7               	movwf	??_LCD_Send
  2443  0B09  0867               	movf	??_LCD_Send,w
  2444  0B0A  00F4               	movwf	___bmul@multiplicand
  2445  0B0B  086E               	movf	_slave02,w
  2446  0B0C  160A  118A  229B  120A  158A  	fcall	___bmul
  2447  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0B13  00E8               	movwf	??_LCD_Send+1
  2450  0B14  0868               	movf	??_LCD_Send+1,w
  2451  0B15  1683               	bsf	3,5	;RP0=1, select bank1
  2452  0B16  1303               	bcf	3,6	;RP1=0, select bank1
  2453  0B17  00B3               	movwf	_dec1^(0+128)
  2454  0B18                     l4297:
  2455                           
  2456                           ;Master_PIC.c: 339:     dec2 = slave03 * 25;
  2457  0B18  3019               	movlw	25
  2458  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0B1B  00E7               	movwf	??_LCD_Send
  2461  0B1C  0867               	movf	??_LCD_Send,w
  2462  0B1D  00F4               	movwf	___bmul@multiplicand
  2463  0B1E  086D               	movf	_slave03,w
  2464  0B1F  160A  118A  229B  120A  158A  	fcall	___bmul
  2465  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0B26  00E8               	movwf	??_LCD_Send+1
  2468  0B27  0868               	movf	??_LCD_Send+1,w
  2469  0B28  1683               	bsf	3,5	;RP0=1, select bank1
  2470  0B29  1303               	bcf	3,6	;RP1=0, select bank1
  2471  0B2A  00B2               	movwf	_dec2^(0+128)
  2472  0B2B                     l4299:
  2473                           
  2474                           ;Master_PIC.c: 340:     dec3 = slave01 * 100;
  2475  0B2B  3064               	movlw	100
  2476  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0B2E  00E7               	movwf	??_LCD_Send
  2479  0B2F  0867               	movf	??_LCD_Send,w
  2480  0B30  00F4               	movwf	___bmul@multiplicand
  2481  0B31  086F               	movf	_slave01,w
  2482  0B32  160A  118A  229B  120A  158A  	fcall	___bmul
  2483  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  2484  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  2485  0B39  00E8               	movwf	??_LCD_Send+1
  2486  0B3A  0868               	movf	??_LCD_Send+1,w
  2487  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  2488  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  2489  0B3D  00B1               	movwf	_dec3^(0+128)
  2490  0B3E                     l4301:
  2491                           
  2492                           ;Master_PIC.c: 341:     sum = dec3 + dec1 + dec2;
  2493  0B3E  0833               	movf	_dec1^(0+128),w
  2494  0B3F  0731               	addwf	_dec3^(0+128),w
  2495  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0B42  00E7               	movwf	??_LCD_Send
  2498  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0B45  0832               	movf	_dec2^(0+128),w
  2501  0B46  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0B47  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0B48  0767               	addwf	??_LCD_Send,w
  2504  0B49  00E8               	movwf	??_LCD_Send+1
  2505  0B4A  0868               	movf	??_LCD_Send+1,w
  2506  0B4B  00EC               	movwf	_sum
  2507  0B4C                     l4303:
  2508                           
  2509                           ;Master_PIC.c: 343:     division(sum);
  2510  0B4C  086C               	movf	_sum,w
  2511  0B4D  160A  118A  2527  120A  158A  	fcall	_division
  2512  0B52                     l4305:
  2513                           
  2514                           ;Master_PIC.c: 344:     LCD_Set_Cursor(4, 10);
  2515  0B52  300A               	movlw	10
  2516  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  2518  0B55  00E7               	movwf	??_LCD_Send
  2519  0B56  0867               	movf	??_LCD_Send,w
  2520  0B57  00A4               	movwf	LCD_Set_Cursor@COL
  2521  0B58  3004               	movlw	4
  2522  0B59  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2523  0B5E                     l4307:
  2524                           
  2525                           ;Master_PIC.c: 345:     LCD_Write_Char(hundreds);
  2526  0B5E  0879               	movf	_hundreds,w
  2527  0B5F  160A  118A  2314  120A  158A  	fcall	_LCD_Write_Char
  2528  0B64                     l4309:
  2529                           
  2530                           ;Master_PIC.c: 346:     LCD_Set_Cursor(4, 11);
  2531  0B64  300B               	movlw	11
  2532  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0B66  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0B67  00E7               	movwf	??_LCD_Send
  2535  0B68  0867               	movf	??_LCD_Send,w
  2536  0B69  00A4               	movwf	LCD_Set_Cursor@COL
  2537  0B6A  3004               	movlw	4
  2538  0B6B  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2539  0B70                     l4311:
  2540                           
  2541                           ;Master_PIC.c: 347:     LCD_Write_Char(46);
  2542  0B70  302E               	movlw	46
  2543  0B71  160A  118A  2314  120A  158A  	fcall	_LCD_Write_Char
  2544  0B76                     l4313:
  2545                           
  2546                           ;Master_PIC.c: 348:     LCD_Set_Cursor(4, 12);
  2547  0B76  300C               	movlw	12
  2548  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0B79  00E7               	movwf	??_LCD_Send
  2551  0B7A  0867               	movf	??_LCD_Send,w
  2552  0B7B  00A4               	movwf	LCD_Set_Cursor@COL
  2553  0B7C  3004               	movlw	4
  2554  0B7D  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2555  0B82                     l4315:
  2556                           
  2557                           ;Master_PIC.c: 349:     LCD_Write_Char(tens);
  2558  0B82  0877               	movf	_tens,w
  2559  0B83  160A  118A  2314  120A  158A  	fcall	_LCD_Write_Char
  2560  0B88                     l4317:
  2561                           
  2562                           ;Master_PIC.c: 350:     LCD_Set_Cursor(4, 13);
  2563  0B88  300D               	movlw	13
  2564  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  2565  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  2566  0B8B  00E7               	movwf	??_LCD_Send
  2567  0B8C  0867               	movf	??_LCD_Send,w
  2568  0B8D  00A4               	movwf	LCD_Set_Cursor@COL
  2569  0B8E  3004               	movlw	4
  2570  0B8F  160A  118A  23AE  120A  158A  	fcall	_LCD_Set_Cursor
  2571  0B94                     l4319:
  2572                           
  2573                           ;Master_PIC.c: 351:     LCD_Write_Char(units);
  2574  0B94  0876               	movf	_units,w
  2575  0B95  160A  118A  2314  120A  158A  	fcall	_LCD_Write_Char
  2576  0B9A                     l193:
  2577  0B9A  0008               	return
  2578  0B9B                     __end_of_LCD_Send:
  2579                           
  2580                           	psect	text7
  2581  1527                     __ptext7:	
  2582 ;; *************** function _division *****************
  2583 ;; Defined at:
  2584 ;;		line 417 in file "Master_PIC.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  valor           1    wreg     unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  valor           1    5[COMMON] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0
  2600 ;;      Temps:          0       3       0       0       0
  2601 ;;      Totals:         1       3       0       0       0
  2602 ;;Total ram usage:        4 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 2
  2605 ;; This function calls:
  2606 ;;		___awdiv
  2607 ;;		___awmod
  2608 ;; This function is called by:
  2609 ;;		_Text
  2610 ;;		_LCD_Send
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _division
  2616  1527                     _division:
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2620                           ;division@valor stored from wreg
  2621  1527  00F5               	movwf	division@valor
  2622  1528                     l4063:
  2623                           
  2624                           ;Master_PIC.c: 418:     hundreds = valor/100;
  2625  1528  3064               	movlw	100
  2626  1529  1283               	bcf	3,5	;RP0=0, select bank0
  2627  152A  1303               	bcf	3,6	;RP1=0, select bank0
  2628  152B  00A0               	movwf	___awdiv@divisor
  2629  152C  3000               	movlw	0
  2630  152D  00A1               	movwf	___awdiv@divisor+1
  2631  152E  0875               	movf	division@valor,w
  2632  152F  00A8               	movwf	??_division
  2633  1530  01A9               	clrf	??_division+1
  2634  1531  0828               	movf	??_division,w
  2635  1532  00A2               	movwf	___awdiv@dividend
  2636  1533  0829               	movf	??_division+1,w
  2637  1534  00A3               	movwf	___awdiv@dividend+1
  2638  1535  120A  158A  2001  160A  118A  	fcall	___awdiv
  2639  153A  1283               	bcf	3,5	;RP0=0, select bank0
  2640  153B  1303               	bcf	3,6	;RP1=0, select bank0
  2641  153C  0820               	movf	?___awdiv,w
  2642  153D  00AA               	movwf	??_division+2
  2643  153E  082A               	movf	??_division+2,w
  2644  153F  00F9               	movwf	_hundreds
  2645                           
  2646                           ;Master_PIC.c: 419:     residuo = valor%100;
  2647  1540  3064               	movlw	100
  2648  1541  00A0               	movwf	___awmod@divisor
  2649  1542  3000               	movlw	0
  2650  1543  00A1               	movwf	___awmod@divisor+1
  2651  1544  0875               	movf	division@valor,w
  2652  1545  00A8               	movwf	??_division
  2653  1546  01A9               	clrf	??_division+1
  2654  1547  0828               	movf	??_division,w
  2655  1548  00A2               	movwf	___awmod@dividend
  2656  1549  0829               	movf	??_division+1,w
  2657  154A  00A3               	movwf	___awmod@dividend+1
  2658  154B  160A  118A  2467  160A  118A  	fcall	___awmod
  2659  1550  1283               	bcf	3,5	;RP0=0, select bank0
  2660  1551  1303               	bcf	3,6	;RP1=0, select bank0
  2661  1552  0820               	movf	?___awmod,w
  2662  1553  00AA               	movwf	??_division+2
  2663  1554  082A               	movf	??_division+2,w
  2664  1555  00F8               	movwf	_residuo
  2665                           
  2666                           ;Master_PIC.c: 420:     tens = residuo/10;
  2667  1556  300A               	movlw	10
  2668  1557  00A0               	movwf	___awdiv@divisor
  2669  1558  3000               	movlw	0
  2670  1559  00A1               	movwf	___awdiv@divisor+1
  2671  155A  0878               	movf	_residuo,w
  2672  155B  00A8               	movwf	??_division
  2673  155C  01A9               	clrf	??_division+1
  2674  155D  0828               	movf	??_division,w
  2675  155E  00A2               	movwf	___awdiv@dividend
  2676  155F  0829               	movf	??_division+1,w
  2677  1560  00A3               	movwf	___awdiv@dividend+1
  2678  1561  120A  158A  2001  160A  118A  	fcall	___awdiv
  2679  1566  1283               	bcf	3,5	;RP0=0, select bank0
  2680  1567  1303               	bcf	3,6	;RP1=0, select bank0
  2681  1568  0820               	movf	?___awdiv,w
  2682  1569  00AA               	movwf	??_division+2
  2683  156A  082A               	movf	??_division+2,w
  2684  156B  00F7               	movwf	_tens
  2685                           
  2686                           ;Master_PIC.c: 421:     units = residuo%10;
  2687  156C  300A               	movlw	10
  2688  156D  00A0               	movwf	___awmod@divisor
  2689  156E  3000               	movlw	0
  2690  156F  00A1               	movwf	___awmod@divisor+1
  2691  1570  0878               	movf	_residuo,w
  2692  1571  00A8               	movwf	??_division
  2693  1572  01A9               	clrf	??_division+1
  2694  1573  0828               	movf	??_division,w
  2695  1574  00A2               	movwf	___awmod@dividend
  2696  1575  0829               	movf	??_division+1,w
  2697  1576  00A3               	movwf	___awmod@dividend+1
  2698  1577  160A  118A  2467  160A  118A  	fcall	___awmod
  2699  157C  1283               	bcf	3,5	;RP0=0, select bank0
  2700  157D  1303               	bcf	3,6	;RP1=0, select bank0
  2701  157E  0820               	movf	?___awmod,w
  2702  157F  00AA               	movwf	??_division+2
  2703  1580  082A               	movf	??_division+2,w
  2704  1581  00F6               	movwf	_units
  2705  1582                     l4065:
  2706                           
  2707                           ;Master_PIC.c: 423:     hundreds = hundreds + 48;
  2708  1582  0879               	movf	_hundreds,w
  2709  1583  3E30               	addlw	48
  2710  1584  00A8               	movwf	??_division
  2711  1585  0828               	movf	??_division,w
  2712  1586  00F9               	movwf	_hundreds
  2713  1587                     l4067:
  2714                           
  2715                           ;Master_PIC.c: 424:     tens = tens + 48;
  2716  1587  0877               	movf	_tens,w
  2717  1588  3E30               	addlw	48
  2718  1589  00A8               	movwf	??_division
  2719  158A  0828               	movf	??_division,w
  2720  158B  00F7               	movwf	_tens
  2721  158C                     l4069:
  2722                           
  2723                           ;Master_PIC.c: 425:     units = units + 48;
  2724  158C  0876               	movf	_units,w
  2725  158D  3E30               	addlw	48
  2726  158E  00A8               	movwf	??_division
  2727  158F  0828               	movf	??_division,w
  2728  1590  00F6               	movwf	_units
  2729  1591                     l222:
  2730  1591  0008               	return
  2731  1592                     __end_of_division:
  2732                           
  2733                           	psect	text8
  2734  1467                     __ptext8:	
  2735 ;; *************** function ___awmod *****************
  2736 ;; Defined at:
  2737 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  divisor         2    0[BANK0 ] int 
  2740 ;;  dividend        2    2[BANK0 ] int 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  sign            1    5[BANK0 ] unsigned char 
  2743 ;;  counter         1    4[BANK0 ] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[BANK0 ] int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         0       4       0       0       0
  2754 ;;      Locals:         0       2       0       0       0
  2755 ;;      Temps:          1       0       0       0       0
  2756 ;;      Totals:         1       6       0       0       0
  2757 ;;Total ram usage:        7 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; Hardware stack levels required when called: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_division
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function ___awmod
  2769  1467                     ___awmod:
  2770  1467                     l3637:	
  2771                           ;incstack = 0
  2772                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2773                           
  2774  1467  1283               	bcf	3,5	;RP0=0, select bank0
  2775  1468  1303               	bcf	3,6	;RP1=0, select bank0
  2776  1469  01A5               	clrf	___awmod@sign
  2777  146A                     l3639:
  2778  146A  1FA3               	btfss	___awmod@dividend+1,7
  2779  146B  2C6D               	goto	u4661
  2780  146C  2C6E               	goto	u4660
  2781  146D                     u4661:
  2782  146D  2C75               	goto	l3645
  2783  146E                     u4660:
  2784  146E                     l3641:
  2785  146E  09A2               	comf	___awmod@dividend,f
  2786  146F  09A3               	comf	___awmod@dividend+1,f
  2787  1470  0AA2               	incf	___awmod@dividend,f
  2788  1471  1903               	skipnz
  2789  1472  0AA3               	incf	___awmod@dividend+1,f
  2790  1473                     l3643:
  2791  1473  01A5               	clrf	___awmod@sign
  2792  1474  0AA5               	incf	___awmod@sign,f
  2793  1475                     l3645:
  2794  1475  1FA1               	btfss	___awmod@divisor+1,7
  2795  1476  2C78               	goto	u4671
  2796  1477  2C79               	goto	u4670
  2797  1478                     u4671:
  2798  1478  2C7E               	goto	l3649
  2799  1479                     u4670:
  2800  1479                     l3647:
  2801  1479  09A0               	comf	___awmod@divisor,f
  2802  147A  09A1               	comf	___awmod@divisor+1,f
  2803  147B  0AA0               	incf	___awmod@divisor,f
  2804  147C  1903               	skipnz
  2805  147D  0AA1               	incf	___awmod@divisor+1,f
  2806  147E                     l3649:
  2807  147E  0820               	movf	___awmod@divisor,w
  2808  147F  0421               	iorwf	___awmod@divisor+1,w
  2809  1480  1903               	btfsc	3,2
  2810  1481  2C83               	goto	u4681
  2811  1482  2C84               	goto	u4680
  2812  1483                     u4681:
  2813  1483  2CB3               	goto	l3667
  2814  1484                     u4680:
  2815  1484                     l3651:
  2816  1484  01A4               	clrf	___awmod@counter
  2817  1485  0AA4               	incf	___awmod@counter,f
  2818  1486  2C92               	goto	l3657
  2819  1487                     l3653:
  2820  1487  3001               	movlw	1
  2821  1488                     u4695:
  2822  1488  1003               	clrc
  2823  1489  0DA0               	rlf	___awmod@divisor,f
  2824  148A  0DA1               	rlf	___awmod@divisor+1,f
  2825  148B  3EFF               	addlw	-1
  2826  148C  1D03               	skipz
  2827  148D  2C88               	goto	u4695
  2828  148E                     l3655:
  2829  148E  3001               	movlw	1
  2830  148F  00F4               	movwf	??___awmod
  2831  1490  0874               	movf	??___awmod,w
  2832  1491  07A4               	addwf	___awmod@counter,f
  2833  1492                     l3657:
  2834  1492  1FA1               	btfss	___awmod@divisor+1,7
  2835  1493  2C95               	goto	u4701
  2836  1494  2C96               	goto	u4700
  2837  1495                     u4701:
  2838  1495  2C87               	goto	l3653
  2839  1496                     u4700:
  2840  1496                     l3659:
  2841  1496  0821               	movf	___awmod@divisor+1,w
  2842  1497  0223               	subwf	___awmod@dividend+1,w
  2843  1498  1D03               	skipz
  2844  1499  2C9C               	goto	u4715
  2845  149A  0820               	movf	___awmod@divisor,w
  2846  149B  0222               	subwf	___awmod@dividend,w
  2847  149C                     u4715:
  2848  149C  1C03               	skipc
  2849  149D  2C9F               	goto	u4711
  2850  149E  2CA0               	goto	u4710
  2851  149F                     u4711:
  2852  149F  2CA6               	goto	l3663
  2853  14A0                     u4710:
  2854  14A0                     l3661:
  2855  14A0  0820               	movf	___awmod@divisor,w
  2856  14A1  02A2               	subwf	___awmod@dividend,f
  2857  14A2  0821               	movf	___awmod@divisor+1,w
  2858  14A3  1C03               	skipc
  2859  14A4  03A3               	decf	___awmod@dividend+1,f
  2860  14A5  02A3               	subwf	___awmod@dividend+1,f
  2861  14A6                     l3663:
  2862  14A6  3001               	movlw	1
  2863  14A7                     u4725:
  2864  14A7  1003               	clrc
  2865  14A8  0CA1               	rrf	___awmod@divisor+1,f
  2866  14A9  0CA0               	rrf	___awmod@divisor,f
  2867  14AA  3EFF               	addlw	-1
  2868  14AB  1D03               	skipz
  2869  14AC  2CA7               	goto	u4725
  2870  14AD                     l3665:
  2871  14AD  3001               	movlw	1
  2872  14AE  02A4               	subwf	___awmod@counter,f
  2873  14AF  1D03               	btfss	3,2
  2874  14B0  2CB2               	goto	u4731
  2875  14B1  2CB3               	goto	u4730
  2876  14B2                     u4731:
  2877  14B2  2C96               	goto	l3659
  2878  14B3                     u4730:
  2879  14B3                     l3667:
  2880  14B3  0825               	movf	___awmod@sign,w
  2881  14B4  1903               	btfsc	3,2
  2882  14B5  2CB7               	goto	u4741
  2883  14B6  2CB8               	goto	u4740
  2884  14B7                     u4741:
  2885  14B7  2CBD               	goto	l3671
  2886  14B8                     u4740:
  2887  14B8                     l3669:
  2888  14B8  09A2               	comf	___awmod@dividend,f
  2889  14B9  09A3               	comf	___awmod@dividend+1,f
  2890  14BA  0AA2               	incf	___awmod@dividend,f
  2891  14BB  1903               	skipnz
  2892  14BC  0AA3               	incf	___awmod@dividend+1,f
  2893  14BD                     l3671:
  2894  14BD  0823               	movf	___awmod@dividend+1,w
  2895  14BE  00A1               	movwf	?___awmod+1
  2896  14BF  0822               	movf	___awmod@dividend,w
  2897  14C0  00A0               	movwf	?___awmod
  2898  14C1                     l619:
  2899  14C1  0008               	return
  2900  14C2                     __end_of___awmod:
  2901                           
  2902                           	psect	text9
  2903  129B                     __ptext9:	
  2904 ;; *************** function ___bmul *****************
  2905 ;; Defined at:
  2906 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  multiplier      1    wreg     unsigned char 
  2909 ;;  multiplicand    1    4[COMMON] unsigned char 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2912 ;;  product         1    0[BANK0 ] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      unsigned char 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2922 ;;      Params:         1       0       0       0       0
  2923 ;;      Locals:         0       2       0       0       0
  2924 ;;      Temps:          1       0       0       0       0
  2925 ;;      Totals:         2       2       0       0       0
  2926 ;;Total ram usage:        4 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_LCD_Send
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function ___bmul
  2938  129B                     ___bmul:
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2942                           ;___bmul@multiplier stored from wreg
  2943  129B  1283               	bcf	3,5	;RP0=0, select bank0
  2944  129C  1303               	bcf	3,6	;RP1=0, select bank0
  2945  129D  00A1               	movwf	___bmul@multiplier
  2946  129E                     l4235:
  2947  129E  01A0               	clrf	___bmul@product
  2948  129F                     l4237:
  2949  129F  1C21               	btfss	___bmul@multiplier,0
  2950  12A0  2AA2               	goto	u5851
  2951  12A1  2AA3               	goto	u5850
  2952  12A2                     u5851:
  2953  12A2  2AA7               	goto	l4241
  2954  12A3                     u5850:
  2955  12A3                     l4239:
  2956  12A3  0874               	movf	___bmul@multiplicand,w
  2957  12A4  00F5               	movwf	??___bmul
  2958  12A5  0875               	movf	??___bmul,w
  2959  12A6  07A0               	addwf	___bmul@product,f
  2960  12A7                     l4241:
  2961  12A7  1003               	clrc
  2962  12A8  0DF4               	rlf	___bmul@multiplicand,f
  2963  12A9                     l4243:
  2964  12A9  1003               	clrc
  2965  12AA  0CA1               	rrf	___bmul@multiplier,f
  2966  12AB  0821               	movf	___bmul@multiplier,w
  2967  12AC  1D03               	btfss	3,2
  2968  12AD  2AAF               	goto	u5861
  2969  12AE  2AB0               	goto	u5860
  2970  12AF                     u5861:
  2971  12AF  2A9F               	goto	l4237
  2972  12B0                     u5860:
  2973  12B0                     l4245:
  2974  12B0  0820               	movf	___bmul@product,w
  2975  12B1                     l479:
  2976  12B1  0008               	return
  2977  12B2                     __end_of___bmul:
  2978                           
  2979                           	psect	text10
  2980  1421                     __ptext10:	
  2981 ;; *************** function _LCD_Write_String *****************
  2982 ;; Defined at:
  2983 ;;		line 176 in file "I2C_Master.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  Str             2    4[BANK0 ] PTR unsigned char 
  2986 ;;		 -> converted03(10), converted02(10), converted01(10), STR_4(10), 
  2987 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  i               2    9[BANK0 ] int 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       2       0       0       0
  3000 ;;      Locals:         0       2       0       0       0
  3001 ;;      Temps:          0       3       0       0       0
  3002 ;;      Totals:         0       7       0       0       0
  3003 ;;Total ram usage:        7 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 6
  3006 ;; This function calls:
  3007 ;;		_LCD_Write_Char
  3008 ;; This function is called by:
  3009 ;;		_LCD_Start
  3010 ;;		_LCD_Send
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           
  3015                           ;psect for function _LCD_Write_String
  3016  1421                     _LCD_Write_String:
  3017  1421                     l4125:	
  3018                           ;incstack = 0
  3019 ;; using string table level
  3020                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3021                           
  3022                           
  3023                           ;I2C_Master.c: 176: void LCD_Write_String(char* Str);I2C_Master.c: 177: {;I2C_Master.c: 
      +                          178:     for(int i=0; Str[i]!='\0'; i++)
  3024  1421  1283               	bcf	3,5	;RP0=0, select bank0
  3025  1422  1303               	bcf	3,6	;RP1=0, select bank0
  3026  1423  01A9               	clrf	LCD_Write_String@i
  3027  1424  01AA               	clrf	LCD_Write_String@i+1
  3028  1425  2C4A               	goto	l4131
  3029  1426                     l4127:
  3030                           
  3031                           ;I2C_Master.c: 179:        LCD_Write_Char(Str[i]);
  3032  1426  0829               	movf	LCD_Write_String@i,w
  3033  1427  0724               	addwf	LCD_Write_String@Str,w
  3034  1428  00A7               	movwf	??_LCD_Write_String+1
  3035  1429  0825               	movf	LCD_Write_String@Str+1,w
  3036  142A  00A6               	movwf	??_LCD_Write_String
  3037  142B  1803               	skipnc
  3038  142C  0AA6               	incf	??_LCD_Write_String,f
  3039  142D  1FA9               	btfss	LCD_Write_String@i,7
  3040  142E  2C30               	goto	u5730
  3041  142F  03A6               	decf	??_LCD_Write_String,f
  3042  1430                     u5730:
  3043  1430  1283               	bcf	3,5	;RP0=0, select bank0
  3044  1431  1303               	bcf	3,6	;RP1=0, select bank0
  3045  1432  0826               	movf	??_LCD_Write_String,w
  3046  1433  00A8               	movwf	??_LCD_Write_String+2
  3047  1434  0828               	movf	??_LCD_Write_String+2,w
  3048  1435  00FF               	movwf	btemp+1
  3049  1436  0827               	movf	??_LCD_Write_String+1,w
  3050  1437  0084               	movwf	4
  3051  1438  160A  118A  2000  160A  118A  	fcall	stringtab
  3052  143D  160A  118A  2314  160A  118A  	fcall	_LCD_Write_Char
  3053  1442                     l4129:
  3054  1442  3001               	movlw	1
  3055  1443  1283               	bcf	3,5	;RP0=0, select bank0
  3056  1444  1303               	bcf	3,6	;RP1=0, select bank0
  3057  1445  07A9               	addwf	LCD_Write_String@i,f
  3058  1446  1803               	skipnc
  3059  1447  0AAA               	incf	LCD_Write_String@i+1,f
  3060  1448  3000               	movlw	0
  3061  1449  07AA               	addwf	LCD_Write_String@i+1,f
  3062  144A                     l4131:
  3063  144A  0829               	movf	LCD_Write_String@i,w
  3064  144B  0724               	addwf	LCD_Write_String@Str,w
  3065  144C  00A7               	movwf	??_LCD_Write_String+1
  3066  144D  0825               	movf	LCD_Write_String@Str+1,w
  3067  144E  00A6               	movwf	??_LCD_Write_String
  3068  144F  1803               	skipnc
  3069  1450  0AA6               	incf	??_LCD_Write_String,f
  3070  1451  1FA9               	btfss	LCD_Write_String@i,7
  3071  1452  2C54               	goto	u5740
  3072  1453  03A6               	decf	??_LCD_Write_String,f
  3073  1454                     u5740:
  3074  1454  1283               	bcf	3,5	;RP0=0, select bank0
  3075  1455  1303               	bcf	3,6	;RP1=0, select bank0
  3076  1456  0826               	movf	??_LCD_Write_String,w
  3077  1457  00A8               	movwf	??_LCD_Write_String+2
  3078  1458  0828               	movf	??_LCD_Write_String+2,w
  3079  1459  00FF               	movwf	btemp+1
  3080  145A  0827               	movf	??_LCD_Write_String+1,w
  3081  145B  0084               	movwf	4
  3082  145C  160A  118A  2000  160A  118A  	fcall	stringtab
  3083  1461  3A00               	xorlw	0
  3084  1462  1D03               	skipz
  3085  1463  2C65               	goto	u5751
  3086  1464  2C66               	goto	u5750
  3087  1465                     u5751:
  3088  1465  2C26               	goto	l4127
  3089  1466                     u5750:
  3090  1466                     l343:
  3091  1466  0008               	return
  3092  1467                     __end_of_LCD_Write_String:
  3093                           
  3094                           	psect	text11
  3095  1314                     __ptext11:	
  3096 ;; *************** function _LCD_Write_Char *****************
  3097 ;; Defined at:
  3098 ;;		line 169 in file "I2C_Master.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  Data            1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  Data            1    3[BANK0 ] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, pclath, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         0       1       0       0       0
  3114 ;;      Temps:          0       1       0       0       0
  3115 ;;      Totals:         0       2       0       0       0
  3116 ;;Total ram usage:        2 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 5
  3119 ;; This function calls:
  3120 ;;		_LCD_Write_4Bit
  3121 ;; This function is called by:
  3122 ;;		_LCD_Send
  3123 ;;		_LCD_Write_String
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           
  3128                           ;psect for function _LCD_Write_Char
  3129  1314                     _LCD_Write_Char:
  3130                           
  3131                           ;incstack = 0
  3132                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3133                           ;LCD_Write_Char@Data stored from wreg
  3134  1314  1283               	bcf	3,5	;RP0=0, select bank0
  3135  1315  1303               	bcf	3,6	;RP1=0, select bank0
  3136  1316  00A3               	movwf	LCD_Write_Char@Data
  3137  1317                     l3569:
  3138                           
  3139                           ;I2C_Master.c: 169: void LCD_Write_Char(char Data);I2C_Master.c: 170: {;I2C_Master.c: 17
      +                          1:   RS = 1;
  3140  1317  1683               	bsf	3,5	;RP0=1, select bank1
  3141  1318  1303               	bcf	3,6	;RP1=0, select bank1
  3142  1319  01AF               	clrf	_RS^(0+128)
  3143  131A  0AAF               	incf	_RS^(0+128),f
  3144  131B                     l3571:
  3145                           
  3146                           ;I2C_Master.c: 172:   LCD_Write_4Bit(Data & 0xF0);
  3147  131B  1283               	bcf	3,5	;RP0=0, select bank0
  3148  131C  1303               	bcf	3,6	;RP1=0, select bank0
  3149  131D  0823               	movf	LCD_Write_Char@Data,w
  3150  131E  39F0               	andlw	240
  3151  131F  160A  118A  22F1  160A  118A  	fcall	_LCD_Write_4Bit
  3152                           
  3153                           ;I2C_Master.c: 173:   LCD_Write_4Bit((Data << 4) & 0xF0);
  3154  1324  1283               	bcf	3,5	;RP0=0, select bank0
  3155  1325  1303               	bcf	3,6	;RP1=0, select bank0
  3156  1326  0823               	movf	LCD_Write_Char@Data,w
  3157  1327  00A2               	movwf	??_LCD_Write_Char
  3158  1328  3003               	movlw	3
  3159  1329                     u4505:
  3160  1329  1003               	clrc
  3161  132A  0DA2               	rlf	??_LCD_Write_Char,f
  3162  132B  3EFF               	addlw	-1
  3163  132C  1D03               	skipz
  3164  132D  2B29               	goto	u4505
  3165  132E  1003               	clrc
  3166  132F  0D22               	rlf	??_LCD_Write_Char,w
  3167  1330  39F0               	andlw	240
  3168  1331  160A  118A  22F1  160A  118A  	fcall	_LCD_Write_4Bit
  3169  1336                     l337:
  3170  1336  0008               	return
  3171  1337                     __end_of_LCD_Write_Char:
  3172                           
  3173                           	psect	text12
  3174  13AE                     __ptext12:	
  3175 ;; *************** function _LCD_Set_Cursor *****************
  3176 ;; Defined at:
  3177 ;;		line 182 in file "I2C_Master.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  ROW             1    wreg     unsigned char 
  3180 ;;  COL             1    4[BANK0 ] unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  ROW             1    7[BANK0 ] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      void 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3192 ;;      Params:         0       1       0       0       0
  3193 ;;      Locals:         0       1       0       0       0
  3194 ;;      Temps:          0       2       0       0       0
  3195 ;;      Totals:         0       4       0       0       0
  3196 ;;Total ram usage:        4 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 6
  3199 ;; This function calls:
  3200 ;;		_LCD_CMD
  3201 ;; This function is called by:
  3202 ;;		_LCD_Start
  3203 ;;		_LCD_Send
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           
  3208                           ;psect for function _LCD_Set_Cursor
  3209  13AE                     _LCD_Set_Cursor:
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3213                           ;LCD_Set_Cursor@ROW stored from wreg
  3214  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  3215  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  3216  13B0  00A7               	movwf	LCD_Set_Cursor@ROW
  3217  13B1                     l4107:
  3218                           
  3219                           ;I2C_Master.c: 182: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_Master
      +                          .c: 183: {;I2C_Master.c: 184:   switch(ROW)
  3220  13B1  2BD2               	goto	l4117
  3221  13B2                     l4109:
  3222                           
  3223                           ;I2C_Master.c: 187:       LCD_CMD(0xC0 + COL-1);
  3224  13B2  0824               	movf	LCD_Set_Cursor@COL,w
  3225  13B3  3EBF               	addlw	191
  3226  13B4  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  3227                           
  3228                           ;I2C_Master.c: 188:       break;
  3229  13B9  2BE5               	goto	l352
  3230  13BA                     l4111:
  3231                           
  3232                           ;I2C_Master.c: 190:       LCD_CMD(0x94 + COL-1);
  3233  13BA  0824               	movf	LCD_Set_Cursor@COL,w
  3234  13BB  3E93               	addlw	147
  3235  13BC  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  3236                           
  3237                           ;I2C_Master.c: 191:       break;
  3238  13C1  2BE5               	goto	l352
  3239  13C2                     l4113:
  3240                           
  3241                           ;I2C_Master.c: 193:       LCD_CMD(0xD4 + COL-1);
  3242  13C2  0824               	movf	LCD_Set_Cursor@COL,w
  3243  13C3  3ED3               	addlw	211
  3244  13C4  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  3245                           
  3246                           ;I2C_Master.c: 194:       break;
  3247  13C9  2BE5               	goto	l352
  3248  13CA                     l4115:
  3249                           
  3250                           ;I2C_Master.c: 197:       LCD_CMD(0x80 + COL-1);
  3251  13CA  0824               	movf	LCD_Set_Cursor@COL,w
  3252  13CB  3E7F               	addlw	127
  3253  13CC  160A  118A  22CF  160A  118A  	fcall	_LCD_CMD
  3254                           
  3255                           ;I2C_Master.c: 198:   }
  3256  13D1  2BE5               	goto	l352
  3257  13D2                     l4117:
  3258  13D2  0827               	movf	LCD_Set_Cursor@ROW,w
  3259  13D3  00A5               	movwf	??_LCD_Set_Cursor
  3260  13D4  01A6               	clrf	??_LCD_Set_Cursor+1
  3261                           
  3262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 1, Range of values is 0 to 0
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            4     3 (average)
  3268                           ; direct_byte           11     8 (fixed)
  3269                           ; jumptable            260     6 (fixed)
  3270                           ;	Chosen strategy is simple_byte
  3271  13D5  0826               	movf	??_LCD_Set_Cursor+1,w
  3272  13D6  3A00               	xorlw	0	; case 0
  3273  13D7  1903               	skipnz
  3274  13D8  2BDA               	goto	l4449
  3275  13D9  2BCA               	goto	l4115
  3276  13DA                     l4449:
  3277                           
  3278                           ; Switch size 1, requested type "simple"
  3279                           ; Number of cases is 3, Range of values is 2 to 4
  3280                           ; switch strategies available:
  3281                           ; Name         Instructions Cycles
  3282                           ; simple_byte           10     6 (average)
  3283                           ; direct_byte           20    11 (fixed)
  3284                           ; jumptable            263     9 (fixed)
  3285                           ;	Chosen strategy is simple_byte
  3286  13DA  0825               	movf	??_LCD_Set_Cursor,w
  3287  13DB  3A02               	xorlw	2	; case 2
  3288  13DC  1903               	skipnz
  3289  13DD  2BB2               	goto	l4109
  3290  13DE  3A01               	xorlw	1	; case 3
  3291  13DF  1903               	skipnz
  3292  13E0  2BBA               	goto	l4111
  3293  13E1  3A07               	xorlw	7	; case 4
  3294  13E2  1903               	skipnz
  3295  13E3  2BC2               	goto	l4113
  3296  13E4  2BCA               	goto	l4115
  3297  13E5                     l352:
  3298  13E5  0008               	return
  3299  13E6                     __end_of_LCD_Set_Cursor:
  3300                           
  3301                           	psect	text13
  3302  12CF                     __ptext13:	
  3303 ;; *************** function _LCD_CMD *****************
  3304 ;; Defined at:
  3305 ;;		line 162 in file "I2C_Master.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  CMD             1    wreg     unsigned char 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  CMD             1    3[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       0       0       0       0
  3320 ;;      Locals:         0       1       0       0       0
  3321 ;;      Temps:          0       1       0       0       0
  3322 ;;      Totals:         0       2       0       0       0
  3323 ;;Total ram usage:        2 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 5
  3326 ;; This function calls:
  3327 ;;		_LCD_Write_4Bit
  3328 ;; This function is called by:
  3329 ;;		_LCD_Init
  3330 ;;		_LCD_Set_Cursor
  3331 ;;		_LCD_SL
  3332 ;;		_LCD_SR
  3333 ;;		_LCD_Clear
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           
  3338                           ;psect for function _LCD_CMD
  3339  12CF                     _LCD_CMD:
  3340                           
  3341                           ;incstack = 0
  3342                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3343                           ;LCD_CMD@CMD stored from wreg
  3344  12CF  1283               	bcf	3,5	;RP0=0, select bank0
  3345  12D0  1303               	bcf	3,6	;RP1=0, select bank0
  3346  12D1  00A3               	movwf	LCD_CMD@CMD
  3347  12D2                     l3573:
  3348                           
  3349                           ;I2C_Master.c: 162: void LCD_CMD(unsigned char CMD);I2C_Master.c: 163: {;I2C_Master.c: 1
      +                          64:   RS = 0;
  3350  12D2  1683               	bsf	3,5	;RP0=1, select bank1
  3351  12D3  1303               	bcf	3,6	;RP1=0, select bank1
  3352  12D4  01AF               	clrf	_RS^(0+128)
  3353  12D5                     l3575:
  3354                           
  3355                           ;I2C_Master.c: 165:   LCD_Write_4Bit(CMD & 0xF0);
  3356  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  3357  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  3358  12D7  0823               	movf	LCD_CMD@CMD,w
  3359  12D8  39F0               	andlw	240
  3360  12D9  160A  118A  22F1  160A  118A  	fcall	_LCD_Write_4Bit
  3361  12DE                     l3577:
  3362                           
  3363                           ;I2C_Master.c: 166:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3364  12DE  1283               	bcf	3,5	;RP0=0, select bank0
  3365  12DF  1303               	bcf	3,6	;RP1=0, select bank0
  3366  12E0  0823               	movf	LCD_CMD@CMD,w
  3367  12E1  00A2               	movwf	??_LCD_CMD
  3368  12E2  3003               	movlw	3
  3369  12E3                     u4515:
  3370  12E3  1003               	clrc
  3371  12E4  0DA2               	rlf	??_LCD_CMD,f
  3372  12E5  3EFF               	addlw	-1
  3373  12E6  1D03               	skipz
  3374  12E7  2AE3               	goto	u4515
  3375  12E8  1003               	clrc
  3376  12E9  0D22               	rlf	??_LCD_CMD,w
  3377  12EA  39F0               	andlw	240
  3378  12EB  160A  118A  22F1  160A  118A  	fcall	_LCD_Write_4Bit
  3379  12F0                     l334:
  3380  12F0  0008               	return
  3381  12F1                     __end_of_LCD_CMD:
  3382                           
  3383                           	psect	text14
  3384  12F1                     __ptext14:	
  3385 ;; *************** function _LCD_Write_4Bit *****************
  3386 ;; Defined at:
  3387 ;;		line 153 in file "I2C_Master.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  Nibble          1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  Nibble          1    1[BANK0 ] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, pclath, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         0       1       0       0       0
  3403 ;;      Temps:          0       1       0       0       0
  3404 ;;      Totals:         0       2       0       0       0
  3405 ;;Total ram usage:        2 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 4
  3408 ;; This function calls:
  3409 ;;		_IO_Expander_Write
  3410 ;; This function is called by:
  3411 ;;		_LCD_CMD
  3412 ;;		_LCD_Write_Char
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416                           
  3417                           ;psect for function _LCD_Write_4Bit
  3418  12F1                     _LCD_Write_4Bit:
  3419                           
  3420                           ;incstack = 0
  3421                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3422                           ;LCD_Write_4Bit@Nibble stored from wreg
  3423  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  3424  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  3425  12F3  00A1               	movwf	LCD_Write_4Bit@Nibble
  3426  12F4                     l3355:
  3427                           
  3428                           ;I2C_Master.c: 153: void LCD_Write_4Bit(unsigned char Nibble);I2C_Master.c: 154: {;I2C_M
      +                          aster.c: 156:   Nibble |= RS;
  3429  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  3430  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  3431  12F6  082F               	movf	_RS^(0+128),w
  3432  12F7  1283               	bcf	3,5	;RP0=0, select bank0
  3433  12F8  1303               	bcf	3,6	;RP1=0, select bank0
  3434  12F9  00A0               	movwf	??_LCD_Write_4Bit
  3435  12FA  0820               	movf	??_LCD_Write_4Bit,w
  3436  12FB  04A1               	iorwf	LCD_Write_4Bit@Nibble,f
  3437  12FC                     l3357:
  3438                           
  3439                           ;I2C_Master.c: 157:   IO_Expander_Write(Nibble | 0x04);
  3440  12FC  0821               	movf	LCD_Write_4Bit@Nibble,w
  3441  12FD  3804               	iorlw	4
  3442  12FE  160A  118A  22B2  160A  118A  	fcall	_IO_Expander_Write
  3443  1303                     l3359:
  3444                           
  3445                           ;I2C_Master.c: 158:   IO_Expander_Write(Nibble & 0xFB);
  3446  1303  1283               	bcf	3,5	;RP0=0, select bank0
  3447  1304  1303               	bcf	3,6	;RP1=0, select bank0
  3448  1305  0821               	movf	LCD_Write_4Bit@Nibble,w
  3449  1306  39FB               	andlw	251
  3450  1307  160A  118A  22B2  160A  118A  	fcall	_IO_Expander_Write
  3451                           
  3452                           ;I2C_Master.c: 159:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  3453  130C  3020               	movlw	32
  3454  130D  1283               	bcf	3,5	;RP0=0, select bank0
  3455  130E  1303               	bcf	3,6	;RP1=0, select bank0
  3456  130F  00A0               	movwf	??_LCD_Write_4Bit
  3457  1310                     u6117:
  3458  1310  0BA0               	decfsz	??_LCD_Write_4Bit,f
  3459  1311  2B10               	goto	u6117
  3460  1312  0000               	nop
  3461  1313                     l331:
  3462  1313  0008               	return
  3463  1314                     __end_of_LCD_Write_4Bit:
  3464                           
  3465                           	psect	text15
  3466  12B2                     __ptext15:	
  3467 ;; *************** function _IO_Expander_Write *****************
  3468 ;; Defined at:
  3469 ;;		line 145 in file "I2C_Master.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  Data            1    wreg     unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  Data            1    5[COMMON] unsigned char 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, pclath, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         1       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         1       0       0       0       0
  3487 ;;Total ram usage:        1 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 3
  3490 ;; This function calls:
  3491 ;;		_I2C_Master_Start
  3492 ;;		_I2C_Master_Stop
  3493 ;;		_I2C_Master_Write
  3494 ;; This function is called by:
  3495 ;;		_LCD_Init
  3496 ;;		_LCD_Write_4Bit
  3497 ;;		_Backlight
  3498 ;;		_noBacklight
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           
  3503                           ;psect for function _IO_Expander_Write
  3504  12B2                     _IO_Expander_Write:
  3505                           
  3506                           ;incstack = 0
  3507                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3508                           ;IO_Expander_Write@Data stored from wreg
  3509  12B2  00F5               	movwf	IO_Expander_Write@Data
  3510  12B3                     l3353:
  3511                           
  3512                           ;I2C_Master.c: 145: void IO_Expander_Write(unsigned char Data);I2C_Master.c: 146: {;I2C_
      +                          Master.c: 147:   I2C_Master_Start();
  3513  12B3  160A  118A  2248  160A  118A  	fcall	_I2C_Master_Start
  3514                           
  3515                           ;I2C_Master.c: 148:   I2C_Master_Write(i2c_add);
  3516  12B8  1683               	bsf	3,5	;RP0=1, select bank1
  3517  12B9  1303               	bcf	3,6	;RP1=0, select bank1
  3518  12BA  082E               	movf	_i2c_add^(0+128),w
  3519  12BB  160A  118A  2274  160A  118A  	fcall	_I2C_Master_Write
  3520                           
  3521                           ;I2C_Master.c: 149:   I2C_Master_Write(Data | BackLight_State);
  3522  12C0  0875               	movf	IO_Expander_Write@Data,w
  3523  12C1  1683               	bsf	3,5	;RP0=1, select bank1
  3524  12C2  1303               	bcf	3,6	;RP1=0, select bank1
  3525  12C3  0469               	iorwf	_BackLight_State^(0+128),w
  3526  12C4  160A  118A  2274  160A  118A  	fcall	_I2C_Master_Write
  3527                           
  3528                           ;I2C_Master.c: 150:   I2C_Master_Stop();
  3529  12C9  160A  118A  2251  160A  118A  	fcall	_I2C_Master_Stop
  3530  12CE                     l328:
  3531  12CE  0008               	return
  3532  12CF                     __end_of_IO_Expander_Write:
  3533                           
  3534                           	psect	text16
  3535  0037                     __ptext16:	
  3536 ;; *************** function _ADC_convert *****************
  3537 ;; Defined at:
  3538 ;;		line 358 in file "Master_PIC.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;  data            1    wreg     PTR unsigned char 
  3541 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3542 ;;  a               4   63[BANK0 ] float 
  3543 ;;  place           2   67[BANK0 ] int 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  data            1    4[BANK1 ] PTR unsigned char 
  3546 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3547 ;;  x               4    5[BANK1 ] float 
  3548 ;;  mu              2   13[BANK1 ] int 
  3549 ;;  digits          2   11[BANK1 ] int 
  3550 ;;  i               2    9[BANK1 ] int 
  3551 ;;  j               2    2[BANK1 ] int 
  3552 ;;  temp            2    0[BANK1 ] int 
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       6       0       0       0
  3563 ;;      Locals:         0       0      15       0       0
  3564 ;;      Temps:          0       2       0       0       0
  3565 ;;      Totals:         0       8      15       0       0
  3566 ;;Total ram usage:       23 bytes
  3567 ;; Hardware stack levels used: 1
  3568 ;; Hardware stack levels required when called: 3
  3569 ;; This function calls:
  3570 ;;		___awdiv
  3571 ;;		___fldiv
  3572 ;;		___flge
  3573 ;;		___flmul
  3574 ;;		___flsub
  3575 ;;		___fltol
  3576 ;;		___wmul
  3577 ;;		___xxtofl
  3578 ;; This function is called by:
  3579 ;;		_LCD_Send
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           
  3584                           ;psect for function _ADC_convert
  3585  0037                     _ADC_convert:
  3586                           
  3587                           ;incstack = 0
  3588                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3589                           ;ADC_convert@data stored from wreg
  3590  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3591  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3592  0039  00DA               	movwf	ADC_convert@data^(0+128)
  3593  003A                     l4133:
  3594                           
  3595                           ;Master_PIC.c: 358: void ADC_convert(char *data,float a, int place);Master_PIC.c: 359: {
      +                          ;Master_PIC.c: 360:      int temp=a;
  3596  003A  1283               	bcf	3,5	;RP0=0, select bank0
  3597  003B  1303               	bcf	3,6	;RP1=0, select bank0
  3598  003C  0862               	movf	ADC_convert@a+3,w
  3599  003D  00A3               	movwf	___fltol@f1+3
  3600  003E  0861               	movf	ADC_convert@a+2,w
  3601  003F  00A2               	movwf	___fltol@f1+2
  3602  0040  0860               	movf	ADC_convert@a+1,w
  3603  0041  00A1               	movwf	___fltol@f1+1
  3604  0042  085F               	movf	ADC_convert@a,w
  3605  0043  00A0               	movwf	___fltol@f1
  3606  0044  160A  118A  26E9  120A  118A  	fcall	___fltol
  3607  0049  1283               	bcf	3,5	;RP0=0, select bank0
  3608  004A  1303               	bcf	3,6	;RP1=0, select bank0
  3609  004B  0821               	movf	?___fltol+1,w
  3610  004C  1683               	bsf	3,5	;RP0=1, select bank1
  3611  004D  1303               	bcf	3,6	;RP1=0, select bank1
  3612  004E  00D7               	movwf	(ADC_convert@temp+1)^(0+128)
  3613  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0051  0820               	movf	?___fltol,w
  3616  0052  1683               	bsf	3,5	;RP0=1, select bank1
  3617  0053  1303               	bcf	3,6	;RP1=0, select bank1
  3618  0054  00D6               	movwf	ADC_convert@temp^(0+128)
  3619  0055                     l4135:
  3620  0055                     l4137:
  3621                           
  3622                           ;Master_PIC.c: 362:      int digits=0;
  3623  0055  01E1               	clrf	ADC_convert@digits^(0+128)
  3624  0056  01E2               	clrf	(ADC_convert@digits+1)^(0+128)
  3625  0057                     l4139:
  3626                           
  3627                           ;Master_PIC.c: 363:      int i=0,mu=1;
  3628  0057  01DF               	clrf	ADC_convert@i^(0+128)
  3629  0058  01E0               	clrf	(ADC_convert@i+1)^(0+128)
  3630  0059                     l4141:
  3631  0059  3001               	movlw	1
  3632  005A  00E3               	movwf	ADC_convert@mu^(0+128)
  3633  005B  3000               	movlw	0
  3634  005C  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  3635  005D                     l4143:
  3636  005D                     l4145:
  3637                           
  3638                           ;Master_PIC.c: 365:      if(a<0)
  3639  005D  1283               	bcf	3,5	;RP0=0, select bank0
  3640  005E  1303               	bcf	3,6	;RP1=0, select bank0
  3641  005F  0862               	movf	ADC_convert@a+3,w
  3642  0060  00A3               	movwf	___flge@ff1+3
  3643  0061  0861               	movf	ADC_convert@a+2,w
  3644  0062  00A2               	movwf	___flge@ff1+2
  3645  0063  0860               	movf	ADC_convert@a+1,w
  3646  0064  00A1               	movwf	___flge@ff1+1
  3647  0065  085F               	movf	ADC_convert@a,w
  3648  0066  00A0               	movwf	___flge@ff1
  3649  0067  3000               	movlw	0
  3650  0068  00A7               	movwf	___flge@ff2+3
  3651  0069  3000               	movlw	0
  3652  006A  00A6               	movwf	___flge@ff2+2
  3653  006B  3000               	movlw	0
  3654  006C  00A5               	movwf	___flge@ff2+1
  3655  006D  3000               	movlw	0
  3656  006E  00A4               	movwf	___flge@ff2
  3657  006F  120A  158A  206A  120A  118A  	fcall	___flge
  3658  0074  1803               	btfsc	3,0
  3659  0075  2877               	goto	u5761
  3660  0076  2878               	goto	u5760
  3661  0077                     u5761:
  3662  0077  28D6               	goto	l4157
  3663  0078                     u5760:
  3664  0078                     l4147:
  3665                           
  3666                           ;Master_PIC.c: 366:      {;Master_PIC.c: 367:             a=a*-1;
  3667  0078  30BF               	movlw	191
  3668  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3669  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3670  007B  00C8               	movwf	___flmul@b+3
  3671  007C  3080               	movlw	128
  3672  007D  00C7               	movwf	___flmul@b+2
  3673  007E  3000               	movlw	0
  3674  007F  00C6               	movwf	___flmul@b+1
  3675  0080  3000               	movlw	0
  3676  0081  00C5               	movwf	___flmul@b
  3677  0082  0862               	movf	ADC_convert@a+3,w
  3678  0083  00CC               	movwf	___flmul@a+3
  3679  0084  0861               	movf	ADC_convert@a+2,w
  3680  0085  00CB               	movwf	___flmul@a+2
  3681  0086  0860               	movf	ADC_convert@a+1,w
  3682  0087  00CA               	movwf	___flmul@a+1
  3683  0088  085F               	movf	ADC_convert@a,w
  3684  0089  00C9               	movwf	___flmul@a
  3685  008A  120A  118A  2479  120A  118A  	fcall	___flmul
  3686  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3687  0090  1303               	bcf	3,6	;RP1=0, select bank0
  3688  0091  0848               	movf	?___flmul+3,w
  3689  0092  00E2               	movwf	ADC_convert@a+3
  3690  0093  0847               	movf	?___flmul+2,w
  3691  0094  00E1               	movwf	ADC_convert@a+2
  3692  0095  0846               	movf	?___flmul+1,w
  3693  0096  00E0               	movwf	ADC_convert@a+1
  3694  0097  0845               	movf	?___flmul,w
  3695  0098  00DF               	movwf	ADC_convert@a
  3696  0099                     l4149:
  3697                           
  3698                           ;Master_PIC.c: 368:             data[i]='-';
  3699  0099  302D               	movlw	45
  3700  009A  00E5               	movwf	??_ADC_convert
  3701  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3702  009C  1303               	bcf	3,6	;RP1=0, select bank1
  3703  009D  085A               	movf	ADC_convert@data^(0+128),w
  3704  009E  0084               	movwf	4
  3705  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3706  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3707  00A1  0865               	movf	??_ADC_convert,w
  3708  00A2  1383               	bcf	3,7	;select IRP bank0
  3709  00A3  0080               	movwf	0
  3710  00A4                     l4151:
  3711                           
  3712                           ;Master_PIC.c: 369:             i++;
  3713  00A4  3001               	movlw	1
  3714  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  3715  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  3716  00A7  07DF               	addwf	ADC_convert@i^(0+128),f
  3717  00A8  1803               	skipnc
  3718  00A9  0AE0               	incf	(ADC_convert@i+1)^(0+128),f
  3719  00AA  3000               	movlw	0
  3720  00AB  07E0               	addwf	(ADC_convert@i+1)^(0+128),f
  3721  00AC  28D6               	goto	l4157
  3722  00AD                     l4153:
  3723                           
  3724                           ;Master_PIC.c: 373:      {;Master_PIC.c: 374:          temp=temp/10;
  3725  00AD  300A               	movlw	10
  3726  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  3727  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  3728  00B0  00A0               	movwf	___awdiv@divisor
  3729  00B1  3000               	movlw	0
  3730  00B2  00A1               	movwf	___awdiv@divisor+1
  3731  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3732  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  3733  00B5  0857               	movf	(ADC_convert@temp+1)^(0+128),w
  3734  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3735  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3736  00B8  00A3               	movwf	___awdiv@dividend+1
  3737  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3738  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  3739  00BB  0856               	movf	ADC_convert@temp^(0+128),w
  3740  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3741  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3742  00BE  00A2               	movwf	___awdiv@dividend
  3743  00BF  120A  158A  2001  120A  118A  	fcall	___awdiv
  3744  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3745  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3746  00C6  0821               	movf	?___awdiv+1,w
  3747  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  3748  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  3749  00C9  00D7               	movwf	(ADC_convert@temp+1)^(0+128)
  3750  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3751  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3752  00CC  0820               	movf	?___awdiv,w
  3753  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3754  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3755  00CF  00D6               	movwf	ADC_convert@temp^(0+128)
  3756  00D0                     l4155:
  3757                           
  3758                           ;Master_PIC.c: 375:          digits++;
  3759  00D0  3001               	movlw	1
  3760  00D1  07E1               	addwf	ADC_convert@digits^(0+128),f
  3761  00D2  1803               	skipnc
  3762  00D3  0AE2               	incf	(ADC_convert@digits+1)^(0+128),f
  3763  00D4  3000               	movlw	0
  3764  00D5  07E2               	addwf	(ADC_convert@digits+1)^(0+128),f
  3765  00D6                     l4157:
  3766                           
  3767                           ;Master_PIC.c: 372:      while(temp!=0)
  3768  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3769  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3770  00D8  0856               	movf	ADC_convert@temp^(0+128),w
  3771  00D9  0457               	iorwf	(ADC_convert@temp+1)^(0+128),w
  3772  00DA  1D03               	btfss	3,2
  3773  00DB  28DD               	goto	u5771
  3774  00DC  28DE               	goto	u5770
  3775  00DD                     u5771:
  3776  00DD  28AD               	goto	l4153
  3777  00DE                     u5770:
  3778  00DE  2A16               	goto	l4181
  3779  00DF                     l4159:
  3780                           
  3781                           ;Master_PIC.c: 378:      {;Master_PIC.c: 379:          if(digits==1)mu=1;
  3782  00DF  0361               	decf	ADC_convert@digits^(0+128),w
  3783  00E0  0462               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3784  00E1  1D03               	btfss	3,2
  3785  00E2  28E4               	goto	u5781
  3786  00E3  28E5               	goto	u5780
  3787  00E4                     u5781:
  3788  00E4  28EA               	goto	l4163
  3789  00E5                     u5780:
  3790  00E5                     l4161:
  3791  00E5  3001               	movlw	1
  3792  00E6  00E3               	movwf	ADC_convert@mu^(0+128)
  3793  00E7  3000               	movlw	0
  3794  00E8  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  3795  00E9  292C               	goto	l4171
  3796  00EA                     l4163:
  3797  00EA  3002               	movlw	2
  3798  00EB  00D8               	movwf	ADC_convert@j^(0+128)
  3799  00EC  3000               	movlw	0
  3800  00ED  00D9               	movwf	(ADC_convert@j^(0+128)+1)
  3801  00EE  2916               	goto	l4169
  3802  00EF                     l4165:
  3803  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  3804  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  3805  00F1  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  3806  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3807  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3808  00F4  00AA               	movwf	___wmul@multiplier+1
  3809  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3810  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3811  00F7  0863               	movf	ADC_convert@mu^(0+128),w
  3812  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3813  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3814  00FA  00A9               	movwf	___wmul@multiplier
  3815  00FB  300A               	movlw	10
  3816  00FC  00AB               	movwf	___wmul@multiplicand
  3817  00FD  3000               	movlw	0
  3818  00FE  00AC               	movwf	___wmul@multiplicand+1
  3819  00FF  160A  118A  2337  120A  118A  	fcall	___wmul
  3820  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0106  082A               	movf	?___wmul+1,w
  3823  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3824  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3825  0109  00E4               	movwf	(ADC_convert@mu+1)^(0+128)
  3826  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3827  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3828  010C  0829               	movf	?___wmul,w
  3829  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3830  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3831  010F  00E3               	movwf	ADC_convert@mu^(0+128)
  3832  0110                     l4167:
  3833  0110  3001               	movlw	1
  3834  0111  07D8               	addwf	ADC_convert@j^(0+128),f
  3835  0112  1803               	skipnc
  3836  0113  0AD9               	incf	(ADC_convert@j+1)^(0+128),f
  3837  0114  3000               	movlw	0
  3838  0115  07D9               	addwf	(ADC_convert@j+1)^(0+128),f
  3839  0116                     l4169:
  3840  0116  0862               	movf	(ADC_convert@digits+1)^(0+128),w
  3841  0117  3A80               	xorlw	128
  3842  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3844  011A  00E5               	movwf	??_ADC_convert
  3845  011B  1683               	bsf	3,5	;RP0=1, select bank1
  3846  011C  1303               	bcf	3,6	;RP1=0, select bank1
  3847  011D  0859               	movf	(ADC_convert@j+1)^(0+128),w
  3848  011E  3A80               	xorlw	128
  3849  011F  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0120  1303               	bcf	3,6	;RP1=0, select bank0
  3851  0121  0265               	subwf	??_ADC_convert,w
  3852  0122  1D03               	skipz
  3853  0123  2928               	goto	u5795
  3854  0124  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0125  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0126  0858               	movf	ADC_convert@j^(0+128),w
  3857  0127  0261               	subwf	ADC_convert@digits^(0+128),w
  3858  0128                     u5795:
  3859  0128  1803               	skipnc
  3860  0129  292B               	goto	u5791
  3861  012A  292C               	goto	u5790
  3862  012B                     u5791:
  3863  012B  28EF               	goto	l4165
  3864  012C                     u5790:
  3865  012C                     l4171:
  3866                           
  3867                           ;Master_PIC.c: 382:          x=a/mu;
  3868  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3869  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3870  012E  0863               	movf	ADC_convert@mu^(0+128),w
  3871  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0131  00AF               	movwf	___xxtofl@val
  3874  0132  1683               	bsf	3,5	;RP0=1, select bank1
  3875  0133  1303               	bcf	3,6	;RP1=0, select bank1
  3876  0134  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  3877  0135  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0136  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0137  00B0               	movwf	___xxtofl@val+1
  3880  0138  3000               	movlw	0
  3881  0139  1BB0               	btfsc	___xxtofl@val+1,7
  3882  013A  30FF               	movlw	255
  3883  013B  00B1               	movwf	___xxtofl@val+2
  3884  013C  00B2               	movwf	___xxtofl@val+3
  3885  013D  3001               	movlw	1
  3886  013E  120A  158A  210E  120A  118A  	fcall	___xxtofl
  3887  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0145  0832               	movf	?___xxtofl+3,w
  3890  0146  00C0               	movwf	___fldiv@a+3
  3891  0147  0831               	movf	?___xxtofl+2,w
  3892  0148  00BF               	movwf	___fldiv@a+2
  3893  0149  0830               	movf	?___xxtofl+1,w
  3894  014A  00BE               	movwf	___fldiv@a+1
  3895  014B  082F               	movf	?___xxtofl,w
  3896  014C  00BD               	movwf	___fldiv@a
  3897  014D  0862               	movf	ADC_convert@a+3,w
  3898  014E  00C4               	movwf	___fldiv@b+3
  3899  014F  0861               	movf	ADC_convert@a+2,w
  3900  0150  00C3               	movwf	___fldiv@b+2
  3901  0151  0860               	movf	ADC_convert@a+1,w
  3902  0152  00C2               	movwf	___fldiv@b+1
  3903  0153  085F               	movf	ADC_convert@a,w
  3904  0154  00C1               	movwf	___fldiv@b
  3905  0155  120A  158A  239B  120A  118A  	fcall	___fldiv
  3906  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3907  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3908  015C  0840               	movf	?___fldiv+3,w
  3909  015D  1683               	bsf	3,5	;RP0=1, select bank1
  3910  015E  1303               	bcf	3,6	;RP1=0, select bank1
  3911  015F  00DE               	movwf	(ADC_convert@x+3)^(0+128)
  3912  0160  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0161  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0162  083F               	movf	?___fldiv+2,w
  3915  0163  1683               	bsf	3,5	;RP0=1, select bank1
  3916  0164  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0165  00DD               	movwf	(ADC_convert@x+2)^(0+128)
  3918  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0168  083E               	movf	?___fldiv+1,w
  3921  0169  1683               	bsf	3,5	;RP0=1, select bank1
  3922  016A  1303               	bcf	3,6	;RP1=0, select bank1
  3923  016B  00DC               	movwf	(ADC_convert@x+1)^(0+128)
  3924  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3925  016D  1303               	bcf	3,6	;RP1=0, select bank0
  3926  016E  083D               	movf	?___fldiv,w
  3927  016F  1683               	bsf	3,5	;RP0=1, select bank1
  3928  0170  1303               	bcf	3,6	;RP1=0, select bank1
  3929  0171  00DB               	movwf	ADC_convert@x^(0+128)
  3930                           
  3931                           ;Master_PIC.c: 383:          a=a-((int)x*mu);
  3932  0172  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  3933  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0175  00AC               	movwf	___wmul@multiplicand+1
  3936  0176  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0177  1303               	bcf	3,6	;RP1=0, select bank1
  3938  0178  0863               	movf	ADC_convert@mu^(0+128),w
  3939  0179  1283               	bcf	3,5	;RP0=0, select bank0
  3940  017A  1303               	bcf	3,6	;RP1=0, select bank0
  3941  017B  00AB               	movwf	___wmul@multiplicand
  3942  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3943  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3944  017E  085E               	movf	(ADC_convert@x+3)^(0+128),w
  3945  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3946  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3947  0181  00A3               	movwf	___fltol@f1+3
  3948  0182  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0183  1303               	bcf	3,6	;RP1=0, select bank1
  3950  0184  085D               	movf	(ADC_convert@x+2)^(0+128),w
  3951  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0187  00A2               	movwf	___fltol@f1+2
  3954  0188  1683               	bsf	3,5	;RP0=1, select bank1
  3955  0189  1303               	bcf	3,6	;RP1=0, select bank1
  3956  018A  085C               	movf	(ADC_convert@x+1)^(0+128),w
  3957  018B  1283               	bcf	3,5	;RP0=0, select bank0
  3958  018C  1303               	bcf	3,6	;RP1=0, select bank0
  3959  018D  00A1               	movwf	___fltol@f1+1
  3960  018E  1683               	bsf	3,5	;RP0=1, select bank1
  3961  018F  1303               	bcf	3,6	;RP1=0, select bank1
  3962  0190  085B               	movf	ADC_convert@x^(0+128),w
  3963  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3964  0192  1303               	bcf	3,6	;RP1=0, select bank0
  3965  0193  00A0               	movwf	___fltol@f1
  3966  0194  160A  118A  26E9  120A  118A  	fcall	___fltol
  3967  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3968  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3969  019B  0821               	movf	?___fltol+1,w
  3970  019C  00AA               	movwf	___wmul@multiplier+1
  3971  019D  0820               	movf	?___fltol,w
  3972  019E  00A9               	movwf	___wmul@multiplier
  3973  019F  160A  118A  2337  120A  118A  	fcall	___wmul
  3974  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3975  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3976  01A6  0829               	movf	?___wmul,w
  3977  01A7  00AF               	movwf	___xxtofl@val
  3978  01A8  082A               	movf	?___wmul+1,w
  3979  01A9  00B0               	movwf	___xxtofl@val+1
  3980  01AA  3000               	movlw	0
  3981  01AB  1BB0               	btfsc	___xxtofl@val+1,7
  3982  01AC  30FF               	movlw	255
  3983  01AD  00B1               	movwf	___xxtofl@val+2
  3984  01AE  00B2               	movwf	___xxtofl@val+3
  3985  01AF  3001               	movlw	1
  3986  01B0  120A  158A  210E  120A  118A  	fcall	___xxtofl
  3987  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3988  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3989  01B7  0832               	movf	?___xxtofl+3,w
  3990  01B8  00C0               	movwf	___flsub@a+3
  3991  01B9  0831               	movf	?___xxtofl+2,w
  3992  01BA  00BF               	movwf	___flsub@a+2
  3993  01BB  0830               	movf	?___xxtofl+1,w
  3994  01BC  00BE               	movwf	___flsub@a+1
  3995  01BD  082F               	movf	?___xxtofl,w
  3996  01BE  00BD               	movwf	___flsub@a
  3997  01BF  0862               	movf	ADC_convert@a+3,w
  3998  01C0  00C4               	movwf	___flsub@b+3
  3999  01C1  0861               	movf	ADC_convert@a+2,w
  4000  01C2  00C3               	movwf	___flsub@b+2
  4001  01C3  0860               	movf	ADC_convert@a+1,w
  4002  01C4  00C2               	movwf	___flsub@b+1
  4003  01C5  085F               	movf	ADC_convert@a,w
  4004  01C6  00C1               	movwf	___flsub@b
  4005  01C7  120A  118A  27DA  120A  118A  	fcall	___flsub
  4006  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  4007  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  4008  01CE  0840               	movf	?___flsub+3,w
  4009  01CF  00E2               	movwf	ADC_convert@a+3
  4010  01D0  083F               	movf	?___flsub+2,w
  4011  01D1  00E1               	movwf	ADC_convert@a+2
  4012  01D2  083E               	movf	?___flsub+1,w
  4013  01D3  00E0               	movwf	ADC_convert@a+1
  4014  01D4  083D               	movf	?___flsub,w
  4015  01D5  00DF               	movwf	ADC_convert@a
  4016  01D6                     l4173:
  4017                           
  4018                           ;Master_PIC.c: 384:          data[i]=0x30+((int)x);
  4019  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  4020  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  4021  01D8  085E               	movf	(ADC_convert@x+3)^(0+128),w
  4022  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  4023  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  4024  01DB  00A3               	movwf	___fltol@f1+3
  4025  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  4026  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  4027  01DE  085D               	movf	(ADC_convert@x+2)^(0+128),w
  4028  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  4029  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  4030  01E1  00A2               	movwf	___fltol@f1+2
  4031  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  4032  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  4033  01E4  085C               	movf	(ADC_convert@x+1)^(0+128),w
  4034  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  4035  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  4036  01E7  00A1               	movwf	___fltol@f1+1
  4037  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  4038  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  4039  01EA  085B               	movf	ADC_convert@x^(0+128),w
  4040  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  4041  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  4042  01ED  00A0               	movwf	___fltol@f1
  4043  01EE  160A  118A  26E9  120A  118A  	fcall	___fltol
  4044  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  4045  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  4046  01F5  0820               	movf	?___fltol,w
  4047  01F6  3E30               	addlw	48
  4048  01F7  00E5               	movwf	??_ADC_convert
  4049  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  4050  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  4051  01FA  085F               	movf	ADC_convert@i^(0+128),w
  4052  01FB  075A               	addwf	ADC_convert@data^(0+128),w
  4053  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  4054  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  4055  01FE  00E6               	movwf	??_ADC_convert+1
  4056  01FF  0866               	movf	??_ADC_convert+1,w
  4057  0200  0084               	movwf	4
  4058  0201  0865               	movf	??_ADC_convert,w
  4059  0202  1383               	bcf	3,7	;select IRP bank0
  4060  0203  0080               	movwf	0
  4061  0204                     l4175:
  4062                           
  4063                           ;Master_PIC.c: 385:          i++;
  4064  0204  3001               	movlw	1
  4065  0205  1683               	bsf	3,5	;RP0=1, select bank1
  4066  0206  1303               	bcf	3,6	;RP1=0, select bank1
  4067  0207  07DF               	addwf	ADC_convert@i^(0+128),f
  4068  0208  1803               	skipnc
  4069  0209  0AE0               	incf	(ADC_convert@i+1)^(0+128),f
  4070  020A  3000               	movlw	0
  4071  020B  07E0               	addwf	(ADC_convert@i+1)^(0+128),f
  4072  020C                     l4177:
  4073                           
  4074                           ;Master_PIC.c: 386:          digits--;
  4075  020C  30FF               	movlw	255
  4076  020D  07E1               	addwf	ADC_convert@digits^(0+128),f
  4077  020E  1803               	skipnc
  4078  020F  0AE2               	incf	(ADC_convert@digits+1)^(0+128),f
  4079  0210  30FF               	movlw	255
  4080  0211  07E2               	addwf	(ADC_convert@digits+1)^(0+128),f
  4081  0212                     l4179:
  4082                           
  4083                           ;Master_PIC.c: 387:          mu=1;
  4084  0212  3001               	movlw	1
  4085  0213  00E3               	movwf	ADC_convert@mu^(0+128)
  4086  0214  3000               	movlw	0
  4087  0215  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  4088  0216                     l4181:
  4089                           
  4090                           ;Master_PIC.c: 377:      while(digits!=0)
  4091  0216  0861               	movf	ADC_convert@digits^(0+128),w
  4092  0217  0462               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4093  0218  1D03               	btfss	3,2
  4094  0219  2A1B               	goto	u5801
  4095  021A  2A1C               	goto	u5800
  4096  021B                     u5801:
  4097  021B  28DF               	goto	l4159
  4098  021C                     u5800:
  4099  021C                     l4183:
  4100                           
  4101                           ;Master_PIC.c: 390:      data[i]='.';
  4102  021C  302E               	movlw	46
  4103  021D  1283               	bcf	3,5	;RP0=0, select bank0
  4104  021E  1303               	bcf	3,6	;RP1=0, select bank0
  4105  021F  00E5               	movwf	??_ADC_convert
  4106  0220  1683               	bsf	3,5	;RP0=1, select bank1
  4107  0221  1303               	bcf	3,6	;RP1=0, select bank1
  4108  0222  085F               	movf	ADC_convert@i^(0+128),w
  4109  0223  075A               	addwf	ADC_convert@data^(0+128),w
  4110  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0226  00E6               	movwf	??_ADC_convert+1
  4113  0227  0866               	movf	??_ADC_convert+1,w
  4114  0228  0084               	movwf	4
  4115  0229  0865               	movf	??_ADC_convert,w
  4116  022A  1383               	bcf	3,7	;select IRP bank0
  4117  022B  0080               	movwf	0
  4118  022C                     l4185:
  4119                           
  4120                           ;Master_PIC.c: 391:      i++;
  4121  022C  3001               	movlw	1
  4122  022D  1683               	bsf	3,5	;RP0=1, select bank1
  4123  022E  1303               	bcf	3,6	;RP1=0, select bank1
  4124  022F  07DF               	addwf	ADC_convert@i^(0+128),f
  4125  0230  1803               	skipnc
  4126  0231  0AE0               	incf	(ADC_convert@i+1)^(0+128),f
  4127  0232  3000               	movlw	0
  4128  0233  07E0               	addwf	(ADC_convert@i+1)^(0+128),f
  4129  0234                     l4187:
  4130  0234                     l4189:
  4131                           
  4132                           ;Master_PIC.c: 393:      for(j=1;j<=place;j++)mu=mu*10;
  4133  0234  3001               	movlw	1
  4134  0235  00D8               	movwf	ADC_convert@j^(0+128)
  4135  0236  3000               	movlw	0
  4136  0237  00D9               	movwf	(ADC_convert@j^(0+128)+1)
  4137  0238  2A60               	goto	l4195
  4138  0239                     l4191:
  4139  0239  1683               	bsf	3,5	;RP0=1, select bank1
  4140  023A  1303               	bcf	3,6	;RP1=0, select bank1
  4141  023B  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  4142  023C  1283               	bcf	3,5	;RP0=0, select bank0
  4143  023D  1303               	bcf	3,6	;RP1=0, select bank0
  4144  023E  00AA               	movwf	___wmul@multiplier+1
  4145  023F  1683               	bsf	3,5	;RP0=1, select bank1
  4146  0240  1303               	bcf	3,6	;RP1=0, select bank1
  4147  0241  0863               	movf	ADC_convert@mu^(0+128),w
  4148  0242  1283               	bcf	3,5	;RP0=0, select bank0
  4149  0243  1303               	bcf	3,6	;RP1=0, select bank0
  4150  0244  00A9               	movwf	___wmul@multiplier
  4151  0245  300A               	movlw	10
  4152  0246  00AB               	movwf	___wmul@multiplicand
  4153  0247  3000               	movlw	0
  4154  0248  00AC               	movwf	___wmul@multiplicand+1
  4155  0249  160A  118A  2337  120A  118A  	fcall	___wmul
  4156  024E  1283               	bcf	3,5	;RP0=0, select bank0
  4157  024F  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0250  082A               	movf	?___wmul+1,w
  4159  0251  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0252  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0253  00E4               	movwf	(ADC_convert@mu+1)^(0+128)
  4162  0254  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0255  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0256  0829               	movf	?___wmul,w
  4165  0257  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0258  1303               	bcf	3,6	;RP1=0, select bank1
  4167  0259  00E3               	movwf	ADC_convert@mu^(0+128)
  4168  025A                     l4193:
  4169  025A  3001               	movlw	1
  4170  025B  07D8               	addwf	ADC_convert@j^(0+128),f
  4171  025C  1803               	skipnc
  4172  025D  0AD9               	incf	(ADC_convert@j+1)^(0+128),f
  4173  025E  3000               	movlw	0
  4174  025F  07D9               	addwf	(ADC_convert@j+1)^(0+128),f
  4175  0260                     l4195:
  4176  0260  1283               	bcf	3,5	;RP0=0, select bank0
  4177  0261  1303               	bcf	3,6	;RP1=0, select bank0
  4178  0262  0864               	movf	ADC_convert@place+1,w
  4179  0263  3A80               	xorlw	128
  4180  0264  00E5               	movwf	??_ADC_convert
  4181  0265  1683               	bsf	3,5	;RP0=1, select bank1
  4182  0266  1303               	bcf	3,6	;RP1=0, select bank1
  4183  0267  0859               	movf	(ADC_convert@j+1)^(0+128),w
  4184  0268  3A80               	xorlw	128
  4185  0269  1283               	bcf	3,5	;RP0=0, select bank0
  4186  026A  1303               	bcf	3,6	;RP1=0, select bank0
  4187  026B  0265               	subwf	??_ADC_convert,w
  4188  026C  1D03               	skipz
  4189  026D  2A74               	goto	u5815
  4190  026E  1683               	bsf	3,5	;RP0=1, select bank1
  4191  026F  1303               	bcf	3,6	;RP1=0, select bank1
  4192  0270  0858               	movf	ADC_convert@j^(0+128),w
  4193  0271  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0272  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0273  0263               	subwf	ADC_convert@place,w
  4196  0274                     u5815:
  4197  0274  1803               	skipnc
  4198  0275  2A77               	goto	u5811
  4199  0276  2A78               	goto	u5810
  4200  0277                     u5811:
  4201  0277  2A39               	goto	l4191
  4202  0278                     u5810:
  4203  0278                     l4197:
  4204                           
  4205                           ;Master_PIC.c: 394:      x=(a-(int)a)*mu;
  4206  0278  1683               	bsf	3,5	;RP0=1, select bank1
  4207  0279  1303               	bcf	3,6	;RP1=0, select bank1
  4208  027A  0863               	movf	ADC_convert@mu^(0+128),w
  4209  027B  1283               	bcf	3,5	;RP0=0, select bank0
  4210  027C  1303               	bcf	3,6	;RP1=0, select bank0
  4211  027D  00AF               	movwf	___xxtofl@val
  4212  027E  1683               	bsf	3,5	;RP0=1, select bank1
  4213  027F  1303               	bcf	3,6	;RP1=0, select bank1
  4214  0280  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  4215  0281  1283               	bcf	3,5	;RP0=0, select bank0
  4216  0282  1303               	bcf	3,6	;RP1=0, select bank0
  4217  0283  00B0               	movwf	___xxtofl@val+1
  4218  0284  3000               	movlw	0
  4219  0285  1BB0               	btfsc	___xxtofl@val+1,7
  4220  0286  30FF               	movlw	255
  4221  0287  00B1               	movwf	___xxtofl@val+2
  4222  0288  00B2               	movwf	___xxtofl@val+3
  4223  0289  3001               	movlw	1
  4224  028A  120A  158A  210E  120A  118A  	fcall	___xxtofl
  4225  028F  1283               	bcf	3,5	;RP0=0, select bank0
  4226  0290  1303               	bcf	3,6	;RP1=0, select bank0
  4227  0291  0832               	movf	?___xxtofl+3,w
  4228  0292  00C8               	movwf	___flmul@b+3
  4229  0293  0831               	movf	?___xxtofl+2,w
  4230  0294  00C7               	movwf	___flmul@b+2
  4231  0295  0830               	movf	?___xxtofl+1,w
  4232  0296  00C6               	movwf	___flmul@b+1
  4233  0297  082F               	movf	?___xxtofl,w
  4234  0298  00C5               	movwf	___flmul@b
  4235  0299  0862               	movf	ADC_convert@a+3,w
  4236  029A  00A3               	movwf	___fltol@f1+3
  4237  029B  0861               	movf	ADC_convert@a+2,w
  4238  029C  00A2               	movwf	___fltol@f1+2
  4239  029D  0860               	movf	ADC_convert@a+1,w
  4240  029E  00A1               	movwf	___fltol@f1+1
  4241  029F  085F               	movf	ADC_convert@a,w
  4242  02A0  00A0               	movwf	___fltol@f1
  4243  02A1  160A  118A  26E9  120A  118A  	fcall	___fltol
  4244  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  4245  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  4246  02A8  0820               	movf	?___fltol,w
  4247  02A9  00AF               	movwf	___xxtofl@val
  4248  02AA  0821               	movf	?___fltol+1,w
  4249  02AB  00B0               	movwf	___xxtofl@val+1
  4250  02AC  3000               	movlw	0
  4251  02AD  1BB0               	btfsc	___xxtofl@val+1,7
  4252  02AE  30FF               	movlw	255
  4253  02AF  00B1               	movwf	___xxtofl@val+2
  4254  02B0  00B2               	movwf	___xxtofl@val+3
  4255  02B1  3001               	movlw	1
  4256  02B2  120A  158A  210E  120A  118A  	fcall	___xxtofl
  4257  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4258  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4259  02B9  0832               	movf	?___xxtofl+3,w
  4260  02BA  00C0               	movwf	___flsub@a+3
  4261  02BB  0831               	movf	?___xxtofl+2,w
  4262  02BC  00BF               	movwf	___flsub@a+2
  4263  02BD  0830               	movf	?___xxtofl+1,w
  4264  02BE  00BE               	movwf	___flsub@a+1
  4265  02BF  082F               	movf	?___xxtofl,w
  4266  02C0  00BD               	movwf	___flsub@a
  4267  02C1  0862               	movf	ADC_convert@a+3,w
  4268  02C2  00C4               	movwf	___flsub@b+3
  4269  02C3  0861               	movf	ADC_convert@a+2,w
  4270  02C4  00C3               	movwf	___flsub@b+2
  4271  02C5  0860               	movf	ADC_convert@a+1,w
  4272  02C6  00C2               	movwf	___flsub@b+1
  4273  02C7  085F               	movf	ADC_convert@a,w
  4274  02C8  00C1               	movwf	___flsub@b
  4275  02C9  120A  118A  27DA  120A  118A  	fcall	___flsub
  4276  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4277  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4278  02D0  0840               	movf	?___flsub+3,w
  4279  02D1  00CC               	movwf	___flmul@a+3
  4280  02D2  083F               	movf	?___flsub+2,w
  4281  02D3  00CB               	movwf	___flmul@a+2
  4282  02D4  083E               	movf	?___flsub+1,w
  4283  02D5  00CA               	movwf	___flmul@a+1
  4284  02D6  083D               	movf	?___flsub,w
  4285  02D7  00C9               	movwf	___flmul@a
  4286  02D8  120A  118A  2479  120A  118A  	fcall	___flmul
  4287  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  4288  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  4289  02DF  0848               	movf	?___flmul+3,w
  4290  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  4291  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  4292  02E2  00DE               	movwf	(ADC_convert@x+3)^(0+128)
  4293  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  4294  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  4295  02E5  0847               	movf	?___flmul+2,w
  4296  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  4297  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  4298  02E8  00DD               	movwf	(ADC_convert@x+2)^(0+128)
  4299  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  4300  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  4301  02EB  0846               	movf	?___flmul+1,w
  4302  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  4303  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  4304  02EE  00DC               	movwf	(ADC_convert@x+1)^(0+128)
  4305  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4306  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4307  02F1  0845               	movf	?___flmul,w
  4308  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  4309  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  4310  02F4  00DB               	movwf	ADC_convert@x^(0+128)
  4311  02F5                     l4199:
  4312                           
  4313                           ;Master_PIC.c: 395:      a=x;
  4314  02F5  085E               	movf	(ADC_convert@x+3)^(0+128),w
  4315  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  4316  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  4317  02F8  00E2               	movwf	ADC_convert@a+3
  4318  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  4319  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  4320  02FB  085D               	movf	(ADC_convert@x+2)^(0+128),w
  4321  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  4322  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  4323  02FE  00E1               	movwf	ADC_convert@a+2
  4324  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  4325  0300  1303               	bcf	3,6	;RP1=0, select bank1
  4326  0301  085C               	movf	(ADC_convert@x+1)^(0+128),w
  4327  0302  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0303  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0304  00E0               	movwf	ADC_convert@a+1
  4330  0305  1683               	bsf	3,5	;RP0=1, select bank1
  4331  0306  1303               	bcf	3,6	;RP1=0, select bank1
  4332  0307  085B               	movf	ADC_convert@x^(0+128),w
  4333  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0309  1303               	bcf	3,6	;RP1=0, select bank0
  4335  030A  00DF               	movwf	ADC_convert@a
  4336  030B                     l4201:
  4337  030B  0862               	movf	ADC_convert@a+3,w
  4338  030C  00A3               	movwf	___fltol@f1+3
  4339  030D  0861               	movf	ADC_convert@a+2,w
  4340  030E  00A2               	movwf	___fltol@f1+2
  4341  030F  0860               	movf	ADC_convert@a+1,w
  4342  0310  00A1               	movwf	___fltol@f1+1
  4343  0311  085F               	movf	ADC_convert@a,w
  4344  0312  00A0               	movwf	___fltol@f1
  4345  0313  160A  118A  26E9  120A  118A  	fcall	___fltol
  4346  0318                     l4203:
  4347  0318                     l4205:
  4348                           
  4349                           ;Master_PIC.c: 398:      mu=1;
  4350  0318  3001               	movlw	1
  4351  0319  1683               	bsf	3,5	;RP0=1, select bank1
  4352  031A  1303               	bcf	3,6	;RP1=0, select bank1
  4353  031B  00E3               	movwf	ADC_convert@mu^(0+128)
  4354  031C  3000               	movlw	0
  4355  031D  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  4356  031E                     l4207:
  4357                           
  4358                           ;Master_PIC.c: 399:      digits=place;
  4359  031E  1283               	bcf	3,5	;RP0=0, select bank0
  4360  031F  1303               	bcf	3,6	;RP1=0, select bank0
  4361  0320  0864               	movf	ADC_convert@place+1,w
  4362  0321  1683               	bsf	3,5	;RP0=1, select bank1
  4363  0322  1303               	bcf	3,6	;RP1=0, select bank1
  4364  0323  00E2               	movwf	(ADC_convert@digits+1)^(0+128)
  4365  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0326  0863               	movf	ADC_convert@place,w
  4368  0327  1683               	bsf	3,5	;RP0=1, select bank1
  4369  0328  1303               	bcf	3,6	;RP1=0, select bank1
  4370  0329  00E1               	movwf	ADC_convert@digits^(0+128)
  4371                           
  4372                           ;Master_PIC.c: 400:      while(digits!=0)
  4373  032A  2C62               	goto	l4231
  4374  032B                     l4209:
  4375                           
  4376                           ;Master_PIC.c: 401:      {;Master_PIC.c: 402:          if(digits==1)mu=1;
  4377  032B  0361               	decf	ADC_convert@digits^(0+128),w
  4378  032C  0462               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4379  032D  1D03               	btfss	3,2
  4380  032E  2B30               	goto	u5821
  4381  032F  2B31               	goto	u5820
  4382  0330                     u5821:
  4383  0330  2B36               	goto	l4213
  4384  0331                     u5820:
  4385  0331                     l4211:
  4386  0331  3001               	movlw	1
  4387  0332  00E3               	movwf	ADC_convert@mu^(0+128)
  4388  0333  3000               	movlw	0
  4389  0334  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  4390  0335  2B78               	goto	l4221
  4391  0336                     l4213:
  4392  0336  3002               	movlw	2
  4393  0337  00D8               	movwf	ADC_convert@j^(0+128)
  4394  0338  3000               	movlw	0
  4395  0339  00D9               	movwf	(ADC_convert@j^(0+128)+1)
  4396  033A  2B62               	goto	l4219
  4397  033B                     l4215:
  4398  033B  1683               	bsf	3,5	;RP0=1, select bank1
  4399  033C  1303               	bcf	3,6	;RP1=0, select bank1
  4400  033D  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  4401  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4402  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0340  00AA               	movwf	___wmul@multiplier+1
  4404  0341  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0342  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0343  0863               	movf	ADC_convert@mu^(0+128),w
  4407  0344  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0345  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0346  00A9               	movwf	___wmul@multiplier
  4410  0347  300A               	movlw	10
  4411  0348  00AB               	movwf	___wmul@multiplicand
  4412  0349  3000               	movlw	0
  4413  034A  00AC               	movwf	___wmul@multiplicand+1
  4414  034B  160A  118A  2337  120A  118A  	fcall	___wmul
  4415  0350  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0351  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0352  082A               	movf	?___wmul+1,w
  4418  0353  1683               	bsf	3,5	;RP0=1, select bank1
  4419  0354  1303               	bcf	3,6	;RP1=0, select bank1
  4420  0355  00E4               	movwf	(ADC_convert@mu+1)^(0+128)
  4421  0356  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0357  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0358  0829               	movf	?___wmul,w
  4424  0359  1683               	bsf	3,5	;RP0=1, select bank1
  4425  035A  1303               	bcf	3,6	;RP1=0, select bank1
  4426  035B  00E3               	movwf	ADC_convert@mu^(0+128)
  4427  035C                     l4217:
  4428  035C  3001               	movlw	1
  4429  035D  07D8               	addwf	ADC_convert@j^(0+128),f
  4430  035E  1803               	skipnc
  4431  035F  0AD9               	incf	(ADC_convert@j+1)^(0+128),f
  4432  0360  3000               	movlw	0
  4433  0361  07D9               	addwf	(ADC_convert@j+1)^(0+128),f
  4434  0362                     l4219:
  4435  0362  0862               	movf	(ADC_convert@digits+1)^(0+128),w
  4436  0363  3A80               	xorlw	128
  4437  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0366  00E5               	movwf	??_ADC_convert
  4440  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4442  0369  0859               	movf	(ADC_convert@j+1)^(0+128),w
  4443  036A  3A80               	xorlw	128
  4444  036B  1283               	bcf	3,5	;RP0=0, select bank0
  4445  036C  1303               	bcf	3,6	;RP1=0, select bank0
  4446  036D  0265               	subwf	??_ADC_convert,w
  4447  036E  1D03               	skipz
  4448  036F  2B74               	goto	u5835
  4449  0370  1683               	bsf	3,5	;RP0=1, select bank1
  4450  0371  1303               	bcf	3,6	;RP1=0, select bank1
  4451  0372  0858               	movf	ADC_convert@j^(0+128),w
  4452  0373  0261               	subwf	ADC_convert@digits^(0+128),w
  4453  0374                     u5835:
  4454  0374  1803               	skipnc
  4455  0375  2B77               	goto	u5831
  4456  0376  2B78               	goto	u5830
  4457  0377                     u5831:
  4458  0377  2B3B               	goto	l4215
  4459  0378                     u5830:
  4460  0378                     l4221:
  4461                           
  4462                           ;Master_PIC.c: 405:          x=a/mu;
  4463  0378  1683               	bsf	3,5	;RP0=1, select bank1
  4464  0379  1303               	bcf	3,6	;RP1=0, select bank1
  4465  037A  0863               	movf	ADC_convert@mu^(0+128),w
  4466  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4467  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4468  037D  00AF               	movwf	___xxtofl@val
  4469  037E  1683               	bsf	3,5	;RP0=1, select bank1
  4470  037F  1303               	bcf	3,6	;RP1=0, select bank1
  4471  0380  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  4472  0381  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0382  1303               	bcf	3,6	;RP1=0, select bank0
  4474  0383  00B0               	movwf	___xxtofl@val+1
  4475  0384  3000               	movlw	0
  4476  0385  1BB0               	btfsc	___xxtofl@val+1,7
  4477  0386  30FF               	movlw	255
  4478  0387  00B1               	movwf	___xxtofl@val+2
  4479  0388  00B2               	movwf	___xxtofl@val+3
  4480  0389  3001               	movlw	1
  4481  038A  120A  158A  210E  120A  118A  	fcall	___xxtofl
  4482  038F  1283               	bcf	3,5	;RP0=0, select bank0
  4483  0390  1303               	bcf	3,6	;RP1=0, select bank0
  4484  0391  0832               	movf	?___xxtofl+3,w
  4485  0392  00C0               	movwf	___fldiv@a+3
  4486  0393  0831               	movf	?___xxtofl+2,w
  4487  0394  00BF               	movwf	___fldiv@a+2
  4488  0395  0830               	movf	?___xxtofl+1,w
  4489  0396  00BE               	movwf	___fldiv@a+1
  4490  0397  082F               	movf	?___xxtofl,w
  4491  0398  00BD               	movwf	___fldiv@a
  4492  0399  0862               	movf	ADC_convert@a+3,w
  4493  039A  00C4               	movwf	___fldiv@b+3
  4494  039B  0861               	movf	ADC_convert@a+2,w
  4495  039C  00C3               	movwf	___fldiv@b+2
  4496  039D  0860               	movf	ADC_convert@a+1,w
  4497  039E  00C2               	movwf	___fldiv@b+1
  4498  039F  085F               	movf	ADC_convert@a,w
  4499  03A0  00C1               	movwf	___fldiv@b
  4500  03A1  120A  158A  239B  120A  118A  	fcall	___fldiv
  4501  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  4502  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  4503  03A8  0840               	movf	?___fldiv+3,w
  4504  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  4505  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  4506  03AB  00DE               	movwf	(ADC_convert@x+3)^(0+128)
  4507  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4508  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  4509  03AE  083F               	movf	?___fldiv+2,w
  4510  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  4511  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  4512  03B1  00DD               	movwf	(ADC_convert@x+2)^(0+128)
  4513  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  4514  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  4515  03B4  083E               	movf	?___fldiv+1,w
  4516  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  4517  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  4518  03B7  00DC               	movwf	(ADC_convert@x+1)^(0+128)
  4519  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4520  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4521  03BA  083D               	movf	?___fldiv,w
  4522  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4523  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  4524  03BD  00DB               	movwf	ADC_convert@x^(0+128)
  4525                           
  4526                           ;Master_PIC.c: 406:          a=a-((int)x*mu);
  4527  03BE  0864               	movf	(ADC_convert@mu+1)^(0+128),w
  4528  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4529  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4530  03C1  00AC               	movwf	___wmul@multiplicand+1
  4531  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  4532  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  4533  03C4  0863               	movf	ADC_convert@mu^(0+128),w
  4534  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4535  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4536  03C7  00AB               	movwf	___wmul@multiplicand
  4537  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  4538  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  4539  03CA  085E               	movf	(ADC_convert@x+3)^(0+128),w
  4540  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4541  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  4542  03CD  00A3               	movwf	___fltol@f1+3
  4543  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  4544  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  4545  03D0  085D               	movf	(ADC_convert@x+2)^(0+128),w
  4546  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4547  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4548  03D3  00A2               	movwf	___fltol@f1+2
  4549  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  4550  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  4551  03D6  085C               	movf	(ADC_convert@x+1)^(0+128),w
  4552  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  4553  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  4554  03D9  00A1               	movwf	___fltol@f1+1
  4555  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  4556  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  4557  03DC  085B               	movf	ADC_convert@x^(0+128),w
  4558  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  4559  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  4560  03DF  00A0               	movwf	___fltol@f1
  4561  03E0  160A  118A  26E9  120A  118A  	fcall	___fltol
  4562  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4563  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4564  03E7  0821               	movf	?___fltol+1,w
  4565  03E8  00AA               	movwf	___wmul@multiplier+1
  4566  03E9  0820               	movf	?___fltol,w
  4567  03EA  00A9               	movwf	___wmul@multiplier
  4568  03EB  160A  118A  2337  120A  118A  	fcall	___wmul
  4569  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4570  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  4571  03F2  0829               	movf	?___wmul,w
  4572  03F3  00AF               	movwf	___xxtofl@val
  4573  03F4  082A               	movf	?___wmul+1,w
  4574  03F5  00B0               	movwf	___xxtofl@val+1
  4575  03F6  3000               	movlw	0
  4576  03F7  1BB0               	btfsc	___xxtofl@val+1,7
  4577  03F8  30FF               	movlw	255
  4578  03F9  00B1               	movwf	___xxtofl@val+2
  4579  03FA  00B2               	movwf	___xxtofl@val+3
  4580  03FB  3001               	movlw	1
  4581  03FC  120A  158A  210E  120A  118A  	fcall	___xxtofl
  4582  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0402  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0403  0832               	movf	?___xxtofl+3,w
  4585  0404  00C0               	movwf	___flsub@a+3
  4586  0405  0831               	movf	?___xxtofl+2,w
  4587  0406  00BF               	movwf	___flsub@a+2
  4588  0407  0830               	movf	?___xxtofl+1,w
  4589  0408  00BE               	movwf	___flsub@a+1
  4590  0409  082F               	movf	?___xxtofl,w
  4591  040A  00BD               	movwf	___flsub@a
  4592  040B  0862               	movf	ADC_convert@a+3,w
  4593  040C  00C4               	movwf	___flsub@b+3
  4594  040D  0861               	movf	ADC_convert@a+2,w
  4595  040E  00C3               	movwf	___flsub@b+2
  4596  040F  0860               	movf	ADC_convert@a+1,w
  4597  0410  00C2               	movwf	___flsub@b+1
  4598  0411  085F               	movf	ADC_convert@a,w
  4599  0412  00C1               	movwf	___flsub@b
  4600  0413  120A  118A  27DA  120A  118A  	fcall	___flsub
  4601  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4602  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4603  041A  0840               	movf	?___flsub+3,w
  4604  041B  00E2               	movwf	ADC_convert@a+3
  4605  041C  083F               	movf	?___flsub+2,w
  4606  041D  00E1               	movwf	ADC_convert@a+2
  4607  041E  083E               	movf	?___flsub+1,w
  4608  041F  00E0               	movwf	ADC_convert@a+1
  4609  0420  083D               	movf	?___flsub,w
  4610  0421  00DF               	movwf	ADC_convert@a
  4611  0422                     l4223:
  4612                           
  4613                           ;Master_PIC.c: 407:          data[i]=0x30+((int)x);
  4614  0422  1683               	bsf	3,5	;RP0=1, select bank1
  4615  0423  1303               	bcf	3,6	;RP1=0, select bank1
  4616  0424  085E               	movf	(ADC_convert@x+3)^(0+128),w
  4617  0425  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0426  1303               	bcf	3,6	;RP1=0, select bank0
  4619  0427  00A3               	movwf	___fltol@f1+3
  4620  0428  1683               	bsf	3,5	;RP0=1, select bank1
  4621  0429  1303               	bcf	3,6	;RP1=0, select bank1
  4622  042A  085D               	movf	(ADC_convert@x+2)^(0+128),w
  4623  042B  1283               	bcf	3,5	;RP0=0, select bank0
  4624  042C  1303               	bcf	3,6	;RP1=0, select bank0
  4625  042D  00A2               	movwf	___fltol@f1+2
  4626  042E  1683               	bsf	3,5	;RP0=1, select bank1
  4627  042F  1303               	bcf	3,6	;RP1=0, select bank1
  4628  0430  085C               	movf	(ADC_convert@x+1)^(0+128),w
  4629  0431  1283               	bcf	3,5	;RP0=0, select bank0
  4630  0432  1303               	bcf	3,6	;RP1=0, select bank0
  4631  0433  00A1               	movwf	___fltol@f1+1
  4632  0434  1683               	bsf	3,5	;RP0=1, select bank1
  4633  0435  1303               	bcf	3,6	;RP1=0, select bank1
  4634  0436  085B               	movf	ADC_convert@x^(0+128),w
  4635  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4636  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4637  0439  00A0               	movwf	___fltol@f1
  4638  043A  160A  118A  26E9  120A  118A  	fcall	___fltol
  4639  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4640  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4641  0441  0820               	movf	?___fltol,w
  4642  0442  3E30               	addlw	48
  4643  0443  00E5               	movwf	??_ADC_convert
  4644  0444  1683               	bsf	3,5	;RP0=1, select bank1
  4645  0445  1303               	bcf	3,6	;RP1=0, select bank1
  4646  0446  085F               	movf	ADC_convert@i^(0+128),w
  4647  0447  075A               	addwf	ADC_convert@data^(0+128),w
  4648  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4649  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4650  044A  00E6               	movwf	??_ADC_convert+1
  4651  044B  0866               	movf	??_ADC_convert+1,w
  4652  044C  0084               	movwf	4
  4653  044D  0865               	movf	??_ADC_convert,w
  4654  044E  1383               	bcf	3,7	;select IRP bank0
  4655  044F  0080               	movwf	0
  4656  0450                     l4225:
  4657                           
  4658                           ;Master_PIC.c: 408:          i++;
  4659  0450  3001               	movlw	1
  4660  0451  1683               	bsf	3,5	;RP0=1, select bank1
  4661  0452  1303               	bcf	3,6	;RP1=0, select bank1
  4662  0453  07DF               	addwf	ADC_convert@i^(0+128),f
  4663  0454  1803               	skipnc
  4664  0455  0AE0               	incf	(ADC_convert@i+1)^(0+128),f
  4665  0456  3000               	movlw	0
  4666  0457  07E0               	addwf	(ADC_convert@i+1)^(0+128),f
  4667  0458                     l4227:
  4668                           
  4669                           ;Master_PIC.c: 409:          digits--;
  4670  0458  30FF               	movlw	255
  4671  0459  07E1               	addwf	ADC_convert@digits^(0+128),f
  4672  045A  1803               	skipnc
  4673  045B  0AE2               	incf	(ADC_convert@digits+1)^(0+128),f
  4674  045C  30FF               	movlw	255
  4675  045D  07E2               	addwf	(ADC_convert@digits+1)^(0+128),f
  4676  045E                     l4229:
  4677                           
  4678                           ;Master_PIC.c: 410:          mu=1;
  4679  045E  3001               	movlw	1
  4680  045F  00E3               	movwf	ADC_convert@mu^(0+128)
  4681  0460  3000               	movlw	0
  4682  0461  00E4               	movwf	(ADC_convert@mu^(0+128)+1)
  4683  0462                     l4231:
  4684                           
  4685                           ;Master_PIC.c: 400:      while(digits!=0)
  4686  0462  0861               	movf	ADC_convert@digits^(0+128),w
  4687  0463  0462               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4688  0464  1D03               	btfss	3,2
  4689  0465  2C67               	goto	u5841
  4690  0466  2C68               	goto	u5840
  4691  0467                     u5841:
  4692  0467  2B2B               	goto	l4209
  4693  0468                     u5840:
  4694  0468                     l4233:
  4695                           
  4696                           ;Master_PIC.c: 413:     data[i]='\n';
  4697  0468  300A               	movlw	10
  4698  0469  1283               	bcf	3,5	;RP0=0, select bank0
  4699  046A  1303               	bcf	3,6	;RP1=0, select bank0
  4700  046B  00E5               	movwf	??_ADC_convert
  4701  046C  1683               	bsf	3,5	;RP0=1, select bank1
  4702  046D  1303               	bcf	3,6	;RP1=0, select bank1
  4703  046E  085F               	movf	ADC_convert@i^(0+128),w
  4704  046F  075A               	addwf	ADC_convert@data^(0+128),w
  4705  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0472  00E6               	movwf	??_ADC_convert+1
  4708  0473  0866               	movf	??_ADC_convert+1,w
  4709  0474  0084               	movwf	4
  4710  0475  0865               	movf	??_ADC_convert,w
  4711  0476  1383               	bcf	3,7	;select IRP bank0
  4712  0477  0080               	movwf	0
  4713  0478                     l219:
  4714  0478  0008               	return
  4715  0479                     __end_of_ADC_convert:
  4716                           
  4717                           	psect	text17
  4718  090E                     __ptext17:	
  4719 ;; *************** function ___xxtofl *****************
  4720 ;; Defined at:
  4721 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  sign            1    wreg     unsigned char 
  4724 ;;  val             4   15[BANK0 ] long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;  sign            1   23[BANK0 ] unsigned char 
  4727 ;;  arg             4   25[BANK0 ] unsigned long 
  4728 ;;  exp             1   24[BANK0 ] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  4   15[BANK0 ] unsigned char 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       4       0       0       0
  4739 ;;      Locals:         0       6       0       0       0
  4740 ;;      Temps:          0       4       0       0       0
  4741 ;;      Totals:         0      14       0       0       0
  4742 ;;Total ram usage:       14 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_LCD_Send
  4749 ;;		_ADC_convert
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function ___xxtofl
  4755  090E                     ___xxtofl:
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4759                           ;___xxtofl@sign stored from wreg
  4760  090E  1283               	bcf	3,5	;RP0=0, select bank0
  4761  090F  1303               	bcf	3,6	;RP1=0, select bank0
  4762  0910  00B7               	movwf	___xxtofl@sign
  4763  0911                     l4019:
  4764  0911  0837               	movf	___xxtofl@sign,w
  4765  0912  1903               	btfsc	3,2
  4766  0913  2915               	goto	u5581
  4767  0914  2916               	goto	u5580
  4768  0915                     u5581:
  4769  0915  292A               	goto	l4025
  4770  0916                     u5580:
  4771  0916                     l4021:
  4772  0916  1FB2               	btfss	___xxtofl@val+3,7
  4773  0917  2919               	goto	u5591
  4774  0918  291A               	goto	u5590
  4775  0919                     u5591:
  4776  0919  292A               	goto	l4025
  4777  091A                     u5590:
  4778  091A                     l4023:
  4779  091A  092F               	comf	___xxtofl@val,w
  4780  091B  00B9               	movwf	___xxtofl@arg
  4781  091C  0930               	comf	___xxtofl@val+1,w
  4782  091D  00BA               	movwf	___xxtofl@arg+1
  4783  091E  0931               	comf	___xxtofl@val+2,w
  4784  091F  00BB               	movwf	___xxtofl@arg+2
  4785  0920  0932               	comf	___xxtofl@val+3,w
  4786  0921  00BC               	movwf	___xxtofl@arg+3
  4787  0922  0AB9               	incf	___xxtofl@arg,f
  4788  0923  1903               	skipnz
  4789  0924  0ABA               	incf	___xxtofl@arg+1,f
  4790  0925  1903               	skipnz
  4791  0926  0ABB               	incf	___xxtofl@arg+2,f
  4792  0927  1903               	skipnz
  4793  0928  0ABC               	incf	___xxtofl@arg+3,f
  4794  0929  2932               	goto	l886
  4795  092A                     l4025:
  4796  092A  0832               	movf	___xxtofl@val+3,w
  4797  092B  00BC               	movwf	___xxtofl@arg+3
  4798  092C  0831               	movf	___xxtofl@val+2,w
  4799  092D  00BB               	movwf	___xxtofl@arg+2
  4800  092E  0830               	movf	___xxtofl@val+1,w
  4801  092F  00BA               	movwf	___xxtofl@arg+1
  4802  0930  082F               	movf	___xxtofl@val,w
  4803  0931  00B9               	movwf	___xxtofl@arg
  4804  0932                     l886:
  4805  0932  0832               	movf	___xxtofl@val+3,w
  4806  0933  0431               	iorwf	___xxtofl@val+2,w
  4807  0934  0430               	iorwf	___xxtofl@val+1,w
  4808  0935  042F               	iorwf	___xxtofl@val,w
  4809  0936  1D03               	skipz
  4810  0937  2939               	goto	u5601
  4811  0938  293A               	goto	u5600
  4812  0939                     u5601:
  4813  0939  2943               	goto	l4031
  4814  093A                     u5600:
  4815  093A                     l4027:
  4816  093A  3000               	movlw	0
  4817  093B  00B2               	movwf	?___xxtofl+3
  4818  093C  3000               	movlw	0
  4819  093D  00B1               	movwf	?___xxtofl+2
  4820  093E  3000               	movlw	0
  4821  093F  00B0               	movwf	?___xxtofl+1
  4822  0940  3000               	movlw	0
  4823  0941  00AF               	movwf	?___xxtofl
  4824  0942  29C9               	goto	l888
  4825  0943                     l4031:
  4826  0943  3096               	movlw	150
  4827  0944  00B3               	movwf	??___xxtofl
  4828  0945  0833               	movf	??___xxtofl,w
  4829  0946  00B8               	movwf	___xxtofl@exp
  4830  0947  2955               	goto	l4035
  4831  0948                     l4033:
  4832  0948  3001               	movlw	1
  4833  0949  00B3               	movwf	??___xxtofl
  4834  094A  0833               	movf	??___xxtofl,w
  4835  094B  07B8               	addwf	___xxtofl@exp,f
  4836  094C  3001               	movlw	1
  4837  094D                     u5615:
  4838  094D  1003               	clrc
  4839  094E  0CBC               	rrf	___xxtofl@arg+3,f
  4840  094F  0CBB               	rrf	___xxtofl@arg+2,f
  4841  0950  0CBA               	rrf	___xxtofl@arg+1,f
  4842  0951  0CB9               	rrf	___xxtofl@arg,f
  4843  0952  3EFF               	addlw	-1
  4844  0953  1D03               	skipz
  4845  0954  294D               	goto	u5615
  4846  0955                     l4035:
  4847  0955  30FE               	movlw	254
  4848  0956  053C               	andwf	___xxtofl@arg+3,w
  4849  0957  1D03               	btfss	3,2
  4850  0958  295A               	goto	u5621
  4851  0959  295B               	goto	u5620
  4852  095A                     u5621:
  4853  095A  2948               	goto	l4033
  4854  095B                     u5620:
  4855  095B  2977               	goto	l892
  4856  095C                     l4037:
  4857  095C  3001               	movlw	1
  4858  095D  00B3               	movwf	??___xxtofl
  4859  095E  0833               	movf	??___xxtofl,w
  4860  095F  07B8               	addwf	___xxtofl@exp,f
  4861  0960                     l4039:
  4862  0960  3001               	movlw	1
  4863  0961  07B9               	addwf	___xxtofl@arg,f
  4864  0962  3000               	movlw	0
  4865  0963  1803               	skipnc
  4866  0964  3001               	movlw	1
  4867  0965  07BA               	addwf	___xxtofl@arg+1,f
  4868  0966  3000               	movlw	0
  4869  0967  1803               	skipnc
  4870  0968  3001               	movlw	1
  4871  0969  07BB               	addwf	___xxtofl@arg+2,f
  4872  096A  3000               	movlw	0
  4873  096B  1803               	skipnc
  4874  096C  3001               	movlw	1
  4875  096D  07BC               	addwf	___xxtofl@arg+3,f
  4876  096E                     l4041:
  4877  096E  3001               	movlw	1
  4878  096F                     u5635:
  4879  096F  1003               	clrc
  4880  0970  0CBC               	rrf	___xxtofl@arg+3,f
  4881  0971  0CBB               	rrf	___xxtofl@arg+2,f
  4882  0972  0CBA               	rrf	___xxtofl@arg+1,f
  4883  0973  0CB9               	rrf	___xxtofl@arg,f
  4884  0974  3EFF               	addlw	-1
  4885  0975  1D03               	skipz
  4886  0976  296F               	goto	u5635
  4887  0977                     l892:
  4888  0977  30FF               	movlw	255
  4889  0978  053C               	andwf	___xxtofl@arg+3,w
  4890  0979  1D03               	btfss	3,2
  4891  097A  297C               	goto	u5641
  4892  097B  297D               	goto	u5640
  4893  097C                     u5641:
  4894  097C  295C               	goto	l4037
  4895  097D                     u5640:
  4896  097D  2989               	goto	l4045
  4897  097E                     l4043:
  4898  097E  3001               	movlw	1
  4899  097F  02B8               	subwf	___xxtofl@exp,f
  4900  0980  3001               	movlw	1
  4901  0981  00B3               	movwf	??___xxtofl
  4902  0982                     u5655:
  4903  0982  1003               	clrc
  4904  0983  0DB9               	rlf	___xxtofl@arg,f
  4905  0984  0DBA               	rlf	___xxtofl@arg+1,f
  4906  0985  0DBB               	rlf	___xxtofl@arg+2,f
  4907  0986  0DBC               	rlf	___xxtofl@arg+3,f
  4908  0987  0BB3               	decfsz	??___xxtofl,f
  4909  0988  2982               	goto	u5655
  4910  0989                     l4045:
  4911  0989  1BBB               	btfsc	___xxtofl@arg+2,7
  4912  098A  298C               	goto	u5661
  4913  098B  298D               	goto	u5660
  4914  098C                     u5661:
  4915  098C  2993               	goto	l899
  4916  098D                     u5660:
  4917  098D                     l4047:
  4918  098D  3002               	movlw	2
  4919  098E  0238               	subwf	___xxtofl@exp,w
  4920  098F  1803               	skipnc
  4921  0990  2992               	goto	u5671
  4922  0991  2993               	goto	u5670
  4923  0992                     u5671:
  4924  0992  297E               	goto	l4043
  4925  0993                     u5670:
  4926  0993                     l899:
  4927  0993  1838               	btfsc	___xxtofl@exp,0
  4928  0994  2996               	goto	u5681
  4929  0995  2997               	goto	u5680
  4930  0996                     u5681:
  4931  0996  299F               	goto	l900
  4932  0997                     u5680:
  4933  0997                     l4049:
  4934  0997  30FF               	movlw	255
  4935  0998  05B9               	andwf	___xxtofl@arg,f
  4936  0999  30FF               	movlw	255
  4937  099A  05BA               	andwf	___xxtofl@arg+1,f
  4938  099B  307F               	movlw	127
  4939  099C  05BB               	andwf	___xxtofl@arg+2,f
  4940  099D  30FF               	movlw	255
  4941  099E  05BC               	andwf	___xxtofl@arg+3,f
  4942  099F                     l900:
  4943  099F  1003               	clrc
  4944  09A0  0CB8               	rrf	___xxtofl@exp,f
  4945  09A1                     l4051:
  4946  09A1  0838               	movf	___xxtofl@exp,w
  4947  09A2  00B3               	movwf	??___xxtofl
  4948  09A3  01B4               	clrf	??___xxtofl+1
  4949  09A4  01B5               	clrf	??___xxtofl+2
  4950  09A5  01B6               	clrf	??___xxtofl+3
  4951  09A6  3018               	movlw	24
  4952  09A7                     u5695:
  4953  09A7  1003               	clrc
  4954  09A8  0DB3               	rlf	??___xxtofl,f
  4955  09A9  0DB4               	rlf	??___xxtofl+1,f
  4956  09AA  0DB5               	rlf	??___xxtofl+2,f
  4957  09AB  0DB6               	rlf	??___xxtofl+3,f
  4958  09AC                     u5690:
  4959  09AC  3EFF               	addlw	-1
  4960  09AD  1D03               	skipz
  4961  09AE  29A7               	goto	u5695
  4962  09AF  0833               	movf	??___xxtofl,w
  4963  09B0  04B9               	iorwf	___xxtofl@arg,f
  4964  09B1  0834               	movf	??___xxtofl+1,w
  4965  09B2  04BA               	iorwf	___xxtofl@arg+1,f
  4966  09B3  0835               	movf	??___xxtofl+2,w
  4967  09B4  04BB               	iorwf	___xxtofl@arg+2,f
  4968  09B5  0836               	movf	??___xxtofl+3,w
  4969  09B6  04BC               	iorwf	___xxtofl@arg+3,f
  4970  09B7                     l4053:
  4971  09B7  0837               	movf	___xxtofl@sign,w
  4972  09B8  1903               	btfsc	3,2
  4973  09B9  29BB               	goto	u5701
  4974  09BA  29BC               	goto	u5700
  4975  09BB                     u5701:
  4976  09BB  29C1               	goto	l4059
  4977  09BC                     u5700:
  4978  09BC                     l4055:
  4979  09BC  1FB2               	btfss	___xxtofl@val+3,7
  4980  09BD  29BF               	goto	u5711
  4981  09BE  29C0               	goto	u5710
  4982  09BF                     u5711:
  4983  09BF  29C1               	goto	l4059
  4984  09C0                     u5710:
  4985  09C0                     l4057:
  4986  09C0  17BC               	bsf	___xxtofl@arg+3,7
  4987  09C1                     l4059:
  4988  09C1  083C               	movf	___xxtofl@arg+3,w
  4989  09C2  00B2               	movwf	?___xxtofl+3
  4990  09C3  083B               	movf	___xxtofl@arg+2,w
  4991  09C4  00B1               	movwf	?___xxtofl+2
  4992  09C5  083A               	movf	___xxtofl@arg+1,w
  4993  09C6  00B0               	movwf	?___xxtofl+1
  4994  09C7  0839               	movf	___xxtofl@arg,w
  4995  09C8  00AF               	movwf	?___xxtofl
  4996  09C9                     l888:
  4997  09C9  0008               	return
  4998  09CA                     __end_of___xxtofl:
  4999                           
  5000                           	psect	text18
  5001  1337                     __ptext18:	
  5002 ;; *************** function ___wmul *****************
  5003 ;; Defined at:
  5004 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  multiplier      2    9[BANK0 ] unsigned int 
  5007 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  product         2   13[BANK0 ] unsigned int 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  2    9[BANK0 ] unsigned int 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5019 ;;      Params:         0       4       0       0       0
  5020 ;;      Locals:         0       2       0       0       0
  5021 ;;      Temps:          0       0       0       0       0
  5022 ;;      Totals:         0       6       0       0       0
  5023 ;;Total ram usage:        6 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; Hardware stack levels required when called: 1
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_ADC_convert
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function ___wmul
  5035  1337                     ___wmul:
  5036  1337                     l3579:	
  5037                           ;incstack = 0
  5038                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5039                           
  5040  1337  1283               	bcf	3,5	;RP0=0, select bank0
  5041  1338  1303               	bcf	3,6	;RP1=0, select bank0
  5042  1339  01AD               	clrf	___wmul@product
  5043  133A  01AE               	clrf	___wmul@product+1
  5044  133B                     l3581:
  5045  133B  1C29               	btfss	___wmul@multiplier,0
  5046  133C  2B3E               	goto	u4521
  5047  133D  2B3F               	goto	u4520
  5048  133E                     u4521:
  5049  133E  2B45               	goto	l453
  5050  133F                     u4520:
  5051  133F                     l3583:
  5052  133F  082B               	movf	___wmul@multiplicand,w
  5053  1340  07AD               	addwf	___wmul@product,f
  5054  1341  1803               	skipnc
  5055  1342  0AAE               	incf	___wmul@product+1,f
  5056  1343  082C               	movf	___wmul@multiplicand+1,w
  5057  1344  07AE               	addwf	___wmul@product+1,f
  5058  1345                     l453:
  5059  1345  3001               	movlw	1
  5060  1346                     u4535:
  5061  1346  1003               	clrc
  5062  1347  0DAB               	rlf	___wmul@multiplicand,f
  5063  1348  0DAC               	rlf	___wmul@multiplicand+1,f
  5064  1349  3EFF               	addlw	-1
  5065  134A  1D03               	skipz
  5066  134B  2B46               	goto	u4535
  5067  134C                     l3585:
  5068  134C  3001               	movlw	1
  5069  134D                     u4545:
  5070  134D  1003               	clrc
  5071  134E  0CAA               	rrf	___wmul@multiplier+1,f
  5072  134F  0CA9               	rrf	___wmul@multiplier,f
  5073  1350  3EFF               	addlw	-1
  5074  1351  1D03               	skipz
  5075  1352  2B4D               	goto	u4545
  5076  1353                     l3587:
  5077  1353  0829               	movf	___wmul@multiplier,w
  5078  1354  042A               	iorwf	___wmul@multiplier+1,w
  5079  1355  1D03               	btfss	3,2
  5080  1356  2B58               	goto	u4551
  5081  1357  2B59               	goto	u4550
  5082  1358                     u4551:
  5083  1358  2B3B               	goto	l3581
  5084  1359                     u4550:
  5085  1359                     l3589:
  5086  1359  082E               	movf	___wmul@product+1,w
  5087  135A  00AA               	movwf	?___wmul+1
  5088  135B  082D               	movf	___wmul@product,w
  5089  135C  00A9               	movwf	?___wmul
  5090  135D                     l455:
  5091  135D  0008               	return
  5092  135E                     __end_of___wmul:
  5093                           
  5094                           	psect	text19
  5095  16E9                     __ptext19:	
  5096 ;; *************** function ___fltol *****************
  5097 ;; Defined at:
  5098 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  f1              4    0[BANK0 ] unsigned int 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  exp1            1    5[COMMON] unsigned char 
  5103 ;;  sign1           1    4[COMMON] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  4    0[BANK0 ] long 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5113 ;;      Params:         0       4       0       0       0
  5114 ;;      Locals:         2       0       0       0       0
  5115 ;;      Temps:          0       5       0       0       0
  5116 ;;      Totals:         2       9       0       0       0
  5117 ;;Total ram usage:       11 bytes
  5118 ;; Hardware stack levels used: 1
  5119 ;; Hardware stack levels required when called: 1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_ADC_convert
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           
  5128                           ;psect for function ___fltol
  5129  16E9                     ___fltol:
  5130  16E9                     l3695:	
  5131                           ;incstack = 0
  5132                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5133                           
  5134  16E9  1003               	clrc
  5135  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  5136  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  5137  16EC  0D22               	rlf	___fltol@f1+2,w
  5138  16ED  0D23               	rlf	___fltol@f1+3,w
  5139  16EE  00A4               	movwf	??___fltol
  5140  16EF  0824               	movf	??___fltol,w
  5141  16F0  00F5               	movwf	___fltol@exp1
  5142  16F1  0875               	movf	___fltol@exp1,w
  5143  16F2  1D03               	btfss	3,2
  5144  16F3  2EF5               	goto	u4821
  5145  16F4  2EF6               	goto	u4820
  5146  16F5                     u4821:
  5147  16F5  2EFF               	goto	l3701
  5148  16F6                     u4820:
  5149  16F6                     l3697:
  5150  16F6  3000               	movlw	0
  5151  16F7  00A3               	movwf	?___fltol+3
  5152  16F8  3000               	movlw	0
  5153  16F9  00A2               	movwf	?___fltol+2
  5154  16FA  3000               	movlw	0
  5155  16FB  00A1               	movwf	?___fltol+1
  5156  16FC  3000               	movlw	0
  5157  16FD  00A0               	movwf	?___fltol
  5158  16FE  2F64               	goto	l639
  5159  16FF                     l3701:
  5160  16FF  0820               	movf	___fltol@f1,w
  5161  1700  00A4               	movwf	??___fltol
  5162  1701  0821               	movf	___fltol@f1+1,w
  5163  1702  00A5               	movwf	??___fltol+1
  5164  1703  0822               	movf	___fltol@f1+2,w
  5165  1704  00A6               	movwf	??___fltol+2
  5166  1705  0823               	movf	___fltol@f1+3,w
  5167  1706  00A7               	movwf	??___fltol+3
  5168  1707  301F               	movlw	31
  5169  1708                     u4835:
  5170  1708  1003               	clrc
  5171  1709  0CA7               	rrf	??___fltol+3,f
  5172  170A  0CA6               	rrf	??___fltol+2,f
  5173  170B  0CA5               	rrf	??___fltol+1,f
  5174  170C  0CA4               	rrf	??___fltol,f
  5175  170D                     u4830:
  5176  170D  3EFF               	addlw	-1
  5177  170E  1D03               	skipz
  5178  170F  2F08               	goto	u4835
  5179  1710  0824               	movf	??___fltol,w
  5180  1711  00A8               	movwf	??___fltol+4
  5181  1712  0828               	movf	??___fltol+4,w
  5182  1713  00F4               	movwf	___fltol@sign1
  5183  1714                     l3703:
  5184  1714  17A2               	bsf	___fltol@f1+2,7
  5185  1715                     l3705:
  5186  1715  30FF               	movlw	255
  5187  1716  05A0               	andwf	___fltol@f1,f
  5188  1717  30FF               	movlw	255
  5189  1718  05A1               	andwf	___fltol@f1+1,f
  5190  1719  30FF               	movlw	255
  5191  171A  05A2               	andwf	___fltol@f1+2,f
  5192  171B  3000               	movlw	0
  5193  171C  05A3               	andwf	___fltol@f1+3,f
  5194  171D                     l3707:
  5195  171D  3096               	movlw	150
  5196  171E  02F5               	subwf	___fltol@exp1,f
  5197  171F                     l3709:
  5198  171F  1FF5               	btfss	___fltol@exp1,7
  5199  1720  2F22               	goto	u4841
  5200  1721  2F23               	goto	u4840
  5201  1722                     u4841:
  5202  1722  2F3D               	goto	l3719
  5203  1723                     u4840:
  5204  1723                     l3711:
  5205  1723  0875               	movf	___fltol@exp1,w
  5206  1724  3A80               	xorlw	128
  5207  1725  3E97               	addlw	151
  5208  1726  1803               	skipnc
  5209  1727  2F29               	goto	u4851
  5210  1728  2F2A               	goto	u4850
  5211  1729                     u4851:
  5212  1729  2F2B               	goto	l3717
  5213  172A                     u4850:
  5214  172A  2EF6               	goto	l3697
  5215  172B                     l3717:
  5216  172B  3001               	movlw	1
  5217  172C                     u4865:
  5218  172C  1003               	clrc
  5219  172D  0CA3               	rrf	___fltol@f1+3,f
  5220  172E  0CA2               	rrf	___fltol@f1+2,f
  5221  172F  0CA1               	rrf	___fltol@f1+1,f
  5222  1730  0CA0               	rrf	___fltol@f1,f
  5223  1731  3EFF               	addlw	-1
  5224  1732  1D03               	skipz
  5225  1733  2F2C               	goto	u4865
  5226  1734  3001               	movlw	1
  5227  1735  00A4               	movwf	??___fltol
  5228  1736  0824               	movf	??___fltol,w
  5229  1737  07F5               	addwf	___fltol@exp1,f
  5230  1738  1D03               	btfss	3,2
  5231  1739  2F3B               	goto	u4871
  5232  173A  2F3C               	goto	u4870
  5233  173B                     u4871:
  5234  173B  2F2B               	goto	l3717
  5235  173C                     u4870:
  5236  173C  2F54               	goto	l3727
  5237  173D                     l3719:
  5238  173D  3020               	movlw	32
  5239  173E  0275               	subwf	___fltol@exp1,w
  5240  173F  1C03               	skipc
  5241  1740  2F42               	goto	u4881
  5242  1741  2F43               	goto	u4880
  5243  1742                     u4881:
  5244  1742  2F4F               	goto	l646
  5245  1743                     u4880:
  5246  1743  2EF6               	goto	l3697
  5247  1744                     l3725:
  5248  1744  3001               	movlw	1
  5249  1745  00A4               	movwf	??___fltol
  5250  1746                     u4895:
  5251  1746  1003               	clrc
  5252  1747  0DA0               	rlf	___fltol@f1,f
  5253  1748  0DA1               	rlf	___fltol@f1+1,f
  5254  1749  0DA2               	rlf	___fltol@f1+2,f
  5255  174A  0DA3               	rlf	___fltol@f1+3,f
  5256  174B  0BA4               	decfsz	??___fltol,f
  5257  174C  2F46               	goto	u4895
  5258  174D  3001               	movlw	1
  5259  174E  02F5               	subwf	___fltol@exp1,f
  5260  174F                     l646:
  5261  174F  0875               	movf	___fltol@exp1,w
  5262  1750  1D03               	btfss	3,2
  5263  1751  2F53               	goto	u4901
  5264  1752  2F54               	goto	u4900
  5265  1753                     u4901:
  5266  1753  2F44               	goto	l3725
  5267  1754                     u4900:
  5268  1754                     l3727:
  5269  1754  0874               	movf	___fltol@sign1,w
  5270  1755  1903               	btfsc	3,2
  5271  1756  2F58               	goto	u4911
  5272  1757  2F59               	goto	u4910
  5273  1758                     u4911:
  5274  1758  2F64               	goto	l649
  5275  1759                     u4910:
  5276  1759                     l3729:
  5277  1759  09A0               	comf	___fltol@f1,f
  5278  175A  09A1               	comf	___fltol@f1+1,f
  5279  175B  09A2               	comf	___fltol@f1+2,f
  5280  175C  09A3               	comf	___fltol@f1+3,f
  5281  175D  0AA0               	incf	___fltol@f1,f
  5282  175E  1903               	skipnz
  5283  175F  0AA1               	incf	___fltol@f1+1,f
  5284  1760  1903               	skipnz
  5285  1761  0AA2               	incf	___fltol@f1+2,f
  5286  1762  1903               	skipnz
  5287  1763  0AA3               	incf	___fltol@f1+3,f
  5288  1764                     l649:
  5289  1764                     l639:
  5290  1764  0008               	return
  5291  1765                     __end_of___fltol:
  5292                           
  5293                           	psect	text20
  5294  07DA                     __ptext20:	
  5295 ;; *************** function ___flsub *****************
  5296 ;; Defined at:
  5297 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;  a               4   29[BANK0 ] long 
  5300 ;;  b               4   33[BANK0 ] long 
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  4   29[BANK0 ] long 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5312 ;;      Params:         0       8       0       0       0
  5313 ;;      Locals:         0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0
  5315 ;;      Totals:         0       8       0       0       0
  5316 ;;Total ram usage:        8 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; Hardware stack levels required when called: 2
  5319 ;; This function calls:
  5320 ;;		___fladd
  5321 ;; This function is called by:
  5322 ;;		_ADC_convert
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           
  5327                           ;psect for function ___flsub
  5328  07DA                     ___flsub:
  5329  07DA                     l3731:	
  5330                           ;incstack = 0
  5331                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5332                           
  5333  07DA  3080               	movlw	128
  5334  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5335  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5336  07DD  06C0               	xorwf	___flsub@a+3,f
  5337  07DE                     l3733:
  5338  07DE  0844               	movf	___flsub@b+3,w
  5339  07DF  00A3               	movwf	___fladd@b+3
  5340  07E0  0843               	movf	___flsub@b+2,w
  5341  07E1  00A2               	movwf	___fladd@b+2
  5342  07E2  0842               	movf	___flsub@b+1,w
  5343  07E3  00A1               	movwf	___fladd@b+1
  5344  07E4  0841               	movf	___flsub@b,w
  5345  07E5  00A0               	movwf	___fladd@b
  5346  07E6  0840               	movf	___flsub@a+3,w
  5347  07E7  00A7               	movwf	___fladd@a+3
  5348  07E8  083F               	movf	___flsub@a+2,w
  5349  07E9  00A6               	movwf	___fladd@a+2
  5350  07EA  083E               	movf	___flsub@a+1,w
  5351  07EB  00A5               	movwf	___fladd@a+1
  5352  07EC  083D               	movf	___flsub@a,w
  5353  07ED  00A4               	movwf	___fladd@a
  5354  07EE  120A  158A  2578  120A  118A  	fcall	___fladd
  5355  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5356  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5357  07F5  0823               	movf	?___fladd+3,w
  5358  07F6  00C0               	movwf	?___flsub+3
  5359  07F7  0822               	movf	?___fladd+2,w
  5360  07F8  00BF               	movwf	?___flsub+2
  5361  07F9  0821               	movf	?___fladd+1,w
  5362  07FA  00BE               	movwf	?___flsub+1
  5363  07FB  0820               	movf	?___fladd,w
  5364  07FC  00BD               	movwf	?___flsub
  5365  07FD                     l792:
  5366  07FD  0008               	return
  5367  07FE                     __end_of___flsub:
  5368                           
  5369                           	psect	text21
  5370  0D78                     __ptext21:	
  5371 ;; *************** function ___fladd *****************
  5372 ;; Defined at:
  5373 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  b               4    0[BANK0 ] long 
  5376 ;;  a               4    4[BANK0 ] long 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  grs             1   19[BANK0 ] unsigned char 
  5379 ;;  bexp            1   18[BANK0 ] unsigned char 
  5380 ;;  aexp            1   17[BANK0 ] unsigned char 
  5381 ;;  signs           1   16[BANK0 ] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  4    0[BANK0 ] unsigned char 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0, btemp+1
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5391 ;;      Params:         0       8       0       0       0
  5392 ;;      Locals:         0       4       0       0       0
  5393 ;;      Temps:          0       8       0       0       0
  5394 ;;      Totals:         0      20       0       0       0
  5395 ;;Total ram usage:       20 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; Hardware stack levels required when called: 1
  5398 ;; This function calls:
  5399 ;;		Nothing
  5400 ;; This function is called by:
  5401 ;;		___flsub
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function ___fladd
  5407  0D78                     ___fladd:
  5408  0D78                     l3361:	
  5409                           ;incstack = 0
  5410                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5411                           
  5412  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0D7A  0823               	movf	___fladd@b+3,w
  5415  0D7B  3980               	andlw	128
  5416  0D7C  00A8               	movwf	??___fladd
  5417  0D7D  0828               	movf	??___fladd,w
  5418  0D7E  00B0               	movwf	___fladd@signs
  5419  0D7F                     l3363:
  5420  0D7F  0823               	movf	___fladd@b+3,w
  5421  0D80  00A8               	movwf	??___fladd
  5422  0D81  0728               	addwf	??___fladd,w
  5423  0D82  00A9               	movwf	??___fladd+1
  5424  0D83  0829               	movf	??___fladd+1,w
  5425  0D84  00B2               	movwf	___fladd@bexp
  5426  0D85                     l3365:
  5427  0D85  1FA2               	btfss	___fladd@b+2,7
  5428  0D86  2D88               	goto	u4011
  5429  0D87  2D89               	goto	u4010
  5430  0D88                     u4011:
  5431  0D88  2D8A               	goto	l3369
  5432  0D89                     u4010:
  5433  0D89                     l3367:
  5434  0D89  1432               	bsf	___fladd@bexp,0
  5435  0D8A                     l3369:
  5436  0D8A  0832               	movf	___fladd@bexp,w
  5437  0D8B  1903               	btfsc	3,2
  5438  0D8C  2D8E               	goto	u4021
  5439  0D8D  2D8F               	goto	u4020
  5440  0D8E                     u4021:
  5441  0D8E  2D9F               	goto	l3379
  5442  0D8F                     u4020:
  5443  0D8F                     l3371:
  5444  0D8F  0A32               	incf	___fladd@bexp,w
  5445  0D90  1D03               	btfss	3,2
  5446  0D91  2D93               	goto	u4031
  5447  0D92  2D94               	goto	u4030
  5448  0D93                     u4031:
  5449  0D93  2D9C               	goto	l3375
  5450  0D94                     u4030:
  5451  0D94                     l3373:
  5452  0D94  3000               	movlw	0
  5453  0D95  00A3               	movwf	___fladd@b+3
  5454  0D96  3000               	movlw	0
  5455  0D97  00A2               	movwf	___fladd@b+2
  5456  0D98  3000               	movlw	0
  5457  0D99  00A1               	movwf	___fladd@b+1
  5458  0D9A  3000               	movlw	0
  5459  0D9B  00A0               	movwf	___fladd@b
  5460  0D9C                     l3375:
  5461  0D9C  17A2               	bsf	___fladd@b+2,7
  5462  0D9D                     l3377:
  5463  0D9D  01A3               	clrf	___fladd@b+3
  5464  0D9E  2DA7               	goto	l3381
  5465  0D9F                     l3379:
  5466  0D9F  3000               	movlw	0
  5467  0DA0  00A3               	movwf	___fladd@b+3
  5468  0DA1  3000               	movlw	0
  5469  0DA2  00A2               	movwf	___fladd@b+2
  5470  0DA3  3000               	movlw	0
  5471  0DA4  00A1               	movwf	___fladd@b+1
  5472  0DA5  3000               	movlw	0
  5473  0DA6  00A0               	movwf	___fladd@b
  5474  0DA7                     l3381:
  5475  0DA7  0827               	movf	___fladd@a+3,w
  5476  0DA8  3980               	andlw	128
  5477  0DA9  00A8               	movwf	??___fladd
  5478  0DAA  0828               	movf	??___fladd,w
  5479  0DAB  00B1               	movwf	___fladd@aexp
  5480  0DAC                     l3383:
  5481  0DAC  0831               	movf	___fladd@aexp,w
  5482  0DAD  0630               	xorwf	___fladd@signs,w
  5483  0DAE  1903               	skipnz
  5484  0DAF  2DB1               	goto	u4041
  5485  0DB0  2DB2               	goto	u4040
  5486  0DB1                     u4041:
  5487  0DB1  2DB3               	goto	l3387
  5488  0DB2                     u4040:
  5489  0DB2                     l3385:
  5490  0DB2  1730               	bsf	___fladd@signs,6
  5491  0DB3                     l3387:
  5492  0DB3  0827               	movf	___fladd@a+3,w
  5493  0DB4  00A8               	movwf	??___fladd
  5494  0DB5  0728               	addwf	??___fladd,w
  5495  0DB6  00A9               	movwf	??___fladd+1
  5496  0DB7  0829               	movf	??___fladd+1,w
  5497  0DB8  00B1               	movwf	___fladd@aexp
  5498  0DB9                     l3389:
  5499  0DB9  1FA6               	btfss	___fladd@a+2,7
  5500  0DBA  2DBC               	goto	u4051
  5501  0DBB  2DBD               	goto	u4050
  5502  0DBC                     u4051:
  5503  0DBC  2DBE               	goto	l3393
  5504  0DBD                     u4050:
  5505  0DBD                     l3391:
  5506  0DBD  1431               	bsf	___fladd@aexp,0
  5507  0DBE                     l3393:
  5508  0DBE  0831               	movf	___fladd@aexp,w
  5509  0DBF  1903               	btfsc	3,2
  5510  0DC0  2DC2               	goto	u4061
  5511  0DC1  2DC3               	goto	u4060
  5512  0DC2                     u4061:
  5513  0DC2  2DD3               	goto	l3403
  5514  0DC3                     u4060:
  5515  0DC3                     l3395:
  5516  0DC3  0A31               	incf	___fladd@aexp,w
  5517  0DC4  1D03               	btfss	3,2
  5518  0DC5  2DC7               	goto	u4071
  5519  0DC6  2DC8               	goto	u4070
  5520  0DC7                     u4071:
  5521  0DC7  2DD0               	goto	l3399
  5522  0DC8                     u4070:
  5523  0DC8                     l3397:
  5524  0DC8  3000               	movlw	0
  5525  0DC9  00A7               	movwf	___fladd@a+3
  5526  0DCA  3000               	movlw	0
  5527  0DCB  00A6               	movwf	___fladd@a+2
  5528  0DCC  3000               	movlw	0
  5529  0DCD  00A5               	movwf	___fladd@a+1
  5530  0DCE  3000               	movlw	0
  5531  0DCF  00A4               	movwf	___fladd@a
  5532  0DD0                     l3399:
  5533  0DD0  17A6               	bsf	___fladd@a+2,7
  5534  0DD1                     l3401:
  5535  0DD1  01A7               	clrf	___fladd@a+3
  5536  0DD2  2DDB               	goto	l746
  5537  0DD3                     l3403:
  5538  0DD3  3000               	movlw	0
  5539  0DD4  00A7               	movwf	___fladd@a+3
  5540  0DD5  3000               	movlw	0
  5541  0DD6  00A6               	movwf	___fladd@a+2
  5542  0DD7  3000               	movlw	0
  5543  0DD8  00A5               	movwf	___fladd@a+1
  5544  0DD9  3000               	movlw	0
  5545  0DDA  00A4               	movwf	___fladd@a
  5546  0DDB                     l746:
  5547  0DDB  0832               	movf	___fladd@bexp,w
  5548  0DDC  0231               	subwf	___fladd@aexp,w
  5549  0DDD  1803               	skipnc
  5550  0DDE  2DE0               	goto	u4081
  5551  0DDF  2DE1               	goto	u4080
  5552  0DE0                     u4081:
  5553  0DE0  2E25               	goto	l3439
  5554  0DE1                     u4080:
  5555  0DE1                     l3405:
  5556  0DE1  1F30               	btfss	___fladd@signs,6
  5557  0DE2  2DE4               	goto	u4091
  5558  0DE3  2DE5               	goto	u4090
  5559  0DE4                     u4091:
  5560  0DE4  2DE9               	goto	l3409
  5561  0DE5                     u4090:
  5562  0DE5                     l3407:
  5563  0DE5  3080               	movlw	128
  5564  0DE6  00A8               	movwf	??___fladd
  5565  0DE7  0828               	movf	??___fladd,w
  5566  0DE8  06B0               	xorwf	___fladd@signs,f
  5567  0DE9                     l3409:
  5568  0DE9  0832               	movf	___fladd@bexp,w
  5569  0DEA  00A8               	movwf	??___fladd
  5570  0DEB  0828               	movf	??___fladd,w
  5571  0DEC  00B3               	movwf	___fladd@grs
  5572  0DED                     l3411:
  5573  0DED  0831               	movf	___fladd@aexp,w
  5574  0DEE  00A8               	movwf	??___fladd
  5575  0DEF  0828               	movf	??___fladd,w
  5576  0DF0  00B2               	movwf	___fladd@bexp
  5577  0DF1                     l3413:
  5578  0DF1  0833               	movf	___fladd@grs,w
  5579  0DF2  00A8               	movwf	??___fladd
  5580  0DF3  0828               	movf	??___fladd,w
  5581  0DF4  00B1               	movwf	___fladd@aexp
  5582  0DF5                     l3415:
  5583  0DF5  0820               	movf	___fladd@b,w
  5584  0DF6  00A8               	movwf	??___fladd
  5585  0DF7  0828               	movf	??___fladd,w
  5586  0DF8  00B3               	movwf	___fladd@grs
  5587  0DF9                     l3417:
  5588  0DF9  0824               	movf	___fladd@a,w
  5589  0DFA  00A8               	movwf	??___fladd
  5590  0DFB  0828               	movf	??___fladd,w
  5591  0DFC  00A0               	movwf	___fladd@b
  5592  0DFD                     l3419:
  5593  0DFD  0833               	movf	___fladd@grs,w
  5594  0DFE  00A8               	movwf	??___fladd
  5595  0DFF  0828               	movf	??___fladd,w
  5596  0E00  00A4               	movwf	___fladd@a
  5597  0E01                     l3421:
  5598  0E01  0821               	movf	___fladd@b+1,w
  5599  0E02  00A8               	movwf	??___fladd
  5600  0E03  0828               	movf	??___fladd,w
  5601  0E04  00B3               	movwf	___fladd@grs
  5602  0E05                     l3423:
  5603  0E05  0825               	movf	___fladd@a+1,w
  5604  0E06  00A8               	movwf	??___fladd
  5605  0E07  0828               	movf	??___fladd,w
  5606  0E08  00A1               	movwf	___fladd@b+1
  5607  0E09                     l3425:
  5608  0E09  0833               	movf	___fladd@grs,w
  5609  0E0A  00A8               	movwf	??___fladd
  5610  0E0B  0828               	movf	??___fladd,w
  5611  0E0C  00A5               	movwf	___fladd@a+1
  5612  0E0D                     l3427:
  5613  0E0D  0822               	movf	___fladd@b+2,w
  5614  0E0E  00A8               	movwf	??___fladd
  5615  0E0F  0828               	movf	??___fladd,w
  5616  0E10  00B3               	movwf	___fladd@grs
  5617  0E11                     l3429:
  5618  0E11  0826               	movf	___fladd@a+2,w
  5619  0E12  00A8               	movwf	??___fladd
  5620  0E13  0828               	movf	??___fladd,w
  5621  0E14  00A2               	movwf	___fladd@b+2
  5622  0E15                     l3431:
  5623  0E15  0833               	movf	___fladd@grs,w
  5624  0E16  00A8               	movwf	??___fladd
  5625  0E17  0828               	movf	??___fladd,w
  5626  0E18  00A6               	movwf	___fladd@a+2
  5627  0E19                     l3433:
  5628  0E19  0823               	movf	___fladd@b+3,w
  5629  0E1A  00A8               	movwf	??___fladd
  5630  0E1B  0828               	movf	??___fladd,w
  5631  0E1C  00B3               	movwf	___fladd@grs
  5632  0E1D                     l3435:
  5633  0E1D  0827               	movf	___fladd@a+3,w
  5634  0E1E  00A8               	movwf	??___fladd
  5635  0E1F  0828               	movf	??___fladd,w
  5636  0E20  00A3               	movwf	___fladd@b+3
  5637  0E21                     l3437:
  5638  0E21  0833               	movf	___fladd@grs,w
  5639  0E22  00A8               	movwf	??___fladd
  5640  0E23  0828               	movf	??___fladd,w
  5641  0E24  00A7               	movwf	___fladd@a+3
  5642  0E25                     l3439:
  5643  0E25  01B3               	clrf	___fladd@grs
  5644  0E26                     l3441:
  5645  0E26  0831               	movf	___fladd@aexp,w
  5646  0E27  00A8               	movwf	??___fladd
  5647  0E28  01A9               	clrf	??___fladd+1
  5648  0E29  0829               	movf	??___fladd+1,w
  5649  0E2A  00AB               	movwf	??___fladd+3
  5650  0E2B  0832               	movf	___fladd@bexp,w
  5651  0E2C  0228               	subwf	??___fladd,w
  5652  0E2D  00AA               	movwf	??___fladd+2
  5653  0E2E  1C03               	skipc
  5654  0E2F  03AB               	decf	??___fladd+3,f
  5655  0E30  082B               	movf	??___fladd+3,w
  5656  0E31  3A80               	xorlw	128
  5657  0E32  00FF               	movwf	btemp+1
  5658  0E33  3080               	movlw	128
  5659  0E34  027F               	subwf	btemp+1,w
  5660  0E35  1D03               	skipz
  5661  0E36  2E39               	goto	u4105
  5662  0E37  301A               	movlw	26
  5663  0E38  022A               	subwf	??___fladd+2,w
  5664  0E39                     u4105:
  5665  0E39  1C03               	skipc
  5666  0E3A  2E3C               	goto	u4101
  5667  0E3B  2E3D               	goto	u4100
  5668  0E3C                     u4101:
  5669  0E3C  2E7A               	goto	l3457
  5670  0E3D                     u4100:
  5671  0E3D                     l3443:
  5672  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5673  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5674  0E3F  0823               	movf	___fladd@b+3,w
  5675  0E40  0422               	iorwf	___fladd@b+2,w
  5676  0E41  0421               	iorwf	___fladd@b+1,w
  5677  0E42  0420               	iorwf	___fladd@b,w
  5678  0E43  1D03               	skipz
  5679  0E44  2E46               	goto	u4111
  5680  0E45  2E48               	goto	u4110
  5681  0E46                     u4111:
  5682  0E46  3001               	movlw	1
  5683  0E47  2E49               	goto	u4120
  5684  0E48                     u4110:
  5685  0E48  3000               	movlw	0
  5686  0E49                     u4120:
  5687  0E49  00A8               	movwf	??___fladd
  5688  0E4A  0828               	movf	??___fladd,w
  5689  0E4B  00B3               	movwf	___fladd@grs
  5690  0E4C  3000               	movlw	0
  5691  0E4D  00A3               	movwf	___fladd@b+3
  5692  0E4E  3000               	movlw	0
  5693  0E4F  00A2               	movwf	___fladd@b+2
  5694  0E50  3000               	movlw	0
  5695  0E51  00A1               	movwf	___fladd@b+1
  5696  0E52  3000               	movlw	0
  5697  0E53  00A0               	movwf	___fladd@b
  5698  0E54  0831               	movf	___fladd@aexp,w
  5699  0E55  00A8               	movwf	??___fladd
  5700  0E56  0828               	movf	??___fladd,w
  5701  0E57  00B2               	movwf	___fladd@bexp
  5702  0E58  2E82               	goto	l750
  5703  0E59                     l752:
  5704  0E59  1C33               	btfss	___fladd@grs,0
  5705  0E5A  2E5C               	goto	u4131
  5706  0E5B  2E5D               	goto	u4130
  5707  0E5C                     u4131:
  5708  0E5C  2E66               	goto	l3447
  5709  0E5D                     u4130:
  5710  0E5D                     l3445:
  5711  0E5D  0833               	movf	___fladd@grs,w
  5712  0E5E  00A8               	movwf	??___fladd
  5713  0E5F  1003               	clrc
  5714  0E60  0C28               	rrf	??___fladd,w
  5715  0E61  3801               	iorlw	1
  5716  0E62  00A9               	movwf	??___fladd+1
  5717  0E63  0829               	movf	??___fladd+1,w
  5718  0E64  00B3               	movwf	___fladd@grs
  5719  0E65  2E68               	goto	l3449
  5720  0E66                     l3447:
  5721  0E66  1003               	clrc
  5722  0E67  0CB3               	rrf	___fladd@grs,f
  5723  0E68                     l3449:
  5724  0E68  1C20               	btfss	___fladd@b,0
  5725  0E69  2E6B               	goto	u4141
  5726  0E6A  2E6C               	goto	u4140
  5727  0E6B                     u4141:
  5728  0E6B  2E6D               	goto	l3453
  5729  0E6C                     u4140:
  5730  0E6C                     l3451:
  5731  0E6C  17B3               	bsf	___fladd@grs,7
  5732  0E6D                     l3453:
  5733  0E6D  3001               	movlw	1
  5734  0E6E  00A8               	movwf	??___fladd
  5735  0E6F                     u4155:
  5736  0E6F  0D23               	rlf	___fladd@b+3,w
  5737  0E70  0CA3               	rrf	___fladd@b+3,f
  5738  0E71  0CA2               	rrf	___fladd@b+2,f
  5739  0E72  0CA1               	rrf	___fladd@b+1,f
  5740  0E73  0CA0               	rrf	___fladd@b,f
  5741  0E74  0BA8               	decfsz	??___fladd& (0+127),f
  5742  0E75  2E6F               	goto	u4155
  5743  0E76                     l3455:
  5744  0E76  3001               	movlw	1
  5745  0E77  00A8               	movwf	??___fladd
  5746  0E78  0828               	movf	??___fladd,w
  5747  0E79  07B2               	addwf	___fladd@bexp,f
  5748  0E7A                     l3457:
  5749  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5750  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5751  0E7C  0831               	movf	___fladd@aexp,w
  5752  0E7D  0232               	subwf	___fladd@bexp,w
  5753  0E7E  1C03               	skipc
  5754  0E7F  2E81               	goto	u4161
  5755  0E80  2E82               	goto	u4160
  5756  0E81                     u4161:
  5757  0E81  2E59               	goto	l752
  5758  0E82                     u4160:
  5759  0E82                     l750:
  5760  0E82  1B30               	btfsc	___fladd@signs,6
  5761  0E83  2E85               	goto	u4171
  5762  0E84  2E86               	goto	u4170
  5763  0E85                     u4171:
  5764  0E85  2ED1               	goto	l3483
  5765  0E86                     u4170:
  5766  0E86                     l3459:
  5767  0E86  0832               	movf	___fladd@bexp,w
  5768  0E87  1D03               	btfss	3,2
  5769  0E88  2E8A               	goto	u4181
  5770  0E89  2E8B               	goto	u4180
  5771  0E8A                     u4181:
  5772  0E8A  2E94               	goto	l3465
  5773  0E8B                     u4180:
  5774  0E8B                     l3461:
  5775  0E8B  3000               	movlw	0
  5776  0E8C  00A3               	movwf	?___fladd+3
  5777  0E8D  3000               	movlw	0
  5778  0E8E  00A2               	movwf	?___fladd+2
  5779  0E8F  3000               	movlw	0
  5780  0E90  00A1               	movwf	?___fladd+1
  5781  0E91  3000               	movlw	0
  5782  0E92  00A0               	movwf	?___fladd
  5783  0E93  2FFF               	goto	l759
  5784  0E94                     l3465:
  5785  0E94  0824               	movf	___fladd@a,w
  5786  0E95  07A0               	addwf	___fladd@b,f
  5787  0E96  0825               	movf	___fladd@a+1,w
  5788  0E97  1103               	clrz
  5789  0E98  1803               	skipnc
  5790  0E99  3E01               	addlw	1
  5791  0E9A  1903               	skipnz
  5792  0E9B  2E9D               	goto	u4191
  5793  0E9C  07A1               	addwf	___fladd@b+1,f
  5794  0E9D                     u4191:
  5795  0E9D  0826               	movf	___fladd@a+2,w
  5796  0E9E  1103               	clrz
  5797  0E9F  1803               	skipnc
  5798  0EA0  3E01               	addlw	1
  5799  0EA1  1903               	skipnz
  5800  0EA2  2EA4               	goto	u4192
  5801  0EA3  07A2               	addwf	___fladd@b+2,f
  5802  0EA4                     u4192:
  5803  0EA4  0827               	movf	___fladd@a+3,w
  5804  0EA5  1103               	clrz
  5805  0EA6  1803               	skipnc
  5806  0EA7  3E01               	addlw	1
  5807  0EA8  1903               	skipnz
  5808  0EA9  2EAB               	goto	u4193
  5809  0EAA  07A3               	addwf	___fladd@b+3,f
  5810  0EAB                     u4193:
  5811  0EAB                     l3467:
  5812  0EAB  1C23               	btfss	___fladd@b+3,0
  5813  0EAC  2EAE               	goto	u4201
  5814  0EAD  2EAF               	goto	u4200
  5815  0EAE                     u4201:
  5816  0EAE  2F85               	goto	l3517
  5817  0EAF                     u4200:
  5818  0EAF                     l3469:
  5819  0EAF  1C33               	btfss	___fladd@grs,0
  5820  0EB0  2EB2               	goto	u4211
  5821  0EB1  2EB3               	goto	u4210
  5822  0EB2                     u4211:
  5823  0EB2  2EBC               	goto	l3473
  5824  0EB3                     u4210:
  5825  0EB3                     l3471:
  5826  0EB3  0833               	movf	___fladd@grs,w
  5827  0EB4  00A8               	movwf	??___fladd
  5828  0EB5  1003               	clrc
  5829  0EB6  0C28               	rrf	??___fladd,w
  5830  0EB7  3801               	iorlw	1
  5831  0EB8  00A9               	movwf	??___fladd+1
  5832  0EB9  0829               	movf	??___fladd+1,w
  5833  0EBA  00B3               	movwf	___fladd@grs
  5834  0EBB  2EBE               	goto	l3475
  5835  0EBC                     l3473:
  5836  0EBC  1003               	clrc
  5837  0EBD  0CB3               	rrf	___fladd@grs,f
  5838  0EBE                     l3475:
  5839  0EBE  1C20               	btfss	___fladd@b,0
  5840  0EBF  2EC1               	goto	u4221
  5841  0EC0  2EC2               	goto	u4220
  5842  0EC1                     u4221:
  5843  0EC1  2EC3               	goto	l3479
  5844  0EC2                     u4220:
  5845  0EC2                     l3477:
  5846  0EC2  17B3               	bsf	___fladd@grs,7
  5847  0EC3                     l3479:
  5848  0EC3  3001               	movlw	1
  5849  0EC4  00A8               	movwf	??___fladd
  5850  0EC5                     u4235:
  5851  0EC5  0D23               	rlf	___fladd@b+3,w
  5852  0EC6  0CA3               	rrf	___fladd@b+3,f
  5853  0EC7  0CA2               	rrf	___fladd@b+2,f
  5854  0EC8  0CA1               	rrf	___fladd@b+1,f
  5855  0EC9  0CA0               	rrf	___fladd@b,f
  5856  0ECA  0BA8               	decfsz	??___fladd& (0+127),f
  5857  0ECB  2EC5               	goto	u4235
  5858  0ECC                     l3481:
  5859  0ECC  3001               	movlw	1
  5860  0ECD  00A8               	movwf	??___fladd
  5861  0ECE  0828               	movf	??___fladd,w
  5862  0ECF  07B2               	addwf	___fladd@bexp,f
  5863  0ED0  2F85               	goto	l3517
  5864  0ED1                     l3483:
  5865  0ED1  0823               	movf	___fladd@b+3,w
  5866  0ED2  3A80               	xorlw	128
  5867  0ED3  00FF               	movwf	btemp+1
  5868  0ED4  0827               	movf	___fladd@a+3,w
  5869  0ED5  3A80               	xorlw	128
  5870  0ED6  027F               	subwf	btemp+1,w
  5871  0ED7  1D03               	skipz
  5872  0ED8  2EE3               	goto	u4243
  5873  0ED9  0826               	movf	___fladd@a+2,w
  5874  0EDA  0222               	subwf	___fladd@b+2,w
  5875  0EDB  1D03               	skipz
  5876  0EDC  2EE3               	goto	u4243
  5877  0EDD  0825               	movf	___fladd@a+1,w
  5878  0EDE  0221               	subwf	___fladd@b+1,w
  5879  0EDF  1D03               	skipz
  5880  0EE0  2EE3               	goto	u4243
  5881  0EE1  0824               	movf	___fladd@a,w
  5882  0EE2  0220               	subwf	___fladd@b,w
  5883  0EE3                     u4243:
  5884  0EE3  1803               	skipnc
  5885  0EE4  2EE6               	goto	u4241
  5886  0EE5  2EE7               	goto	u4240
  5887  0EE6                     u4241:
  5888  0EE6  2F3F               	goto	l3493
  5889  0EE7                     u4240:
  5890  0EE7                     l3485:
  5891  0EE7  30FF               	movlw	255
  5892  0EE8  00A8               	movwf	??___fladd
  5893  0EE9  30FF               	movlw	255
  5894  0EEA  00A9               	movwf	??___fladd+1
  5895  0EEB  30FF               	movlw	255
  5896  0EEC  00AA               	movwf	??___fladd+2
  5897  0EED  30FF               	movlw	255
  5898  0EEE  00AB               	movwf	??___fladd+3
  5899  0EEF  0824               	movf	___fladd@a,w
  5900  0EF0  00AC               	movwf	??___fladd+4
  5901  0EF1  0825               	movf	___fladd@a+1,w
  5902  0EF2  00AD               	movwf	??___fladd+5
  5903  0EF3  0826               	movf	___fladd@a+2,w
  5904  0EF4  00AE               	movwf	??___fladd+6
  5905  0EF5  0827               	movf	___fladd@a+3,w
  5906  0EF6  00AF               	movwf	??___fladd+7
  5907  0EF7  0820               	movf	___fladd@b,w
  5908  0EF8  02AC               	subwf	??___fladd+4,f
  5909  0EF9  0821               	movf	___fladd@b+1,w
  5910  0EFA  1C03               	skipc
  5911  0EFB  0F21               	incfsz	___fladd@b+1,w
  5912  0EFC  2EFE               	goto	u4251
  5913  0EFD  2EFF               	goto	u4252
  5914  0EFE                     u4251:
  5915  0EFE  02AD               	subwf	??___fladd+5,f
  5916  0EFF                     u4252:
  5917  0EFF  0822               	movf	___fladd@b+2,w
  5918  0F00  1C03               	skipc
  5919  0F01  0F22               	incfsz	___fladd@b+2,w
  5920  0F02  2F04               	goto	u4253
  5921  0F03  2F05               	goto	u4254
  5922  0F04                     u4253:
  5923  0F04  02AE               	subwf	??___fladd+6,f
  5924  0F05                     u4254:
  5925  0F05  0823               	movf	___fladd@b+3,w
  5926  0F06  1C03               	skipc
  5927  0F07  0F23               	incfsz	___fladd@b+3,w
  5928  0F08  2F0A               	goto	u4255
  5929  0F09  2F0B               	goto	u4256
  5930  0F0A                     u4255:
  5931  0F0A  02AF               	subwf	??___fladd+7,f
  5932  0F0B                     u4256:
  5933  0F0B  082C               	movf	??___fladd+4,w
  5934  0F0C  07A8               	addwf	??___fladd,f
  5935  0F0D  082D               	movf	??___fladd+5,w
  5936  0F0E  1803               	skipnc
  5937  0F0F  0F2D               	incfsz	??___fladd+5,w
  5938  0F10  2F12               	goto	u4260
  5939  0F11  2F13               	goto	u4261
  5940  0F12                     u4260:
  5941  0F12  07A9               	addwf	??___fladd+1,f
  5942  0F13                     u4261:
  5943  0F13  082E               	movf	??___fladd+6,w
  5944  0F14  1803               	skipnc
  5945  0F15  0F2E               	incfsz	??___fladd+6,w
  5946  0F16  2F18               	goto	u4262
  5947  0F17  2F19               	goto	u4263
  5948  0F18                     u4262:
  5949  0F18  07AA               	addwf	??___fladd+2,f
  5950  0F19                     u4263:
  5951  0F19  082F               	movf	??___fladd+7,w
  5952  0F1A  1803               	skipnc
  5953  0F1B  0A2F               	incf	??___fladd+7,w
  5954  0F1C  07AB               	addwf	??___fladd+3,f
  5955  0F1D  082B               	movf	??___fladd+3,w
  5956  0F1E  00A3               	movwf	___fladd@b+3
  5957  0F1F  082A               	movf	??___fladd+2,w
  5958  0F20  00A2               	movwf	___fladd@b+2
  5959  0F21  0829               	movf	??___fladd+1,w
  5960  0F22  00A1               	movwf	___fladd@b+1
  5961  0F23  0828               	movf	??___fladd,w
  5962  0F24  00A0               	movwf	___fladd@b
  5963  0F25                     l3487:
  5964  0F25  3080               	movlw	128
  5965  0F26  00A8               	movwf	??___fladd
  5966  0F27  0828               	movf	??___fladd,w
  5967  0F28  06B0               	xorwf	___fladd@signs,f
  5968  0F29  09B3               	comf	___fladd@grs,f
  5969  0F2A  0AB3               	incf	___fladd@grs,f
  5970  0F2B                     l3489:
  5971  0F2B  0833               	movf	___fladd@grs,w
  5972  0F2C  1D03               	btfss	3,2
  5973  0F2D  2F2F               	goto	u4271
  5974  0F2E  2F30               	goto	u4270
  5975  0F2F                     u4271:
  5976  0F2F  2F4D               	goto	l767
  5977  0F30                     u4270:
  5978  0F30                     l3491:
  5979  0F30  3001               	movlw	1
  5980  0F31  07A0               	addwf	___fladd@b,f
  5981  0F32  3000               	movlw	0
  5982  0F33  1803               	skipnc
  5983  0F34  3001               	movlw	1
  5984  0F35  07A1               	addwf	___fladd@b+1,f
  5985  0F36  3000               	movlw	0
  5986  0F37  1803               	skipnc
  5987  0F38  3001               	movlw	1
  5988  0F39  07A2               	addwf	___fladd@b+2,f
  5989  0F3A  3000               	movlw	0
  5990  0F3B  1803               	skipnc
  5991  0F3C  3001               	movlw	1
  5992  0F3D  07A3               	addwf	___fladd@b+3,f
  5993  0F3E  2F4D               	goto	l767
  5994  0F3F                     l3493:
  5995  0F3F  0824               	movf	___fladd@a,w
  5996  0F40  02A0               	subwf	___fladd@b,f
  5997  0F41  0825               	movf	___fladd@a+1,w
  5998  0F42  1C03               	skipc
  5999  0F43  0F25               	incfsz	___fladd@a+1,w
  6000  0F44  02A1               	subwf	___fladd@b+1,f
  6001  0F45  0826               	movf	___fladd@a+2,w
  6002  0F46  1C03               	skipc
  6003  0F47  0F26               	incfsz	___fladd@a+2,w
  6004  0F48  02A2               	subwf	___fladd@b+2,f
  6005  0F49  0827               	movf	___fladd@a+3,w
  6006  0F4A  1C03               	skipc
  6007  0F4B  0F27               	incfsz	___fladd@a+3,w
  6008  0F4C  02A3               	subwf	___fladd@b+3,f
  6009  0F4D                     l767:
  6010  0F4D  0823               	movf	___fladd@b+3,w
  6011  0F4E  0422               	iorwf	___fladd@b+2,w
  6012  0F4F  0421               	iorwf	___fladd@b+1,w
  6013  0F50  0420               	iorwf	___fladd@b,w
  6014  0F51  1D03               	skipz
  6015  0F52  2F54               	goto	u4281
  6016  0F53  2F55               	goto	u4280
  6017  0F54                     u4281:
  6018  0F54  2F81               	goto	l3515
  6019  0F55                     u4280:
  6020  0F55                     l3495:
  6021  0F55  0833               	movf	___fladd@grs,w
  6022  0F56  1D03               	btfss	3,2
  6023  0F57  2F59               	goto	u4291
  6024  0F58  2F5A               	goto	u4290
  6025  0F59                     u4291:
  6026  0F59  2F81               	goto	l3515
  6027  0F5A                     u4290:
  6028  0F5A                     l3497:
  6029  0F5A  3000               	movlw	0
  6030  0F5B  00A3               	movwf	?___fladd+3
  6031  0F5C  3000               	movlw	0
  6032  0F5D  00A2               	movwf	?___fladd+2
  6033  0F5E  3000               	movlw	0
  6034  0F5F  00A1               	movwf	?___fladd+1
  6035  0F60  3000               	movlw	0
  6036  0F61  00A0               	movwf	?___fladd
  6037  0F62  2FFF               	goto	l759
  6038  0F63                     l3501:
  6039  0F63  3001               	movlw	1
  6040  0F64  00A8               	movwf	??___fladd
  6041  0F65                     u4305:
  6042  0F65  1003               	clrc
  6043  0F66  0DA0               	rlf	___fladd@b,f
  6044  0F67  0DA1               	rlf	___fladd@b+1,f
  6045  0F68  0DA2               	rlf	___fladd@b+2,f
  6046  0F69  0DA3               	rlf	___fladd@b+3,f
  6047  0F6A  0BA8               	decfsz	??___fladd,f
  6048  0F6B  2F65               	goto	u4305
  6049  0F6C                     l3503:
  6050  0F6C  1FB3               	btfss	___fladd@grs,7
  6051  0F6D  2F6F               	goto	u4311
  6052  0F6E  2F70               	goto	u4310
  6053  0F6F                     u4311:
  6054  0F6F  2F71               	goto	l771
  6055  0F70                     u4310:
  6056  0F70                     l3505:
  6057  0F70  1420               	bsf	___fladd@b,0
  6058  0F71                     l771:
  6059  0F71  1C33               	btfss	___fladd@grs,0
  6060  0F72  2F74               	goto	u4321
  6061  0F73  2F75               	goto	u4320
  6062  0F74                     u4321:
  6063  0F74  2F78               	goto	l3509
  6064  0F75                     u4320:
  6065  0F75                     l3507:
  6066  0F75  1403               	setc
  6067  0F76  0DB3               	rlf	___fladd@grs,f
  6068  0F77  2F7A               	goto	l3511
  6069  0F78                     l3509:
  6070  0F78  1003               	clrc
  6071  0F79  0DB3               	rlf	___fladd@grs,f
  6072  0F7A                     l3511:
  6073  0F7A  0832               	movf	___fladd@bexp,w
  6074  0F7B  1903               	btfsc	3,2
  6075  0F7C  2F7E               	goto	u4331
  6076  0F7D  2F7F               	goto	u4330
  6077  0F7E                     u4331:
  6078  0F7E  2F81               	goto	l3515
  6079  0F7F                     u4330:
  6080  0F7F                     l3513:
  6081  0F7F  3001               	movlw	1
  6082  0F80  02B2               	subwf	___fladd@bexp,f
  6083  0F81                     l3515:
  6084  0F81  1FA2               	btfss	___fladd@b+2,7
  6085  0F82  2F84               	goto	u4341
  6086  0F83  2F85               	goto	u4340
  6087  0F84                     u4341:
  6088  0F84  2F63               	goto	l3501
  6089  0F85                     u4340:
  6090  0F85                     l3517:
  6091  0F85  01B1               	clrf	___fladd@aexp
  6092  0F86                     l3519:
  6093  0F86  1FB3               	btfss	___fladd@grs,7
  6094  0F87  2F89               	goto	u4351
  6095  0F88  2F8A               	goto	u4350
  6096  0F89                     u4351:
  6097  0F89  2F98               	goto	l3527
  6098  0F8A                     u4350:
  6099  0F8A                     l3521:
  6100  0F8A  0833               	movf	___fladd@grs,w
  6101  0F8B  397F               	andlw	127
  6102  0F8C  1903               	btfsc	3,2
  6103  0F8D  2F8F               	goto	u4361
  6104  0F8E  2F90               	goto	u4360
  6105  0F8F                     u4361:
  6106  0F8F  2F93               	goto	l777
  6107  0F90                     u4360:
  6108  0F90                     l3523:
  6109  0F90  01B1               	clrf	___fladd@aexp
  6110  0F91  0AB1               	incf	___fladd@aexp,f
  6111  0F92  2F98               	goto	l3527
  6112  0F93                     l777:
  6113  0F93  1C20               	btfss	___fladd@b,0
  6114  0F94  2F96               	goto	u4371
  6115  0F95  2F97               	goto	u4370
  6116  0F96                     u4371:
  6117  0F96  2F98               	goto	l3527
  6118  0F97                     u4370:
  6119  0F97  2F90               	goto	l3523
  6120  0F98                     l3527:
  6121  0F98  0831               	movf	___fladd@aexp,w
  6122  0F99  1903               	btfsc	3,2
  6123  0F9A  2F9C               	goto	u4381
  6124  0F9B  2F9D               	goto	u4380
  6125  0F9C                     u4381:
  6126  0F9C  2FD1               	goto	l780
  6127  0F9D                     u4380:
  6128  0F9D                     l3529:
  6129  0F9D  3001               	movlw	1
  6130  0F9E  07A0               	addwf	___fladd@b,f
  6131  0F9F  3000               	movlw	0
  6132  0FA0  1803               	skipnc
  6133  0FA1  3001               	movlw	1
  6134  0FA2  07A1               	addwf	___fladd@b+1,f
  6135  0FA3  3000               	movlw	0
  6136  0FA4  1803               	skipnc
  6137  0FA5  3001               	movlw	1
  6138  0FA6  07A2               	addwf	___fladd@b+2,f
  6139  0FA7  3000               	movlw	0
  6140  0FA8  1803               	skipnc
  6141  0FA9  3001               	movlw	1
  6142  0FAA  07A3               	addwf	___fladd@b+3,f
  6143  0FAB                     l3531:
  6144  0FAB  1C23               	btfss	___fladd@b+3,0
  6145  0FAC  2FAE               	goto	u4391
  6146  0FAD  2FAF               	goto	u4390
  6147  0FAE                     u4391:
  6148  0FAE  2FD1               	goto	l780
  6149  0FAF                     u4390:
  6150  0FAF                     l3533:
  6151  0FAF  0820               	movf	___fladd@b,w
  6152  0FB0  00A8               	movwf	??___fladd
  6153  0FB1  0821               	movf	___fladd@b+1,w
  6154  0FB2  00A9               	movwf	??___fladd+1
  6155  0FB3  0822               	movf	___fladd@b+2,w
  6156  0FB4  00AA               	movwf	??___fladd+2
  6157  0FB5  0823               	movf	___fladd@b+3,w
  6158  0FB6  00AB               	movwf	??___fladd+3
  6159  0FB7  3001               	movlw	1
  6160  0FB8  00AC               	movwf	??___fladd+4
  6161  0FB9                     u4405:
  6162  0FB9  0D2B               	rlf	??___fladd+3,w
  6163  0FBA  0CAB               	rrf	??___fladd+3,f
  6164  0FBB  0CAA               	rrf	??___fladd+2,f
  6165  0FBC  0CA9               	rrf	??___fladd+1,f
  6166  0FBD  0CA8               	rrf	??___fladd,f
  6167  0FBE                     u4400:
  6168  0FBE  0BAC               	decfsz	??___fladd+4,f
  6169  0FBF  2FB9               	goto	u4405
  6170  0FC0  082B               	movf	??___fladd+3,w
  6171  0FC1  00A3               	movwf	___fladd@b+3
  6172  0FC2  082A               	movf	??___fladd+2,w
  6173  0FC3  00A2               	movwf	___fladd@b+2
  6174  0FC4  0829               	movf	??___fladd+1,w
  6175  0FC5  00A1               	movwf	___fladd@b+1
  6176  0FC6  0828               	movf	??___fladd,w
  6177  0FC7  00A0               	movwf	___fladd@b
  6178  0FC8  0A32               	incf	___fladd@bexp,w
  6179  0FC9  1903               	btfsc	3,2
  6180  0FCA  2FCC               	goto	u4411
  6181  0FCB  2FCD               	goto	u4410
  6182  0FCC                     u4411:
  6183  0FCC  2FD1               	goto	l780
  6184  0FCD                     u4410:
  6185  0FCD                     l3535:
  6186  0FCD  3001               	movlw	1
  6187  0FCE  00A8               	movwf	??___fladd
  6188  0FCF  0828               	movf	??___fladd,w
  6189  0FD0  07B2               	addwf	___fladd@bexp,f
  6190  0FD1                     l780:
  6191  0FD1  0A32               	incf	___fladd@bexp,w
  6192  0FD2  1903               	btfsc	3,2
  6193  0FD3  2FD5               	goto	u4421
  6194  0FD4  2FD6               	goto	u4420
  6195  0FD5                     u4421:
  6196  0FD5  2FDB               	goto	l3539
  6197  0FD6                     u4420:
  6198  0FD6                     l3537:
  6199  0FD6  0832               	movf	___fladd@bexp,w
  6200  0FD7  1D03               	btfss	3,2
  6201  0FD8  2FDA               	goto	u4431
  6202  0FD9  2FDB               	goto	u4430
  6203  0FDA                     u4431:
  6204  0FDA  2FE9               	goto	l3545
  6205  0FDB                     u4430:
  6206  0FDB                     l3539:
  6207  0FDB  3000               	movlw	0
  6208  0FDC  00A3               	movwf	___fladd@b+3
  6209  0FDD  3000               	movlw	0
  6210  0FDE  00A2               	movwf	___fladd@b+2
  6211  0FDF  3000               	movlw	0
  6212  0FE0  00A1               	movwf	___fladd@b+1
  6213  0FE1  3000               	movlw	0
  6214  0FE2  00A0               	movwf	___fladd@b
  6215  0FE3                     l3541:
  6216  0FE3  0832               	movf	___fladd@bexp,w
  6217  0FE4  1D03               	btfss	3,2
  6218  0FE5  2FE7               	goto	u4441
  6219  0FE6  2FE8               	goto	u4440
  6220  0FE7                     u4441:
  6221  0FE7  2FE9               	goto	l3545
  6222  0FE8                     u4440:
  6223  0FE8                     l3543:
  6224  0FE8  01B0               	clrf	___fladd@signs
  6225  0FE9                     l3545:
  6226  0FE9  1C32               	btfss	___fladd@bexp,0
  6227  0FEA  2FEC               	goto	u4451
  6228  0FEB  2FED               	goto	u4450
  6229  0FEC                     u4451:
  6230  0FEC  2FEF               	goto	l3549
  6231  0FED                     u4450:
  6232  0FED                     l3547:
  6233  0FED  17A2               	bsf	___fladd@b+2,7
  6234  0FEE  2FF3               	goto	l788
  6235  0FEF                     l3549:
  6236  0FEF  307F               	movlw	127
  6237  0FF0  00A8               	movwf	??___fladd
  6238  0FF1  0828               	movf	??___fladd,w
  6239  0FF2  05A2               	andwf	___fladd@b+2,f
  6240  0FF3                     l788:
  6241  0FF3  0832               	movf	___fladd@bexp,w
  6242  0FF4  00A8               	movwf	??___fladd
  6243  0FF5  1003               	clrc
  6244  0FF6  0C28               	rrf	??___fladd,w
  6245  0FF7  00A9               	movwf	??___fladd+1
  6246  0FF8  0829               	movf	??___fladd+1,w
  6247  0FF9  00A3               	movwf	___fladd@b+3
  6248  0FFA                     l3551:
  6249  0FFA  1FB0               	btfss	___fladd@signs,7
  6250  0FFB  2FFD               	goto	u4461
  6251  0FFC  2FFE               	goto	u4460
  6252  0FFD                     u4461:
  6253  0FFD  2FFF               	goto	l789
  6254  0FFE                     u4460:
  6255  0FFE                     l3553:
  6256  0FFE  17A3               	bsf	___fladd@b+3,7
  6257  0FFF                     l789:
  6258  0FFF                     l759:
  6259  0FFF  0008               	return
  6260  1000                     __end_of___fladd:
  6261                           
  6262                           	psect	text22
  6263  0479                     __ptext22:	
  6264 ;; *************** function ___flmul *****************
  6265 ;; Defined at:
  6266 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;  b               4   37[BANK0 ] unsigned char 
  6269 ;;  a               4   41[BANK0 ] unsigned char 
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  prod            4   57[BANK0 ] struct .
  6272 ;;  grs             4   52[BANK0 ] unsigned long 
  6273 ;;  temp            2   61[BANK0 ] struct .
  6274 ;;  bexp            1   56[BANK0 ] unsigned char 
  6275 ;;  aexp            1   51[BANK0 ] unsigned char 
  6276 ;;  sign            1   50[BANK0 ] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  4   37[BANK0 ] unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         0       8       0       0       0
  6287 ;;      Locals:         0      13       0       0       0
  6288 ;;      Temps:          0       5       0       0       0
  6289 ;;      Totals:         0      26       0       0       0
  6290 ;;Total ram usage:       26 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 2
  6293 ;; This function calls:
  6294 ;;		__Umul8_16
  6295 ;; This function is called by:
  6296 ;;		_ADC_convert
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           
  6301                           ;psect for function ___flmul
  6302  0479                     ___flmul:
  6303  0479                     l3879:	
  6304                           ;incstack = 0
  6305                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6306                           
  6307  0479  1283               	bcf	3,5	;RP0=0, select bank0
  6308  047A  1303               	bcf	3,6	;RP1=0, select bank0
  6309  047B  0848               	movf	___flmul@b+3,w
  6310  047C  3980               	andlw	128
  6311  047D  00CD               	movwf	??___flmul
  6312  047E  084D               	movf	??___flmul,w
  6313  047F  00D2               	movwf	___flmul@sign
  6314  0480                     l3881:
  6315  0480  0848               	movf	___flmul@b+3,w
  6316  0481  00CD               	movwf	??___flmul
  6317  0482  074D               	addwf	??___flmul,w
  6318  0483  00CE               	movwf	??___flmul+1
  6319  0484  084E               	movf	??___flmul+1,w
  6320  0485  00D8               	movwf	___flmul@bexp
  6321  0486                     l3883:
  6322  0486  1FC7               	btfss	___flmul@b+2,7
  6323  0487  2C89               	goto	u5211
  6324  0488  2C8A               	goto	u5210
  6325  0489                     u5211:
  6326  0489  2C8B               	goto	l3887
  6327  048A                     u5210:
  6328  048A                     l3885:
  6329  048A  1458               	bsf	___flmul@bexp,0
  6330  048B                     l3887:
  6331  048B  0858               	movf	___flmul@bexp,w
  6332  048C  1903               	btfsc	3,2
  6333  048D  2C8F               	goto	u5221
  6334  048E  2C90               	goto	u5220
  6335  048F                     u5221:
  6336  048F  2C9F               	goto	l3895
  6337  0490                     u5220:
  6338  0490                     l3889:
  6339  0490  0A58               	incf	___flmul@bexp,w
  6340  0491  1D03               	btfss	3,2
  6341  0492  2C94               	goto	u5231
  6342  0493  2C95               	goto	u5230
  6343  0494                     u5231:
  6344  0494  2C9D               	goto	l3893
  6345  0495                     u5230:
  6346  0495                     l3891:
  6347  0495  3000               	movlw	0
  6348  0496  00C8               	movwf	___flmul@b+3
  6349  0497  3000               	movlw	0
  6350  0498  00C7               	movwf	___flmul@b+2
  6351  0499  3000               	movlw	0
  6352  049A  00C6               	movwf	___flmul@b+1
  6353  049B  3000               	movlw	0
  6354  049C  00C5               	movwf	___flmul@b
  6355  049D                     l3893:
  6356  049D  17C7               	bsf	___flmul@b+2,7
  6357  049E  2CA7               	goto	l3897
  6358  049F                     l3895:
  6359  049F  3000               	movlw	0
  6360  04A0  00C8               	movwf	___flmul@b+3
  6361  04A1  3000               	movlw	0
  6362  04A2  00C7               	movwf	___flmul@b+2
  6363  04A3  3000               	movlw	0
  6364  04A4  00C6               	movwf	___flmul@b+1
  6365  04A5  3000               	movlw	0
  6366  04A6  00C5               	movwf	___flmul@b
  6367  04A7                     l3897:
  6368  04A7  084C               	movf	___flmul@a+3,w
  6369  04A8  3980               	andlw	128
  6370  04A9  00CD               	movwf	??___flmul
  6371  04AA  084D               	movf	??___flmul,w
  6372  04AB  06D2               	xorwf	___flmul@sign,f
  6373  04AC                     l3899:
  6374  04AC  084C               	movf	___flmul@a+3,w
  6375  04AD  00CD               	movwf	??___flmul
  6376  04AE  074D               	addwf	??___flmul,w
  6377  04AF  00CE               	movwf	??___flmul+1
  6378  04B0  084E               	movf	??___flmul+1,w
  6379  04B1  00D3               	movwf	___flmul@aexp
  6380  04B2                     l3901:
  6381  04B2  1FCB               	btfss	___flmul@a+2,7
  6382  04B3  2CB5               	goto	u5241
  6383  04B4  2CB6               	goto	u5240
  6384  04B5                     u5241:
  6385  04B5  2CB7               	goto	l3905
  6386  04B6                     u5240:
  6387  04B6                     l3903:
  6388  04B6  1453               	bsf	___flmul@aexp,0
  6389  04B7                     l3905:
  6390  04B7  0853               	movf	___flmul@aexp,w
  6391  04B8  1903               	btfsc	3,2
  6392  04B9  2CBB               	goto	u5251
  6393  04BA  2CBC               	goto	u5250
  6394  04BB                     u5251:
  6395  04BB  2CCB               	goto	l3913
  6396  04BC                     u5250:
  6397  04BC                     l3907:
  6398  04BC  0A53               	incf	___flmul@aexp,w
  6399  04BD  1D03               	btfss	3,2
  6400  04BE  2CC0               	goto	u5261
  6401  04BF  2CC1               	goto	u5260
  6402  04C0                     u5261:
  6403  04C0  2CC9               	goto	l3911
  6404  04C1                     u5260:
  6405  04C1                     l3909:
  6406  04C1  3000               	movlw	0
  6407  04C2  00CC               	movwf	___flmul@a+3
  6408  04C3  3000               	movlw	0
  6409  04C4  00CB               	movwf	___flmul@a+2
  6410  04C5  3000               	movlw	0
  6411  04C6  00CA               	movwf	___flmul@a+1
  6412  04C7  3000               	movlw	0
  6413  04C8  00C9               	movwf	___flmul@a
  6414  04C9                     l3911:
  6415  04C9  17CB               	bsf	___flmul@a+2,7
  6416  04CA  2CD3               	goto	l3915
  6417  04CB                     l3913:
  6418  04CB  3000               	movlw	0
  6419  04CC  00CC               	movwf	___flmul@a+3
  6420  04CD  3000               	movlw	0
  6421  04CE  00CB               	movwf	___flmul@a+2
  6422  04CF  3000               	movlw	0
  6423  04D0  00CA               	movwf	___flmul@a+1
  6424  04D1  3000               	movlw	0
  6425  04D2  00C9               	movwf	___flmul@a
  6426  04D3                     l3915:
  6427  04D3  0853               	movf	___flmul@aexp,w
  6428  04D4  1903               	btfsc	3,2
  6429  04D5  2CD7               	goto	u5271
  6430  04D6  2CD8               	goto	u5270
  6431  04D7                     u5271:
  6432  04D7  2CDD               	goto	l3919
  6433  04D8                     u5270:
  6434  04D8                     l3917:
  6435  04D8  0858               	movf	___flmul@bexp,w
  6436  04D9  1D03               	btfss	3,2
  6437  04DA  2CDC               	goto	u5281
  6438  04DB  2CDD               	goto	u5280
  6439  04DC                     u5281:
  6440  04DC  2CE6               	goto	l3923
  6441  04DD                     u5280:
  6442  04DD                     l3919:
  6443  04DD  3000               	movlw	0
  6444  04DE  00C8               	movwf	?___flmul+3
  6445  04DF  3000               	movlw	0
  6446  04E0  00C7               	movwf	?___flmul+2
  6447  04E1  3000               	movlw	0
  6448  04E2  00C6               	movwf	?___flmul+1
  6449  04E3  3000               	movlw	0
  6450  04E4  00C5               	movwf	?___flmul
  6451  04E5  2FD9               	goto	l842
  6452  04E6                     l3923:
  6453  04E6  0845               	movf	___flmul@b,w
  6454  04E7  00CD               	movwf	??___flmul
  6455  04E8  084D               	movf	??___flmul,w
  6456  04E9  00F4               	movwf	__Umul8_16@multiplicand
  6457  04EA  084B               	movf	___flmul@a+2,w
  6458  04EB  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6459  04F0  0875               	movf	?__Umul8_16+1,w
  6460  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6461  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6462  04F3  00DE               	movwf	___flmul@temp+1
  6463  04F4  0874               	movf	?__Umul8_16,w
  6464  04F5  00DD               	movwf	___flmul@temp
  6465  04F6                     l3925:
  6466  04F6  085D               	movf	___flmul@temp,w
  6467  04F7  00CD               	movwf	??___flmul
  6468  04F8  01CE               	clrf	??___flmul+1
  6469  04F9  01CF               	clrf	??___flmul+2
  6470  04FA  01D0               	clrf	??___flmul+3
  6471  04FB  0850               	movf	??___flmul+3,w
  6472  04FC  00D7               	movwf	___flmul@grs+3
  6473  04FD  084F               	movf	??___flmul+2,w
  6474  04FE  00D6               	movwf	___flmul@grs+2
  6475  04FF  084E               	movf	??___flmul+1,w
  6476  0500  00D5               	movwf	___flmul@grs+1
  6477  0501  084D               	movf	??___flmul,w
  6478  0502  00D4               	movwf	___flmul@grs
  6479  0503                     l3927:
  6480  0503  085E               	movf	___flmul@temp+1,w
  6481  0504  00CD               	movwf	??___flmul
  6482  0505  01CE               	clrf	??___flmul+1
  6483  0506  01CF               	clrf	??___flmul+2
  6484  0507  01D0               	clrf	??___flmul+3
  6485  0508  0850               	movf	??___flmul+3,w
  6486  0509  00DC               	movwf	___flmul@prod+3
  6487  050A  084F               	movf	??___flmul+2,w
  6488  050B  00DB               	movwf	___flmul@prod+2
  6489  050C  084E               	movf	??___flmul+1,w
  6490  050D  00DA               	movwf	___flmul@prod+1
  6491  050E  084D               	movf	??___flmul,w
  6492  050F  00D9               	movwf	___flmul@prod
  6493  0510  0846               	movf	___flmul@b+1,w
  6494  0511  00CD               	movwf	??___flmul
  6495  0512  084D               	movf	??___flmul,w
  6496  0513  00F4               	movwf	__Umul8_16@multiplicand
  6497  0514  084A               	movf	___flmul@a+1,w
  6498  0515  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6499  051A  0875               	movf	?__Umul8_16+1,w
  6500  051B  1283               	bcf	3,5	;RP0=0, select bank0
  6501  051C  1303               	bcf	3,6	;RP1=0, select bank0
  6502  051D  00DE               	movwf	___flmul@temp+1
  6503  051E  0874               	movf	?__Umul8_16,w
  6504  051F  00DD               	movwf	___flmul@temp
  6505  0520                     l3929:
  6506  0520  085D               	movf	___flmul@temp,w
  6507  0521  00CD               	movwf	??___flmul
  6508  0522  01CE               	clrf	??___flmul+1
  6509  0523  01CF               	clrf	??___flmul+2
  6510  0524  01D0               	clrf	??___flmul+3
  6511  0525  084D               	movf	??___flmul,w
  6512  0526  07D4               	addwf	___flmul@grs,f
  6513  0527  084E               	movf	??___flmul+1,w
  6514  0528  1103               	clrz
  6515  0529  1803               	skipnc
  6516  052A  3E01               	addlw	1
  6517  052B  1903               	skipnz
  6518  052C  2D2E               	goto	u5291
  6519  052D  07D5               	addwf	___flmul@grs+1,f
  6520  052E                     u5291:
  6521  052E  084F               	movf	??___flmul+2,w
  6522  052F  1103               	clrz
  6523  0530  1803               	skipnc
  6524  0531  3E01               	addlw	1
  6525  0532  1903               	skipnz
  6526  0533  2D35               	goto	u5292
  6527  0534  07D6               	addwf	___flmul@grs+2,f
  6528  0535                     u5292:
  6529  0535  0850               	movf	??___flmul+3,w
  6530  0536  1103               	clrz
  6531  0537  1803               	skipnc
  6532  0538  3E01               	addlw	1
  6533  0539  1903               	skipnz
  6534  053A  2D3C               	goto	u5293
  6535  053B  07D7               	addwf	___flmul@grs+3,f
  6536  053C                     u5293:
  6537  053C                     l3931:
  6538  053C  085E               	movf	___flmul@temp+1,w
  6539  053D  00CD               	movwf	??___flmul
  6540  053E  01CE               	clrf	??___flmul+1
  6541  053F  01CF               	clrf	??___flmul+2
  6542  0540  01D0               	clrf	??___flmul+3
  6543  0541  084D               	movf	??___flmul,w
  6544  0542  07D9               	addwf	___flmul@prod,f
  6545  0543  084E               	movf	??___flmul+1,w
  6546  0544  1103               	clrz
  6547  0545  1803               	skipnc
  6548  0546  3E01               	addlw	1
  6549  0547  1903               	skipnz
  6550  0548  2D4A               	goto	u5301
  6551  0549  07DA               	addwf	___flmul@prod+1,f
  6552  054A                     u5301:
  6553  054A  084F               	movf	??___flmul+2,w
  6554  054B  1103               	clrz
  6555  054C  1803               	skipnc
  6556  054D  3E01               	addlw	1
  6557  054E  1903               	skipnz
  6558  054F  2D51               	goto	u5302
  6559  0550  07DB               	addwf	___flmul@prod+2,f
  6560  0551                     u5302:
  6561  0551  0850               	movf	??___flmul+3,w
  6562  0552  1103               	clrz
  6563  0553  1803               	skipnc
  6564  0554  3E01               	addlw	1
  6565  0555  1903               	skipnz
  6566  0556  2D58               	goto	u5303
  6567  0557  07DC               	addwf	___flmul@prod+3,f
  6568  0558                     u5303:
  6569  0558  0847               	movf	___flmul@b+2,w
  6570  0559  00CD               	movwf	??___flmul
  6571  055A  084D               	movf	??___flmul,w
  6572  055B  00F4               	movwf	__Umul8_16@multiplicand
  6573  055C  0849               	movf	___flmul@a,w
  6574  055D  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6575  0562  0875               	movf	?__Umul8_16+1,w
  6576  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6578  0565  00DE               	movwf	___flmul@temp+1
  6579  0566  0874               	movf	?__Umul8_16,w
  6580  0567  00DD               	movwf	___flmul@temp
  6581  0568                     l3933:
  6582  0568  085D               	movf	___flmul@temp,w
  6583  0569  00CD               	movwf	??___flmul
  6584  056A  01CE               	clrf	??___flmul+1
  6585  056B  01CF               	clrf	??___flmul+2
  6586  056C  01D0               	clrf	??___flmul+3
  6587  056D  084D               	movf	??___flmul,w
  6588  056E  07D4               	addwf	___flmul@grs,f
  6589  056F  084E               	movf	??___flmul+1,w
  6590  0570  1103               	clrz
  6591  0571  1803               	skipnc
  6592  0572  3E01               	addlw	1
  6593  0573  1903               	skipnz
  6594  0574  2D76               	goto	u5311
  6595  0575  07D5               	addwf	___flmul@grs+1,f
  6596  0576                     u5311:
  6597  0576  084F               	movf	??___flmul+2,w
  6598  0577  1103               	clrz
  6599  0578  1803               	skipnc
  6600  0579  3E01               	addlw	1
  6601  057A  1903               	skipnz
  6602  057B  2D7D               	goto	u5312
  6603  057C  07D6               	addwf	___flmul@grs+2,f
  6604  057D                     u5312:
  6605  057D  0850               	movf	??___flmul+3,w
  6606  057E  1103               	clrz
  6607  057F  1803               	skipnc
  6608  0580  3E01               	addlw	1
  6609  0581  1903               	skipnz
  6610  0582  2D84               	goto	u5313
  6611  0583  07D7               	addwf	___flmul@grs+3,f
  6612  0584                     u5313:
  6613  0584                     l3935:
  6614  0584  085E               	movf	___flmul@temp+1,w
  6615  0585  00CD               	movwf	??___flmul
  6616  0586  01CE               	clrf	??___flmul+1
  6617  0587  01CF               	clrf	??___flmul+2
  6618  0588  01D0               	clrf	??___flmul+3
  6619  0589  084D               	movf	??___flmul,w
  6620  058A  07D9               	addwf	___flmul@prod,f
  6621  058B  084E               	movf	??___flmul+1,w
  6622  058C  1103               	clrz
  6623  058D  1803               	skipnc
  6624  058E  3E01               	addlw	1
  6625  058F  1903               	skipnz
  6626  0590  2D92               	goto	u5321
  6627  0591  07DA               	addwf	___flmul@prod+1,f
  6628  0592                     u5321:
  6629  0592  084F               	movf	??___flmul+2,w
  6630  0593  1103               	clrz
  6631  0594  1803               	skipnc
  6632  0595  3E01               	addlw	1
  6633  0596  1903               	skipnz
  6634  0597  2D99               	goto	u5322
  6635  0598  07DB               	addwf	___flmul@prod+2,f
  6636  0599                     u5322:
  6637  0599  0850               	movf	??___flmul+3,w
  6638  059A  1103               	clrz
  6639  059B  1803               	skipnc
  6640  059C  3E01               	addlw	1
  6641  059D  1903               	skipnz
  6642  059E  2DA0               	goto	u5323
  6643  059F  07DC               	addwf	___flmul@prod+3,f
  6644  05A0                     u5323:
  6645  05A0                     l3937:
  6646  05A0  3008               	movlw	8
  6647  05A1  00CD               	movwf	??___flmul
  6648  05A2                     u5335:
  6649  05A2  1003               	clrc
  6650  05A3  0DD4               	rlf	___flmul@grs,f
  6651  05A4  0DD5               	rlf	___flmul@grs+1,f
  6652  05A5  0DD6               	rlf	___flmul@grs+2,f
  6653  05A6  0DD7               	rlf	___flmul@grs+3,f
  6654  05A7  0BCD               	decfsz	??___flmul,f
  6655  05A8  2DA2               	goto	u5335
  6656  05A9                     l3939:
  6657  05A9  0846               	movf	___flmul@b+1,w
  6658  05AA  00CD               	movwf	??___flmul
  6659  05AB  084D               	movf	??___flmul,w
  6660  05AC  00F4               	movwf	__Umul8_16@multiplicand
  6661  05AD  0849               	movf	___flmul@a,w
  6662  05AE  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6663  05B3  0875               	movf	?__Umul8_16+1,w
  6664  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  6665  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  6666  05B6  00DE               	movwf	___flmul@temp+1
  6667  05B7  0874               	movf	?__Umul8_16,w
  6668  05B8  00DD               	movwf	___flmul@temp
  6669  05B9                     l3941:
  6670  05B9  085D               	movf	___flmul@temp,w
  6671  05BA  00CD               	movwf	??___flmul
  6672  05BB  085E               	movf	___flmul@temp+1,w
  6673  05BC  00CE               	movwf	??___flmul+1
  6674  05BD  01CF               	clrf	??___flmul+2
  6675  05BE  01D0               	clrf	??___flmul+3
  6676  05BF  084D               	movf	??___flmul,w
  6677  05C0  07D4               	addwf	___flmul@grs,f
  6678  05C1  084E               	movf	??___flmul+1,w
  6679  05C2  1103               	clrz
  6680  05C3  1803               	skipnc
  6681  05C4  3E01               	addlw	1
  6682  05C5  1903               	skipnz
  6683  05C6  2DC8               	goto	u5341
  6684  05C7  07D5               	addwf	___flmul@grs+1,f
  6685  05C8                     u5341:
  6686  05C8  084F               	movf	??___flmul+2,w
  6687  05C9  1103               	clrz
  6688  05CA  1803               	skipnc
  6689  05CB  3E01               	addlw	1
  6690  05CC  1903               	skipnz
  6691  05CD  2DCF               	goto	u5342
  6692  05CE  07D6               	addwf	___flmul@grs+2,f
  6693  05CF                     u5342:
  6694  05CF  0850               	movf	??___flmul+3,w
  6695  05D0  1103               	clrz
  6696  05D1  1803               	skipnc
  6697  05D2  3E01               	addlw	1
  6698  05D3  1903               	skipnz
  6699  05D4  2DD6               	goto	u5343
  6700  05D5  07D7               	addwf	___flmul@grs+3,f
  6701  05D6                     u5343:
  6702  05D6                     l3943:
  6703  05D6  0845               	movf	___flmul@b,w
  6704  05D7  00CD               	movwf	??___flmul
  6705  05D8  084D               	movf	??___flmul,w
  6706  05D9  00F4               	movwf	__Umul8_16@multiplicand
  6707  05DA  084A               	movf	___flmul@a+1,w
  6708  05DB  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6709  05E0  0875               	movf	?__Umul8_16+1,w
  6710  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6711  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6712  05E3  00DE               	movwf	___flmul@temp+1
  6713  05E4  0874               	movf	?__Umul8_16,w
  6714  05E5  00DD               	movwf	___flmul@temp
  6715  05E6                     l3945:
  6716  05E6  085D               	movf	___flmul@temp,w
  6717  05E7  00CD               	movwf	??___flmul
  6718  05E8  085E               	movf	___flmul@temp+1,w
  6719  05E9  00CE               	movwf	??___flmul+1
  6720  05EA  01CF               	clrf	??___flmul+2
  6721  05EB  01D0               	clrf	??___flmul+3
  6722  05EC  084D               	movf	??___flmul,w
  6723  05ED  07D4               	addwf	___flmul@grs,f
  6724  05EE  084E               	movf	??___flmul+1,w
  6725  05EF  1103               	clrz
  6726  05F0  1803               	skipnc
  6727  05F1  3E01               	addlw	1
  6728  05F2  1903               	skipnz
  6729  05F3  2DF5               	goto	u5351
  6730  05F4  07D5               	addwf	___flmul@grs+1,f
  6731  05F5                     u5351:
  6732  05F5  084F               	movf	??___flmul+2,w
  6733  05F6  1103               	clrz
  6734  05F7  1803               	skipnc
  6735  05F8  3E01               	addlw	1
  6736  05F9  1903               	skipnz
  6737  05FA  2DFC               	goto	u5352
  6738  05FB  07D6               	addwf	___flmul@grs+2,f
  6739  05FC                     u5352:
  6740  05FC  0850               	movf	??___flmul+3,w
  6741  05FD  1103               	clrz
  6742  05FE  1803               	skipnc
  6743  05FF  3E01               	addlw	1
  6744  0600  1903               	skipnz
  6745  0601  2E03               	goto	u5353
  6746  0602  07D7               	addwf	___flmul@grs+3,f
  6747  0603                     u5353:
  6748  0603                     l3947:
  6749  0603  3008               	movlw	8
  6750  0604  00CD               	movwf	??___flmul
  6751  0605                     u5365:
  6752  0605  1003               	clrc
  6753  0606  0DD4               	rlf	___flmul@grs,f
  6754  0607  0DD5               	rlf	___flmul@grs+1,f
  6755  0608  0DD6               	rlf	___flmul@grs+2,f
  6756  0609  0DD7               	rlf	___flmul@grs+3,f
  6757  060A  0BCD               	decfsz	??___flmul,f
  6758  060B  2E05               	goto	u5365
  6759  060C  0845               	movf	___flmul@b,w
  6760  060D  00CD               	movwf	??___flmul
  6761  060E  084D               	movf	??___flmul,w
  6762  060F  00F4               	movwf	__Umul8_16@multiplicand
  6763  0610  0849               	movf	___flmul@a,w
  6764  0611  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6765  0616  0875               	movf	?__Umul8_16+1,w
  6766  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6767  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6768  0619  00DE               	movwf	___flmul@temp+1
  6769  061A  0874               	movf	?__Umul8_16,w
  6770  061B  00DD               	movwf	___flmul@temp
  6771  061C                     l3949:
  6772  061C  085D               	movf	___flmul@temp,w
  6773  061D  00CD               	movwf	??___flmul
  6774  061E  085E               	movf	___flmul@temp+1,w
  6775  061F  00CE               	movwf	??___flmul+1
  6776  0620  01CF               	clrf	??___flmul+2
  6777  0621  01D0               	clrf	??___flmul+3
  6778  0622  084D               	movf	??___flmul,w
  6779  0623  07D4               	addwf	___flmul@grs,f
  6780  0624  084E               	movf	??___flmul+1,w
  6781  0625  1103               	clrz
  6782  0626  1803               	skipnc
  6783  0627  3E01               	addlw	1
  6784  0628  1903               	skipnz
  6785  0629  2E2B               	goto	u5371
  6786  062A  07D5               	addwf	___flmul@grs+1,f
  6787  062B                     u5371:
  6788  062B  084F               	movf	??___flmul+2,w
  6789  062C  1103               	clrz
  6790  062D  1803               	skipnc
  6791  062E  3E01               	addlw	1
  6792  062F  1903               	skipnz
  6793  0630  2E32               	goto	u5372
  6794  0631  07D6               	addwf	___flmul@grs+2,f
  6795  0632                     u5372:
  6796  0632  0850               	movf	??___flmul+3,w
  6797  0633  1103               	clrz
  6798  0634  1803               	skipnc
  6799  0635  3E01               	addlw	1
  6800  0636  1903               	skipnz
  6801  0637  2E39               	goto	u5373
  6802  0638  07D7               	addwf	___flmul@grs+3,f
  6803  0639                     u5373:
  6804  0639                     l3951:
  6805  0639  0846               	movf	___flmul@b+1,w
  6806  063A  00CD               	movwf	??___flmul
  6807  063B  084D               	movf	??___flmul,w
  6808  063C  00F4               	movwf	__Umul8_16@multiplicand
  6809  063D  084B               	movf	___flmul@a+2,w
  6810  063E  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6811  0643  0875               	movf	?__Umul8_16+1,w
  6812  0644  1283               	bcf	3,5	;RP0=0, select bank0
  6813  0645  1303               	bcf	3,6	;RP1=0, select bank0
  6814  0646  00DE               	movwf	___flmul@temp+1
  6815  0647  0874               	movf	?__Umul8_16,w
  6816  0648  00DD               	movwf	___flmul@temp
  6817  0649  085D               	movf	___flmul@temp,w
  6818  064A  00CD               	movwf	??___flmul
  6819  064B  085E               	movf	___flmul@temp+1,w
  6820  064C  00CE               	movwf	??___flmul+1
  6821  064D  01CF               	clrf	??___flmul+2
  6822  064E  01D0               	clrf	??___flmul+3
  6823  064F  084D               	movf	??___flmul,w
  6824  0650  07D9               	addwf	___flmul@prod,f
  6825  0651  084E               	movf	??___flmul+1,w
  6826  0652  1103               	clrz
  6827  0653  1803               	skipnc
  6828  0654  3E01               	addlw	1
  6829  0655  1903               	skipnz
  6830  0656  2E58               	goto	u5381
  6831  0657  07DA               	addwf	___flmul@prod+1,f
  6832  0658                     u5381:
  6833  0658  084F               	movf	??___flmul+2,w
  6834  0659  1103               	clrz
  6835  065A  1803               	skipnc
  6836  065B  3E01               	addlw	1
  6837  065C  1903               	skipnz
  6838  065D  2E5F               	goto	u5382
  6839  065E  07DB               	addwf	___flmul@prod+2,f
  6840  065F                     u5382:
  6841  065F  0850               	movf	??___flmul+3,w
  6842  0660  1103               	clrz
  6843  0661  1803               	skipnc
  6844  0662  3E01               	addlw	1
  6845  0663  1903               	skipnz
  6846  0664  2E66               	goto	u5383
  6847  0665  07DC               	addwf	___flmul@prod+3,f
  6848  0666                     u5383:
  6849  0666                     l3953:
  6850  0666  0847               	movf	___flmul@b+2,w
  6851  0667  00CD               	movwf	??___flmul
  6852  0668  084D               	movf	??___flmul,w
  6853  0669  00F4               	movwf	__Umul8_16@multiplicand
  6854  066A  084A               	movf	___flmul@a+1,w
  6855  066B  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6856  0670  0875               	movf	?__Umul8_16+1,w
  6857  0671  1283               	bcf	3,5	;RP0=0, select bank0
  6858  0672  1303               	bcf	3,6	;RP1=0, select bank0
  6859  0673  00DE               	movwf	___flmul@temp+1
  6860  0674  0874               	movf	?__Umul8_16,w
  6861  0675  00DD               	movwf	___flmul@temp
  6862  0676                     l3955:
  6863  0676  085D               	movf	___flmul@temp,w
  6864  0677  00CD               	movwf	??___flmul
  6865  0678  085E               	movf	___flmul@temp+1,w
  6866  0679  00CE               	movwf	??___flmul+1
  6867  067A  01CF               	clrf	??___flmul+2
  6868  067B  01D0               	clrf	??___flmul+3
  6869  067C  084D               	movf	??___flmul,w
  6870  067D  07D9               	addwf	___flmul@prod,f
  6871  067E  084E               	movf	??___flmul+1,w
  6872  067F  1103               	clrz
  6873  0680  1803               	skipnc
  6874  0681  3E01               	addlw	1
  6875  0682  1903               	skipnz
  6876  0683  2E85               	goto	u5391
  6877  0684  07DA               	addwf	___flmul@prod+1,f
  6878  0685                     u5391:
  6879  0685  084F               	movf	??___flmul+2,w
  6880  0686  1103               	clrz
  6881  0687  1803               	skipnc
  6882  0688  3E01               	addlw	1
  6883  0689  1903               	skipnz
  6884  068A  2E8C               	goto	u5392
  6885  068B  07DB               	addwf	___flmul@prod+2,f
  6886  068C                     u5392:
  6887  068C  0850               	movf	??___flmul+3,w
  6888  068D  1103               	clrz
  6889  068E  1803               	skipnc
  6890  068F  3E01               	addlw	1
  6891  0690  1903               	skipnz
  6892  0691  2E93               	goto	u5393
  6893  0692  07DC               	addwf	___flmul@prod+3,f
  6894  0693                     u5393:
  6895  0693  0847               	movf	___flmul@b+2,w
  6896  0694  00CD               	movwf	??___flmul
  6897  0695  084D               	movf	??___flmul,w
  6898  0696  00F4               	movwf	__Umul8_16@multiplicand
  6899  0697  084B               	movf	___flmul@a+2,w
  6900  0698  160A  118A  2385  120A  118A  	fcall	__Umul8_16
  6901  069D  0875               	movf	?__Umul8_16+1,w
  6902  069E  1283               	bcf	3,5	;RP0=0, select bank0
  6903  069F  1303               	bcf	3,6	;RP1=0, select bank0
  6904  06A0  00DE               	movwf	___flmul@temp+1
  6905  06A1  0874               	movf	?__Umul8_16,w
  6906  06A2  00DD               	movwf	___flmul@temp
  6907  06A3                     l3957:
  6908  06A3  085D               	movf	___flmul@temp,w
  6909  06A4  00CD               	movwf	??___flmul
  6910  06A5  085E               	movf	___flmul@temp+1,w
  6911  06A6  00CE               	movwf	??___flmul+1
  6912  06A7  01CF               	clrf	??___flmul+2
  6913  06A8  01D0               	clrf	??___flmul+3
  6914  06A9  3008               	movlw	8
  6915  06AA                     u5405:
  6916  06AA  1003               	clrc
  6917  06AB  0DCD               	rlf	??___flmul,f
  6918  06AC  0DCE               	rlf	??___flmul+1,f
  6919  06AD  0DCF               	rlf	??___flmul+2,f
  6920  06AE  0DD0               	rlf	??___flmul+3,f
  6921  06AF                     u5400:
  6922  06AF  3EFF               	addlw	-1
  6923  06B0  1D03               	skipz
  6924  06B1  2EAA               	goto	u5405
  6925  06B2  084D               	movf	??___flmul,w
  6926  06B3  07D9               	addwf	___flmul@prod,f
  6927  06B4  084E               	movf	??___flmul+1,w
  6928  06B5  1103               	clrz
  6929  06B6  1803               	skipnc
  6930  06B7  3E01               	addlw	1
  6931  06B8  1903               	skipnz
  6932  06B9  2EBB               	goto	u5411
  6933  06BA  07DA               	addwf	___flmul@prod+1,f
  6934  06BB                     u5411:
  6935  06BB  084F               	movf	??___flmul+2,w
  6936  06BC  1103               	clrz
  6937  06BD  1803               	skipnc
  6938  06BE  3E01               	addlw	1
  6939  06BF  1903               	skipnz
  6940  06C0  2EC2               	goto	u5412
  6941  06C1  07DB               	addwf	___flmul@prod+2,f
  6942  06C2                     u5412:
  6943  06C2  0850               	movf	??___flmul+3,w
  6944  06C3  1103               	clrz
  6945  06C4  1803               	skipnc
  6946  06C5  3E01               	addlw	1
  6947  06C6  1903               	skipnz
  6948  06C7  2EC9               	goto	u5413
  6949  06C8  07DC               	addwf	___flmul@prod+3,f
  6950  06C9                     u5413:
  6951  06C9                     l3959:
  6952  06C9  0854               	movf	___flmul@grs,w
  6953  06CA  00CD               	movwf	??___flmul
  6954  06CB  0855               	movf	___flmul@grs+1,w
  6955  06CC  00CE               	movwf	??___flmul+1
  6956  06CD  0856               	movf	___flmul@grs+2,w
  6957  06CE  00CF               	movwf	??___flmul+2
  6958  06CF  0857               	movf	___flmul@grs+3,w
  6959  06D0  00D0               	movwf	??___flmul+3
  6960  06D1  3018               	movlw	24
  6961  06D2                     u5425:
  6962  06D2  1003               	clrc
  6963  06D3  0CD0               	rrf	??___flmul+3,f
  6964  06D4  0CCF               	rrf	??___flmul+2,f
  6965  06D5  0CCE               	rrf	??___flmul+1,f
  6966  06D6  0CCD               	rrf	??___flmul,f
  6967  06D7                     u5420:
  6968  06D7  3EFF               	addlw	-1
  6969  06D8  1D03               	skipz
  6970  06D9  2ED2               	goto	u5425
  6971  06DA  084D               	movf	??___flmul,w
  6972  06DB  07D9               	addwf	___flmul@prod,f
  6973  06DC  084E               	movf	??___flmul+1,w
  6974  06DD  1103               	clrz
  6975  06DE  1803               	skipnc
  6976  06DF  3E01               	addlw	1
  6977  06E0  1903               	skipnz
  6978  06E1  2EE3               	goto	u5431
  6979  06E2  07DA               	addwf	___flmul@prod+1,f
  6980  06E3                     u5431:
  6981  06E3  084F               	movf	??___flmul+2,w
  6982  06E4  1103               	clrz
  6983  06E5  1803               	skipnc
  6984  06E6  3E01               	addlw	1
  6985  06E7  1903               	skipnz
  6986  06E8  2EEA               	goto	u5432
  6987  06E9  07DB               	addwf	___flmul@prod+2,f
  6988  06EA                     u5432:
  6989  06EA  0850               	movf	??___flmul+3,w
  6990  06EB  1103               	clrz
  6991  06EC  1803               	skipnc
  6992  06ED  3E01               	addlw	1
  6993  06EE  1903               	skipnz
  6994  06EF  2EF1               	goto	u5433
  6995  06F0  07DC               	addwf	___flmul@prod+3,f
  6996  06F1                     u5433:
  6997  06F1                     l3961:
  6998  06F1  3008               	movlw	8
  6999  06F2  00CD               	movwf	??___flmul
  7000  06F3                     u5445:
  7001  06F3  1003               	clrc
  7002  06F4  0DD4               	rlf	___flmul@grs,f
  7003  06F5  0DD5               	rlf	___flmul@grs+1,f
  7004  06F6  0DD6               	rlf	___flmul@grs+2,f
  7005  06F7  0DD7               	rlf	___flmul@grs+3,f
  7006  06F8  0BCD               	decfsz	??___flmul,f
  7007  06F9  2EF3               	goto	u5445
  7008  06FA                     l3963:
  7009  06FA  0858               	movf	___flmul@bexp,w
  7010  06FB  0753               	addwf	___flmul@aexp,w
  7011  06FC  00CD               	movwf	??___flmul
  7012  06FD  01CE               	clrf	??___flmul+1
  7013  06FE  0DCE               	rlf	??___flmul+1,f
  7014  06FF  084D               	movf	??___flmul,w
  7015  0700  3E82               	addlw	130
  7016  0701  00DD               	movwf	___flmul@temp
  7017  0702  084E               	movf	??___flmul+1,w
  7018  0703  1803               	skipnc
  7019  0704  3E01               	addlw	1
  7020  0705  3EFF               	addlw	255
  7021  0706  00DE               	movwf	___flmul@temp+1
  7022  0707  2F25               	goto	l3975
  7023  0708                     l3965:
  7024  0708  3001               	movlw	1
  7025  0709  00CD               	movwf	??___flmul
  7026  070A                     u5455:
  7027  070A  1003               	clrc
  7028  070B  0DD9               	rlf	___flmul@prod,f
  7029  070C  0DDA               	rlf	___flmul@prod+1,f
  7030  070D  0DDB               	rlf	___flmul@prod+2,f
  7031  070E  0DDC               	rlf	___flmul@prod+3,f
  7032  070F  0BCD               	decfsz	??___flmul,f
  7033  0710  2F0A               	goto	u5455
  7034  0711                     l3967:
  7035  0711  1FD7               	btfss	___flmul@grs+3,7
  7036  0712  2F14               	goto	u5461
  7037  0713  2F15               	goto	u5460
  7038  0714                     u5461:
  7039  0714  2F16               	goto	l3971
  7040  0715                     u5460:
  7041  0715                     l3969:
  7042  0715  1459               	bsf	___flmul@prod,0
  7043  0716                     l3971:
  7044  0716  3001               	movlw	1
  7045  0717  00CD               	movwf	??___flmul
  7046  0718                     u5475:
  7047  0718  1003               	clrc
  7048  0719  0DD4               	rlf	___flmul@grs,f
  7049  071A  0DD5               	rlf	___flmul@grs+1,f
  7050  071B  0DD6               	rlf	___flmul@grs+2,f
  7051  071C  0DD7               	rlf	___flmul@grs+3,f
  7052  071D  0BCD               	decfsz	??___flmul,f
  7053  071E  2F18               	goto	u5475
  7054  071F                     l3973:
  7055  071F  30FF               	movlw	255
  7056  0720  07DD               	addwf	___flmul@temp,f
  7057  0721  1803               	skipnc
  7058  0722  0ADE               	incf	___flmul@temp+1,f
  7059  0723  30FF               	movlw	255
  7060  0724  07DE               	addwf	___flmul@temp+1,f
  7061  0725                     l3975:
  7062  0725  1FDB               	btfss	___flmul@prod+2,7
  7063  0726  2F28               	goto	u5481
  7064  0727  2F29               	goto	u5480
  7065  0728                     u5481:
  7066  0728  2F08               	goto	l3965
  7067  0729                     u5480:
  7068  0729                     l3977:
  7069  0729  01D3               	clrf	___flmul@aexp
  7070  072A                     l3979:
  7071  072A  1FD7               	btfss	___flmul@grs+3,7
  7072  072B  2F2D               	goto	u5491
  7073  072C  2F2E               	goto	u5490
  7074  072D                     u5491:
  7075  072D  2F4A               	goto	l3987
  7076  072E                     u5490:
  7077  072E                     l3981:
  7078  072E  30FF               	movlw	255
  7079  072F  0554               	andwf	___flmul@grs,w
  7080  0730  00CD               	movwf	??___flmul
  7081  0731  30FF               	movlw	255
  7082  0732  0555               	andwf	___flmul@grs+1,w
  7083  0733  00CE               	movwf	??___flmul+1
  7084  0734  30FF               	movlw	255
  7085  0735  0556               	andwf	___flmul@grs+2,w
  7086  0736  00CF               	movwf	??___flmul+2
  7087  0737  307F               	movlw	127
  7088  0738  0557               	andwf	___flmul@grs+3,w
  7089  0739  00D0               	movwf	??___flmul+3
  7090  073A  0850               	movf	??___flmul+3,w
  7091  073B  044F               	iorwf	??___flmul+2,w
  7092  073C  044E               	iorwf	??___flmul+1,w
  7093  073D  044D               	iorwf	??___flmul,w
  7094  073E  1903               	skipnz
  7095  073F  2F41               	goto	u5501
  7096  0740  2F42               	goto	u5500
  7097  0741                     u5501:
  7098  0741  2F45               	goto	l848
  7099  0742                     u5500:
  7100  0742                     l3983:
  7101  0742  01D3               	clrf	___flmul@aexp
  7102  0743  0AD3               	incf	___flmul@aexp,f
  7103  0744  2F4A               	goto	l3987
  7104  0745                     l848:
  7105  0745  1C59               	btfss	___flmul@prod,0
  7106  0746  2F48               	goto	u5511
  7107  0747  2F49               	goto	u5510
  7108  0748                     u5511:
  7109  0748  2F4A               	goto	l3987
  7110  0749                     u5510:
  7111  0749  2F42               	goto	l3983
  7112  074A                     l3987:
  7113  074A  0853               	movf	___flmul@aexp,w
  7114  074B  1903               	btfsc	3,2
  7115  074C  2F4E               	goto	u5521
  7116  074D  2F4F               	goto	u5520
  7117  074E                     u5521:
  7118  074E  2F80               	goto	l3997
  7119  074F                     u5520:
  7120  074F                     l3989:
  7121  074F  3001               	movlw	1
  7122  0750  07D9               	addwf	___flmul@prod,f
  7123  0751  3000               	movlw	0
  7124  0752  1803               	skipnc
  7125  0753  3001               	movlw	1
  7126  0754  07DA               	addwf	___flmul@prod+1,f
  7127  0755  3000               	movlw	0
  7128  0756  1803               	skipnc
  7129  0757  3001               	movlw	1
  7130  0758  07DB               	addwf	___flmul@prod+2,f
  7131  0759  3000               	movlw	0
  7132  075A  1803               	skipnc
  7133  075B  3001               	movlw	1
  7134  075C  07DC               	addwf	___flmul@prod+3,f
  7135  075D                     l3991:
  7136  075D  1C5C               	btfss	___flmul@prod+3,0
  7137  075E  2F60               	goto	u5531
  7138  075F  2F61               	goto	u5530
  7139  0760                     u5531:
  7140  0760  2F80               	goto	l3997
  7141  0761                     u5530:
  7142  0761                     l3993:
  7143  0761  0859               	movf	___flmul@prod,w
  7144  0762  00CD               	movwf	??___flmul
  7145  0763  085A               	movf	___flmul@prod+1,w
  7146  0764  00CE               	movwf	??___flmul+1
  7147  0765  085B               	movf	___flmul@prod+2,w
  7148  0766  00CF               	movwf	??___flmul+2
  7149  0767  085C               	movf	___flmul@prod+3,w
  7150  0768  00D0               	movwf	??___flmul+3
  7151  0769  3001               	movlw	1
  7152  076A  00D1               	movwf	??___flmul+4
  7153  076B                     u5545:
  7154  076B  0D50               	rlf	??___flmul+3,w
  7155  076C  0CD0               	rrf	??___flmul+3,f
  7156  076D  0CCF               	rrf	??___flmul+2,f
  7157  076E  0CCE               	rrf	??___flmul+1,f
  7158  076F  0CCD               	rrf	??___flmul,f
  7159  0770                     u5540:
  7160  0770  0BD1               	decfsz	??___flmul+4,f
  7161  0771  2F6B               	goto	u5545
  7162  0772  0850               	movf	??___flmul+3,w
  7163  0773  00DC               	movwf	___flmul@prod+3
  7164  0774  084F               	movf	??___flmul+2,w
  7165  0775  00DB               	movwf	___flmul@prod+2
  7166  0776  084E               	movf	??___flmul+1,w
  7167  0777  00DA               	movwf	___flmul@prod+1
  7168  0778  084D               	movf	??___flmul,w
  7169  0779  00D9               	movwf	___flmul@prod
  7170  077A                     l3995:
  7171  077A  3001               	movlw	1
  7172  077B  07DD               	addwf	___flmul@temp,f
  7173  077C  1803               	skipnc
  7174  077D  0ADE               	incf	___flmul@temp+1,f
  7175  077E  3000               	movlw	0
  7176  077F  07DE               	addwf	___flmul@temp+1,f
  7177  0780                     l3997:
  7178  0780  085E               	movf	___flmul@temp+1,w
  7179  0781  3A80               	xorlw	128
  7180  0782  00FF               	movwf	btemp+1
  7181  0783  3080               	movlw	128
  7182  0784  027F               	subwf	btemp+1,w
  7183  0785  1D03               	skipz
  7184  0786  2F89               	goto	u5555
  7185  0787  30FF               	movlw	255
  7186  0788  025D               	subwf	___flmul@temp,w
  7187  0789                     u5555:
  7188  0789  1C03               	skipc
  7189  078A  2F8C               	goto	u5551
  7190  078B  2F8D               	goto	u5550
  7191  078C                     u5551:
  7192  078C  2F98               	goto	l4001
  7193  078D                     u5550:
  7194  078D                     l3999:
  7195  078D  307F               	movlw	127
  7196  078E  1283               	bcf	3,5	;RP0=0, select bank0
  7197  078F  1303               	bcf	3,6	;RP1=0, select bank0
  7198  0790  00DC               	movwf	___flmul@prod+3
  7199  0791  3080               	movlw	128
  7200  0792  00DB               	movwf	___flmul@prod+2
  7201  0793  3000               	movlw	0
  7202  0794  00DA               	movwf	___flmul@prod+1
  7203  0795  3000               	movlw	0
  7204  0796  00D9               	movwf	___flmul@prod
  7205  0797  2FCD               	goto	l854
  7206  0798                     l4001:
  7207  0798  1283               	bcf	3,5	;RP0=0, select bank0
  7208  0799  1303               	bcf	3,6	;RP1=0, select bank0
  7209  079A  085E               	movf	___flmul@temp+1,w
  7210  079B  3A80               	xorlw	128
  7211  079C  00FF               	movwf	btemp+1
  7212  079D  3080               	movlw	128
  7213  079E  027F               	subwf	btemp+1,w
  7214  079F  1D03               	skipz
  7215  07A0  2FA3               	goto	u5565
  7216  07A1  3001               	movlw	1
  7217  07A2  025D               	subwf	___flmul@temp,w
  7218  07A3                     u5565:
  7219  07A3  1803               	skipnc
  7220  07A4  2FA6               	goto	u5561
  7221  07A5  2FA7               	goto	u5560
  7222  07A6                     u5561:
  7223  07A6  2FB3               	goto	l4007
  7224  07A7                     u5560:
  7225  07A7                     l4003:
  7226  07A7  3000               	movlw	0
  7227  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  7228  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  7229  07AA  00DC               	movwf	___flmul@prod+3
  7230  07AB  3000               	movlw	0
  7231  07AC  00DB               	movwf	___flmul@prod+2
  7232  07AD  3000               	movlw	0
  7233  07AE  00DA               	movwf	___flmul@prod+1
  7234  07AF  3000               	movlw	0
  7235  07B0  00D9               	movwf	___flmul@prod
  7236  07B1                     l4005:
  7237  07B1  01D2               	clrf	___flmul@sign
  7238  07B2  2FCD               	goto	l854
  7239  07B3                     l4007:
  7240  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  7241  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  7242  07B5  085D               	movf	___flmul@temp,w
  7243  07B6  00CD               	movwf	??___flmul
  7244  07B7  084D               	movf	??___flmul,w
  7245  07B8  00D8               	movwf	___flmul@bexp
  7246  07B9  30FF               	movlw	255
  7247  07BA  05D9               	andwf	___flmul@prod,f
  7248  07BB  30FF               	movlw	255
  7249  07BC  05DA               	andwf	___flmul@prod+1,f
  7250  07BD  307F               	movlw	127
  7251  07BE  05DB               	andwf	___flmul@prod+2,f
  7252  07BF  3000               	movlw	0
  7253  07C0  05DC               	andwf	___flmul@prod+3,f
  7254  07C1                     l4009:
  7255  07C1  1C58               	btfss	___flmul@bexp,0
  7256  07C2  2FC4               	goto	u5571
  7257  07C3  2FC5               	goto	u5570
  7258  07C4                     u5571:
  7259  07C4  2FC6               	goto	l4013
  7260  07C5                     u5570:
  7261  07C5                     l4011:
  7262  07C5  17DB               	bsf	___flmul@prod+2,7
  7263  07C6                     l4013:
  7264  07C6  0858               	movf	___flmul@bexp,w
  7265  07C7  00CD               	movwf	??___flmul
  7266  07C8  1003               	clrc
  7267  07C9  0C4D               	rrf	??___flmul,w
  7268  07CA  00CE               	movwf	??___flmul+1
  7269  07CB  084E               	movf	??___flmul+1,w
  7270  07CC  00DC               	movwf	___flmul@prod+3
  7271  07CD                     l854:
  7272  07CD  0852               	movf	___flmul@sign,w
  7273  07CE  00CD               	movwf	??___flmul
  7274  07CF  084D               	movf	??___flmul,w
  7275  07D0  04DC               	iorwf	___flmul@prod+3,f
  7276  07D1                     l4015:
  7277  07D1  085C               	movf	___flmul@prod+3,w
  7278  07D2  00C8               	movwf	?___flmul+3
  7279  07D3  085B               	movf	___flmul@prod+2,w
  7280  07D4  00C7               	movwf	?___flmul+2
  7281  07D5  085A               	movf	___flmul@prod+1,w
  7282  07D6  00C6               	movwf	?___flmul+1
  7283  07D7  0859               	movf	___flmul@prod,w
  7284  07D8  00C5               	movwf	?___flmul
  7285  07D9                     l842:
  7286  07D9  0008               	return
  7287  07DA                     __end_of___flmul:
  7288                           
  7289                           	psect	text23
  7290  1385                     __ptext23:	
  7291 ;; *************** function __Umul8_16 *****************
  7292 ;; Defined at:
  7293 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;  multiplier      1    wreg     unsigned char 
  7296 ;;  multiplicand    1    4[COMMON] unsigned char 
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;  multiplier      1    6[BANK0 ] unsigned char 
  7299 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  7300 ;;  product         2    2[BANK0 ] unsigned int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    4[COMMON] unsigned int 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7310 ;;      Params:         2       0       0       0       0
  7311 ;;      Locals:         0       5       0       0       0
  7312 ;;      Temps:          0       2       0       0       0
  7313 ;;      Totals:         2       7       0       0       0
  7314 ;;Total ram usage:        9 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 1
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		___flmul
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           
  7325                           ;psect for function __Umul8_16
  7326  1385                     __Umul8_16:
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7330                           ;__Umul8_16@multiplier stored from wreg
  7331  1385  1283               	bcf	3,5	;RP0=0, select bank0
  7332  1386  1303               	bcf	3,6	;RP1=0, select bank0
  7333  1387  00A6               	movwf	__Umul8_16@multiplier
  7334  1388                     l3555:
  7335  1388  01A2               	clrf	__Umul8_16@product
  7336  1389  01A3               	clrf	__Umul8_16@product+1
  7337  138A                     l3557:
  7338  138A  0874               	movf	__Umul8_16@multiplicand,w
  7339  138B  00A0               	movwf	??__Umul8_16
  7340  138C  01A1               	clrf	??__Umul8_16+1
  7341  138D  0820               	movf	??__Umul8_16,w
  7342  138E  00A4               	movwf	__Umul8_16@word_mpld
  7343  138F  0821               	movf	??__Umul8_16+1,w
  7344  1390  00A5               	movwf	__Umul8_16@word_mpld+1
  7345  1391                     l3559:
  7346  1391  1C26               	btfss	__Umul8_16@multiplier,0
  7347  1392  2B94               	goto	u4471
  7348  1393  2B95               	goto	u4470
  7349  1394                     u4471:
  7350  1394  2B9B               	goto	l861
  7351  1395                     u4470:
  7352  1395                     l3561:
  7353  1395  0824               	movf	__Umul8_16@word_mpld,w
  7354  1396  07A2               	addwf	__Umul8_16@product,f
  7355  1397  1803               	skipnc
  7356  1398  0AA3               	incf	__Umul8_16@product+1,f
  7357  1399  0825               	movf	__Umul8_16@word_mpld+1,w
  7358  139A  07A3               	addwf	__Umul8_16@product+1,f
  7359  139B                     l861:
  7360  139B  3001               	movlw	1
  7361  139C                     u4485:
  7362  139C  1003               	clrc
  7363  139D  0DA4               	rlf	__Umul8_16@word_mpld,f
  7364  139E  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  7365  139F  3EFF               	addlw	-1
  7366  13A0  1D03               	skipz
  7367  13A1  2B9C               	goto	u4485
  7368  13A2  1003               	clrc
  7369  13A3  0CA6               	rrf	__Umul8_16@multiplier,f
  7370  13A4                     l3563:
  7371  13A4  0826               	movf	__Umul8_16@multiplier,w
  7372  13A5  1D03               	btfss	3,2
  7373  13A6  2BA8               	goto	u4491
  7374  13A7  2BA9               	goto	u4490
  7375  13A8                     u4491:
  7376  13A8  2B91               	goto	l3559
  7377  13A9                     u4490:
  7378  13A9                     l3565:
  7379  13A9  0823               	movf	__Umul8_16@product+1,w
  7380  13AA  00F5               	movwf	?__Umul8_16+1
  7381  13AB  0822               	movf	__Umul8_16@product,w
  7382  13AC  00F4               	movwf	?__Umul8_16
  7383  13AD                     l863:
  7384  13AD  0008               	return
  7385  13AE                     __end_of__Umul8_16:
  7386                           
  7387                           	psect	text24
  7388  086A                     __ptext24:	
  7389 ;; *************** function ___flge *****************
  7390 ;; Defined at:
  7391 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  ff1             4    0[BANK0 ] unsigned int 
  7394 ;;  ff2             4    4[BANK0 ] unsigned int 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;		None
  7397 ;; Return value:  Size  Location     Type
  7398 ;;		None               void
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7406 ;;      Params:         0       8       0       0       0
  7407 ;;      Locals:         0       0       0       0       0
  7408 ;;      Temps:          0       4       0       0       0
  7409 ;;      Totals:         0      12       0       0       0
  7410 ;;Total ram usage:       12 bytes
  7411 ;; Hardware stack levels used: 1
  7412 ;; Hardware stack levels required when called: 1
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_ADC_convert
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           
  7421                           ;psect for function ___flge
  7422  086A                     ___flge:
  7423  086A                     l3675:	
  7424                           ;incstack = 0
  7425                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7426                           
  7427  086A  3000               	movlw	0
  7428  086B  1283               	bcf	3,5	;RP0=0, select bank0
  7429  086C  1303               	bcf	3,6	;RP1=0, select bank0
  7430  086D  0520               	andwf	___flge@ff1,w
  7431  086E  00A8               	movwf	??___flge
  7432  086F  3000               	movlw	0
  7433  0870  0521               	andwf	___flge@ff1+1,w
  7434  0871  00A9               	movwf	??___flge+1
  7435  0872  3080               	movlw	128
  7436  0873  0522               	andwf	___flge@ff1+2,w
  7437  0874  00AA               	movwf	??___flge+2
  7438  0875  307F               	movlw	127
  7439  0876  0523               	andwf	___flge@ff1+3,w
  7440  0877  00AB               	movwf	??___flge+3
  7441  0878  082B               	movf	??___flge+3,w
  7442  0879  042A               	iorwf	??___flge+2,w
  7443  087A  0429               	iorwf	??___flge+1,w
  7444  087B  0428               	iorwf	??___flge,w
  7445  087C  1D03               	skipz
  7446  087D  287F               	goto	u4751
  7447  087E  2880               	goto	u4750
  7448  087F                     u4751:
  7449  087F  2888               	goto	l627
  7450  0880                     u4750:
  7451  0880                     l3677:
  7452  0880  3000               	movlw	0
  7453  0881  00A3               	movwf	___flge@ff1+3
  7454  0882  3000               	movlw	0
  7455  0883  00A2               	movwf	___flge@ff1+2
  7456  0884  3000               	movlw	0
  7457  0885  00A1               	movwf	___flge@ff1+1
  7458  0886  3000               	movlw	0
  7459  0887  00A0               	movwf	___flge@ff1
  7460  0888                     l627:
  7461  0888  3000               	movlw	0
  7462  0889  0524               	andwf	___flge@ff2,w
  7463  088A  00A8               	movwf	??___flge
  7464  088B  3000               	movlw	0
  7465  088C  0525               	andwf	___flge@ff2+1,w
  7466  088D  00A9               	movwf	??___flge+1
  7467  088E  3080               	movlw	128
  7468  088F  0526               	andwf	___flge@ff2+2,w
  7469  0890  00AA               	movwf	??___flge+2
  7470  0891  307F               	movlw	127
  7471  0892  0527               	andwf	___flge@ff2+3,w
  7472  0893  00AB               	movwf	??___flge+3
  7473  0894  082B               	movf	??___flge+3,w
  7474  0895  042A               	iorwf	??___flge+2,w
  7475  0896  0429               	iorwf	??___flge+1,w
  7476  0897  0428               	iorwf	??___flge,w
  7477  0898  1D03               	skipz
  7478  0899  289B               	goto	u4761
  7479  089A  289C               	goto	u4760
  7480  089B                     u4761:
  7481  089B  28A4               	goto	l3681
  7482  089C                     u4760:
  7483  089C                     l3679:
  7484  089C  3000               	movlw	0
  7485  089D  00A7               	movwf	___flge@ff2+3
  7486  089E  3000               	movlw	0
  7487  089F  00A6               	movwf	___flge@ff2+2
  7488  08A0  3000               	movlw	0
  7489  08A1  00A5               	movwf	___flge@ff2+1
  7490  08A2  3000               	movlw	0
  7491  08A3  00A4               	movwf	___flge@ff2
  7492  08A4                     l3681:
  7493  08A4  1FA3               	btfss	___flge@ff1+3,7
  7494  08A5  28A7               	goto	u4771
  7495  08A6  28A8               	goto	u4770
  7496  08A7                     u4771:
  7497  08A7  28CC               	goto	l3685
  7498  08A8                     u4770:
  7499  08A8                     l3683:
  7500  08A8  3000               	movlw	0
  7501  08A9  00A8               	movwf	??___flge
  7502  08AA  3000               	movlw	0
  7503  08AB  00A9               	movwf	??___flge+1
  7504  08AC  3000               	movlw	0
  7505  08AD  00AA               	movwf	??___flge+2
  7506  08AE  3080               	movlw	128
  7507  08AF  00AB               	movwf	??___flge+3
  7508  08B0  0820               	movf	___flge@ff1,w
  7509  08B1  02A8               	subwf	??___flge,f
  7510  08B2  0821               	movf	___flge@ff1+1,w
  7511  08B3  1C03               	skipc
  7512  08B4  0F21               	incfsz	___flge@ff1+1,w
  7513  08B5  28B7               	goto	u4781
  7514  08B6  28B8               	goto	u4782
  7515  08B7                     u4781:
  7516  08B7  02A9               	subwf	??___flge+1,f
  7517  08B8                     u4782:
  7518  08B8  0822               	movf	___flge@ff1+2,w
  7519  08B9  1C03               	skipc
  7520  08BA  0F22               	incfsz	___flge@ff1+2,w
  7521  08BB  28BD               	goto	u4783
  7522  08BC  28BE               	goto	u4784
  7523  08BD                     u4783:
  7524  08BD  02AA               	subwf	??___flge+2,f
  7525  08BE                     u4784:
  7526  08BE  0823               	movf	___flge@ff1+3,w
  7527  08BF  1C03               	skipc
  7528  08C0  0F23               	incfsz	___flge@ff1+3,w
  7529  08C1  28C3               	goto	u4785
  7530  08C2  28C4               	goto	u4786
  7531  08C3                     u4785:
  7532  08C3  02AB               	subwf	??___flge+3,f
  7533  08C4                     u4786:
  7534  08C4  082B               	movf	??___flge+3,w
  7535  08C5  00A3               	movwf	___flge@ff1+3
  7536  08C6  082A               	movf	??___flge+2,w
  7537  08C7  00A2               	movwf	___flge@ff1+2
  7538  08C8  0829               	movf	??___flge+1,w
  7539  08C9  00A1               	movwf	___flge@ff1+1
  7540  08CA  0828               	movf	??___flge,w
  7541  08CB  00A0               	movwf	___flge@ff1
  7542  08CC                     l3685:
  7543  08CC  1FA7               	btfss	___flge@ff2+3,7
  7544  08CD  28CF               	goto	u4791
  7545  08CE  28D0               	goto	u4790
  7546  08CF                     u4791:
  7547  08CF  28F4               	goto	l630
  7548  08D0                     u4790:
  7549  08D0                     l3687:
  7550  08D0  3000               	movlw	0
  7551  08D1  00A8               	movwf	??___flge
  7552  08D2  3000               	movlw	0
  7553  08D3  00A9               	movwf	??___flge+1
  7554  08D4  3000               	movlw	0
  7555  08D5  00AA               	movwf	??___flge+2
  7556  08D6  3080               	movlw	128
  7557  08D7  00AB               	movwf	??___flge+3
  7558  08D8  0824               	movf	___flge@ff2,w
  7559  08D9  02A8               	subwf	??___flge,f
  7560  08DA  0825               	movf	___flge@ff2+1,w
  7561  08DB  1C03               	skipc
  7562  08DC  0F25               	incfsz	___flge@ff2+1,w
  7563  08DD  28DF               	goto	u4801
  7564  08DE  28E0               	goto	u4802
  7565  08DF                     u4801:
  7566  08DF  02A9               	subwf	??___flge+1,f
  7567  08E0                     u4802:
  7568  08E0  0826               	movf	___flge@ff2+2,w
  7569  08E1  1C03               	skipc
  7570  08E2  0F26               	incfsz	___flge@ff2+2,w
  7571  08E3  28E5               	goto	u4803
  7572  08E4  28E6               	goto	u4804
  7573  08E5                     u4803:
  7574  08E5  02AA               	subwf	??___flge+2,f
  7575  08E6                     u4804:
  7576  08E6  0827               	movf	___flge@ff2+3,w
  7577  08E7  1C03               	skipc
  7578  08E8  0F27               	incfsz	___flge@ff2+3,w
  7579  08E9  28EB               	goto	u4805
  7580  08EA  28EC               	goto	u4806
  7581  08EB                     u4805:
  7582  08EB  02AB               	subwf	??___flge+3,f
  7583  08EC                     u4806:
  7584  08EC  082B               	movf	??___flge+3,w
  7585  08ED  00A7               	movwf	___flge@ff2+3
  7586  08EE  082A               	movf	??___flge+2,w
  7587  08EF  00A6               	movwf	___flge@ff2+2
  7588  08F0  0829               	movf	??___flge+1,w
  7589  08F1  00A5               	movwf	___flge@ff2+1
  7590  08F2  0828               	movf	??___flge,w
  7591  08F3  00A4               	movwf	___flge@ff2
  7592  08F4                     l630:
  7593  08F4  3080               	movlw	128
  7594  08F5  06A3               	xorwf	___flge@ff1+3,f
  7595  08F6  3080               	movlw	128
  7596  08F7  06A7               	xorwf	___flge@ff2+3,f
  7597  08F8  0827               	movf	___flge@ff2+3,w
  7598  08F9  0223               	subwf	___flge@ff1+3,w
  7599  08FA  1D03               	skipz
  7600  08FB  2906               	goto	u4815
  7601  08FC  0826               	movf	___flge@ff2+2,w
  7602  08FD  0222               	subwf	___flge@ff1+2,w
  7603  08FE  1D03               	skipz
  7604  08FF  2906               	goto	u4815
  7605  0900  0825               	movf	___flge@ff2+1,w
  7606  0901  0221               	subwf	___flge@ff1+1,w
  7607  0902  1D03               	skipz
  7608  0903  2906               	goto	u4815
  7609  0904  0824               	movf	___flge@ff2,w
  7610  0905  0220               	subwf	___flge@ff1,w
  7611  0906                     u4815:
  7612  0906  1803               	skipnc
  7613  0907  2909               	goto	u4811
  7614  0908  290A               	goto	u4810
  7615  0909                     u4811:
  7616  0909  290C               	goto	l3691
  7617  090A                     u4810:
  7618  090A                     l3689:
  7619  090A  1003               	clrc
  7620  090B  290D               	goto	l631
  7621  090C                     l3691:
  7622  090C  1403               	setc
  7623  090D                     l631:
  7624  090D  0008               	return
  7625  090E                     __end_of___flge:
  7626                           
  7627                           	psect	text25
  7628  0B9B                     __ptext25:	
  7629 ;; *************** function ___fldiv *****************
  7630 ;; Defined at:
  7631 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  a               4   29[BANK0 ] unsigned int 
  7634 ;;  b               4   33[BANK0 ] unsigned int 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  grs             4   49[BANK0 ] unsigned long 
  7637 ;;  rem             4   42[BANK0 ] unsigned long 
  7638 ;;  new_exp         2   47[BANK0 ] int 
  7639 ;;  aexp            1   54[BANK0 ] unsigned char 
  7640 ;;  bexp            1   53[BANK0 ] unsigned char 
  7641 ;;  sign            1   46[BANK0 ] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  4   29[BANK0 ] unsigned char 
  7644 ;; Registers used:
  7645 ;;		wreg, status,2, status,0, btemp+1
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7651 ;;      Params:         0       8       0       0       0
  7652 ;;      Locals:         0      13       0       0       0
  7653 ;;      Temps:          0       5       0       0       0
  7654 ;;      Totals:         0      26       0       0       0
  7655 ;;Total ram usage:       26 bytes
  7656 ;; Hardware stack levels used: 1
  7657 ;; Hardware stack levels required when called: 1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_ADC_convert
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function ___fldiv
  7667  0B9B                     ___fldiv:
  7668  0B9B                     l3737:	
  7669                           ;incstack = 0
  7670                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7671                           
  7672  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7673  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7674  0B9D  0844               	movf	___fldiv@b+3,w
  7675  0B9E  3980               	andlw	128
  7676  0B9F  00C5               	movwf	??___fldiv
  7677  0BA0  0845               	movf	??___fldiv,w
  7678  0BA1  00CE               	movwf	___fldiv@sign
  7679  0BA2                     l3739:
  7680  0BA2  0844               	movf	___fldiv@b+3,w
  7681  0BA3  00C5               	movwf	??___fldiv
  7682  0BA4  0745               	addwf	??___fldiv,w
  7683  0BA5  00C6               	movwf	??___fldiv+1
  7684  0BA6  0846               	movf	??___fldiv+1,w
  7685  0BA7  00D5               	movwf	___fldiv@bexp
  7686  0BA8                     l3741:
  7687  0BA8  1FC3               	btfss	___fldiv@b+2,7
  7688  0BA9  2BAB               	goto	u4921
  7689  0BAA  2BAC               	goto	u4920
  7690  0BAB                     u4921:
  7691  0BAB  2BAD               	goto	l3745
  7692  0BAC                     u4920:
  7693  0BAC                     l3743:
  7694  0BAC  1455               	bsf	___fldiv@bexp,0
  7695  0BAD                     l3745:
  7696  0BAD  0855               	movf	___fldiv@bexp,w
  7697  0BAE  1903               	btfsc	3,2
  7698  0BAF  2BB1               	goto	u4931
  7699  0BB0  2BB2               	goto	u4930
  7700  0BB1                     u4931:
  7701  0BB1  2BC2               	goto	l3755
  7702  0BB2                     u4930:
  7703  0BB2                     l3747:
  7704  0BB2  0A55               	incf	___fldiv@bexp,w
  7705  0BB3  1D03               	btfss	3,2
  7706  0BB4  2BB6               	goto	u4941
  7707  0BB5  2BB7               	goto	u4940
  7708  0BB6                     u4941:
  7709  0BB6  2BBF               	goto	l3751
  7710  0BB7                     u4940:
  7711  0BB7                     l3749:
  7712  0BB7  3000               	movlw	0
  7713  0BB8  00C4               	movwf	___fldiv@b+3
  7714  0BB9  3000               	movlw	0
  7715  0BBA  00C3               	movwf	___fldiv@b+2
  7716  0BBB  3000               	movlw	0
  7717  0BBC  00C2               	movwf	___fldiv@b+1
  7718  0BBD  3000               	movlw	0
  7719  0BBE  00C1               	movwf	___fldiv@b
  7720  0BBF                     l3751:
  7721  0BBF  17C3               	bsf	___fldiv@b+2,7
  7722  0BC0                     l3753:
  7723  0BC0  01C4               	clrf	___fldiv@b+3
  7724  0BC1  2BCA               	goto	l3757
  7725  0BC2                     l3755:
  7726  0BC2  3000               	movlw	0
  7727  0BC3  00C4               	movwf	___fldiv@b+3
  7728  0BC4  3000               	movlw	0
  7729  0BC5  00C3               	movwf	___fldiv@b+2
  7730  0BC6  3000               	movlw	0
  7731  0BC7  00C2               	movwf	___fldiv@b+1
  7732  0BC8  3000               	movlw	0
  7733  0BC9  00C1               	movwf	___fldiv@b
  7734  0BCA                     l3757:
  7735  0BCA  0840               	movf	___fldiv@a+3,w
  7736  0BCB  3980               	andlw	128
  7737  0BCC  00C5               	movwf	??___fldiv
  7738  0BCD  0845               	movf	??___fldiv,w
  7739  0BCE  06CE               	xorwf	___fldiv@sign,f
  7740  0BCF                     l3759:
  7741  0BCF  0840               	movf	___fldiv@a+3,w
  7742  0BD0  00C5               	movwf	??___fldiv
  7743  0BD1  0745               	addwf	??___fldiv,w
  7744  0BD2  00C6               	movwf	??___fldiv+1
  7745  0BD3  0846               	movf	??___fldiv+1,w
  7746  0BD4  00D6               	movwf	___fldiv@aexp
  7747  0BD5                     l3761:
  7748  0BD5  1FBF               	btfss	___fldiv@a+2,7
  7749  0BD6  2BD8               	goto	u4951
  7750  0BD7  2BD9               	goto	u4950
  7751  0BD8                     u4951:
  7752  0BD8  2BDA               	goto	l3765
  7753  0BD9                     u4950:
  7754  0BD9                     l3763:
  7755  0BD9  1456               	bsf	___fldiv@aexp,0
  7756  0BDA                     l3765:
  7757  0BDA  0856               	movf	___fldiv@aexp,w
  7758  0BDB  1903               	btfsc	3,2
  7759  0BDC  2BDE               	goto	u4961
  7760  0BDD  2BDF               	goto	u4960
  7761  0BDE                     u4961:
  7762  0BDE  2BEF               	goto	l3775
  7763  0BDF                     u4960:
  7764  0BDF                     l3767:
  7765  0BDF  0A56               	incf	___fldiv@aexp,w
  7766  0BE0  1D03               	btfss	3,2
  7767  0BE1  2BE3               	goto	u4971
  7768  0BE2  2BE4               	goto	u4970
  7769  0BE3                     u4971:
  7770  0BE3  2BEC               	goto	l3771
  7771  0BE4                     u4970:
  7772  0BE4                     l3769:
  7773  0BE4  3000               	movlw	0
  7774  0BE5  00C0               	movwf	___fldiv@a+3
  7775  0BE6  3000               	movlw	0
  7776  0BE7  00BF               	movwf	___fldiv@a+2
  7777  0BE8  3000               	movlw	0
  7778  0BE9  00BE               	movwf	___fldiv@a+1
  7779  0BEA  3000               	movlw	0
  7780  0BEB  00BD               	movwf	___fldiv@a
  7781  0BEC                     l3771:
  7782  0BEC  17BF               	bsf	___fldiv@a+2,7
  7783  0BED                     l3773:
  7784  0BED  01C0               	clrf	___fldiv@a+3
  7785  0BEE  2BF7               	goto	l802
  7786  0BEF                     l3775:
  7787  0BEF  3000               	movlw	0
  7788  0BF0  00C0               	movwf	___fldiv@a+3
  7789  0BF1  3000               	movlw	0
  7790  0BF2  00BF               	movwf	___fldiv@a+2
  7791  0BF3  3000               	movlw	0
  7792  0BF4  00BE               	movwf	___fldiv@a+1
  7793  0BF5  3000               	movlw	0
  7794  0BF6  00BD               	movwf	___fldiv@a
  7795  0BF7                     l802:
  7796  0BF7  0840               	movf	___fldiv@a+3,w
  7797  0BF8  043F               	iorwf	___fldiv@a+2,w
  7798  0BF9  043E               	iorwf	___fldiv@a+1,w
  7799  0BFA  043D               	iorwf	___fldiv@a,w
  7800  0BFB  1D03               	skipz
  7801  0BFC  2BFE               	goto	u4981
  7802  0BFD  2BFF               	goto	u4980
  7803  0BFE                     u4981:
  7804  0BFE  2C18               	goto	l3785
  7805  0BFF                     u4980:
  7806  0BFF                     l3777:
  7807  0BFF  3000               	movlw	0
  7808  0C00  00C4               	movwf	___fldiv@b+3
  7809  0C01  3000               	movlw	0
  7810  0C02  00C3               	movwf	___fldiv@b+2
  7811  0C03  3000               	movlw	0
  7812  0C04  00C2               	movwf	___fldiv@b+1
  7813  0C05  3000               	movlw	0
  7814  0C06  00C1               	movwf	___fldiv@b
  7815  0C07  3080               	movlw	128
  7816  0C08  04C3               	iorwf	___fldiv@b+2,f
  7817  0C09  307F               	movlw	127
  7818  0C0A  04C4               	iorwf	___fldiv@b+3,f
  7819  0C0B                     l3779:
  7820  0C0B  084E               	movf	___fldiv@sign,w
  7821  0C0C  00C5               	movwf	??___fldiv
  7822  0C0D  0845               	movf	??___fldiv,w
  7823  0C0E  04C4               	iorwf	___fldiv@b+3,f
  7824  0C0F                     l3781:
  7825  0C0F  0844               	movf	___fldiv@b+3,w
  7826  0C10  00C0               	movwf	?___fldiv+3
  7827  0C11  0843               	movf	___fldiv@b+2,w
  7828  0C12  00BF               	movwf	?___fldiv+2
  7829  0C13  0842               	movf	___fldiv@b+1,w
  7830  0C14  00BE               	movwf	?___fldiv+1
  7831  0C15  0841               	movf	___fldiv@b,w
  7832  0C16  00BD               	movwf	?___fldiv
  7833  0C17  2D77               	goto	l804
  7834  0C18                     l3785:
  7835  0C18  0855               	movf	___fldiv@bexp,w
  7836  0C19  1D03               	btfss	3,2
  7837  0C1A  2C1C               	goto	u4991
  7838  0C1B  2C1D               	goto	u4990
  7839  0C1C                     u4991:
  7840  0C1C  2C26               	goto	l3791
  7841  0C1D                     u4990:
  7842  0C1D                     l3787:
  7843  0C1D  3000               	movlw	0
  7844  0C1E  00C0               	movwf	?___fldiv+3
  7845  0C1F  3000               	movlw	0
  7846  0C20  00BF               	movwf	?___fldiv+2
  7847  0C21  3000               	movlw	0
  7848  0C22  00BE               	movwf	?___fldiv+1
  7849  0C23  3000               	movlw	0
  7850  0C24  00BD               	movwf	?___fldiv
  7851  0C25  2D77               	goto	l804
  7852  0C26                     l3791:
  7853  0C26  0855               	movf	___fldiv@bexp,w
  7854  0C27  00C5               	movwf	??___fldiv
  7855  0C28  01C6               	clrf	??___fldiv+1
  7856  0C29  0846               	movf	??___fldiv+1,w
  7857  0C2A  00C8               	movwf	??___fldiv+3
  7858  0C2B  0856               	movf	___fldiv@aexp,w
  7859  0C2C  0245               	subwf	??___fldiv,w
  7860  0C2D  00C7               	movwf	??___fldiv+2
  7861  0C2E  1C03               	skipc
  7862  0C2F  03C8               	decf	??___fldiv+3,f
  7863  0C30  0847               	movf	??___fldiv+2,w
  7864  0C31  3E7F               	addlw	127
  7865  0C32  00CF               	movwf	___fldiv@new_exp
  7866  0C33  0848               	movf	??___fldiv+3,w
  7867  0C34  1803               	skipnc
  7868  0C35  3E01               	addlw	1
  7869  0C36  3E00               	addlw	0
  7870  0C37  00D0               	movwf	___fldiv@new_exp+1
  7871  0C38                     l3793:
  7872  0C38  0844               	movf	___fldiv@b+3,w
  7873  0C39  00CD               	movwf	___fldiv@rem+3
  7874  0C3A  0843               	movf	___fldiv@b+2,w
  7875  0C3B  00CC               	movwf	___fldiv@rem+2
  7876  0C3C  0842               	movf	___fldiv@b+1,w
  7877  0C3D  00CB               	movwf	___fldiv@rem+1
  7878  0C3E  0841               	movf	___fldiv@b,w
  7879  0C3F  00CA               	movwf	___fldiv@rem
  7880  0C40                     l3795:
  7881  0C40  3000               	movlw	0
  7882  0C41  00C4               	movwf	___fldiv@b+3
  7883  0C42  3000               	movlw	0
  7884  0C43  00C3               	movwf	___fldiv@b+2
  7885  0C44  3000               	movlw	0
  7886  0C45  00C2               	movwf	___fldiv@b+1
  7887  0C46  3000               	movlw	0
  7888  0C47  00C1               	movwf	___fldiv@b
  7889  0C48                     l3797:
  7890  0C48  3000               	movlw	0
  7891  0C49  00D4               	movwf	___fldiv@grs+3
  7892  0C4A  3000               	movlw	0
  7893  0C4B  00D3               	movwf	___fldiv@grs+2
  7894  0C4C  3000               	movlw	0
  7895  0C4D  00D2               	movwf	___fldiv@grs+1
  7896  0C4E  3000               	movlw	0
  7897  0C4F  00D1               	movwf	___fldiv@grs
  7898  0C50                     l3799:
  7899  0C50  01D6               	clrf	___fldiv@aexp
  7900  0C51  2C9C               	goto	l3819
  7901  0C52                     l3801:
  7902  0C52  0856               	movf	___fldiv@aexp,w
  7903  0C53  1903               	btfsc	3,2
  7904  0C54  2C56               	goto	u5001
  7905  0C55  2C57               	goto	u5000
  7906  0C56                     u5001:
  7907  0C56  2C77               	goto	l3811
  7908  0C57                     u5000:
  7909  0C57                     l3803:
  7910  0C57  3001               	movlw	1
  7911  0C58  00C5               	movwf	??___fldiv
  7912  0C59                     u5015:
  7913  0C59  1003               	clrc
  7914  0C5A  0DCA               	rlf	___fldiv@rem,f
  7915  0C5B  0DCB               	rlf	___fldiv@rem+1,f
  7916  0C5C  0DCC               	rlf	___fldiv@rem+2,f
  7917  0C5D  0DCD               	rlf	___fldiv@rem+3,f
  7918  0C5E  0BC5               	decfsz	??___fldiv,f
  7919  0C5F  2C59               	goto	u5015
  7920  0C60  3001               	movlw	1
  7921  0C61  00C5               	movwf	??___fldiv
  7922  0C62                     u5025:
  7923  0C62  1003               	clrc
  7924  0C63  0DC1               	rlf	___fldiv@b,f
  7925  0C64  0DC2               	rlf	___fldiv@b+1,f
  7926  0C65  0DC3               	rlf	___fldiv@b+2,f
  7927  0C66  0DC4               	rlf	___fldiv@b+3,f
  7928  0C67  0BC5               	decfsz	??___fldiv,f
  7929  0C68  2C62               	goto	u5025
  7930  0C69                     l3805:
  7931  0C69  1FD4               	btfss	___fldiv@grs+3,7
  7932  0C6A  2C6C               	goto	u5031
  7933  0C6B  2C6D               	goto	u5030
  7934  0C6C                     u5031:
  7935  0C6C  2C6E               	goto	l3809
  7936  0C6D                     u5030:
  7937  0C6D                     l3807:
  7938  0C6D  1441               	bsf	___fldiv@b,0
  7939  0C6E                     l3809:
  7940  0C6E  3001               	movlw	1
  7941  0C6F  00C5               	movwf	??___fldiv
  7942  0C70                     u5045:
  7943  0C70  1003               	clrc
  7944  0C71  0DD1               	rlf	___fldiv@grs,f
  7945  0C72  0DD2               	rlf	___fldiv@grs+1,f
  7946  0C73  0DD3               	rlf	___fldiv@grs+2,f
  7947  0C74  0DD4               	rlf	___fldiv@grs+3,f
  7948  0C75  0BC5               	decfsz	??___fldiv,f
  7949  0C76  2C70               	goto	u5045
  7950  0C77                     l3811:
  7951  0C77  0840               	movf	___fldiv@a+3,w
  7952  0C78  024D               	subwf	___fldiv@rem+3,w
  7953  0C79  1D03               	skipz
  7954  0C7A  2C85               	goto	u5055
  7955  0C7B  083F               	movf	___fldiv@a+2,w
  7956  0C7C  024C               	subwf	___fldiv@rem+2,w
  7957  0C7D  1D03               	skipz
  7958  0C7E  2C85               	goto	u5055
  7959  0C7F  083E               	movf	___fldiv@a+1,w
  7960  0C80  024B               	subwf	___fldiv@rem+1,w
  7961  0C81  1D03               	skipz
  7962  0C82  2C85               	goto	u5055
  7963  0C83  083D               	movf	___fldiv@a,w
  7964  0C84  024A               	subwf	___fldiv@rem,w
  7965  0C85                     u5055:
  7966  0C85  1C03               	skipc
  7967  0C86  2C88               	goto	u5051
  7968  0C87  2C89               	goto	u5050
  7969  0C88                     u5051:
  7970  0C88  2C98               	goto	l3817
  7971  0C89                     u5050:
  7972  0C89                     l3813:
  7973  0C89  1754               	bsf	___fldiv@grs+3,6
  7974  0C8A                     l3815:
  7975  0C8A  083D               	movf	___fldiv@a,w
  7976  0C8B  02CA               	subwf	___fldiv@rem,f
  7977  0C8C  083E               	movf	___fldiv@a+1,w
  7978  0C8D  1C03               	skipc
  7979  0C8E  0F3E               	incfsz	___fldiv@a+1,w
  7980  0C8F  02CB               	subwf	___fldiv@rem+1,f
  7981  0C90  083F               	movf	___fldiv@a+2,w
  7982  0C91  1C03               	skipc
  7983  0C92  0F3F               	incfsz	___fldiv@a+2,w
  7984  0C93  02CC               	subwf	___fldiv@rem+2,f
  7985  0C94  0840               	movf	___fldiv@a+3,w
  7986  0C95  1C03               	skipc
  7987  0C96  0F40               	incfsz	___fldiv@a+3,w
  7988  0C97  02CD               	subwf	___fldiv@rem+3,f
  7989  0C98                     l3817:
  7990  0C98  3001               	movlw	1
  7991  0C99  00C5               	movwf	??___fldiv
  7992  0C9A  0845               	movf	??___fldiv,w
  7993  0C9B  07D6               	addwf	___fldiv@aexp,f
  7994  0C9C                     l3819:
  7995  0C9C  301A               	movlw	26
  7996  0C9D  0256               	subwf	___fldiv@aexp,w
  7997  0C9E  1C03               	skipc
  7998  0C9F  2CA1               	goto	u5061
  7999  0CA0  2CA2               	goto	u5060
  8000  0CA1                     u5061:
  8001  0CA1  2C52               	goto	l3801
  8002  0CA2                     u5060:
  8003  0CA2                     l3821:
  8004  0CA2  084D               	movf	___fldiv@rem+3,w
  8005  0CA3  044C               	iorwf	___fldiv@rem+2,w
  8006  0CA4  044B               	iorwf	___fldiv@rem+1,w
  8007  0CA5  044A               	iorwf	___fldiv@rem,w
  8008  0CA6  1903               	skipnz
  8009  0CA7  2CA9               	goto	u5071
  8010  0CA8  2CAA               	goto	u5070
  8011  0CA9                     u5071:
  8012  0CA9  2CC9               	goto	l3835
  8013  0CAA                     u5070:
  8014  0CAA                     l3823:
  8015  0CAA  1451               	bsf	___fldiv@grs,0
  8016  0CAB  2CC9               	goto	l3835
  8017  0CAC                     l3825:
  8018  0CAC  3001               	movlw	1
  8019  0CAD  00C5               	movwf	??___fldiv
  8020  0CAE                     u5085:
  8021  0CAE  1003               	clrc
  8022  0CAF  0DC1               	rlf	___fldiv@b,f
  8023  0CB0  0DC2               	rlf	___fldiv@b+1,f
  8024  0CB1  0DC3               	rlf	___fldiv@b+2,f
  8025  0CB2  0DC4               	rlf	___fldiv@b+3,f
  8026  0CB3  0BC5               	decfsz	??___fldiv,f
  8027  0CB4  2CAE               	goto	u5085
  8028  0CB5                     l3827:
  8029  0CB5  1FD4               	btfss	___fldiv@grs+3,7
  8030  0CB6  2CB8               	goto	u5091
  8031  0CB7  2CB9               	goto	u5090
  8032  0CB8                     u5091:
  8033  0CB8  2CBA               	goto	l3831
  8034  0CB9                     u5090:
  8035  0CB9                     l3829:
  8036  0CB9  1441               	bsf	___fldiv@b,0
  8037  0CBA                     l3831:
  8038  0CBA  3001               	movlw	1
  8039  0CBB  00C5               	movwf	??___fldiv
  8040  0CBC                     u5105:
  8041  0CBC  1003               	clrc
  8042  0CBD  0DD1               	rlf	___fldiv@grs,f
  8043  0CBE  0DD2               	rlf	___fldiv@grs+1,f
  8044  0CBF  0DD3               	rlf	___fldiv@grs+2,f
  8045  0CC0  0DD4               	rlf	___fldiv@grs+3,f
  8046  0CC1  0BC5               	decfsz	??___fldiv,f
  8047  0CC2  2CBC               	goto	u5105
  8048  0CC3                     l3833:
  8049  0CC3  30FF               	movlw	255
  8050  0CC4  07CF               	addwf	___fldiv@new_exp,f
  8051  0CC5  1803               	skipnc
  8052  0CC6  0AD0               	incf	___fldiv@new_exp+1,f
  8053  0CC7  30FF               	movlw	255
  8054  0CC8  07D0               	addwf	___fldiv@new_exp+1,f
  8055  0CC9                     l3835:
  8056  0CC9  1FC3               	btfss	___fldiv@b+2,7
  8057  0CCA  2CCC               	goto	u5111
  8058  0CCB  2CCD               	goto	u5110
  8059  0CCC                     u5111:
  8060  0CCC  2CAC               	goto	l3825
  8061  0CCD                     u5110:
  8062  0CCD                     l3837:
  8063  0CCD  01D6               	clrf	___fldiv@aexp
  8064  0CCE                     l3839:
  8065  0CCE  1FD4               	btfss	___fldiv@grs+3,7
  8066  0CCF  2CD1               	goto	u5121
  8067  0CD0  2CD2               	goto	u5120
  8068  0CD1                     u5121:
  8069  0CD1  2CEE               	goto	l3847
  8070  0CD2                     u5120:
  8071  0CD2                     l3841:
  8072  0CD2  30FF               	movlw	255
  8073  0CD3  0551               	andwf	___fldiv@grs,w
  8074  0CD4  00C5               	movwf	??___fldiv
  8075  0CD5  30FF               	movlw	255
  8076  0CD6  0552               	andwf	___fldiv@grs+1,w
  8077  0CD7  00C6               	movwf	??___fldiv+1
  8078  0CD8  30FF               	movlw	255
  8079  0CD9  0553               	andwf	___fldiv@grs+2,w
  8080  0CDA  00C7               	movwf	??___fldiv+2
  8081  0CDB  307F               	movlw	127
  8082  0CDC  0554               	andwf	___fldiv@grs+3,w
  8083  0CDD  00C8               	movwf	??___fldiv+3
  8084  0CDE  0848               	movf	??___fldiv+3,w
  8085  0CDF  0447               	iorwf	??___fldiv+2,w
  8086  0CE0  0446               	iorwf	??___fldiv+1,w
  8087  0CE1  0445               	iorwf	??___fldiv,w
  8088  0CE2  1903               	skipnz
  8089  0CE3  2CE5               	goto	u5131
  8090  0CE4  2CE6               	goto	u5130
  8091  0CE5                     u5131:
  8092  0CE5  2CE9               	goto	l818
  8093  0CE6                     u5130:
  8094  0CE6                     l3843:
  8095  0CE6  01D6               	clrf	___fldiv@aexp
  8096  0CE7  0AD6               	incf	___fldiv@aexp,f
  8097  0CE8  2CEE               	goto	l3847
  8098  0CE9                     l818:
  8099  0CE9  1C41               	btfss	___fldiv@b,0
  8100  0CEA  2CEC               	goto	u5141
  8101  0CEB  2CED               	goto	u5140
  8102  0CEC                     u5141:
  8103  0CEC  2CEE               	goto	l3847
  8104  0CED                     u5140:
  8105  0CED  2CE6               	goto	l3843
  8106  0CEE                     l3847:
  8107  0CEE  0856               	movf	___fldiv@aexp,w
  8108  0CEF  1903               	btfsc	3,2
  8109  0CF0  2CF2               	goto	u5151
  8110  0CF1  2CF3               	goto	u5150
  8111  0CF2                     u5151:
  8112  0CF2  2D24               	goto	l3857
  8113  0CF3                     u5150:
  8114  0CF3                     l3849:
  8115  0CF3  3001               	movlw	1
  8116  0CF4  07C1               	addwf	___fldiv@b,f
  8117  0CF5  3000               	movlw	0
  8118  0CF6  1803               	skipnc
  8119  0CF7  3001               	movlw	1
  8120  0CF8  07C2               	addwf	___fldiv@b+1,f
  8121  0CF9  3000               	movlw	0
  8122  0CFA  1803               	skipnc
  8123  0CFB  3001               	movlw	1
  8124  0CFC  07C3               	addwf	___fldiv@b+2,f
  8125  0CFD  3000               	movlw	0
  8126  0CFE  1803               	skipnc
  8127  0CFF  3001               	movlw	1
  8128  0D00  07C4               	addwf	___fldiv@b+3,f
  8129  0D01                     l3851:
  8130  0D01  1C44               	btfss	___fldiv@b+3,0
  8131  0D02  2D04               	goto	u5161
  8132  0D03  2D05               	goto	u5160
  8133  0D04                     u5161:
  8134  0D04  2D24               	goto	l3857
  8135  0D05                     u5160:
  8136  0D05                     l3853:
  8137  0D05  0841               	movf	___fldiv@b,w
  8138  0D06  00C5               	movwf	??___fldiv
  8139  0D07  0842               	movf	___fldiv@b+1,w
  8140  0D08  00C6               	movwf	??___fldiv+1
  8141  0D09  0843               	movf	___fldiv@b+2,w
  8142  0D0A  00C7               	movwf	??___fldiv+2
  8143  0D0B  0844               	movf	___fldiv@b+3,w
  8144  0D0C  00C8               	movwf	??___fldiv+3
  8145  0D0D  3001               	movlw	1
  8146  0D0E  00C9               	movwf	??___fldiv+4
  8147  0D0F                     u5175:
  8148  0D0F  0D48               	rlf	??___fldiv+3,w
  8149  0D10  0CC8               	rrf	??___fldiv+3,f
  8150  0D11  0CC7               	rrf	??___fldiv+2,f
  8151  0D12  0CC6               	rrf	??___fldiv+1,f
  8152  0D13  0CC5               	rrf	??___fldiv,f
  8153  0D14                     u5170:
  8154  0D14  0BC9               	decfsz	??___fldiv+4,f
  8155  0D15  2D0F               	goto	u5175
  8156  0D16  0848               	movf	??___fldiv+3,w
  8157  0D17  00C4               	movwf	___fldiv@b+3
  8158  0D18  0847               	movf	??___fldiv+2,w
  8159  0D19  00C3               	movwf	___fldiv@b+2
  8160  0D1A  0846               	movf	??___fldiv+1,w
  8161  0D1B  00C2               	movwf	___fldiv@b+1
  8162  0D1C  0845               	movf	??___fldiv,w
  8163  0D1D  00C1               	movwf	___fldiv@b
  8164  0D1E                     l3855:
  8165  0D1E  3001               	movlw	1
  8166  0D1F  07CF               	addwf	___fldiv@new_exp,f
  8167  0D20  1803               	skipnc
  8168  0D21  0AD0               	incf	___fldiv@new_exp+1,f
  8169  0D22  3000               	movlw	0
  8170  0D23  07D0               	addwf	___fldiv@new_exp+1,f
  8171  0D24                     l3857:
  8172  0D24  0850               	movf	___fldiv@new_exp+1,w
  8173  0D25  3A80               	xorlw	128
  8174  0D26  00FF               	movwf	btemp+1
  8175  0D27  3080               	movlw	128
  8176  0D28  027F               	subwf	btemp+1,w
  8177  0D29  1D03               	skipz
  8178  0D2A  2D2D               	goto	u5185
  8179  0D2B  30FF               	movlw	255
  8180  0D2C  024F               	subwf	___fldiv@new_exp,w
  8181  0D2D                     u5185:
  8182  0D2D  1C03               	skipc
  8183  0D2E  2D30               	goto	u5181
  8184  0D2F  2D31               	goto	u5180
  8185  0D30                     u5181:
  8186  0D30  2D3F               	goto	l3861
  8187  0D31                     u5180:
  8188  0D31                     l3859:
  8189  0D31  30FF               	movlw	255
  8190  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  8191  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  8192  0D34  00CF               	movwf	___fldiv@new_exp
  8193  0D35  3000               	movlw	0
  8194  0D36  00D0               	movwf	___fldiv@new_exp+1
  8195  0D37  3000               	movlw	0
  8196  0D38  00C4               	movwf	___fldiv@b+3
  8197  0D39  3000               	movlw	0
  8198  0D3A  00C3               	movwf	___fldiv@b+2
  8199  0D3B  3000               	movlw	0
  8200  0D3C  00C2               	movwf	___fldiv@b+1
  8201  0D3D  3000               	movlw	0
  8202  0D3E  00C1               	movwf	___fldiv@b
  8203  0D3F                     l3861:
  8204  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  8205  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  8206  0D41  0850               	movf	___fldiv@new_exp+1,w
  8207  0D42  3A80               	xorlw	128
  8208  0D43  00FF               	movwf	btemp+1
  8209  0D44  3080               	movlw	128
  8210  0D45  027F               	subwf	btemp+1,w
  8211  0D46  1D03               	skipz
  8212  0D47  2D4A               	goto	u5195
  8213  0D48  3001               	movlw	1
  8214  0D49  024F               	subwf	___fldiv@new_exp,w
  8215  0D4A                     u5195:
  8216  0D4A  1803               	skipnc
  8217  0D4B  2D4D               	goto	u5191
  8218  0D4C  2D4E               	goto	u5190
  8219  0D4D                     u5191:
  8220  0D4D  2D5B               	goto	l824
  8221  0D4E                     u5190:
  8222  0D4E                     l3863:
  8223  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  8224  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  8225  0D50  01CF               	clrf	___fldiv@new_exp
  8226  0D51  01D0               	clrf	___fldiv@new_exp+1
  8227  0D52                     l3865:
  8228  0D52  3000               	movlw	0
  8229  0D53  00C4               	movwf	___fldiv@b+3
  8230  0D54  3000               	movlw	0
  8231  0D55  00C3               	movwf	___fldiv@b+2
  8232  0D56  3000               	movlw	0
  8233  0D57  00C2               	movwf	___fldiv@b+1
  8234  0D58  3000               	movlw	0
  8235  0D59  00C1               	movwf	___fldiv@b
  8236  0D5A                     l3867:
  8237  0D5A  01CE               	clrf	___fldiv@sign
  8238  0D5B                     l824:
  8239  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  8240  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  8241  0D5D  084F               	movf	___fldiv@new_exp,w
  8242  0D5E  00C5               	movwf	??___fldiv
  8243  0D5F  0845               	movf	??___fldiv,w
  8244  0D60  00D5               	movwf	___fldiv@bexp
  8245  0D61                     l3869:
  8246  0D61  1C55               	btfss	___fldiv@bexp,0
  8247  0D62  2D64               	goto	u5201
  8248  0D63  2D65               	goto	u5200
  8249  0D64                     u5201:
  8250  0D64  2D67               	goto	l3873
  8251  0D65                     u5200:
  8252  0D65                     l3871:
  8253  0D65  17C3               	bsf	___fldiv@b+2,7
  8254  0D66  2D6B               	goto	l826
  8255  0D67                     l3873:
  8256  0D67  307F               	movlw	127
  8257  0D68  00C5               	movwf	??___fldiv
  8258  0D69  0845               	movf	??___fldiv,w
  8259  0D6A  05C3               	andwf	___fldiv@b+2,f
  8260  0D6B                     l826:
  8261  0D6B  0855               	movf	___fldiv@bexp,w
  8262  0D6C  00C5               	movwf	??___fldiv
  8263  0D6D  1003               	clrc
  8264  0D6E  0C45               	rrf	??___fldiv,w
  8265  0D6F  00C6               	movwf	??___fldiv+1
  8266  0D70  0846               	movf	??___fldiv+1,w
  8267  0D71  00C4               	movwf	___fldiv@b+3
  8268  0D72  084E               	movf	___fldiv@sign,w
  8269  0D73  00C5               	movwf	??___fldiv
  8270  0D74  0845               	movf	??___fldiv,w
  8271  0D75  04C4               	iorwf	___fldiv@b+3,f
  8272  0D76  2C0F               	goto	l3781
  8273  0D77                     l804:
  8274  0D77  0008               	return
  8275  0D78                     __end_of___fldiv:
  8276                           
  8277                           	psect	text26
  8278  0801                     __ptext26:	
  8279 ;; *************** function ___awdiv *****************
  8280 ;; Defined at:
  8281 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  divisor         2    0[BANK0 ] int 
  8284 ;;  dividend        2    2[BANK0 ] int 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  quotient        2    6[BANK0 ] int 
  8287 ;;  sign            1    5[BANK0 ] unsigned char 
  8288 ;;  counter         1    4[BANK0 ] unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  2    0[BANK0 ] int 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8298 ;;      Params:         0       4       0       0       0
  8299 ;;      Locals:         0       4       0       0       0
  8300 ;;      Temps:          1       0       0       0       0
  8301 ;;      Totals:         1       8       0       0       0
  8302 ;;Total ram usage:        9 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 1
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_ADC_convert
  8309 ;;		_division
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function ___awdiv
  8315  0801                     ___awdiv:
  8316  0801                     l3593:	
  8317                           ;incstack = 0
  8318                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8319                           
  8320  0801  1283               	bcf	3,5	;RP0=0, select bank0
  8321  0802  1303               	bcf	3,6	;RP1=0, select bank0
  8322  0803  01A5               	clrf	___awdiv@sign
  8323  0804                     l3595:
  8324  0804  1FA1               	btfss	___awdiv@divisor+1,7
  8325  0805  2807               	goto	u4561
  8326  0806  2808               	goto	u4560
  8327  0807                     u4561:
  8328  0807  280F               	goto	l3601
  8329  0808                     u4560:
  8330  0808                     l3597:
  8331  0808  09A0               	comf	___awdiv@divisor,f
  8332  0809  09A1               	comf	___awdiv@divisor+1,f
  8333  080A  0AA0               	incf	___awdiv@divisor,f
  8334  080B  1903               	skipnz
  8335  080C  0AA1               	incf	___awdiv@divisor+1,f
  8336  080D                     l3599:
  8337  080D  01A5               	clrf	___awdiv@sign
  8338  080E  0AA5               	incf	___awdiv@sign,f
  8339  080F                     l3601:
  8340  080F  1FA3               	btfss	___awdiv@dividend+1,7
  8341  0810  2812               	goto	u4571
  8342  0811  2813               	goto	u4570
  8343  0812                     u4571:
  8344  0812  281C               	goto	l3607
  8345  0813                     u4570:
  8346  0813                     l3603:
  8347  0813  09A2               	comf	___awdiv@dividend,f
  8348  0814  09A3               	comf	___awdiv@dividend+1,f
  8349  0815  0AA2               	incf	___awdiv@dividend,f
  8350  0816  1903               	skipnz
  8351  0817  0AA3               	incf	___awdiv@dividend+1,f
  8352  0818                     l3605:
  8353  0818  3001               	movlw	1
  8354  0819  00F4               	movwf	??___awdiv
  8355  081A  0874               	movf	??___awdiv,w
  8356  081B  06A5               	xorwf	___awdiv@sign,f
  8357  081C                     l3607:
  8358  081C  01A6               	clrf	___awdiv@quotient
  8359  081D  01A7               	clrf	___awdiv@quotient+1
  8360  081E                     l3609:
  8361  081E  0820               	movf	___awdiv@divisor,w
  8362  081F  0421               	iorwf	___awdiv@divisor+1,w
  8363  0820  1903               	btfsc	3,2
  8364  0821  2823               	goto	u4581
  8365  0822  2824               	goto	u4580
  8366  0823                     u4581:
  8367  0823  285B               	goto	l3629
  8368  0824                     u4580:
  8369  0824                     l3611:
  8370  0824  01A4               	clrf	___awdiv@counter
  8371  0825  0AA4               	incf	___awdiv@counter,f
  8372  0826  2832               	goto	l3617
  8373  0827                     l3613:
  8374  0827  3001               	movlw	1
  8375  0828                     u4595:
  8376  0828  1003               	clrc
  8377  0829  0DA0               	rlf	___awdiv@divisor,f
  8378  082A  0DA1               	rlf	___awdiv@divisor+1,f
  8379  082B  3EFF               	addlw	-1
  8380  082C  1D03               	skipz
  8381  082D  2828               	goto	u4595
  8382  082E                     l3615:
  8383  082E  3001               	movlw	1
  8384  082F  00F4               	movwf	??___awdiv
  8385  0830  0874               	movf	??___awdiv,w
  8386  0831  07A4               	addwf	___awdiv@counter,f
  8387  0832                     l3617:
  8388  0832  1FA1               	btfss	___awdiv@divisor+1,7
  8389  0833  2835               	goto	u4601
  8390  0834  2836               	goto	u4600
  8391  0835                     u4601:
  8392  0835  2827               	goto	l3613
  8393  0836                     u4600:
  8394  0836                     l3619:
  8395  0836  3001               	movlw	1
  8396  0837                     u4615:
  8397  0837  1003               	clrc
  8398  0838  0DA6               	rlf	___awdiv@quotient,f
  8399  0839  0DA7               	rlf	___awdiv@quotient+1,f
  8400  083A  3EFF               	addlw	-1
  8401  083B  1D03               	skipz
  8402  083C  2837               	goto	u4615
  8403  083D  0821               	movf	___awdiv@divisor+1,w
  8404  083E  0223               	subwf	___awdiv@dividend+1,w
  8405  083F  1D03               	skipz
  8406  0840  2843               	goto	u4625
  8407  0841  0820               	movf	___awdiv@divisor,w
  8408  0842  0222               	subwf	___awdiv@dividend,w
  8409  0843                     u4625:
  8410  0843  1C03               	skipc
  8411  0844  2846               	goto	u4621
  8412  0845  2847               	goto	u4620
  8413  0846                     u4621:
  8414  0846  284E               	goto	l3625
  8415  0847                     u4620:
  8416  0847                     l3621:
  8417  0847  0820               	movf	___awdiv@divisor,w
  8418  0848  02A2               	subwf	___awdiv@dividend,f
  8419  0849  0821               	movf	___awdiv@divisor+1,w
  8420  084A  1C03               	skipc
  8421  084B  03A3               	decf	___awdiv@dividend+1,f
  8422  084C  02A3               	subwf	___awdiv@dividend+1,f
  8423  084D                     l3623:
  8424  084D  1426               	bsf	___awdiv@quotient,0
  8425  084E                     l3625:
  8426  084E  3001               	movlw	1
  8427  084F                     u4635:
  8428  084F  1003               	clrc
  8429  0850  0CA1               	rrf	___awdiv@divisor+1,f
  8430  0851  0CA0               	rrf	___awdiv@divisor,f
  8431  0852  3EFF               	addlw	-1
  8432  0853  1D03               	skipz
  8433  0854  284F               	goto	u4635
  8434  0855                     l3627:
  8435  0855  3001               	movlw	1
  8436  0856  02A4               	subwf	___awdiv@counter,f
  8437  0857  1D03               	btfss	3,2
  8438  0858  285A               	goto	u4641
  8439  0859  285B               	goto	u4640
  8440  085A                     u4641:
  8441  085A  2836               	goto	l3619
  8442  085B                     u4640:
  8443  085B                     l3629:
  8444  085B  0825               	movf	___awdiv@sign,w
  8445  085C  1903               	btfsc	3,2
  8446  085D  285F               	goto	u4651
  8447  085E  2860               	goto	u4650
  8448  085F                     u4651:
  8449  085F  2865               	goto	l3633
  8450  0860                     u4650:
  8451  0860                     l3631:
  8452  0860  09A6               	comf	___awdiv@quotient,f
  8453  0861  09A7               	comf	___awdiv@quotient+1,f
  8454  0862  0AA6               	incf	___awdiv@quotient,f
  8455  0863  1903               	skipnz
  8456  0864  0AA7               	incf	___awdiv@quotient+1,f
  8457  0865                     l3633:
  8458  0865  0827               	movf	___awdiv@quotient+1,w
  8459  0866  00A1               	movwf	?___awdiv+1
  8460  0867  0826               	movf	___awdiv@quotient,w
  8461  0868  00A0               	movwf	?___awdiv
  8462  0869                     l606:
  8463  0869  0008               	return
  8464  086A                     __end_of___awdiv:
  8465                           
  8466                           	psect	text27
  8467  1670                     __ptext27:	
  8468 ;; *************** function _I2C_Comunication *****************
  8469 ;; Defined at:
  8470 ;;		line 282 in file "Master_PIC.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8484 ;;      Params:         0       0       0       0       0
  8485 ;;      Locals:         0       0       0       0       0
  8486 ;;      Temps:          0       3       0       0       0
  8487 ;;      Totals:         0       3       0       0       0
  8488 ;;Total ram usage:        3 bytes
  8489 ;; Hardware stack levels used: 1
  8490 ;; Hardware stack levels required when called: 3
  8491 ;; This function calls:
  8492 ;;		_I2C_Master_Start
  8493 ;;		_I2C_Master_Stop
  8494 ;;		_I2C_Master_Write
  8495 ;;		_I2C_Read_Byte
  8496 ;; This function is called by:
  8497 ;;		_main
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function _I2C_Comunication
  8503  1670                     _I2C_Comunication:
  8504  1670                     l4321:	
  8505                           ;incstack = 0
  8506                           ; Regs used in _I2C_Comunication: [wreg+status,2+status,0+pclath+cstack]
  8507                           
  8508                           
  8509                           ;Master_PIC.c: 284:     I2C_Master_Start();
  8510  1670  160A  118A  2248  160A  118A  	fcall	_I2C_Master_Start
  8511                           
  8512                           ;Master_PIC.c: 285:     I2C_Master_Write(0x61);
  8513  1675  3061               	movlw	97
  8514  1676  160A  118A  2274  160A  118A  	fcall	_I2C_Master_Write
  8515                           
  8516                           ;Master_PIC.c: 286:     slave01 = I2C_Read_Byte();
  8517  167B  160A  118A  2284  160A  118A  	fcall	_I2C_Read_Byte
  8518  1680  1283               	bcf	3,5	;RP0=0, select bank0
  8519  1681  1303               	bcf	3,6	;RP1=0, select bank0
  8520  1682  00A0               	movwf	??_I2C_Comunication
  8521  1683  0820               	movf	??_I2C_Comunication,w
  8522  1684  00EF               	movwf	_slave01
  8523                           
  8524                           ;Master_PIC.c: 287:     I2C_Master_Stop();
  8525  1685  160A  118A  2251  160A  118A  	fcall	_I2C_Master_Stop
  8526  168A                     l4323:
  8527                           
  8528                           ;Master_PIC.c: 288:     _delay((unsigned long)((250)*(8000000/4000.0)));
  8529  168A  3003               	movlw	3
  8530  168B  1283               	bcf	3,5	;RP0=0, select bank0
  8531  168C  1303               	bcf	3,6	;RP1=0, select bank0
  8532  168D  00A2               	movwf	??_I2C_Comunication+2
  8533  168E  308A               	movlw	138
  8534  168F  00A1               	movwf	??_I2C_Comunication+1
  8535  1690  3055               	movlw	85
  8536  1691  00A0               	movwf	??_I2C_Comunication
  8537  1692                     u6127:
  8538  1692  0BA0               	decfsz	??_I2C_Comunication,f
  8539  1693  2E92               	goto	u6127
  8540  1694  0BA1               	decfsz	??_I2C_Comunication+1,f
  8541  1695  2E92               	goto	u6127
  8542  1696  0BA2               	decfsz	??_I2C_Comunication+2,f
  8543  1697  2E92               	goto	u6127
  8544  1698                     l4325:
  8545                           
  8546                           ;Master_PIC.c: 290:     I2C_Master_Start();
  8547  1698  160A  118A  2248  160A  118A  	fcall	_I2C_Master_Start
  8548  169D                     l4327:
  8549                           
  8550                           ;Master_PIC.c: 291:     I2C_Master_Write(0x71);
  8551  169D  3071               	movlw	113
  8552  169E  160A  118A  2274  160A  118A  	fcall	_I2C_Master_Write
  8553  16A3                     l4329:
  8554                           
  8555                           ;Master_PIC.c: 292:     slave02 = I2C_Read_Byte();
  8556  16A3  160A  118A  2284  160A  118A  	fcall	_I2C_Read_Byte
  8557  16A8  1283               	bcf	3,5	;RP0=0, select bank0
  8558  16A9  1303               	bcf	3,6	;RP1=0, select bank0
  8559  16AA  00A0               	movwf	??_I2C_Comunication
  8560  16AB  0820               	movf	??_I2C_Comunication,w
  8561  16AC  00EE               	movwf	_slave02
  8562  16AD                     l4331:
  8563                           
  8564                           ;Master_PIC.c: 293:     I2C_Master_Stop();
  8565  16AD  160A  118A  2251  160A  118A  	fcall	_I2C_Master_Stop
  8566  16B2                     l4333:
  8567                           
  8568                           ;Master_PIC.c: 294:     _delay((unsigned long)((250)*(8000000/4000.0)));
  8569  16B2  3003               	movlw	3
  8570  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  8571  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  8572  16B5  00A2               	movwf	??_I2C_Comunication+2
  8573  16B6  308A               	movlw	138
  8574  16B7  00A1               	movwf	??_I2C_Comunication+1
  8575  16B8  3055               	movlw	85
  8576  16B9  00A0               	movwf	??_I2C_Comunication
  8577  16BA                     u6137:
  8578  16BA  0BA0               	decfsz	??_I2C_Comunication,f
  8579  16BB  2EBA               	goto	u6137
  8580  16BC  0BA1               	decfsz	??_I2C_Comunication+1,f
  8581  16BD  2EBA               	goto	u6137
  8582  16BE  0BA2               	decfsz	??_I2C_Comunication+2,f
  8583  16BF  2EBA               	goto	u6137
  8584                           
  8585                           ;Master_PIC.c: 296:     I2C_Master_Start();
  8586  16C0  160A  118A  2248  160A  118A  	fcall	_I2C_Master_Start
  8587                           
  8588                           ;Master_PIC.c: 297:     I2C_Master_Write(0x81);
  8589  16C5  3081               	movlw	129
  8590  16C6  160A  118A  2274  160A  118A  	fcall	_I2C_Master_Write
  8591                           
  8592                           ;Master_PIC.c: 298:     slave03 = I2C_Read_Byte();
  8593  16CB  160A  118A  2284  160A  118A  	fcall	_I2C_Read_Byte
  8594  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  8595  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  8596  16D2  00A0               	movwf	??_I2C_Comunication
  8597  16D3  0820               	movf	??_I2C_Comunication,w
  8598  16D4  00ED               	movwf	_slave03
  8599                           
  8600                           ;Master_PIC.c: 299:     I2C_Master_Stop();
  8601  16D5  160A  118A  2251  160A  118A  	fcall	_I2C_Master_Stop
  8602  16DA                     l4335:
  8603                           
  8604                           ;Master_PIC.c: 300:     _delay((unsigned long)((250)*(8000000/4000.0)));
  8605  16DA  3003               	movlw	3
  8606  16DB  1283               	bcf	3,5	;RP0=0, select bank0
  8607  16DC  1303               	bcf	3,6	;RP1=0, select bank0
  8608  16DD  00A2               	movwf	??_I2C_Comunication+2
  8609  16DE  308A               	movlw	138
  8610  16DF  00A1               	movwf	??_I2C_Comunication+1
  8611  16E0  3055               	movlw	85
  8612  16E1  00A0               	movwf	??_I2C_Comunication
  8613  16E2                     u6147:
  8614  16E2  0BA0               	decfsz	??_I2C_Comunication,f
  8615  16E3  2EE2               	goto	u6147
  8616  16E4  0BA1               	decfsz	??_I2C_Comunication+1,f
  8617  16E5  2EE2               	goto	u6147
  8618  16E6  0BA2               	decfsz	??_I2C_Comunication+2,f
  8619  16E7  2EE2               	goto	u6147
  8620  16E8                     l187:
  8621  16E8  0008               	return
  8622  16E9                     __end_of_I2C_Comunication:
  8623                           
  8624                           	psect	text28
  8625  1284                     __ptext28:	
  8626 ;; *************** function _I2C_Read_Byte *****************
  8627 ;; Defined at:
  8628 ;;		line 71 in file "I2C_Master.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1    wreg      unsigned char 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8642 ;;      Params:         0       0       0       0       0
  8643 ;;      Locals:         0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0
  8645 ;;      Totals:         0       0       0       0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used: 1
  8648 ;; Hardware stack levels required when called: 2
  8649 ;; This function calls:
  8650 ;;		_I2C_Master_Wait
  8651 ;; This function is called by:
  8652 ;;		_I2C_Comunication
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656                           
  8657                           ;psect for function _I2C_Read_Byte
  8658  1284                     _I2C_Read_Byte:
  8659  1284                     l4071:	
  8660                           ;incstack = 0
  8661                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  8662                           
  8663                           
  8664                           ;I2C_Master.c: 74:  I2C_Master_Wait();
  8665  1284  160A  118A  225A  160A  118A  	fcall	_I2C_Master_Wait
  8666  1289                     l4073:
  8667                           
  8668                           ;I2C_Master.c: 75:     RCEN = 1;
  8669  1289  1683               	bsf	3,5	;RP0=1, select bank1
  8670  128A  1303               	bcf	3,6	;RP1=0, select bank1
  8671  128B  1591               	bsf	17,3	;volatile
  8672  128C                     l311:	
  8673                           ;I2C_Master.c: 76:  while(!SSPIF);
  8674                           
  8675  128C  1283               	bcf	3,5	;RP0=0, select bank0
  8676  128D  1D8C               	btfss	12,3	;volatile
  8677  128E  2A90               	goto	u5721
  8678  128F  2A91               	goto	u5720
  8679  1290                     u5721:
  8680  1290  2A8C               	goto	l311
  8681  1291                     u5720:
  8682  1291                     l313:
  8683                           
  8684                           ;I2C_Master.c: 77:  SSPIF = 0;
  8685  1291  118C               	bcf	12,3	;volatile
  8686  1292                     l4075:
  8687                           
  8688                           ;I2C_Master.c: 78:     I2C_Master_Wait();
  8689  1292  160A  118A  225A  160A  118A  	fcall	_I2C_Master_Wait
  8690  1297                     l4077:
  8691                           
  8692                           ;I2C_Master.c: 79:     return SSPBUF;
  8693  1297  1283               	bcf	3,5	;RP0=0, select bank0
  8694  1298  1303               	bcf	3,6	;RP1=0, select bank0
  8695  1299  0813               	movf	19,w	;volatile
  8696  129A                     l314:
  8697  129A  0008               	return
  8698  129B                     __end_of_I2C_Read_Byte:
  8699                           
  8700                           	psect	text29
  8701  1274                     __ptext29:	
  8702 ;; *************** function _I2C_Master_Write *****************
  8703 ;; Defined at:
  8704 ;;		line 62 in file "I2C_Master.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  data            1    wreg     unsigned char 
  8707 ;; Auto vars:     Size  Location     Type
  8708 ;;  data            1    4[COMMON] unsigned char 
  8709 ;; Return value:  Size  Location     Type
  8710 ;;                  1    wreg      unsigned char 
  8711 ;; Registers used:
  8712 ;;		wreg, status,2, status,0, pclath, cstack
  8713 ;; Tracked objects:
  8714 ;;		On entry : 0/0
  8715 ;;		On exit  : 0/0
  8716 ;;		Unchanged: 0/0
  8717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8718 ;;      Params:         0       0       0       0       0
  8719 ;;      Locals:         1       0       0       0       0
  8720 ;;      Temps:          0       0       0       0       0
  8721 ;;      Totals:         1       0       0       0       0
  8722 ;;Total ram usage:        1 bytes
  8723 ;; Hardware stack levels used: 1
  8724 ;; Hardware stack levels required when called: 2
  8725 ;; This function calls:
  8726 ;;		_I2C_Master_Wait
  8727 ;; This function is called by:
  8728 ;;		_I2C_Comunication
  8729 ;;		_IO_Expander_Write
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           
  8733                           
  8734                           ;psect for function _I2C_Master_Write
  8735  1274                     _I2C_Master_Write:
  8736                           
  8737                           ;incstack = 0
  8738                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8739                           ;I2C_Master_Write@data stored from wreg
  8740  1274  00F4               	movwf	I2C_Master_Write@data
  8741  1275                     l3345:
  8742                           
  8743                           ;I2C_Master.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_Master.c: 63: 
      +                          {;I2C_Master.c: 64:     I2C_Master_Wait();
  8744  1275  160A  118A  225A  160A  118A  	fcall	_I2C_Master_Wait
  8745  127A                     l3347:
  8746                           
  8747                           ;I2C_Master.c: 65:     SSPBUF = data;
  8748  127A  0874               	movf	I2C_Master_Write@data,w
  8749  127B  1283               	bcf	3,5	;RP0=0, select bank0
  8750  127C  1303               	bcf	3,6	;RP1=0, select bank0
  8751  127D  0093               	movwf	19	;volatile
  8752  127E                     l305:	
  8753                           ;I2C_Master.c: 66:     while(!SSPIF);
  8754                           
  8755  127E  1D8C               	btfss	12,3	;volatile
  8756  127F  2A81               	goto	u4001
  8757  1280  2A82               	goto	u4000
  8758  1281                     u4001:
  8759  1281  2A7E               	goto	l305
  8760  1282                     u4000:
  8761  1282                     l307:
  8762                           
  8763                           ;I2C_Master.c: 67:  SSPIF = 0;
  8764  1282  118C               	bcf	12,3	;volatile
  8765  1283                     l308:	
  8766                           ;I2C_Master.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8767                           
  8768  1283  0008               	return
  8769  1284                     __end_of_I2C_Master_Write:
  8770                           
  8771                           	psect	text30
  8772  1251                     __ptext30:	
  8773 ;; *************** function _I2C_Master_Stop *****************
  8774 ;; Defined at:
  8775 ;;		line 42 in file "I2C_Master.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0, pclath, cstack
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8789 ;;      Params:         0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0
  8792 ;;      Totals:         0       0       0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used: 1
  8795 ;; Hardware stack levels required when called: 2
  8796 ;; This function calls:
  8797 ;;		_I2C_Master_Wait
  8798 ;; This function is called by:
  8799 ;;		_I2C_Comunication
  8800 ;;		_IO_Expander_Write
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           
  8805                           ;psect for function _I2C_Master_Stop
  8806  1251                     _I2C_Master_Stop:
  8807  1251                     l3349:	
  8808                           ;incstack = 0
  8809                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8810                           
  8811                           
  8812                           ;I2C_Master.c: 44:     I2C_Master_Wait();
  8813  1251  160A  118A  225A  160A  118A  	fcall	_I2C_Master_Wait
  8814  1256                     l3351:
  8815                           
  8816                           ;I2C_Master.c: 45:     PEN = 1;
  8817  1256  1683               	bsf	3,5	;RP0=1, select bank1
  8818  1257  1303               	bcf	3,6	;RP1=0, select bank1
  8819  1258  1511               	bsf	17,2	;volatile
  8820  1259                     l296:
  8821  1259  0008               	return
  8822  125A                     __end_of_I2C_Master_Stop:
  8823                           
  8824                           	psect	text31
  8825  1248                     __ptext31:	
  8826 ;; *************** function _I2C_Master_Start *****************
  8827 ;; Defined at:
  8828 ;;		line 30 in file "I2C_Master.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg, status,2, status,0, pclath, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8842 ;;      Params:         0       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0
  8845 ;;      Totals:         0       0       0       0       0
  8846 ;;Total ram usage:        0 bytes
  8847 ;; Hardware stack levels used: 1
  8848 ;; Hardware stack levels required when called: 2
  8849 ;; This function calls:
  8850 ;;		_I2C_Master_Wait
  8851 ;; This function is called by:
  8852 ;;		_I2C_Comunication
  8853 ;;		_IO_Expander_Write
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _I2C_Master_Start
  8859  1248                     _I2C_Master_Start:
  8860  1248                     l3341:	
  8861                           ;incstack = 0
  8862                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8863                           
  8864                           
  8865                           ;I2C_Master.c: 32:     I2C_Master_Wait();
  8866  1248  160A  118A  225A  160A  118A  	fcall	_I2C_Master_Wait
  8867  124D                     l3343:
  8868                           
  8869                           ;I2C_Master.c: 33:     SEN = 1;
  8870  124D  1683               	bsf	3,5	;RP0=1, select bank1
  8871  124E  1303               	bcf	3,6	;RP1=0, select bank1
  8872  124F  1411               	bsf	17,0	;volatile
  8873  1250                     l290:
  8874  1250  0008               	return
  8875  1251                     __end_of_I2C_Master_Start:
  8876                           
  8877                           	psect	text32
  8878  125A                     __ptext32:	
  8879 ;; *************** function _I2C_Master_Wait *****************
  8880 ;; Defined at:
  8881 ;;		line 25 in file "I2C_Master.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8895 ;;      Params:         0       0       0       0       0
  8896 ;;      Locals:         0       0       0       0       0
  8897 ;;      Temps:          0       0       0       0       0
  8898 ;;      Totals:         0       0       0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used: 1
  8901 ;; Hardware stack levels required when called: 1
  8902 ;; This function calls:
  8903 ;;		Nothing
  8904 ;; This function is called by:
  8905 ;;		_I2C_Master_Start
  8906 ;;		_I2C_Master_Stop
  8907 ;;		_I2C_Master_Write
  8908 ;;		_I2C_Read_Byte
  8909 ;;		_I2C_Master_RepeatedStart
  8910 ;;		_I2C_ACK
  8911 ;;		_I2C_NACK
  8912 ;;		_I2C_Master_Read
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916                           
  8917                           ;psect for function _I2C_Master_Wait
  8918  125A                     _I2C_Master_Wait:
  8919  125A                     l3337:	
  8920                           ;incstack = 0
  8921                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8922                           
  8923  125A                     l284:	
  8924                           ;I2C_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8925                           
  8926  125A  1683               	bsf	3,5	;RP0=1, select bank1
  8927  125B  1303               	bcf	3,6	;RP1=0, select bank1
  8928  125C  1914               	btfsc	20,2	;volatile
  8929  125D  2A5F               	goto	u3981
  8930  125E  2A60               	goto	u3980
  8931  125F                     u3981:
  8932  125F  2A5A               	goto	l284
  8933  1260                     u3980:
  8934  1260                     l3339:
  8935  1260  0811               	movf	17,w	;volatile
  8936  1261  391F               	andlw	31
  8937  1262  1D03               	btfss	3,2
  8938  1263  2A65               	goto	u3991
  8939  1264  2A66               	goto	u3990
  8940  1265                     u3991:
  8941  1265  2A5A               	goto	l284
  8942  1266                     u3990:
  8943  1266                     l287:
  8944  1266  0008               	return
  8945  1267                     __end_of_I2C_Master_Wait:
  8946                           
  8947                           	psect	text33
  8948  13E6                     __ptext33:	
  8949 ;; *************** function _isr *****************
  8950 ;; Defined at:
  8951 ;;		line 76 in file "Master_PIC.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg, status,2, status,0
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8965 ;;      Params:         0       0       0       0       0
  8966 ;;      Locals:         0       0       0       0       0
  8967 ;;      Temps:          4       0       0       0       0
  8968 ;;      Totals:         4       0       0       0       0
  8969 ;;Total ram usage:        4 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		Interrupt level 1
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           
  8979                           ;psect for function _isr
  8980  13E6                     _isr:
  8981  13E6                     i1l2089:
  8982                           
  8983                           ;Master_PIC.c: 79: 
  8984  13E6  1283               	bcf	3,5	;RP0=0, select bank0
  8985  13E7  1303               	bcf	3,6	;RP1=0, select bank0
  8986  13E8  1F0C               	btfss	12,6	;volatile
  8987  13E9  2BEB               	goto	u196_21
  8988  13EA  2BEC               	goto	u196_20
  8989  13EB                     u196_21:
  8990  13EB  2C1A               	goto	i1l157
  8991  13EC                     u196_20:
  8992  13EC                     i1l2091:
  8993                           
  8994                           ;Master_PIC.c: 80: 
  8995  13EC  0C1F               	rrf	31,w	;volatile
  8996  13ED  00F0               	movwf	??_isr
  8997  13EE  0C70               	rrf	??_isr,w
  8998  13EF  390F               	andlw	15
  8999  13F0  3A00               	xorlw	0
  9000  13F1  1D03               	skipz
  9001  13F2  2BF4               	goto	u197_21
  9002  13F3  2BF5               	goto	u197_20
  9003  13F4                     u197_21:
  9004  13F4  2C19               	goto	i1l2095
  9005  13F5                     u197_20:
  9006  13F5                     i1l2093:
  9007                           
  9008                           ;Master_PIC.c: 81: 
  9009  13F5  081E               	movf	30,w	;volatile
  9010  13F6  00F0               	movwf	??_isr
  9011  13F7  1003               	clrc
  9012  13F8  0C70               	rrf	??_isr,w
  9013  13F9  3E7C               	addlw	124
  9014  13FA  0095               	movwf	21	;volatile
  9015                           
  9016                           ;Master_PIC.c: 82: 
  9017  13FB  081E               	movf	30,w	;volatile
  9018  13FC  3901               	andlw	1
  9019  13FD  00F0               	movwf	??_isr
  9020  13FE  0EF0               	swapf	??_isr,f
  9021  13FF  0DF0               	rlf	??_isr,f
  9022  1400  0817               	movf	23,w	;volatile
  9023  1401  0670               	xorwf	??_isr,w
  9024  1402  39DF               	andlw	-33
  9025  1403  0670               	xorwf	??_isr,w
  9026  1404  0097               	movwf	23	;volatile
  9027                           
  9028                           ;Master_PIC.c: 83: 
  9029  1405  1683               	bsf	3,5	;RP0=1, select bank1
  9030  1406  1303               	bcf	3,6	;RP1=0, select bank1
  9031  1407  081E               	movf	30,w	;volatile
  9032  1408  00F0               	movwf	??_isr
  9033  1409  3007               	movlw	7
  9034  140A                     u198_25:
  9035  140A  1003               	clrc
  9036  140B  0CF0               	rrf	??_isr,f
  9037  140C  3EFF               	addlw	-1
  9038  140D  1D03               	skipz
  9039  140E  2C0A               	goto	u198_25
  9040  140F  0870               	movf	??_isr,w
  9041  1410  00F1               	movwf	??_isr+1
  9042  1411  0EF1               	swapf	??_isr+1,f
  9043  1412  1283               	bcf	3,5	;RP0=0, select bank0
  9044  1413  1303               	bcf	3,6	;RP1=0, select bank0
  9045  1414  0817               	movf	23,w	;volatile
  9046  1415  0671               	xorwf	??_isr+1,w
  9047  1416  39EF               	andlw	-17
  9048  1417  0671               	xorwf	??_isr+1,w
  9049  1418  0097               	movwf	23	;volatile
  9050  1419                     i1l2095:
  9051                           
  9052                           ;Master_PIC.c: 86:     ANSEL = 0b00000001;
  9053  1419  130C               	bcf	12,6	;volatile
  9054  141A                     i1l157:
  9055  141A  0873               	movf	??_isr+3,w
  9056  141B  008A               	movwf	10
  9057  141C  0E72               	swapf	??_isr+2,w
  9058  141D  0083               	movwf	3
  9059  141E  0EFE               	swapf	btemp,f
  9060  141F  0E7E               	swapf	btemp,w
  9061  1420  0009               	retfie
  9062  1421                     __end_of_isr:
  9063  007E                     btemp	set	126	;btemp
  9064  007E                     wtemp0	set	126
  9065                           
  9066                           	psect	intentry
  9067  0004                     __pintentry:	
  9068                           ;incstack = 0
  9069                           ; Regs used in _isr: [wreg+status,2+status,0]
  9070                           
  9071  0004                     interrupt_function:
  9072  007E                     saved_w	set	btemp
  9073  0004  00FE               	movwf	btemp
  9074  0005  0E03               	swapf	3,w
  9075  0006  00F2               	movwf	??_isr+2
  9076  0007  080A               	movf	10,w
  9077  0008  00F3               	movwf	??_isr+3
  9078  0009  160A  118A  2BE6   	ljmp	_isr
  9079                           
  9080                           	psect	config
  9081                           
  9082                           ;Config register CONFIG1 @ 0x2007
  9083                           ;	Oscillator Selection bits
  9084                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  9085                           ;	Watchdog Timer Enable bit
  9086                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9087                           ;	Power-up Timer Enable bit
  9088                           ;	PWRTE = OFF, PWRT disabled
  9089                           ;	RE3/MCLR pin function select bit
  9090                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9091                           ;	Code Protection bit
  9092                           ;	CP = OFF, Program memory code protection is disabled
  9093                           ;	Data Code Protection bit
  9094                           ;	CPD = OFF, Data memory code protection is disabled
  9095                           ;	Brown Out Reset Selection bits
  9096                           ;	BOREN = OFF, BOR disabled
  9097                           ;	Internal External Switchover bit
  9098                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9099                           ;	Fail-Safe Clock Monitor Enabled bit
  9100                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9101                           ;	Low Voltage Programming Enable bit
  9102                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9103                           ;	In-Circuit Debugger Mode bit
  9104                           ;	DEBUG = 0x1, unprogrammed default
  9105  2007                     	org	8199
  9106  2007  20D4               	dw	8404
  9107                           
  9108                           ;Config register CONFIG2 @ 0x2008
  9109                           ;	Brown-out Reset Selection bit
  9110                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9111                           ;	Flash Program Memory Self Write Enable bits
  9112                           ;	WRT = OFF, Write protection off
  9113  2008                     	org	8200
  9114  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    0
    Data        1
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     76      80
    BANK1            80     19      74
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), 


Critical Paths under _main in COMMON

    _Text->_division
    _LCD_Init->_IO_Expander_Write
    _LCD_Send->___bmul
    _LCD_Send->_division
    _division->___awdiv
    _division->___awmod
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___fltol
    ___xxtofl->___fltol
    ___wmul->___fltol
    ___flsub->___fltol
    ___flmul->__Umul8_16
    ___flmul->___fltol
    _I2C_Comunication->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Send
    _Text->_division
    _LCD_Start->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Send->_ADC_convert
    _division->___awdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LCD_Send
    _LCD_Send->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   26756
                                             75 BANK0      1     1      0
                   _I2C_Comunication
                           _LCD_Send
                          _LCD_Start
                               _Text
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _Text                                                 3     3      0    1840
                                             11 BANK0      3     3      0
                           _division
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            3     3      0    2565
                                             11 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     282
                                              4 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Send                                             8     8      0   22320
                                             71 BANK0      4     4      0
                                             15 BANK1      4     4      0
                        _ADC_convert
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                             ___bmul
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1840
                                              5 COMMON     1     1      0
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     949
                                              4 BANK0      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1    1334
                                              4 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     127
                                              0 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      62
                                              5 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _ADC_convert                                         23    17      6   16214
                                             63 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1286
                                             15 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1036
                                              9 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     967
                                              4 COMMON     2     2      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3727
                                             29 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3122
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             37 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             29 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Comunication                                     3     3      0      31
                                              0 BANK0      3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      31
                                              4 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Comunication
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _LCD_Send
     _ADC_convert
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___flsub (ARG)
           ___fladd
           ___fltol (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flsub
       ___fltol
       ___wmul
       ___xxtofl
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
     _LCD_Write_Char
       _LCD_Write_4Bit
     _LCD_Write_String
       _LCD_Write_Char
     ___bmul
     ___xxtofl
     _division
       ___awdiv
       ___awmod
   _LCD_Start
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String
   _Text
     _division
   _setup
     _I2C_Master_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     13      4A       7       92.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Sep 06 03:12:32 2021

              ___fldiv@aexp 0056                ___fldiv@bexp 0055                           pc 0002  
              ___fldiv@sign 004E              ___bmul@product 0020                          _RS 00AF  
              ___awdiv@sign 0025                          fsr 0004         ___wmul@multiplicand 002B  
       __Umul8_16@word_mpld 0024                         l222 1591                         l311 128C  
                       l305 127E                         l313 1291                         l314 129A  
                       l170 163E                         l307 1282                         l219 0478  
                       l331 1313                         l171 166F                         l308 1283  
                       l325 17FF                         l181 14F8                         l334 12F0  
                       l190 1600                         l182 150A                         l343 1466  
                       l183 151C                         l328 12CE                         l352 13E5  
                       l184 1526                         l168 163A                         l337 1336  
                       l193 0B9A                         l281 1273                         l290 1250  
                       l187 16E8                         l284 125A                         l453 1345  
                       l606 0869                         l630 08F4                         l287 1266  
                       l631 090D                         l455 135D                         l296 1259  
                       l802 0BF7                         l627 0888                         l619 14C1  
                       l804 0D77                         l900 099F                         l750 0E82  
                       l646 174F                         l639 1764                         l479 12B1  
                       l824 0D5B                         l752 0E59                         l649 1764  
                       l826 0D6B                         l818 0CE9                         l842 07D9  
                       l746 0DDB                         l771 0F71                         l780 0FD1  
                       l861 139B                         l854 07CD                         l863 13AD  
                       l767 0F4D                         l759 0FFF                         l848 0745  
                       l792 07FD                         l777 0F93                         l788 0FF3  
                       l892 0977                         l789 0FFF                         l886 0932  
                       l888 09C9                         l899 0993                         _GIE 005F  
                       _RA0 0028                         _RB7 0037                         _PR2 0092  
                       _PEN 048A                         _SEN 0488                         _POT 00B5  
                       _isr 13E6                         fsr0 0004                         _sum 006C  
                       indf 0000                ___awmod@sign 0025           ?_I2C_Comunication 0070  
              ___flmul@aexp 0053                ___flmul@bexp 0058                ___flmul@sign 0052  
              ___flmul@temp 005D                ___flmul@prod 0059             __end_of_LCD_CMD 12F1  
        ??_I2C_Comunication 0020         LCD_Write_String@Str 0024              _LCD_Set_Cursor 13AE  
              ___fltol@exp1 0075                        l4001 0798                        l4011 07C5  
                      l4003 07A7                        l4013 07C6                        l4005 07B1  
                      l4021 0916                        l1701 126E                        l4101 17D5  
                      l4015 07D1                        l4007 07B3                        l4031 0943  
                      l4023 091A                        l4111 13BA                        l1703 1271  
                      l4103 17E5                        l4009 07C1                        l3401 0DD1  
                      l4041 096E                        l4033 0948                        l4025 092A  
                      l4201 030B                        l4113 13C2                        l1705 1272  
                      l4105 17EF                        l3411 0DED                        l3403 0DD3  
                      l4051 09A1                        l4043 097E                        l4035 0955  
                      l4027 093A                        l4019 0911                        l4211 0331  
                      l4203 0318                        l4115 13CA                        l4107 13B1  
                      l4131 144A                        l3341 1248                        l3501 0F63  
                      l3421 0E01                        l3413 0DF1                        l3405 0DE1  
                      l4053 09B7                        l4045 0989                        l4037 095C  
                      l4221 0378                        l4213 0336                        l4205 0318  
                      l4141 0059                        l4133 003A                        l4109 13B2  
                      l4117 13D2                        l4125 1421                        l4301 0B3E  
                      l1901 160B                        l3343 124D                        l3351 1256  
                      l4071 1284                        l3511 0F7A                        l3503 0F6C  
                      l3431 0E15                        l3423 0E05                        l3415 0DF5  
                      l3407 0DE5                        l4055 09BC                        l4047 098D  
                      l4039 0960                        l4223 0422                        l4215 033B  
                      l4231 0462                        l4207 031E                        l4151 00A4  
                      l4143 005D                        l4135 0055                        l4127 1426  
                      l4063 1528                        l4311 0B70                        l4303 0B4C  
                      l1911 1619                        l1903 160C                        l3337 125A  
                      l3345 1275                        l4073 1289                        l4321 1670  
                      l3601 080F                        l3521 0F8A                        l3513 0F7F  
                      l3505 0F70                        l3441 0E26                        l3433 0E19  
                      l3425 0E09                        l3417 0DF9                        l3409 0DE9  
                      l3361 0D78                        l4057 09C0                        l4049 0997  
                      l4233 0468                        l4225 0450                        l4217 035C  
                      l4209 032B                        l4161 00E5                        l4153 00AD  
                      l4145 005D                        l4137 0055                        l3353 12B3  
                      l4129 1442                        l4241 12A7                        l4065 1582  
                      l4313 0B76                        l4305 0B52                        l4081 1768  
                      l1921 1620                        l1913 161A                        l1905 160D  
                      l3339 1260                        l3347 127A                        l4075 1292  
                      l4331 16AD                        l4323 168A                        l3611 0824  
                      l3603 0813                        l3531 0FAB                        l3523 0F90  
                      l3507 0F75                        l3515 0F81                        l3451 0E6C  
                      l3443 0E3D                        l3435 0E1D                        l3427 0E0D  
                      l3419 0DFD                        l3371 0D8F                        l3363 0D7F  
                      l4059 09C1                        l4227 0458                        l4219 0362  
                      l4171 012C                        l4163 00EA                        l4155 00D0  
                      l4147 0078                        l4139 0057                        l3355 12F4  
                      l4243 12A9                        l4235 129E                        l4067 1587  
                      l4315 0B82                        l4307 0B5E                        l4091 179F  
                      l4083 176E                        l4251 159D                        l1931 162A  
                      l1923 1621                        l1915 161B                        l1907 1611  
                      l3349 1251                        l4077 1297                        l4333 16B2  
                      l4325 1698                        l3621 0847                        l3613 0827  
                      l3605 0818                        l3541 0FE3                        l3533 0FAF  
                      l3509 0F78                        l3517 0F85                        l3461 0E8B  
                      l3453 0E6D                        l3445 0E5D                        l3437 0E21  
                      l3429 0E11                        l3381 0DA7                        l3373 0D94  
                      l3365 0D85                        l3701 16FF                        l4229 045E  
                      l4173 01D6                        l4165 00EF                        l4181 0216  
                      l4149 0099                        l4157 00D6                        l3357 12FC  
                      l4245 12B0                        l4237 129F                        l4069 158C  
                      l4317 0B88                        l4309 0B64                        l4093 17A5  
                      l4085 1774                        l4261 15D1                        l4253 15A7  
                      l4341 14D8                        l1941 1635                        l1933 162E  
                      l1925 1622                        l1917 161E                        l1909 1616  
                      l4335 16DA                        l4327 169D                        l3631 0860  
                      l3623 084D                        l3615 082E                        l3607 081C  
                      l3551 0FFA                        l3543 0FE8                        l3535 0FCD  
                      l3527 0F98                        l3519 0F86                        l3471 0EB3  
                      l3455 0E76                        l3447 0E66                        l3439 0E25  
                      l3391 0DBD                        l3383 0DAC                        l3375 0D9C  
                      l3367 0D89                        l3711 1723                        l3703 1714  
                      l4191 0239                        l4183 021C                        l4175 0204  
                      l4167 0110                        l4159 00DF                        l3359 1303  
                      l4239 12A3                        l4319 0B94                        l4271 09D9  
                      l4095 17B5                        l4087 1785                        l4263 15DC  
                      l4255 15B2                        l4351 1502                        l4343 14E0  
                      l1951 1652                        l1943 1636                        l1935 1630  
                      l1927 1624                        l1919 161F                        l4329 16A3  
                      l3633 0865                        l3625 084E                        l3617 0832  
                      l3609 081E                        l3801 0C52                        l3561 1395  
                      l3553 0FFE                        l3545 0FE9                        l3537 0FD6  
                      l3529 0F9D                        l3481 0ECC                        l3473 0EBC  
                      l3465 0E94                        l3449 0E68                        l3457 0E7A  
                      l3393 0DBE                        l3385 0DB2                        l3377 0D9D  
                      l3369 0D8A                        l3705 1715                        l4193 025A  
                      l4185 022C                        l4177 020C                        l4169 0116  
                      l3641 146E                        l4281 0A13                        l4273 09E5  
                      l1697 1267                        l4097 17BF                        l4089 178F  
                      l4265 15E6                        l4257 15BC                        l4249 1592  
                      l4353 1508                        l4345 14E6                        l4337 14C2  
                      l1961 1660                        l1953 1658                        l1945 1637  
                      l1937 1632                        l1929 1628                        l4361 1363  
                      l3627 0855                        l3619 0836                        l3803 0C57  
                      l3811 0C77                        l3563 13A4                        l3555 1388  
                      l3547 0FED                        l3539 0FDB                        l3491 0F30  
                      l3475 0EBE                        l3467 0EAB                        l3459 0E86  
                      l3483 0ED1                        l3395 0DC3                        l3387 0DB3  
                      l3379 0D9F                        l3731 07DA                        l3707 171D  
                      l4195 0260                        l4187 0234                        l4179 0212  
                      l3571 131B                        l3651 1484                        l3643 1473  
                      l4291 0AB8                        l4283 0A1E                        l4275 09F0  
                      l1699 126B                        l4099 17CF                        l4267 15F1  
                      l4259 15C7                        l4355 1514                        l4347 14F0  
                      l4339 14D0                        l1971 1667                        l1963 1661  
                      l1955 165B                        l1947 1638                        l1939 1634  
                      l1891 1601                        l4363 1368                        l3629 085B  
                      l3821 0CA2                        l3813 0C89                        l3805 0C69  
                      l3741 0BA8                        l3565 13A9                        l3557 138A  
                      l3901 04B2                        l3549 0FEF                        l3485 0EE7  
                      l3493 0F3F                        l3477 0EC2                        l3469 0EAF  
                      l3397 0DC8                        l3389 0DB9                        l3733 07DE  
                      l3725 1744                        l3717 172B                        l3709 171F  
                      l3581 133B                        l4197 0278                        l4189 0234  
                      l3573 12D2                        l3661 14A0                        l3653 1487  
                      l3645 1475                        l3637 1467                        l4293 0AE5  
                      l4285 0A4B                        l4277 09FC                        l4269 09CA  
                      l4357 151A                        l4349 14F6                        l1973 1668  
                      l1965 1664                        l1957 165C                        l1949 1639  
                      l1893 1605                        l4365 1372                        l3831 0CBA  
                      l3823 0CAA                        l3815 0C8A                        l3807 0C6D  
                      l3751 0BBF                        l3743 0BAC                        l3559 1391  
                      l3911 04C9                        l3903 04B6                        l3495 0F55  
                      l3487 0F25                        l3479 0EC3                        l3399 0DD0  
                      l3727 1754                        l3719 173D                        l3583 133F  
                      l4199 02F5                        l3575 12D5                        l3671 14BD  
                      l3663 14A6                        l3655 148E                        l3647 1479  
                      l3639 146A                        l4295 0B05                        l4287 0A6B  
                      l4279 0A07                        l1975 1669                        l1967 1665  
                      l1959 165D                        l1895 1606                        l4367 1379  
                      l4359 135E                        l3593 0801                        l3841 0CD2  
                      l3833 0CC3                        l3825 0CAC                        l3817 0C98  
                      l3809 0C6E                        l3761 0BD5                        l3753 0BC0  
                      l3745 0BAD                        l3737 0B9B                        l3681 08A4  
                      l3913 04CB                        l3905 04B7                        l3497 0F5A  
                      l3489 0F2B                        l3729 1759                        l3585 134C  
                      l3577 12DE                        l4449 13DA                        l3569 1317  
                      l3665 14AD                        l3657 1492                        l3649 147E  
                      l4297 0B18                        l4289 0A98                        l1977 166A  
                      l1969 1666                        l1897 1609                        l4369 137C  
                      l3595 0804                        l3851 0D01                        l3843 0CE6  
                      l3827 0CB5                        l3835 0CC9                        l3819 0C9C  
                      l3771 0BEC                        l3763 0BD9                        l3747 0BB2  
                      l3755 0BC2                        l3739 0BA2                        l3691 090C  
                      l3683 08A8                        l3675 086A                        l3931 053C  
                      l3923 04E6                        l3915 04D3                        l3907 04BC  
                      l3587 1353                        l3579 1337                        l3659 1496  
                      l3667 14B3                        l4299 0B2B                        l1899 160A  
                      l3597 0808                        l3861 0D3F                        l3853 0D05  
                      l3837 0CCD                        l3829 0CB9                        l3781 0C0F  
                      l3773 0BED                        l3765 0BDA                        l3757 0BCA  
                      l3749 0BB7                        l3685 08CC                        l3677 0880  
                      l3941 05B9                        l3933 0568                        l3925 04F6  
                      l3917 04D8                        l3909 04C1                        l3589 1359  
                      l3669 14B8                        l3599 080D                        l3871 0D65  
                      l3863 0D4E                        l3855 0D1E                        l3847 0CEE  
                      l3839 0CCE                        l3791 0C26                        l3767 0BDF  
                      l3775 0BEF                        l3759 0BCF                        l3687 08D0  
                      l3679 089C                        l3951 0639                        l3943 05D6  
                      l3935 0584                        l3927 0503                        l3919 04DD  
                      l3695 16E9                        l3873 0D67                        l3865 0D52  
                      l3849 0CF3                        l3857 0D24                        l3793 0C38  
                      l3777 0BFF                        l3785 0C18                        l3769 0BE4  
                      l3689 090A                        l3961 06F1                        l3953 0666  
                      l3945 05E6                        l3937 05A0                        l3929 0520  
                      l3881 0480                        l3697 16F6                        l3867 0D5A  
                      l3859 0D31                        l3795 0C40                        l3787 0C1D  
                      l3779 0C0B                        l3971 0716                        l3963 06FA  
                      l3955 0676                        l3947 0603                        l3939 05A9  
                      l3891 0495                        l3883 0486                        l3869 0D61  
                      l3797 0C48                        l3981 072E                        l3973 071F  
                      l3965 0708                        l3957 06A3                        l3949 061C  
                      l3893 049D                        l3885 048A                        l3799 0C50  
                      l3991 075D                        l3983 0742                        l3967 0711  
                      l3975 0725                        l3959 06C9                        l3895 049F  
                      l3887 048B                        l3879 0479                        _ADIF 0066  
                      l3993 0761                        l3977 0729                        l3969 0715  
                      l3897 04A7                        l3889 0490                        l3995 077A  
                      l3987 074A                        l3979 072A                        l3899 04AC  
                      ?_isr 0070                        l3989 074F                        l3997 0780  
                      l3999 078D                        STR_1 101A                        STR_2 1023  
                      STR_3 102C                        STR_4 1010                        _CONT 00B6  
                      u4000 1282                        u4001 1281                        u4010 0D89  
                      u4011 0D88                        u4100 0E3D                        u4020 0D8F  
                      u4101 0E3C                        u4021 0D8E                        u4110 0E48  
                      u4030 0D94                        u4111 0E46                        u4031 0D93  
                      u5000 0C57                        u4200 0EAF                        u4120 0E49  
                      u4040 0DB2                        u5001 0C56                        u4201 0EAE  
                      u4105 0E39                        u4041 0DB1                        u4210 0EB3  
                      u4130 0E5D                        u4050 0DBD                        u4211 0EB2  
                      u4131 0E5C                        u4051 0DBC                        u4220 0EC2  
                      u4140 0E6C                        u4060 0DC3                        u1900 163E  
                      u4221 0EC1                        u4141 0E6B                        u4061 0DC2  
                      u1901 163D                        u5110 0CCD                        u5030 0C6D  
                      u4310 0F70                        u4070 0DC8                        u5111 0CCC  
                      u5031 0C6C                        u5015 0C59                        u4311 0F6F  
                      u4071 0DC7                        u5200 0D65                        u5120 0CD2  
                      u4400 0FBE                        u4320 0F75                        u4240 0EE7  
                      u4160 0E82                        u4080 0DE1                        u5201 0D64  
                      u5121 0CD1                        u5105 0CBC                        u5025 0C62  
                      u4321 0F74                        u4305 0F65                        u4241 0EE6  
                      u4161 0E81                        u4081 0DE0                        u5130 0CE6  
                      u5050 0C89                        u5210 048A                        u4410 0FCD  
                      u4330 0F7F                        u4170 0E86                        u4090 0DE5  
                      u5131 0CE5                        u5051 0C88                        u5211 0489  
                      u4411 0FCC                        u4331 0F7E                        u4251 0EFE  
                      u4243 0EE3                        u4235 0EC5                        u4171 0E85  
                      u4155 0E6F                        u4091 0DE4                        u5140 0CED  
                      u5060 0CA2                        u5220 0490                        u4420 0FD6  
                      u4340 0F85                        u4260 0F12                        u4252 0EFF  
                      u4180 0E8B                        u5141 0CEC                        u5061 0CA1  
                      u5045 0C70                        u5301 054A                        u5221 048F  
                      u4421 0FD5                        u4405 0FB9                        u4341 0F84  
                      u4261 0F13                        u4253 0F04                        u4181 0E8A  
                      u5150 0CF3                        u5070 0CAA                        u5302 0551  
                      u5230 0495                        u4430 0FDB                        u4350 0F8A  
                      u4270 0F30                        u4262 0F18                        u4254 0F05  
                      u5151 0CF2                        u5071 0CA9                        u5055 0C85  
                      u5311 0576                        u5303 0558                        u5231 0494  
                      u4431 0FDA                        u4351 0F89                        u4271 0F2F  
                      u4263 0F19                        u4255 0F0A                        u4191 0E9D  
                      u6007 15F9                        u4600 0836                        u5160 0D05  
                      u5400 06AF                        u5312 057D                        u5240 04B6  
                      u4440 0FE8                        u4360 0F90                        u4280 0F55  
                      u4256 0F0B                        u4192 0EA4                        u4520 133F  
                      u4601 0835                        u5161 0D04                        u5321 0592  
                      u5313 0584                        u5241 04B5                        u4441 0FE7  
                      u4361 0F8F                        u4281 0F54                        u4193 0EAB  
                      u4521 133E                        u4505 1329                        u6017 177A  
                      u5170 0D14                        u5090 0CB9                        u5322 0599  
                      u5250 04BC                        u4450 0FED                        u4370 0F97  
                      u4290 0F5A                        u5091 0CB8                        u5411 06BB  
                      u5323 05A0                        u5251 04BB                        u4451 0FEC  
                      u4371 0F96                        u4291 0F59                        u4515 12E3  
                      u6107 09D2                        u6027 178B                        _PEIE 005E  
                      u4620 0847                        u5180 0D31                        u5500 0742  
                      u5420 06D7                        u5412 06C2                        u5260 04C1  
                      u4460 0FFE                        u4380 0F9D                        u4700 1496  
                      u4621 0846                        u5181 0D30                        u5085 0CAE  
                      u5501 0741                        u5413 06C9                        u5405 06AA  
                      u5341 05C8                        u5261 04C0                        u4461 0FFD  
                      u4381 0F9C                        u6117 1310                        u4701 1495  
                      u6037 179B                        u5190 0D4E                        u4470 1395  
                      u5510 0749                        u5342 05CF                        u5270 04D8  
                      u4390 0FAF                        u4550 1359                        u4710 14A0  
                      u6127 1692                        u4615 0837                        u5191 0D4D  
                      u5175 0D0F                        u4471 1394                        u5511 0748  
                      u5431 06E3                        u5351 05F5                        u5343 05D6  
                      u5335 05A2                        u5271 04D7                        u4391 0FAE  
                      u4551 1358                        u4535 1346                        u4711 149F  
                      u6047 17AB                        u4640 085B                        u4560 0808  
                      u5520 074F                        u5432 06EA                        u5352 05FC  
                      u5280 04DD                        u5600 093A                        u6137 16BA  
                      u4641 085A                        u4625 0843                        u4561 0807  
                      u5185 0D2D                        u4801 08DF                        u5521 074E  
                      u5433 06F1                        u5425 06D2                        u5353 0603  
                      u5281 04DC                        u4545 134D                        u5601 0939  
                      u6057 17BB                        u4650 0860                        u4570 0813  
                      u4810 090A                        u4802 08E0                        u4490 13A9  
                      u5530 0761                        u4730 14B3                        u6147 16E2  
                      u4651 085F                        u4635 084F                        u4571 0812  
                      u5195 0D4A                        u4811 0909                        u4803 08E5  
                      u4491 13A8                        u5531 0760                        u5371 062B  
                      u5291 052E                        u4731 14B2                        u4715 149C  
                      u6067 17CB                        u4580 0824                        u4804 08E6  
                      u5540 0770                        u5460 0715                        u5372 0632  
                      u5292 0535                        u4900 1754                        u4820 16F6  
                      u5700 09BC                        u5620 095B                        u4740 14B8  
                      u4660 146E                        _RCEN 048B                        u4581 0823  
                      u4805 08EB                        u4485 139C                        u5461 0714  
                      u5445 06F3                        u5381 0658                        u5373 0639  
                      u5365 0605                        u5293 053C                        u4901 1753  
                      u4821 16F5                        u5701 09BB                        u5621 095A  
                      u4741 14B7                        u4725 14A7                        u4661 146D  
                      u6077 17DB                        u4806 08EC                        u4750 0880  
                      u5550 078D                        u5382 065F                        u4910 1759  
                      u4830 170D                        u5710 09C0                        u4670 1479  
                      u4815 0906                        u4751 087F                        u5551 078C  
                      u5455 070A                        u5391 0685                        u5383 0666  
                      u4911 1758                        u5711 09BF                        u5615 094D  
                      u4671 1478                        u6087 17EB                        u5720 1291  
                      u4920 0BAC                        u4760 089C                        u5560 07A7  
                      u5480 0729                        u5392 068C                        u4840 1723  
                      u5640 097D                        u5800 021C                        u4680 1484  
                      u5721 1290                        u4921 0BAB                        u4761 089B  
                      u5561 07A6                        u5545 076B                        u5481 0728  
                      u5393 0693                        u4841 1722                        u5641 097C  
                      u5801 021B                        u4681 1483                        u6097 17FB  
                      u4930 0BB2                        u4770 08A8                        u5570 07C5  
                      u5490 072E                        u4850 172A                        u5810 0278  
                      u5730 1430                        u4595 0828                        u4931 0BB1  
                      u4771 08A7                        u5571 07C4                        u5555 0789  
                      u5491 072D                        u5475 0718                        u4851 1729  
                      u4835 1708                        u5635 096F                        u5811 0277  
                      u3980 1260                        u4940 0BB7                        u5660 098D  
                      u5580 0916                        u5820 0331                        u5740 1454  
                      u5900 1508                        u3981 125F                        u4941 0BB6  
                      u4781 08B7                        u5565 07A3                        u5661 098C  
                      u5581 0915                        u5821 0330                        u5901 1507  
                      u3990 1266                        u4950 0BD9                        u4790 08D0  
                      u4782 08B8                        u4870 173C                        u5670 0993  
                      u5590 091A                        u5830 0378                        u5750 1466  
                      u5910 151A                        u3991 1265                        u4951 0BD8  
                      u4791 08CF                        u4783 08BD                        u4871 173B  
                      u5671 0992                        u5655 0982                        u5591 0919  
                      u5831 0377                        u5815 0274                        u5751 1465  
                      u4695 1488                        u5911 1519                        u4960 0BDF  
                      u4784 08BE                        u4880 1743                        u5680 0997  
                      u5840 0468                        u5760 0078                        u4961 0BDE  
                      u4785 08C3                        u4881 1742                        u4865 172C  
                      u5681 0996                        u5841 0467                        u5761 0077  
                      u4970 0BE4                        u4786 08C4                        u5690 09AC  
                      u5770 00DE                        u5850 12A3                        u4971 0BE3  
                      u5835 0374                        u5771 00DD                        u5851 12A2  
                      u4980 0BFF                        u5780 00E5                        u5860 12B0  
                      u4981 0BFE                        u5781 00E4                        u5861 12AF  
                      u4990 0C1D                        u5790 012C                        u5870 14E0  
                      u4991 0C1C                        u4895 1746                        u5695 09A7  
                      u5791 012B                        u5871 14DF                        u5880 14E6  
                      u5881 14E5                        u5937 1376                        u5890 14F6  
                      u5795 0128                        u5891 14F5                        u5947 1613  
                      u5957 14CA                        u5967 14EC                        u5977 14FE  
                      u5987 1510                        u5997 1522                        _RSEN 0489  
                      _TXIF 0064                        _Text 14C2                        _dec1 00B3  
                      _dec2 00B2                        _dec3 00B1           ?_LCD_Write_String 0024  
                      _main 135E                        _temp 00AC                        _tens 0077  
                      btemp 007E               ADC_convert@mu 00E3                        start 000C  
        __size_of_LCD_Start 006F          ??_LCD_Write_String 0026             ___fldiv@new_exp 004F  
         ___bmul@multiplier 0021        LCD_Write_4Bit@Nibble 0021        __size_of_ADC_convert 0442  
                     ??_isr 0070            __end_of_LCD_Init 1800            __end_of_LCD_Send 0B9B  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
                     ?_Text 0070               ___fltol@sign1 0074             __end_of___fladd 1000  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___fldiv 0D78             __end_of___awdiv 086A             __end_of___awmod 14C2  
           __end_of___flmul 07DA             __end_of___flsub 07FE             __end_of___fltol 1765  
                     _ANSEL 0188             ___awdiv@divisor 0020                       i1l157 141A  
           ___awdiv@counter 0024                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _SSPIE 0463  
                     _SSPIF 0063                       _TXREG 0019      __end_of_LCD_Set_Cursor 13E6  
                     _conv0 00A8                       _conv1 00A4                       _conv2 00A0  
    __size_of_I2C_Read_Byte 0017                       _resta 00B0                       _valor 00B4  
                     _setup 1601                       _units 0076                       pclath 000A  
                     status 0003                       wtemp0 007E              _LCD_Write_4Bit 12F1  
            _LCD_Write_Char 1314             __initialization 000F                __end_of_Text 1527  
              __end_of_main 1385           _IO_Expander_Write 12B2          ?_IO_Expander_Write 0070  
                    ??_Text 002B                      ??_main 006B                   ??_LCD_CMD 0022  
         __end_of_LCD_Start 1601           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0070  
       ??_IO_Expander_Write 0075             ?_LCD_Set_Cursor 0024          ??_I2C_Master_Start 0074  
        ??_I2C_Master_Write 0074                      _ADRESH 001E                      _ADRESL 009E  
                    _CCPR1L 0015                      _CCPR2L 001B            ___awdiv@dividend 0022  
                    ?_setup 0070                      _ANSELH 0189                      i1l2091 13EC  
                    i1l2093 13F5                      i1l2095 1419                      i1l2089 13E6  
                    u196_20 13EC                      u196_21 13EB                      u197_20 13F5  
                    u197_21 13F4                      u198_25 140A                      _SPBRGH 009A  
                    _SSPADD 0093                      _TRISA0 0428                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 1314            __end_of___xxtofl 09CA      __end_of_LCD_Write_Char 1337  
 __end_of_IO_Expander_Write 12CF                      ___flge 086A                      ___bmul 129B  
             _I2C_Read_Byte 1284            __end_of_division 1592                   ??___fladd 0028  
                    ___wmul 1337                   ??___fldiv 0045                   ??___awdiv 0074  
                 ??___awmod 0074                   ??___flmul 004D                   ??___flsub 0076  
                 ??___fltol 0024            ___awdiv@quotient 0026             ___awmod@divisor 0020  
           ___awmod@counter 0024          __size_of__Umul8_16 0029                      saved_w 007E  
           ADC_convert@data 00DA             ADC_convert@temp 00D6                  ___flge@ff1 0020  
                ___flge@ff2 0024                ___xxtofl@arg 0039                ___xxtofl@exp 0038  
              ___xxtofl@val 002F     __end_of__initialization 0033                   ?_LCD_Init 0070  
                 ?_LCD_Send 0070             ?_LCD_Write_4Bit 0070                  ___fltol@f1 0020  
           ?_LCD_Write_Char 0070         ___bmul@multiplicand 0074              ?_I2C_Read_Byte 0070  
            __pcstackCOMMON 0070                __pidataBANK1 07FE               __end_of_setup 1670  
             division@valor 0075                     ??_setup 0074                  __pbssBANK0 006C  
                __pbssBANK1 00A0                  __pbssBANK3 0190                  ??_LCD_Init 0024  
                ??_LCD_Send 0067   __size_of_I2C_Comunication 0079           __end_of__Umul8_16 13AE  
__size_of_IO_Expander_Write 001D                  __pmaintext 135E                     ?___flge 0020  
                   ?___bmul 0074                     ?___wmul 0029                  __pintentry 0004  
                   _ACKSTAT 048E   __size_of_LCD_Write_String 0046                     _LCD_CMD 12CF  
                 ?___xxtofl 002F                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 1000                   ?_division 0070                     _i2c_add 00AE  
           ??_I2C_Read_Byte 0074               ??_ADC_convert 0065             __size_of___flge 00A4  
           __size_of___bmul 0017                     ___fladd 0D78                     ___fldiv 0B9B  
                   ___awdiv 0801                     ___awmod 1467                     ___flmul 0479  
                   ___flsub 07DA                     ___fltol 16E9             __size_of___wmul 0027  
          ??_LCD_Set_Cursor 0025                     __ptext1 1601                     __ptext2 14C2  
                   __ptext3 1592                     __ptext4 1765                     __ptext5 1267  
                   __ptext6 09CA                     __ptext7 1527                     __ptext8 1467  
                   __ptext9 129B                     _counter 00B7                   _T2CONbits 0012  
              __size_of_isr 003B                  ??___xxtofl 0033            ___awmod@dividend 0022  
                   _slave01 006F                     _slave02 006E                     _slave03 006D  
  __size_of_I2C_Master_Init 000D                     _residuo 0078    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                   _LCD_Start 1592                     clrloop0 1241  
      end_of_initialization 0033                  ??_division 0028   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010            ADC_convert@place 0063                   _RCSTAbits 0018  
       __end_of_ADC_convert 0479                  LCD_CMD@CMD 0023                 ___fladd@grs 0033  
             ___xxtofl@sign 0037                   _TRISCbits 0087                 ___fldiv@grs 0051  
               ___fldiv@rem 004A                  ?_LCD_Start 0070            ??_LCD_Write_4Bit 0020  
         LCD_Write_String@i 0029            ??_LCD_Write_Char 0022                 ___flmul@grs 0054  
               _CCP1CONbits 0017                 _CCP2CONbits 001D                   _TXSTAbits 0098  
          _I2C_Comunication 1670           __size_of_LCD_Init 009B           __size_of_LCD_Send 01D1  
              ADC_convert@a 005F                ADC_convert@i 00DF                ADC_convert@j 00D8  
              ADC_convert@x 00DB              __end_of___flge 090E              __end_of___bmul 12B2  
            __end_of___wmul 135E            _LCD_Write_String 1421                 _BAUDCTLbits 0187  
       start_initialization 000F                 __end_of_isr 1421           ??_I2C_Master_Init 0074  
         ??_I2C_Master_Wait 0074           ??_I2C_Master_Stop 0074                 _ADC_convert 0037  
                  ??___flge 0028                    ??___bmul 0075                    ??___wmul 0076  
                 __Umul8_16 1385                 __pdataBANK1 00E9                   ___fladd@a 0024  
                 ___fladd@b 0020                    ?_LCD_CMD 0070                   ___fldiv@a 003D  
                 ___fldiv@b 0041                   ___flmul@a 0049                   ___flmul@b 0045  
               __pbssCOMMON 0076                   ___flsub@a 003D                   ___flsub@b 0041  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00D6  
         __size_of___xxtofl 00BC                 ??_LCD_Start 002B           __size_of_division 006B  
          _I2C_Master_Start 1248            _I2C_Master_Write 1274       IO_Expander_Write@Data 0075  
                  ?___fladd 0020                    ?___fldiv 003D                    ?___awdiv 0020  
                  ?___awmod 0020                    ?___flmul 0045                    ?___flsub 003D  
                  ?___fltol 0020                  ?__Umul8_16 0074        I2C_Master_Write@data 0074  
                 __pstrings 1000              __size_of_setup 006F           interrupt_function 0004  
                  _LCD_Init 1765                    _LCD_Send 09CA              ___wmul@product 002D  
                 clear_ram0 1240                    _PIE1bits 008C                    _PIR1bits 000C  
     __end_of_I2C_Read_Byte 129B                  _ADCON0bits 001F                 __stringbase 100F  
                _ADCON1bits 009F           ___wmul@multiplier 0029    __end_of_I2C_Comunication 16E9  
          __size_of_LCD_CMD 0022                 _converted01 00CC                 _converted02 00C2  
               _converted03 00B8                 _converted04 0190    __end_of_LCD_Write_String 1467  
               ??__Umul8_16 0020            __size_of___fladd 0288            __size_of___fldiv 01DD  
          __size_of___awdiv 0069            __size_of___awmod 005B            __size_of___flmul 0361  
          __size_of___flsub 0024            __size_of___fltol 007C          __end_of__stringtab 1010  
           _I2C_Master_Init 1267                    ___xxtofl 090E             _I2C_Master_Wait 125A  
           _I2C_Master_Stop 1251                    __ptext10 1421                    __ptext11 1314  
                  __ptext20 07DA                    __ptext12 13AE                    __ptext21 0D78  
                  __ptext13 12CF                    __ptext30 1251                    __ptext22 0479  
                  __ptext14 12F1                    __ptext31 1248                    __ptext23 1385  
                  __ptext15 12B2                    __ptext32 125A                    __ptext24 086A  
                  __ptext16 0037                    __ptext33 13E6                    __ptext25 0B9B  
                  __ptext17 090E                    __ptext26 0801                    __ptext18 1337  
                  __ptext27 1670                    __ptext19 16E9                    __ptext28 1284  
                  __ptext29 1274     __size_of_LCD_Set_Cursor 0038                    _division 1527  
             __size_of_Text 0065             _BackLight_State 00E9               __size_of_main 0027  
                  _hundreds 0079                ?_ADC_convert 005F    __end_of_I2C_Master_Start 1251  
  __end_of_I2C_Master_Write 1284                  _INTCONbits 000B          LCD_Write_Char@Data 0023  
                  intlevel1 0000                   stringcode 100A                  _OSCCONbits 008F  
   __size_of_LCD_Write_4Bit 0023           ADC_convert@digits 00E1     __size_of_LCD_Write_Char 0023  
   __end_of_I2C_Master_Init 1274     __end_of_I2C_Master_Wait 1267     __end_of_I2C_Master_Stop 125A  
           LCD_Init@I2C_Add 0026      __Umul8_16@multiplicand 0074                    stringdir 100A  
                  stringtab 1000           LCD_Set_Cursor@COL 0024           LCD_Set_Cursor@ROW 0027  
               _SSPCON2bits 0091               ___fladd@signs 0030                ___fladd@aexp 0031  
              ___fladd@bexp 0032        __Umul8_16@multiplier 0026               _LCD_Send$1379 00E5  
         __Umul8_16@product 0022  
