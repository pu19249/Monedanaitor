

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Sep 05 04:59:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321                           
   322                           	psect	idataBANK1
   323  07FE                     __pidataBANK1:
   324                           
   325                           ;initializer for _BackLight_State
   326  07FE  3408               	retlw	8
   327  0013                     _SSPBUF	set	19
   328  0014                     _SSPCON	set	20
   329  0019                     _TXREG	set	25
   330  001A                     _RCREG	set	26
   331  0009                     _PORTE	set	9
   332  0008                     _PORTD	set	8
   333  0007                     _PORTC	set	7
   334  0006                     _PORTB	set	6
   335  0005                     _PORTA	set	5
   336  000B                     _INTCONbits	set	11
   337  0012                     _T2CONbits	set	18
   338  000C                     _PIR1bits	set	12
   339  001B                     _CCPR2L	set	27
   340  001D                     _CCP2CONbits	set	29
   341  0017                     _CCP1CONbits	set	23
   342  001E                     _ADRESH	set	30
   343  0015                     _CCPR1L	set	21
   344  001F                     _ADCON0bits	set	31
   345  005E                     _PEIE	set	94
   346  005F                     _GIE	set	95
   347  0063                     _SSPIF	set	99
   348  0064                     _TXIF	set	100
   349  0037                     _RB7	set	55
   350  0028                     _RA0	set	40
   351  0066                     _ADIF	set	102
   352  0091                     _SSPCON2bits	set	145
   353  0093                     _SSPADD	set	147
   354  0094                     _SSPSTAT	set	148
   355  0091                     _SSPCON2	set	145
   356  0092                     _PR2	set	146
   357  0087                     _TRISCbits	set	135
   358  009F                     _ADCON1bits	set	159
   359  008F                     _OSCCONbits	set	143
   360  009E                     _ADRESL	set	158
   361  0463                     _SSPIE	set	1123
   362  048B                     _RCEN	set	1163
   363  048E                     _ACKSTAT	set	1166
   364  048C                     _ACKEN	set	1164
   365  048D                     _ACKDT	set	1165
   366  048A                     _PEN	set	1162
   367  0489                     _RSEN	set	1161
   368  0488                     _SEN	set	1160
   369  043C                     _TRISC4	set	1084
   370  043B                     _TRISC3	set	1083
   371  0428                     _TRISA0	set	1064
   372  0189                     _ANSELH	set	393
   373  0188                     _ANSEL	set	392
   374                           
   375                           	psect	strings
   376  1000                     __pstrings:
   377  1000                     stringtab:
   378  1000                     __stringtab:
   379                           
   380                           ;	String table - string pointers are 1 byte each
   381  1000  1BFF               	btfsc	btemp+1,7
   382  1001  280A               	ljmp	stringcode
   383  1002  1383               	bcf	3,7
   384  1003  187F               	btfsc	btemp+1,0
   385  1004  1783               	bsf	3,7
   386  1005  0800               	movf	0,w
   387  1006  0A84               	incf	4,f
   388  1007  1903               	skipnz
   389  1008  0AFF               	incf	btemp+1,f
   390  1009  0008               	return
   391  100A                     stringcode:
   392  100A                     stringdir:
   393  100A  3010               	movlw	high stringdir
   394  100B  008A               	movwf	10
   395  100C  0804               	movf	4,w
   396  100D  0A84               	incf	4,f
   397  100E  0782               	addwf	2,f
   398  100F                     __stringbase:
   399  100F  3400               	retlw	0
   400  1010                     __end_of__stringtab:
   401  1010                     STR_4:
   402  1010  3420               	retlw	32	;' '
   403  1011  3454               	retlw	84	;'T'
   404  1012  346F               	retlw	111	;'o'
   405  1013  3474               	retlw	116	;'t'
   406  1014  3461               	retlw	97	;'a'
   407  1015  346C               	retlw	108	;'l'
   408  1016  342D               	retlw	45	;'-'
   409  1017  343E               	retlw	62	;'>'
   410  1018  3451               	retlw	81	;'Q'
   411  1019  3400               	retlw	0
   412  101A                     STR_1:
   413  101A  3420               	retlw	32	;' '
   414  101B  3451               	retlw	81	;'Q'
   415  101C  3431               	retlw	49	;'1'
   416  101D  342E               	retlw	46	;'.'
   417  101E  3430               	retlw	48	;'0'
   418  101F  3430               	retlw	48	;'0'
   419  1020  342D               	retlw	45	;'-'
   420  1021  343E               	retlw	62	;'>'
   421  1022  3400               	retlw	0
   422  1023                     STR_2:
   423  1023  3420               	retlw	32	;' '
   424  1024  3451               	retlw	81	;'Q'
   425  1025  3430               	retlw	48	;'0'
   426  1026  342E               	retlw	46	;'.'
   427  1027  3435               	retlw	53	;'5'
   428  1028  3430               	retlw	48	;'0'
   429  1029  342D               	retlw	45	;'-'
   430  102A  343E               	retlw	62	;'>'
   431  102B  3400               	retlw	0
   432  102C                     STR_3:
   433  102C  3420               	retlw	32	;' '
   434  102D  3451               	retlw	81	;'Q'
   435  102E  3430               	retlw	48	;'0'
   436  102F  342E               	retlw	46	;'.'
   437  1030  3432               	retlw	50	;'2'
   438  1031  3435               	retlw	53	;'5'
   439  1032  342D               	retlw	45	;'-'
   440  1033  343E               	retlw	62	;'>'
   441  1034  3400               	retlw	0
   442  1035                     STR_5:
   443  1035  3425               	retlw	37	;'%'
   444  1036  3464               	retlw	100	;'d'
   445  1037  3400               	retlw	0
   446  1035                     
   447                           	psect	cinit
   448  000F                     start_initialization:	
   449                           ; #config settings
   450                           
   451  000F                     __initialization:
   452                           
   453                           ; Initialize objects allocated to BANK1
   454  000F  1683               	bsf	3,5	;RP0=1, select bank1
   455  0010  1303               	bcf	3,6	;RP1=0, select bank1
   456  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   457  0016  00E8               	movwf	__pdataBANK1& (0+127)
   458                           
   459                           ; Clear objects allocated to BANK3
   460  0017  1783               	bsf	3,7	;select IRP bank2
   461  0018  3090               	movlw	low __pbssBANK3
   462  0019  0084               	movwf	4
   463  001A  30B8               	movlw	low (__pbssBANK3+40)
   464  001B  160A  118A  2309  120A  118A  	fcall	clear_ram0
   465                           
   466                           ; Clear objects allocated to BANK1
   467  0020  1383               	bcf	3,7	;select IRP bank0
   468  0021  30A0               	movlw	low __pbssBANK1
   469  0022  0084               	movwf	4
   470  0023  30D5               	movlw	low (__pbssBANK1+53)
   471  0024  160A  118A  2309  120A  118A  	fcall	clear_ram0
   472                           
   473                           ; Clear objects allocated to BANK0
   474  0029  1283               	bcf	3,5	;RP0=0, select bank0
   475  002A  1303               	bcf	3,6	;RP1=0, select bank0
   476  002B  01EC               	clrf	__pbssBANK0& (0+127)
   477  002C  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   478  002D  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   479  002E  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   480                           
   481                           ; Clear objects allocated to COMMON
   482  002F  01F6               	clrf	__pbssCOMMON& (0+127)
   483  0030  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   484  0031  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   485  0032  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   486  0033                     end_of_initialization:	
   487                           ;End of C runtime variable initialization code
   488                           
   489  0033                     __end_of__initialization:
   490  0033  0183               	clrf	3
   491  0034  160A  118A  2BBA   	ljmp	_main	;jump to C main() function
   492                           
   493                           	psect	bssCOMMON
   494  0076                     __pbssCOMMON:
   495  0076                     _residuo:
   496  0076                     	ds	1
   497  0077                     _counter:
   498  0077                     	ds	1
   499  0078                     _slave03:
   500  0078                     	ds	1
   501  0079                     _slave02:
   502  0079                     	ds	1
   503                           
   504                           	psect	bssBANK0
   505  006C                     __pbssBANK0:
   506  006C                     _units:
   507  006C                     	ds	1
   508  006D                     _tens:
   509  006D                     	ds	1
   510  006E                     _hundreds:
   511  006E                     	ds	1
   512  006F                     _slave01:
   513  006F                     	ds	1
   514                           
   515                           	psect	bssBANK1
   516  00A0                     __pbssBANK1:
   517  00A0                     _conv2:
   518  00A0                     	ds	4
   519  00A4                     _conv1:
   520  00A4                     	ds	4
   521  00A8                     _conv0:
   522  00A8                     	ds	4
   523  00AC                     _temp:
   524  00AC                     	ds	2
   525  00AE                     _i2c_add:
   526  00AE                     	ds	1
   527  00AF                     _RS:
   528  00AF                     	ds	1
   529  00B0                     _dec3:
   530  00B0                     	ds	1
   531  00B1                     _dec2:
   532  00B1                     	ds	1
   533  00B2                     _dec1:
   534  00B2                     	ds	1
   535  00B3                     _sum:
   536  00B3                     	ds	1
   537  00B4                     _valor:
   538  00B4                     	ds	1
   539  00B5                     _POT:
   540  00B5                     	ds	1
   541  00B6                     _CONT:
   542  00B6                     	ds	1
   543  00B7                     _converted03:
   544  00B7                     	ds	10
   545  00C1                     _converted02:
   546  00C1                     	ds	10
   547  00CB                     _converted01:
   548  00CB                     	ds	10
   549                           
   550                           	psect	dataBANK1
   551  00E8                     __pdataBANK1:
   552  00E8                     _BackLight_State:
   553  00E8                     	ds	1
   554                           
   555                           	psect	bssBANK3
   556  0190                     __pbssBANK3:
   557  0190                     _converted04:
   558  0190                     	ds	40
   559                           
   560                           	psect	clrtext
   561  1309                     clear_ram0:	
   562                           ;	Called with FSR containing the base address, and
   563                           ;	W with the last address+1
   564                           
   565  1309  0064               	clrwdt	;clear the watchdog before getting into this loop
   566  130A                     clrloop0:
   567  130A  0180               	clrf	0	;clear RAM location pointed to by FSR
   568  130B  0A84               	incf	4,f	;increment pointer
   569  130C  0604               	xorwf	4,w	;XOR with final address
   570  130D  1903               	btfsc	3,2	;have we reached the end yet?
   571  130E  3400               	retlw	0	;all done for this memory range, return
   572  130F  0604               	xorwf	4,w	;XOR again to restore value
   573  1310  2B0A               	goto	clrloop0	;do the next byte
   574                           
   575                           	psect	cstackBANK1
   576  00D5                     __pcstackBANK1:
   577  00D5                     ADC_convert@temp:
   578                           
   579                           ; 2 bytes @ 0x0
   580  00D5                     	ds	2
   581  00D7                     ADC_convert@j:
   582                           
   583                           ; 2 bytes @ 0x2
   584  00D7                     	ds	2
   585  00D9                     ADC_convert@data:
   586                           
   587                           ; 1 bytes @ 0x4
   588  00D9                     	ds	1
   589  00DA                     ADC_convert@x:
   590                           
   591                           ; 4 bytes @ 0x5
   592  00DA                     	ds	4
   593  00DE                     ADC_convert@i:
   594                           
   595                           ; 2 bytes @ 0x9
   596  00DE                     	ds	2
   597  00E0                     ADC_convert@digits:
   598                           
   599                           ; 2 bytes @ 0xB
   600  00E0                     	ds	2
   601  00E2                     ADC_convert@mu:
   602                           
   603                           ; 2 bytes @ 0xD
   604  00E2                     	ds	2
   605  00E4                     _LCD_Send$1299:
   606                           
   607                           ; 4 bytes @ 0xF
   608  00E4                     	ds	4
   609                           
   610                           	psect	cstackCOMMON
   611  0070                     __pcstackCOMMON:
   612  0070                     ?_setup:
   613  0070                     ?_LCD_Start:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_LCD_Send:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_I2C_Comunication:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Master_Init:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_division:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_I2C_Master_Start:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_I2C_Master_Write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_I2C_Read_Byte:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_I2C_Master_Stop:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_LCD_Init:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_LCD_Write_Char:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_IO_Expander_Write:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_LCD_CMD:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_isr:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_isr:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_I2C_Master_Wait:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_LCD_Write_4Bit:	
   665                           ; 1 bytes @ 0x0
   666                           
   667                           
   668                           ; 1 bytes @ 0x0
   669  0070                     	ds	4
   670  0074                     ??_setup:
   671  0074                     ??_I2C_Master_Init:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     ??_I2C_Master_Start:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0074                     ??_I2C_Master_Write:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??_I2C_Read_Byte:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??_I2C_Master_Stop:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ??_I2C_Master_Wait:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ?___bmul:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___awdiv:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ??___awmod:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     ?__Umul8_16:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0074                     I2C_Master_Write@data:	
   702                           ; 2 bytes @ 0x4
   703                           
   704  0074                     ___bmul@multiplicand:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     ___fltol@sign1:	
   708                           ; 1 bytes @ 0x4
   709                           
   710  0074                     __Umul8_16@multiplicand:	
   711                           ; 1 bytes @ 0x4
   712                           
   713                           
   714                           ; 1 bytes @ 0x4
   715  0074                     	ds	1
   716  0075                     ??_IO_Expander_Write:
   717  0075                     ??___bmul:	
   718                           ; 1 bytes @ 0x5
   719                           
   720  0075                     division@valor:	
   721                           ; 1 bytes @ 0x5
   722                           
   723  0075                     IO_Expander_Write@Data:	
   724                           ; 1 bytes @ 0x5
   725                           
   726  0075                     ___fltol@exp1:	
   727                           ; 1 bytes @ 0x5
   728                           
   729                           
   730                           ; 1 bytes @ 0x5
   731  0075                     	ds	1
   732  0076                     ??___wmul:
   733  0076                     ??___flsub:	
   734                           ; 1 bytes @ 0x6
   735                           
   736                           
   737                           	psect	cstackBANK0
   738  0020                     __pcstackBANK0:	
   739                           ; 1 bytes @ 0x6
   740                           
   741  0020                     ?___flge:
   742  0020                     ??_I2C_Comunication:	
   743                           ; 1 bit 
   744                           
   745  0020                     ??__Umul8_16:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ??_LCD_Write_4Bit:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     ?___awdiv:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     ?___awmod:	
   755                           ; 2 bytes @ 0x0
   756                           
   757  0020                     ?___fltol:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     ?___fladd:	
   761                           ; 4 bytes @ 0x0
   762                           
   763  0020                     ___bmul@product:	
   764                           ; 4 bytes @ 0x0
   765                           
   766  0020                     ___awdiv@divisor:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0020                     ___awmod@divisor:	
   770                           ; 2 bytes @ 0x0
   771                           
   772  0020                     ___flge@ff1:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0020                     ___fltol@f1:	
   776                           ; 4 bytes @ 0x0
   777                           
   778  0020                     ___fladd@b:	
   779                           ; 4 bytes @ 0x0
   780                           
   781                           
   782                           ; 4 bytes @ 0x0
   783  0020                     	ds	1
   784  0021                     LCD_Write_4Bit@Nibble:
   785  0021                     ___bmul@multiplier:	
   786                           ; 1 bytes @ 0x1
   787                           
   788                           
   789                           ; 1 bytes @ 0x1
   790  0021                     	ds	1
   791  0022                     ??_LCD_Write_Char:
   792  0022                     ??_LCD_CMD:	
   793                           ; 1 bytes @ 0x2
   794                           
   795  0022                     ___awdiv@dividend:	
   796                           ; 1 bytes @ 0x2
   797                           
   798  0022                     ___awmod@dividend:	
   799                           ; 2 bytes @ 0x2
   800                           
   801  0022                     __Umul8_16@product:	
   802                           ; 2 bytes @ 0x2
   803                           
   804                           
   805                           ; 2 bytes @ 0x2
   806  0022                     	ds	1
   807  0023                     LCD_CMD@CMD:
   808  0023                     LCD_Write_Char@Data:	
   809                           ; 1 bytes @ 0x3
   810                           
   811                           
   812                           ; 1 bytes @ 0x3
   813  0023                     	ds	1
   814  0024                     ??_LCD_Init:
   815  0024                     ?_LCD_Set_Cursor:	
   816                           ; 1 bytes @ 0x4
   817                           
   818  0024                     ?_LCD_Write_String:	
   819                           ; 1 bytes @ 0x4
   820                           
   821  0024                     ??___fltol:	
   822                           ; 1 bytes @ 0x4
   823                           
   824  0024                     LCD_Set_Cursor@COL:	
   825                           ; 1 bytes @ 0x4
   826                           
   827  0024                     ___awdiv@counter:	
   828                           ; 1 bytes @ 0x4
   829                           
   830  0024                     ___awmod@counter:	
   831                           ; 1 bytes @ 0x4
   832                           
   833  0024                     LCD_Write_String@Str:	
   834                           ; 1 bytes @ 0x4
   835                           
   836  0024                     __Umul8_16@word_mpld:	
   837                           ; 2 bytes @ 0x4
   838                           
   839  0024                     ___flge@ff2:	
   840                           ; 2 bytes @ 0x4
   841                           
   842  0024                     ___fladd@a:	
   843                           ; 4 bytes @ 0x4
   844                           
   845                           
   846                           ; 4 bytes @ 0x4
   847  0024                     	ds	1
   848  0025                     ??_LCD_Set_Cursor:
   849  0025                     ___awdiv@sign:	
   850                           ; 1 bytes @ 0x5
   851                           
   852  0025                     ___awmod@sign:	
   853                           ; 1 bytes @ 0x5
   854                           
   855                           
   856                           ; 1 bytes @ 0x5
   857  0025                     	ds	1
   858  0026                     ??_LCD_Write_String:
   859  0026                     LCD_Init@I2C_Add:	
   860                           ; 1 bytes @ 0x6
   861                           
   862  0026                     __Umul8_16@multiplier:	
   863                           ; 1 bytes @ 0x6
   864                           
   865  0026                     ___awdiv@quotient:	
   866                           ; 1 bytes @ 0x6
   867                           
   868                           
   869                           ; 2 bytes @ 0x6
   870  0026                     	ds	1
   871  0027                     LCD_Set_Cursor@ROW:
   872                           
   873                           ; 1 bytes @ 0x7
   874  0027                     	ds	1
   875  0028                     ??_division:
   876  0028                     ??___flge:	
   877                           ; 1 bytes @ 0x8
   878                           
   879  0028                     ??___fladd:	
   880                           ; 1 bytes @ 0x8
   881                           
   882                           
   883                           ; 1 bytes @ 0x8
   884  0028                     	ds	1
   885  0029                     ?___wmul:
   886  0029                     LCD_Write_String@i:	
   887                           ; 2 bytes @ 0x9
   888                           
   889  0029                     ___wmul@multiplier:	
   890                           ; 2 bytes @ 0x9
   891                           
   892                           
   893                           ; 2 bytes @ 0x9
   894  0029                     	ds	2
   895  002B                     ??_LCD_Start:
   896  002B                     ___wmul@multiplicand:	
   897                           ; 1 bytes @ 0xB
   898                           
   899                           
   900                           ; 2 bytes @ 0xB
   901  002B                     	ds	2
   902  002D                     ___wmul@product:
   903                           
   904                           ; 2 bytes @ 0xD
   905  002D                     	ds	2
   906  002F                     ?___xxtofl:
   907  002F                     ___xxtofl@val:	
   908                           ; 4 bytes @ 0xF
   909                           
   910                           
   911                           ; 4 bytes @ 0xF
   912  002F                     	ds	1
   913  0030                     ___fladd@signs:
   914                           
   915                           ; 1 bytes @ 0x10
   916  0030                     	ds	1
   917  0031                     ___fladd@aexp:
   918                           
   919                           ; 1 bytes @ 0x11
   920  0031                     	ds	1
   921  0032                     ___fladd@bexp:
   922                           
   923                           ; 1 bytes @ 0x12
   924  0032                     	ds	1
   925  0033                     ??___xxtofl:
   926  0033                     ___fladd@grs:	
   927                           ; 1 bytes @ 0x13
   928                           
   929                           
   930                           ; 1 bytes @ 0x13
   931  0033                     	ds	4
   932  0037                     ___xxtofl@sign:
   933                           
   934                           ; 1 bytes @ 0x17
   935  0037                     	ds	1
   936  0038                     ___xxtofl@exp:
   937                           
   938                           ; 1 bytes @ 0x18
   939  0038                     	ds	1
   940  0039                     ___xxtofl@arg:
   941                           
   942                           ; 4 bytes @ 0x19
   943  0039                     	ds	4
   944  003D                     ?___flsub:
   945  003D                     ?___fldiv:	
   946                           ; 4 bytes @ 0x1D
   947                           
   948  003D                     ___flsub@a:	
   949                           ; 4 bytes @ 0x1D
   950                           
   951  003D                     ___fldiv@a:	
   952                           ; 4 bytes @ 0x1D
   953                           
   954                           
   955                           ; 4 bytes @ 0x1D
   956  003D                     	ds	4
   957  0041                     ___flsub@b:
   958  0041                     ___fldiv@b:	
   959                           ; 4 bytes @ 0x21
   960                           
   961                           
   962                           ; 4 bytes @ 0x21
   963  0041                     	ds	4
   964  0045                     ??___fldiv:
   965  0045                     ?___flmul:	
   966                           ; 1 bytes @ 0x25
   967                           
   968  0045                     ___flmul@b:	
   969                           ; 4 bytes @ 0x25
   970                           
   971                           
   972                           ; 4 bytes @ 0x25
   973  0045                     	ds	4
   974  0049                     ___flmul@a:
   975                           
   976                           ; 4 bytes @ 0x29
   977  0049                     	ds	1
   978  004A                     ___fldiv@rem:
   979                           
   980                           ; 4 bytes @ 0x2A
   981  004A                     	ds	3
   982  004D                     ??___flmul:
   983                           
   984                           ; 1 bytes @ 0x2D
   985  004D                     	ds	1
   986  004E                     ___fldiv@sign:
   987                           
   988                           ; 1 bytes @ 0x2E
   989  004E                     	ds	1
   990  004F                     ___fldiv@new_exp:
   991                           
   992                           ; 2 bytes @ 0x2F
   993  004F                     	ds	2
   994  0051                     ___fldiv@grs:
   995                           
   996                           ; 4 bytes @ 0x31
   997  0051                     	ds	1
   998  0052                     ___flmul@sign:
   999                           
  1000                           ; 1 bytes @ 0x32
  1001  0052                     	ds	1
  1002  0053                     ___flmul@aexp:
  1003                           
  1004                           ; 1 bytes @ 0x33
  1005  0053                     	ds	1
  1006  0054                     ___flmul@grs:
  1007                           
  1008                           ; 4 bytes @ 0x34
  1009  0054                     	ds	1
  1010  0055                     ___fldiv@bexp:
  1011                           
  1012                           ; 1 bytes @ 0x35
  1013  0055                     	ds	1
  1014  0056                     ___fldiv@aexp:
  1015                           
  1016                           ; 1 bytes @ 0x36
  1017  0056                     	ds	2
  1018  0058                     ___flmul@bexp:
  1019                           
  1020                           ; 1 bytes @ 0x38
  1021  0058                     	ds	1
  1022  0059                     ___flmul@prod:
  1023                           
  1024                           ; 4 bytes @ 0x39
  1025  0059                     	ds	4
  1026  005D                     ___flmul@temp:
  1027                           
  1028                           ; 2 bytes @ 0x3D
  1029  005D                     	ds	2
  1030  005F                     ?_ADC_convert:
  1031  005F                     ADC_convert@a:	
  1032                           ; 1 bytes @ 0x3F
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0x3F
  1036  005F                     	ds	4
  1037  0063                     ADC_convert@place:
  1038                           
  1039                           ; 2 bytes @ 0x43
  1040  0063                     	ds	2
  1041  0065                     ??_ADC_convert:
  1042                           
  1043                           ; 1 bytes @ 0x45
  1044  0065                     	ds	2
  1045  0067                     ??_LCD_Send:
  1046                           
  1047                           ; 1 bytes @ 0x47
  1048  0067                     	ds	4
  1049  006B                     ??_main:
  1050                           
  1051                           ; 1 bytes @ 0x4B
  1052  006B                     	ds	1
  1053                           
  1054                           	psect	maintext
  1055  13BA                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 92 in file "Master_PIC.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : B00/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       1       0       0       0
  1078 ;;      Totals:         0       1       0       0       0
  1079 ;;Total ram usage:        1 bytes
  1080 ;; Hardware stack levels required when called: 8
  1081 ;; This function calls:
  1082 ;;		_I2C_Comunication
  1083 ;;		_LCD_Send
  1084 ;;		_LCD_Start
  1085 ;;		_setup
  1086 ;; This function is called by:
  1087 ;;		Startup code after reset
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function _main
  1093  13BA                     _main:
  1094  13BA                     l4291:	
  1095                           ;incstack = 0
  1096                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1097                           
  1098  13BA  160A  118A  2555  160A  118A  	fcall	_setup
  1099  13BF                     l4293:
  1100  13BF  160A  118A  267A  160A  118A  	fcall	_LCD_Start
  1101  13C4                     l4295:
  1102  13C4  120A  158A  21C2  160A  118A  	fcall	_LCD_Send
  1103  13C9  160A  118A  2472  160A  118A  	fcall	_I2C_Comunication
  1104  13CE                     l4297:
  1105  13CE  3041               	movlw	65
  1106  13CF  1283               	bcf	3,5	;RP0=0, select bank0
  1107  13D0  1303               	bcf	3,6	;RP1=0, select bank0
  1108  13D1  00EB               	movwf	??_main
  1109  13D2                     u5897:
  1110  13D2  0BEB               	decfsz	??_main,f
  1111  13D3  2BD2               	goto	u5897
  1112  13D4  2BD5               	nop2
  1113  13D5                     l4299:
  1114  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  1115  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  1116  13D7  149F               	bsf	31,1	;volatile
  1117  13D8  2BC4               	goto	l4295
  1118  13D9  120A  118A  280C   	ljmp	start
  1119  13DC                     __end_of_main:
  1120                           
  1121                           	psect	text1
  1122  1555                     __ptext1:	
  1123 ;; *************** function _setup *****************
  1124 ;; Defined at:
  1125 ;;		line 119 in file "Master_PIC.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, pclath, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          1       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 2
  1146 ;; This function calls:
  1147 ;;		_I2C_Master_Init
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _setup
  1155  1555                     _setup:
  1156  1555                     l1919:	
  1157                           ;incstack = 0
  1158                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1159                           
  1160  1555  3001               	movlw	1
  1161  1556  1683               	bsf	3,5	;RP0=1, select bank3
  1162  1557  1703               	bsf	3,6	;RP1=1, select bank3
  1163  1558  0088               	movwf	8	;volatile
  1164  1559                     l1921:
  1165  1559  0189               	clrf	9	;volatile
  1166  155A                     l1923:
  1167  155A  1683               	bsf	3,5	;RP0=1, select bank1
  1168  155B  1303               	bcf	3,6	;RP1=0, select bank1
  1169  155C  1405               	bsf	5,0	;volatile
  1170  155D                     l1925:
  1171                           
  1172                           ;Master_PIC.c: 137:     OSCCONbits.IRCF0 = 1;
  1173  155D  160F               	bsf	15,4	;volatile
  1174  155E                     l1927:
  1175                           
  1176                           ;Master_PIC.c: 138:     OSCCONbits.IRCF1 = 1;
  1177  155E  168F               	bsf	15,5	;volatile
  1178  155F                     l1929:
  1179                           
  1180                           ;Master_PIC.c: 139:     OSCCONbits.IRCF2 = 1;
  1181  155F  170F               	bsf	15,6	;volatile
  1182  1560                     l1931:
  1183                           
  1184                           ;Master_PIC.c: 140:     OSCCONbits.SCS = 1;
  1185  1560  140F               	bsf	15,0	;volatile
  1186  1561                     l1933:
  1187                           
  1188                           ;Master_PIC.c: 143:     ADCON0bits.CHS = 0;
  1189  1561  30C3               	movlw	-61
  1190  1562  1283               	bcf	3,5	;RP0=0, select bank0
  1191  1563  1303               	bcf	3,6	;RP1=0, select bank0
  1192  1564  059F               	andwf	31,f	;volatile
  1193  1565                     l1935:
  1194                           
  1195                           ;Master_PIC.c: 144:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1196  1565  3042               	movlw	66
  1197  1566  00F4               	movwf	??_setup
  1198  1567                     u5907:
  1199  1567  0BF4               	decfsz	??_setup,f
  1200  1568  2D67               	goto	u5907
  1201  1569  0000               	nop
  1202  156A                     l1937:
  1203                           
  1204                           ;Master_PIC.c: 146:     ADCON0bits.ADCS0 = 0;
  1205  156A  1283               	bcf	3,5	;RP0=0, select bank0
  1206  156B  1303               	bcf	3,6	;RP1=0, select bank0
  1207  156C  131F               	bcf	31,6	;volatile
  1208  156D                     l1939:
  1209                           
  1210                           ;Master_PIC.c: 147:     ADCON0bits.ADCS1 = 1;
  1211  156D  179F               	bsf	31,7	;volatile
  1212  156E                     l1941:
  1213                           
  1214                           ;Master_PIC.c: 148:     ADCON0bits.ADON = 1;
  1215  156E  141F               	bsf	31,0	;volatile
  1216  156F                     l1943:
  1217                           
  1218                           ;Master_PIC.c: 149:     ADCON1bits.ADFM = 0;
  1219  156F  1683               	bsf	3,5	;RP0=1, select bank1
  1220  1570  1303               	bcf	3,6	;RP1=0, select bank1
  1221  1571  139F               	bcf	31,7	;volatile
  1222  1572                     l1945:
  1223                           
  1224                           ;Master_PIC.c: 150:     ADCON1bits.VCFG1 = 0;
  1225  1572  129F               	bcf	31,5	;volatile
  1226  1573                     l1947:
  1227                           
  1228                           ;Master_PIC.c: 151:     ADCON1bits.VCFG0 = 0;
  1229  1573  121F               	bcf	31,4	;volatile
  1230  1574                     l1949:
  1231                           
  1232                           ;Master_PIC.c: 154:     TRISCbits.TRISC2 = 1;
  1233  1574  1507               	bsf	7,2	;volatile
  1234  1575                     l1951:
  1235                           
  1236                           ;Master_PIC.c: 155:     TRISCbits.TRISC1 = 1;
  1237  1575  1487               	bsf	7,1	;volatile
  1238  1576                     l1953:
  1239                           
  1240                           ;Master_PIC.c: 156:     PR2 = 250;
  1241  1576  30FA               	movlw	250
  1242  1577  0092               	movwf	18	;volatile
  1243  1578                     l1955:
  1244                           
  1245                           ;Master_PIC.c: 157:     CCP1CONbits.P1M = 0;
  1246  1578  303F               	movlw	-193
  1247  1579  1283               	bcf	3,5	;RP0=0, select bank0
  1248  157A  1303               	bcf	3,6	;RP1=0, select bank0
  1249  157B  0597               	andwf	23,f	;volatile
  1250  157C                     l1957:
  1251                           
  1252                           ;Master_PIC.c: 158:     CCP2CONbits.CCP2M = 0b1111;
  1253  157C  300F               	movlw	15
  1254  157D  049D               	iorwf	29,f	;volatile
  1255  157E                     l1959:
  1256                           
  1257                           ;Master_PIC.c: 159:     CCP1CONbits.CCP1M = 0b00001100;
  1258  157E  0817               	movf	23,w	;volatile
  1259  157F  39F0               	andlw	-16
  1260  1580  380C               	iorlw	12
  1261  1581  0097               	movwf	23	;volatile
  1262  1582                     l1961:
  1263                           
  1264                           ;Master_PIC.c: 162:     CCPR1L = 0x0F;
  1265  1582  300F               	movlw	15
  1266  1583  0095               	movwf	21	;volatile
  1267  1584                     l1963:
  1268                           
  1269                           ;Master_PIC.c: 163:     CCP1CONbits.DC1B = 0;
  1270  1584  30CF               	movlw	-49
  1271  1585  0597               	andwf	23,f	;volatile
  1272  1586                     l1965:
  1273                           
  1274                           ;Master_PIC.c: 164:     CCPR2L = 0x0F;
  1275  1586  300F               	movlw	15
  1276  1587  009B               	movwf	27	;volatile
  1277  1588                     l1967:
  1278                           
  1279                           ;Master_PIC.c: 165:     CCP2CONbits.DC2B0 = 0;
  1280  1588  121D               	bcf	29,4	;volatile
  1281  1589                     l1969:
  1282                           
  1283                           ;Master_PIC.c: 166:     CCP2CONbits.DC2B1 = 0;
  1284  1589  129D               	bcf	29,5	;volatile
  1285  158A                     l1971:
  1286                           
  1287                           ;Master_PIC.c: 169:     PIR1bits.TMR2IF = 0;
  1288  158A  108C               	bcf	12,1	;volatile
  1289  158B                     l1973:
  1290                           
  1291                           ;Master_PIC.c: 170:     T2CONbits.T2CKPS0 = 0;
  1292  158B  1012               	bcf	18,0	;volatile
  1293  158C                     l1975:
  1294                           
  1295                           ;Master_PIC.c: 171:     T2CONbits.T2CKPS1 = 1;
  1296  158C  1492               	bsf	18,1	;volatile
  1297  158D                     l1977:
  1298                           
  1299                           ;Master_PIC.c: 172:     T2CONbits.TMR2ON = 1;
  1300  158D  1512               	bsf	18,2	;volatile
  1301  158E                     l158:	
  1302                           ;Master_PIC.c: 173:     while (PIR1bits.TMR2IF == 0);
  1303                           
  1304  158E  1C8C               	btfss	12,1	;volatile
  1305  158F  2D91               	goto	u1901
  1306  1590  2D92               	goto	u1900
  1307  1591                     u1901:
  1308  1591  2D8E               	goto	l158
  1309  1592                     u1900:
  1310  1592                     l160:
  1311                           
  1312                           ;Master_PIC.c: 174:     PIR1bits.TMR2IF = 0;
  1313  1592  108C               	bcf	12,1	;volatile
  1314                           
  1315                           ;Master_PIC.c: 175:     TRISCbits.TRISC2 = 0;
  1316  1593  1683               	bsf	3,5	;RP0=1, select bank1
  1317  1594  1303               	bcf	3,6	;RP1=0, select bank1
  1318  1595  1107               	bcf	7,2	;volatile
  1319                           
  1320                           ;Master_PIC.c: 176:     TRISCbits.TRISC1 = 0;
  1321  1596  1087               	bcf	7,1	;volatile
  1322                           
  1323                           ;Master_PIC.c: 179:     INTCONbits.GIE = 1;
  1324  1597  178B               	bsf	11,7	;volatile
  1325                           
  1326                           ;Master_PIC.c: 180:     INTCONbits.PEIE = 1;
  1327  1598  170B               	bsf	11,6	;volatile
  1328  1599                     l1979:
  1329                           
  1330                           ;Master_PIC.c: 185:     PORTA = 0x00;
  1331  1599  1283               	bcf	3,5	;RP0=0, select bank0
  1332  159A  1303               	bcf	3,6	;RP1=0, select bank0
  1333  159B  0185               	clrf	5	;volatile
  1334                           
  1335                           ;Master_PIC.c: 186:     PORTB = 0x00;
  1336  159C  0186               	clrf	6	;volatile
  1337                           
  1338                           ;Master_PIC.c: 187:     PORTC = 0x00;
  1339  159D  0187               	clrf	7	;volatile
  1340                           
  1341                           ;Master_PIC.c: 188:     PORTD = 0x00;
  1342  159E  0188               	clrf	8	;volatile
  1343                           
  1344                           ;Master_PIC.c: 189:     PORTE = 0x00;
  1345  159F  0189               	clrf	9	;volatile
  1346  15A0                     l1981:
  1347                           
  1348                           ;Master_PIC.c: 192:     I2C_Master_Init();
  1349  15A0  160A  118A  2330  160A  118A  	fcall	_I2C_Master_Init
  1350  15A5                     l161:
  1351  15A5  0008               	return
  1352  15A6                     __end_of_setup:
  1353                           
  1354                           	psect	text2
  1355  167A                     __ptext2:	
  1356 ;; *************** function _LCD_Start *****************
  1357 ;; Defined at:
  1358 ;;		line 254 in file "Master_PIC.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1372 ;;      Params:         0       0       0       0       0
  1373 ;;      Locals:         0       0       0       0       0
  1374 ;;      Temps:          0       3       0       0       0
  1375 ;;      Totals:         0       3       0       0       0
  1376 ;;Total ram usage:        3 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 7
  1379 ;; This function calls:
  1380 ;;		_I2C_Master_Init
  1381 ;;		_LCD_Init
  1382 ;;		_LCD_Set_Cursor
  1383 ;;		_LCD_Write_String
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           
  1389                           
  1390                           ;psect for function _LCD_Start
  1391  167A                     _LCD_Start:
  1392  167A                     l4215:	
  1393                           ;incstack = 0
  1394                           ; Regs used in _LCD_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1395                           
  1396                           
  1397                           ;Master_PIC.c: 255:     I2C_Master_Init();
  1398  167A  160A  118A  2330  160A  118A  	fcall	_I2C_Master_Init
  1399                           
  1400                           ;Master_PIC.c: 256:     LCD_Init(0x4E);
  1401  167F  304E               	movlw	78
  1402  1680  160A  118A  2765  160A  118A  	fcall	_LCD_Init
  1403  1685                     l4217:
  1404                           
  1405                           ;Master_PIC.c: 258:     LCD_Set_Cursor(1, 1);
  1406  1685  1283               	bcf	3,5	;RP0=0, select bank0
  1407  1686  1303               	bcf	3,6	;RP1=0, select bank0
  1408  1687  01A4               	clrf	LCD_Set_Cursor@COL
  1409  1688  0AA4               	incf	LCD_Set_Cursor@COL,f
  1410  1689  3001               	movlw	1
  1411  168A  160A  118A  249C  160A  118A  	fcall	_LCD_Set_Cursor
  1412  168F                     l4219:
  1413                           
  1414                           ;Master_PIC.c: 259:     LCD_Write_String(" Q1.00->");
  1415  168F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1416  1690  1283               	bcf	3,5	;RP0=0, select bank0
  1417  1691  1303               	bcf	3,6	;RP1=0, select bank0
  1418  1692  00A4               	movwf	LCD_Write_String@Str
  1419  1693  3080               	movlw	128
  1420  1694  00A5               	movwf	LCD_Write_String@Str+1
  1421  1695  160A  118A  250F  160A  118A  	fcall	_LCD_Write_String
  1422  169A                     l4221:
  1423                           
  1424                           ;Master_PIC.c: 260:     LCD_Set_Cursor(2, 1);
  1425  169A  1283               	bcf	3,5	;RP0=0, select bank0
  1426  169B  1303               	bcf	3,6	;RP1=0, select bank0
  1427  169C  01A4               	clrf	LCD_Set_Cursor@COL
  1428  169D  0AA4               	incf	LCD_Set_Cursor@COL,f
  1429  169E  3002               	movlw	2
  1430  169F  160A  118A  249C  160A  118A  	fcall	_LCD_Set_Cursor
  1431  16A4                     l4223:
  1432                           
  1433                           ;Master_PIC.c: 261:     LCD_Write_String(" Q0.50->");
  1434  16A4  3014               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1435  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  1436  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  1437  16A7  00A4               	movwf	LCD_Write_String@Str
  1438  16A8  3080               	movlw	128
  1439  16A9  00A5               	movwf	LCD_Write_String@Str+1
  1440  16AA  160A  118A  250F  160A  118A  	fcall	_LCD_Write_String
  1441  16AF                     l4225:
  1442                           
  1443                           ;Master_PIC.c: 262:     LCD_Set_Cursor(3, 1);
  1444  16AF  1283               	bcf	3,5	;RP0=0, select bank0
  1445  16B0  1303               	bcf	3,6	;RP1=0, select bank0
  1446  16B1  01A4               	clrf	LCD_Set_Cursor@COL
  1447  16B2  0AA4               	incf	LCD_Set_Cursor@COL,f
  1448  16B3  3003               	movlw	3
  1449  16B4  160A  118A  249C  160A  118A  	fcall	_LCD_Set_Cursor
  1450  16B9                     l4227:
  1451                           
  1452                           ;Master_PIC.c: 263:     LCD_Write_String(" Q0.25->");
  1453  16B9  301D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1454  16BA  1283               	bcf	3,5	;RP0=0, select bank0
  1455  16BB  1303               	bcf	3,6	;RP1=0, select bank0
  1456  16BC  00A4               	movwf	LCD_Write_String@Str
  1457  16BD  3080               	movlw	128
  1458  16BE  00A5               	movwf	LCD_Write_String@Str+1
  1459  16BF  160A  118A  250F  160A  118A  	fcall	_LCD_Write_String
  1460  16C4                     l4229:
  1461                           
  1462                           ;Master_PIC.c: 264:     LCD_Set_Cursor(4, 1);
  1463  16C4  1283               	bcf	3,5	;RP0=0, select bank0
  1464  16C5  1303               	bcf	3,6	;RP1=0, select bank0
  1465  16C6  01A4               	clrf	LCD_Set_Cursor@COL
  1466  16C7  0AA4               	incf	LCD_Set_Cursor@COL,f
  1467  16C8  3004               	movlw	4
  1468  16C9  160A  118A  249C  160A  118A  	fcall	_LCD_Set_Cursor
  1469  16CE                     l4231:
  1470                           
  1471                           ;Master_PIC.c: 265:     LCD_Write_String(" Total->Q");
  1472  16CE  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1473  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  1474  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  1475  16D1  00A4               	movwf	LCD_Write_String@Str
  1476  16D2  3080               	movlw	128
  1477  16D3  00A5               	movwf	LCD_Write_String@Str+1
  1478  16D4  160A  118A  250F  160A  118A  	fcall	_LCD_Write_String
  1479  16D9                     l4233:
  1480                           
  1481                           ;Master_PIC.c: 266:     _delay((unsigned long)((2500)*(8000000/4000.0)));
  1482  16D9  301A               	movlw	26
  1483  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  1484  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  1485  16DC  00AD               	movwf	??_LCD_Start+2
  1486  16DD  305E               	movlw	94
  1487  16DE  00AC               	movwf	??_LCD_Start+1
  1488  16DF  306D               	movlw	109
  1489  16E0  00AB               	movwf	??_LCD_Start
  1490  16E1                     u5917:
  1491  16E1  0BAB               	decfsz	??_LCD_Start,f
  1492  16E2  2EE1               	goto	u5917
  1493  16E3  0BAC               	decfsz	??_LCD_Start+1,f
  1494  16E4  2EE1               	goto	u5917
  1495  16E5  0BAD               	decfsz	??_LCD_Start+2,f
  1496  16E6  2EE1               	goto	u5917
  1497  16E7  2EE8               	nop2
  1498  16E8                     l179:
  1499  16E8  0008               	return
  1500  16E9                     __end_of_LCD_Start:
  1501                           
  1502                           	psect	text3
  1503  1765                     __ptext3:	
  1504 ;; *************** function _LCD_Init *****************
  1505 ;; Defined at:
  1506 ;;		line 122 in file "I2C_Master.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  I2C_Add         1    wreg     unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  I2C_Add         1    6[BANK0 ] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       1       0       0       0
  1522 ;;      Temps:          0       2       0       0       0
  1523 ;;      Totals:         0       3       0       0       0
  1524 ;;Total ram usage:        3 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 6
  1527 ;; This function calls:
  1528 ;;		_IO_Expander_Write
  1529 ;;		_LCD_CMD
  1530 ;; This function is called by:
  1531 ;;		_LCD_Start
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _LCD_Init
  1537  1765                     _LCD_Init:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1541                           ;LCD_Init@I2C_Add stored from wreg
  1542  1765  1283               	bcf	3,5	;RP0=0, select bank0
  1543  1766  1303               	bcf	3,6	;RP1=0, select bank0
  1544  1767  00A6               	movwf	LCD_Init@I2C_Add
  1545  1768                     l4047:
  1546                           
  1547                           ;I2C_Master.c: 122: void LCD_Init(unsigned char I2C_Add);I2C_Master.c: 123: {;I2C_Master
      +                          .c: 124:   i2c_add = I2C_Add;
  1548  1768  0826               	movf	LCD_Init@I2C_Add,w
  1549  1769  00A4               	movwf	??_LCD_Init
  1550  176A  0824               	movf	??_LCD_Init,w
  1551  176B  1683               	bsf	3,5	;RP0=1, select bank1
  1552  176C  1303               	bcf	3,6	;RP1=0, select bank1
  1553  176D  00AE               	movwf	_i2c_add^(0+128)
  1554  176E                     l4049:
  1555                           
  1556                           ;I2C_Master.c: 125:   IO_Expander_Write(0x00);
  1557  176E  3000               	movlw	0
  1558  176F  160A  118A  237B  160A  118A  	fcall	_IO_Expander_Write
  1559  1774                     l4051:
  1560                           
  1561                           ;I2C_Master.c: 126:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1562  1774  304E               	movlw	78
  1563  1775  1283               	bcf	3,5	;RP0=0, select bank0
  1564  1776  1303               	bcf	3,6	;RP1=0, select bank0
  1565  1777  00A5               	movwf	??_LCD_Init+1
  1566  1778  30EA               	movlw	234
  1567  1779  00A4               	movwf	??_LCD_Init
  1568  177A                     u5927:
  1569  177A  0BA4               	decfsz	??_LCD_Init,f
  1570  177B  2F7A               	goto	u5927
  1571  177C  0BA5               	decfsz	??_LCD_Init+1,f
  1572  177D  2F7A               	goto	u5927
  1573  177E  0000               	nop
  1574                           
  1575                           ;I2C_Master.c: 127:   LCD_CMD(0x03);
  1576  177F  3003               	movlw	3
  1577  1780  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1578  1785                     l4053:
  1579                           
  1580                           ;I2C_Master.c: 128:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1581  1785  300D               	movlw	13
  1582  1786  1283               	bcf	3,5	;RP0=0, select bank0
  1583  1787  1303               	bcf	3,6	;RP1=0, select bank0
  1584  1788  00A5               	movwf	??_LCD_Init+1
  1585  1789  30FB               	movlw	251
  1586  178A  00A4               	movwf	??_LCD_Init
  1587  178B                     u5937:
  1588  178B  0BA4               	decfsz	??_LCD_Init,f
  1589  178C  2F8B               	goto	u5937
  1590  178D  0BA5               	decfsz	??_LCD_Init+1,f
  1591  178E  2F8B               	goto	u5937
  1592  178F                     l4055:
  1593                           
  1594                           ;I2C_Master.c: 129:   LCD_CMD(0x03);
  1595  178F  3003               	movlw	3
  1596  1790  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1597                           
  1598                           ;I2C_Master.c: 130:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1599  1795  300D               	movlw	13
  1600  1796  1283               	bcf	3,5	;RP0=0, select bank0
  1601  1797  1303               	bcf	3,6	;RP1=0, select bank0
  1602  1798  00A5               	movwf	??_LCD_Init+1
  1603  1799  30FB               	movlw	251
  1604  179A  00A4               	movwf	??_LCD_Init
  1605  179B                     u5947:
  1606  179B  0BA4               	decfsz	??_LCD_Init,f
  1607  179C  2F9B               	goto	u5947
  1608  179D  0BA5               	decfsz	??_LCD_Init+1,f
  1609  179E  2F9B               	goto	u5947
  1610  179F                     l4057:
  1611                           
  1612                           ;I2C_Master.c: 131:   LCD_CMD(0x03);
  1613  179F  3003               	movlw	3
  1614  17A0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1615  17A5                     l4059:
  1616                           
  1617                           ;I2C_Master.c: 132:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1618  17A5  300D               	movlw	13
  1619  17A6  1283               	bcf	3,5	;RP0=0, select bank0
  1620  17A7  1303               	bcf	3,6	;RP1=0, select bank0
  1621  17A8  00A5               	movwf	??_LCD_Init+1
  1622  17A9  30FB               	movlw	251
  1623  17AA  00A4               	movwf	??_LCD_Init
  1624  17AB                     u5957:
  1625  17AB  0BA4               	decfsz	??_LCD_Init,f
  1626  17AC  2FAB               	goto	u5957
  1627  17AD  0BA5               	decfsz	??_LCD_Init+1,f
  1628  17AE  2FAB               	goto	u5957
  1629                           
  1630                           ;I2C_Master.c: 133:   LCD_CMD(0x02);
  1631  17AF  3002               	movlw	2
  1632  17B0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1633  17B5                     l4061:
  1634                           
  1635                           ;I2C_Master.c: 134:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1636  17B5  300D               	movlw	13
  1637  17B6  1283               	bcf	3,5	;RP0=0, select bank0
  1638  17B7  1303               	bcf	3,6	;RP1=0, select bank0
  1639  17B8  00A5               	movwf	??_LCD_Init+1
  1640  17B9  30FB               	movlw	251
  1641  17BA  00A4               	movwf	??_LCD_Init
  1642  17BB                     u5967:
  1643  17BB  0BA4               	decfsz	??_LCD_Init,f
  1644  17BC  2FBB               	goto	u5967
  1645  17BD  0BA5               	decfsz	??_LCD_Init+1,f
  1646  17BE  2FBB               	goto	u5967
  1647  17BF                     l4063:
  1648                           
  1649                           ;I2C_Master.c: 135:   LCD_CMD(0x20 | (2 << 2));
  1650  17BF  3028               	movlw	40
  1651  17C0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1652                           
  1653                           ;I2C_Master.c: 136:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1654  17C5  3082               	movlw	130
  1655  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  1656  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  1657  17C8  00A5               	movwf	??_LCD_Init+1
  1658  17C9  30DD               	movlw	221
  1659  17CA  00A4               	movwf	??_LCD_Init
  1660  17CB                     u5977:
  1661  17CB  0BA4               	decfsz	??_LCD_Init,f
  1662  17CC  2FCB               	goto	u5977
  1663  17CD  0BA5               	decfsz	??_LCD_Init+1,f
  1664  17CE  2FCB               	goto	u5977
  1665  17CF                     l4065:
  1666                           
  1667                           ;I2C_Master.c: 137:   LCD_CMD(0x0C);
  1668  17CF  300C               	movlw	12
  1669  17D0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1670  17D5                     l4067:
  1671                           
  1672                           ;I2C_Master.c: 138:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1673  17D5  3082               	movlw	130
  1674  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  1675  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  1676  17D8  00A5               	movwf	??_LCD_Init+1
  1677  17D9  30DD               	movlw	221
  1678  17DA  00A4               	movwf	??_LCD_Init
  1679  17DB                     u5987:
  1680  17DB  0BA4               	decfsz	??_LCD_Init,f
  1681  17DC  2FDB               	goto	u5987
  1682  17DD  0BA5               	decfsz	??_LCD_Init+1,f
  1683  17DE  2FDB               	goto	u5987
  1684                           
  1685                           ;I2C_Master.c: 139:   LCD_CMD(0x01);
  1686  17DF  3001               	movlw	1
  1687  17E0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1688  17E5                     l4069:
  1689                           
  1690                           ;I2C_Master.c: 140:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1691  17E5  3082               	movlw	130
  1692  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  1693  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  1694  17E8  00A5               	movwf	??_LCD_Init+1
  1695  17E9  30DD               	movlw	221
  1696  17EA  00A4               	movwf	??_LCD_Init
  1697  17EB                     u5997:
  1698  17EB  0BA4               	decfsz	??_LCD_Init,f
  1699  17EC  2FEB               	goto	u5997
  1700  17ED  0BA5               	decfsz	??_LCD_Init+1,f
  1701  17EE  2FEB               	goto	u5997
  1702  17EF                     l4071:
  1703                           
  1704                           ;I2C_Master.c: 141:   LCD_CMD(0x04 | 0x02);
  1705  17EF  3006               	movlw	6
  1706  17F0  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  1707                           
  1708                           ;I2C_Master.c: 142:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1709  17F5  3082               	movlw	130
  1710  17F6  1283               	bcf	3,5	;RP0=0, select bank0
  1711  17F7  1303               	bcf	3,6	;RP1=0, select bank0
  1712  17F8  00A5               	movwf	??_LCD_Init+1
  1713  17F9  30DD               	movlw	221
  1714  17FA  00A4               	movwf	??_LCD_Init
  1715  17FB                     u6007:
  1716  17FB  0BA4               	decfsz	??_LCD_Init,f
  1717  17FC  2FFB               	goto	u6007
  1718  17FD  0BA5               	decfsz	??_LCD_Init+1,f
  1719  17FE  2FFB               	goto	u6007
  1720  17FF                     l317:
  1721  17FF  0008               	return
  1722  1800                     __end_of_LCD_Init:
  1723                           
  1724                           	psect	text4
  1725  1330                     __ptext4:	
  1726 ;; *************** function _I2C_Master_Init *****************
  1727 ;; Defined at:
  1728 ;;		line 15 in file "I2C_Master.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, status,2
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0
  1745 ;;      Totals:         0       0       0       0       0
  1746 ;;Total ram usage:        0 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 1
  1749 ;; This function calls:
  1750 ;;		Nothing
  1751 ;; This function is called by:
  1752 ;;		_setup
  1753 ;;		_LCD_Start
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _I2C_Master_Init
  1759  1330                     _I2C_Master_Init:
  1760  1330                     l1725:	
  1761                           ;incstack = 0
  1762                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1763                           
  1764                           
  1765                           ;I2C_Master.c: 17:   SSPCON = 0x28;
  1766  1330  3028               	movlw	40
  1767  1331  1283               	bcf	3,5	;RP0=0, select bank0
  1768  1332  1303               	bcf	3,6	;RP1=0, select bank0
  1769  1333  0094               	movwf	20	;volatile
  1770  1334                     l1727:
  1771                           
  1772                           ;I2C_Master.c: 18:   SSPCON2 = 0x00;
  1773  1334  1683               	bsf	3,5	;RP0=1, select bank1
  1774  1335  1303               	bcf	3,6	;RP1=0, select bank1
  1775  1336  0191               	clrf	17	;volatile
  1776  1337                     l1729:
  1777                           
  1778                           ;I2C_Master.c: 19:   SSPSTAT = 0x00;
  1779  1337  0194               	clrf	20	;volatile
  1780                           
  1781                           ;I2C_Master.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  1782  1338  30CF               	movlw	207
  1783  1339  0093               	movwf	19	;volatile
  1784  133A                     l1731:
  1785                           
  1786                           ;I2C_Master.c: 21:   TRISC3 = 1;
  1787  133A  1587               	bsf	7,3	;volatile
  1788  133B                     l1733:
  1789                           
  1790                           ;I2C_Master.c: 22:   TRISC4 = 1;
  1791  133B  1607               	bsf	7,4	;volatile
  1792  133C                     l273:
  1793  133C  0008               	return
  1794  133D                     __end_of_I2C_Master_Init:
  1795                           
  1796                           	psect	text5
  1797  09C2                     __ptext5:	
  1798 ;; *************** function _LCD_Send *****************
  1799 ;; Defined at:
  1800 ;;		line 270 in file "Master_PIC.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       4       0       0
  1816 ;;      Temps:          0       4       0       0       0
  1817 ;;      Totals:         0       4       4       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 7
  1821 ;; This function calls:
  1822 ;;		_ADC_convert
  1823 ;;		_LCD_Set_Cursor
  1824 ;;		_LCD_Write_Char
  1825 ;;		_LCD_Write_String
  1826 ;;		___bmul
  1827 ;;		___xxtofl
  1828 ;;		_division
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           
  1835                           ;psect for function _LCD_Send
  1836  09C2                     _LCD_Send:
  1837  09C2                     l4235:	
  1838                           ;incstack = 0
  1839                           ; Regs used in _LCD_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1840                           
  1841                           
  1842                           ;Master_PIC.c: 271:     _delay((unsigned long)((2500)*(8000000/4000.0)));
  1843  09C2  301A               	movlw	26
  1844  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  1845  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  1846  09C5  00E9               	movwf	??_LCD_Send+2
  1847  09C6  305E               	movlw	94
  1848  09C7  00E8               	movwf	??_LCD_Send+1
  1849  09C8  306D               	movlw	109
  1850  09C9  00E7               	movwf	??_LCD_Send
  1851  09CA                     u6017:
  1852  09CA  0BE7               	decfsz	??_LCD_Send,f
  1853  09CB  29CA               	goto	u6017
  1854  09CC  0BE8               	decfsz	??_LCD_Send+1,f
  1855  09CD  29CA               	goto	u6017
  1856  09CE  0BE9               	decfsz	??_LCD_Send+2,f
  1857  09CF  29CA               	goto	u6017
  1858  09D0  29D1               	nop2
  1859  09D1                     l4237:
  1860                           
  1861                           ;Master_PIC.c: 273:     LCD_Set_Cursor(1, 10);
  1862  09D1  300A               	movlw	10
  1863  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  1864  09D3  1303               	bcf	3,6	;RP1=0, select bank0
  1865  09D4  00E7               	movwf	??_LCD_Send
  1866  09D5  0867               	movf	??_LCD_Send,w
  1867  09D6  00A4               	movwf	LCD_Set_Cursor@COL
  1868  09D7  3001               	movlw	1
  1869  09D8  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  1870  09DD                     l4239:
  1871                           
  1872                           ;Master_PIC.c: 274:     LCD_Write_String(converted01);
  1873  09DD  30CB               	movlw	(low (_converted01| 0))& (0+255)
  1874  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  1875  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  1876  09E0  00A4               	movwf	LCD_Write_String@Str
  1877  09E1  3000               	movlw	0
  1878  09E2  00A5               	movwf	LCD_Write_String@Str+1
  1879  09E3  160A  118A  250F  120A  158A  	fcall	_LCD_Write_String
  1880  09E8                     l4241:
  1881                           
  1882                           ;Master_PIC.c: 277:     LCD_Set_Cursor(2, 10);
  1883  09E8  300A               	movlw	10
  1884  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  1885  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  1886  09EB  00E7               	movwf	??_LCD_Send
  1887  09EC  0867               	movf	??_LCD_Send,w
  1888  09ED  00A4               	movwf	LCD_Set_Cursor@COL
  1889  09EE  3002               	movlw	2
  1890  09EF  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  1891  09F4                     l4243:
  1892                           
  1893                           ;Master_PIC.c: 278:     LCD_Write_String(converted02);
  1894  09F4  30C1               	movlw	(low (_converted02| 0))& (0+255)
  1895  09F5  1283               	bcf	3,5	;RP0=0, select bank0
  1896  09F6  1303               	bcf	3,6	;RP1=0, select bank0
  1897  09F7  00A4               	movwf	LCD_Write_String@Str
  1898  09F8  3000               	movlw	0
  1899  09F9  00A5               	movwf	LCD_Write_String@Str+1
  1900  09FA  160A  118A  250F  120A  158A  	fcall	_LCD_Write_String
  1901  09FF                     l4245:
  1902                           
  1903                           ;Master_PIC.c: 281:     LCD_Set_Cursor(3, 10);
  1904  09FF  300A               	movlw	10
  1905  0A00  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0A01  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0A02  00E7               	movwf	??_LCD_Send
  1908  0A03  0867               	movf	??_LCD_Send,w
  1909  0A04  00A4               	movwf	LCD_Set_Cursor@COL
  1910  0A05  3003               	movlw	3
  1911  0A06  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  1912  0A0B                     l4247:
  1913                           
  1914                           ;Master_PIC.c: 282:     LCD_Write_String(converted03);
  1915  0A0B  30B7               	movlw	(low (_converted03| 0))& (0+255)
  1916  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0A0E  00A4               	movwf	LCD_Write_String@Str
  1919  0A0F  3000               	movlw	0
  1920  0A10  00A5               	movwf	LCD_Write_String@Str+1
  1921  0A11  160A  118A  250F  120A  158A  	fcall	_LCD_Write_String
  1922  0A16                     l4249:
  1923                           
  1924                           ;Master_PIC.c: 284:     ADC_convert(converted01, slave01, 2);
  1925  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  1926  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  1927  0A18  086F               	movf	_slave01,w
  1928  0A19  00E7               	movwf	??_LCD_Send
  1929  0A1A  01E8               	clrf	??_LCD_Send+1
  1930  0A1B  01E9               	clrf	??_LCD_Send+2
  1931  0A1C  01EA               	clrf	??_LCD_Send+3
  1932  0A1D  086A               	movf	??_LCD_Send+3,w
  1933  0A1E  00B2               	movwf	___xxtofl@val+3
  1934  0A1F  0869               	movf	??_LCD_Send+2,w
  1935  0A20  00B1               	movwf	___xxtofl@val+2
  1936  0A21  0868               	movf	??_LCD_Send+1,w
  1937  0A22  00B0               	movwf	___xxtofl@val+1
  1938  0A23  0867               	movf	??_LCD_Send,w
  1939  0A24  00AF               	movwf	___xxtofl@val
  1940  0A25  3000               	movlw	0
  1941  0A26  120A  158A  2106  120A  158A  	fcall	___xxtofl
  1942  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0A2D  0832               	movf	?___xxtofl+3,w
  1945  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0A30  00E7               	movwf	(_LCD_Send$1299+3)^(0+128)
  1948  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0A33  0831               	movf	?___xxtofl+2,w
  1951  0A34  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0A35  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0A36  00E6               	movwf	(_LCD_Send$1299+2)^(0+128)
  1954  0A37  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0A38  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0A39  0830               	movf	?___xxtofl+1,w
  1957  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0A3B  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0A3C  00E5               	movwf	(_LCD_Send$1299+1)^(0+128)
  1960  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0A3F  082F               	movf	?___xxtofl,w
  1963  0A40  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0A41  1303               	bcf	3,6	;RP1=0, select bank1
  1965  0A42  00E4               	movwf	_LCD_Send$1299^(0+128)
  1966  0A43                     l4251:
  1967                           
  1968                           ;Master_PIC.c: 284:     ADC_convert(converted01, slave01, 2);
  1969  0A43  0867               	movf	(_LCD_Send$1299+3)^(0+128),w
  1970  0A44  1283               	bcf	3,5	;RP0=0, select bank0
  1971  0A45  1303               	bcf	3,6	;RP1=0, select bank0
  1972  0A46  00E2               	movwf	ADC_convert@a+3
  1973  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0A48  1303               	bcf	3,6	;RP1=0, select bank1
  1975  0A49  0866               	movf	(_LCD_Send$1299+2)^(0+128),w
  1976  0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0A4C  00E1               	movwf	ADC_convert@a+2
  1979  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  1980  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  1981  0A4F  0865               	movf	(_LCD_Send$1299+1)^(0+128),w
  1982  0A50  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0A51  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0A52  00E0               	movwf	ADC_convert@a+1
  1985  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0A54  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0A55  0864               	movf	_LCD_Send$1299^(0+128),w
  1988  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0A57  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0A58  00DF               	movwf	ADC_convert@a
  1991  0A59  3002               	movlw	2
  1992  0A5A  00E3               	movwf	ADC_convert@place
  1993  0A5B  3000               	movlw	0
  1994  0A5C  00E4               	movwf	ADC_convert@place+1
  1995  0A5D  30CB               	movlw	(low (_converted01| 0))& (0+255)
  1996  0A5E  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  1997  0A63                     l4253:
  1998                           
  1999                           ;Master_PIC.c: 285:     ADC_convert(converted02, slave02, 2);
  2000  0A63  0879               	movf	_slave02,w
  2001  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0A66  00E7               	movwf	??_LCD_Send
  2004  0A67  01E8               	clrf	??_LCD_Send+1
  2005  0A68  01E9               	clrf	??_LCD_Send+2
  2006  0A69  01EA               	clrf	??_LCD_Send+3
  2007  0A6A  086A               	movf	??_LCD_Send+3,w
  2008  0A6B  00B2               	movwf	___xxtofl@val+3
  2009  0A6C  0869               	movf	??_LCD_Send+2,w
  2010  0A6D  00B1               	movwf	___xxtofl@val+2
  2011  0A6E  0868               	movf	??_LCD_Send+1,w
  2012  0A6F  00B0               	movwf	___xxtofl@val+1
  2013  0A70  0867               	movf	??_LCD_Send,w
  2014  0A71  00AF               	movwf	___xxtofl@val
  2015  0A72  3000               	movlw	0
  2016  0A73  120A  158A  2106  120A  158A  	fcall	___xxtofl
  2017  0A78  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0A79  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0A7A  0832               	movf	?___xxtofl+3,w
  2020  0A7B  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0A7C  1303               	bcf	3,6	;RP1=0, select bank1
  2022  0A7D  00E7               	movwf	(_LCD_Send$1299+3)^(0+128)
  2023  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0A80  0831               	movf	?___xxtofl+2,w
  2026  0A81  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0A82  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0A83  00E6               	movwf	(_LCD_Send$1299+2)^(0+128)
  2029  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0A86  0830               	movf	?___xxtofl+1,w
  2032  0A87  1683               	bsf	3,5	;RP0=1, select bank1
  2033  0A88  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0A89  00E5               	movwf	(_LCD_Send$1299+1)^(0+128)
  2035  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0A8C  082F               	movf	?___xxtofl,w
  2038  0A8D  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0A8E  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0A8F  00E4               	movwf	_LCD_Send$1299^(0+128)
  2041  0A90                     l4255:
  2042                           
  2043                           ;Master_PIC.c: 285:     ADC_convert(converted02, slave02, 2);
  2044  0A90  0867               	movf	(_LCD_Send$1299+3)^(0+128),w
  2045  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0A93  00E2               	movwf	ADC_convert@a+3
  2048  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0A95  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0A96  0866               	movf	(_LCD_Send$1299+2)^(0+128),w
  2051  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0A99  00E1               	movwf	ADC_convert@a+2
  2054  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0A9C  0865               	movf	(_LCD_Send$1299+1)^(0+128),w
  2057  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0A9F  00E0               	movwf	ADC_convert@a+1
  2060  0AA0  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0AA1  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0AA2  0864               	movf	_LCD_Send$1299^(0+128),w
  2063  0AA3  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0AA4  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0AA5  00DF               	movwf	ADC_convert@a
  2066  0AA6  3002               	movlw	2
  2067  0AA7  00E3               	movwf	ADC_convert@place
  2068  0AA8  3000               	movlw	0
  2069  0AA9  00E4               	movwf	ADC_convert@place+1
  2070  0AAA  30C1               	movlw	(low (_converted02| 0))& (0+255)
  2071  0AAB  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2072  0AB0                     l4257:
  2073                           
  2074                           ;Master_PIC.c: 286:     ADC_convert(converted03, slave03, 2);
  2075  0AB0  0878               	movf	_slave03,w
  2076  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0AB3  00E7               	movwf	??_LCD_Send
  2079  0AB4  01E8               	clrf	??_LCD_Send+1
  2080  0AB5  01E9               	clrf	??_LCD_Send+2
  2081  0AB6  01EA               	clrf	??_LCD_Send+3
  2082  0AB7  086A               	movf	??_LCD_Send+3,w
  2083  0AB8  00B2               	movwf	___xxtofl@val+3
  2084  0AB9  0869               	movf	??_LCD_Send+2,w
  2085  0ABA  00B1               	movwf	___xxtofl@val+2
  2086  0ABB  0868               	movf	??_LCD_Send+1,w
  2087  0ABC  00B0               	movwf	___xxtofl@val+1
  2088  0ABD  0867               	movf	??_LCD_Send,w
  2089  0ABE  00AF               	movwf	___xxtofl@val
  2090  0ABF  3000               	movlw	0
  2091  0AC0  120A  158A  2106  120A  158A  	fcall	___xxtofl
  2092  0AC5  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0AC6  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0AC7  0832               	movf	?___xxtofl+3,w
  2095  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  2096  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  2097  0ACA  00E7               	movwf	(_LCD_Send$1299+3)^(0+128)
  2098  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0ACD  0831               	movf	?___xxtofl+2,w
  2101  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0AD0  00E6               	movwf	(_LCD_Send$1299+2)^(0+128)
  2104  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0AD3  0830               	movf	?___xxtofl+1,w
  2107  0AD4  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0AD5  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0AD6  00E5               	movwf	(_LCD_Send$1299+1)^(0+128)
  2110  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0AD9  082F               	movf	?___xxtofl,w
  2113  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0ADC  00E4               	movwf	_LCD_Send$1299^(0+128)
  2116  0ADD                     l4259:
  2117                           
  2118                           ;Master_PIC.c: 286:     ADC_convert(converted03, slave03, 2);
  2119  0ADD  0867               	movf	(_LCD_Send$1299+3)^(0+128),w
  2120  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  2122  0AE0  00E2               	movwf	ADC_convert@a+3
  2123  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
  2124  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
  2125  0AE3  0866               	movf	(_LCD_Send$1299+2)^(0+128),w
  2126  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0AE6  00E1               	movwf	ADC_convert@a+2
  2129  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0AE9  0865               	movf	(_LCD_Send$1299+1)^(0+128),w
  2132  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0AEC  00E0               	movwf	ADC_convert@a+1
  2135  0AED  1683               	bsf	3,5	;RP0=1, select bank1
  2136  0AEE  1303               	bcf	3,6	;RP1=0, select bank1
  2137  0AEF  0864               	movf	_LCD_Send$1299^(0+128),w
  2138  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0AF2  00DF               	movwf	ADC_convert@a
  2141  0AF3  3002               	movlw	2
  2142  0AF4  00E3               	movwf	ADC_convert@place
  2143  0AF5  3000               	movlw	0
  2144  0AF6  00E4               	movwf	ADC_convert@place+1
  2145  0AF7  30B7               	movlw	(low (_converted03| 0))& (0+255)
  2146  0AF8  120A  118A  2037  120A  158A  	fcall	_ADC_convert
  2147  0AFD                     l4261:
  2148                           
  2149                           ;Master_PIC.c: 288:     dec1 = slave02 * 50;
  2150  0AFD  3032               	movlw	50
  2151  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0B00  00E7               	movwf	??_LCD_Send
  2154  0B01  0867               	movf	??_LCD_Send,w
  2155  0B02  00F4               	movwf	___bmul@multiplicand
  2156  0B03  0879               	movf	_slave02,w
  2157  0B04  160A  118A  2364  120A  158A  	fcall	___bmul
  2158  0B09  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0B0A  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0B0B  00E8               	movwf	??_LCD_Send+1
  2161  0B0C  0868               	movf	??_LCD_Send+1,w
  2162  0B0D  1683               	bsf	3,5	;RP0=1, select bank1
  2163  0B0E  1303               	bcf	3,6	;RP1=0, select bank1
  2164  0B0F  00B2               	movwf	_dec1^(0+128)
  2165  0B10                     l4263:
  2166                           
  2167                           ;Master_PIC.c: 289:     dec2 = slave03 * 25;
  2168  0B10  3019               	movlw	25
  2169  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0B13  00E7               	movwf	??_LCD_Send
  2172  0B14  0867               	movf	??_LCD_Send,w
  2173  0B15  00F4               	movwf	___bmul@multiplicand
  2174  0B16  0878               	movf	_slave03,w
  2175  0B17  160A  118A  2364  120A  158A  	fcall	___bmul
  2176  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0B1E  00E8               	movwf	??_LCD_Send+1
  2179  0B1F  0868               	movf	??_LCD_Send+1,w
  2180  0B20  1683               	bsf	3,5	;RP0=1, select bank1
  2181  0B21  1303               	bcf	3,6	;RP1=0, select bank1
  2182  0B22  00B1               	movwf	_dec2^(0+128)
  2183  0B23                     l4265:
  2184                           
  2185                           ;Master_PIC.c: 290:     dec3 = slave01 * 100;
  2186  0B23  3064               	movlw	100
  2187  0B24  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0B25  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0B26  00E7               	movwf	??_LCD_Send
  2190  0B27  0867               	movf	??_LCD_Send,w
  2191  0B28  00F4               	movwf	___bmul@multiplicand
  2192  0B29  086F               	movf	_slave01,w
  2193  0B2A  160A  118A  2364  120A  158A  	fcall	___bmul
  2194  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0B31  00E8               	movwf	??_LCD_Send+1
  2197  0B32  0868               	movf	??_LCD_Send+1,w
  2198  0B33  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0B34  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0B35  00B0               	movwf	_dec3^(0+128)
  2201  0B36                     l4267:
  2202                           
  2203                           ;Master_PIC.c: 291:     sum = dec3 + dec1 + dec2;
  2204  0B36  0832               	movf	_dec1^(0+128),w
  2205  0B37  0730               	addwf	_dec3^(0+128),w
  2206  0B38  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0B39  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0B3A  00E7               	movwf	??_LCD_Send
  2209  0B3B  1683               	bsf	3,5	;RP0=1, select bank1
  2210  0B3C  1303               	bcf	3,6	;RP1=0, select bank1
  2211  0B3D  0831               	movf	_dec2^(0+128),w
  2212  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0B40  0767               	addwf	??_LCD_Send,w
  2215  0B41  00E8               	movwf	??_LCD_Send+1
  2216  0B42  0868               	movf	??_LCD_Send+1,w
  2217  0B43  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0B44  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0B45  00B3               	movwf	_sum^(0+128)
  2220  0B46                     l4269:
  2221                           
  2222                           ;Master_PIC.c: 293:     division(sum);
  2223  0B46  0833               	movf	_sum^(0+128),w
  2224  0B47  160A  118A  260F  120A  158A  	fcall	_division
  2225  0B4C                     l4271:
  2226                           
  2227                           ;Master_PIC.c: 294:     LCD_Set_Cursor(4, 10);
  2228  0B4C  300A               	movlw	10
  2229  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0B4F  00E7               	movwf	??_LCD_Send
  2232  0B50  0867               	movf	??_LCD_Send,w
  2233  0B51  00A4               	movwf	LCD_Set_Cursor@COL
  2234  0B52  3004               	movlw	4
  2235  0B53  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  2236  0B58                     l4273:
  2237                           
  2238                           ;Master_PIC.c: 295:     LCD_Write_Char(hundreds);
  2239  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  2241  0B5A  086E               	movf	_hundreds,w
  2242  0B5B  160A  118A  23FF  120A  158A  	fcall	_LCD_Write_Char
  2243  0B60                     l4275:
  2244                           
  2245                           ;Master_PIC.c: 296:     LCD_Set_Cursor(4, 11);
  2246  0B60  300B               	movlw	11
  2247  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0B63  00E7               	movwf	??_LCD_Send
  2250  0B64  0867               	movf	??_LCD_Send,w
  2251  0B65  00A4               	movwf	LCD_Set_Cursor@COL
  2252  0B66  3004               	movlw	4
  2253  0B67  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  2254  0B6C                     l4277:
  2255                           
  2256                           ;Master_PIC.c: 297:     LCD_Write_Char(46);
  2257  0B6C  302E               	movlw	46
  2258  0B6D  160A  118A  23FF  120A  158A  	fcall	_LCD_Write_Char
  2259  0B72                     l4279:
  2260                           
  2261                           ;Master_PIC.c: 298:     LCD_Set_Cursor(4, 12);
  2262  0B72  300C               	movlw	12
  2263  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0B75  00E7               	movwf	??_LCD_Send
  2266  0B76  0867               	movf	??_LCD_Send,w
  2267  0B77  00A4               	movwf	LCD_Set_Cursor@COL
  2268  0B78  3004               	movlw	4
  2269  0B79  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  2270  0B7E                     l4281:
  2271                           
  2272                           ;Master_PIC.c: 299:     LCD_Write_Char(tens);
  2273  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0B80  086D               	movf	_tens,w
  2276  0B81  160A  118A  23FF  120A  158A  	fcall	_LCD_Write_Char
  2277  0B86                     l4283:
  2278                           
  2279                           ;Master_PIC.c: 300:     LCD_Set_Cursor(4, 13);
  2280  0B86  300D               	movlw	13
  2281  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0B89  00E7               	movwf	??_LCD_Send
  2284  0B8A  0867               	movf	??_LCD_Send,w
  2285  0B8B  00A4               	movwf	LCD_Set_Cursor@COL
  2286  0B8C  3004               	movlw	4
  2287  0B8D  160A  118A  249C  120A  158A  	fcall	_LCD_Set_Cursor
  2288  0B92                     l4285:
  2289                           
  2290                           ;Master_PIC.c: 301:     LCD_Write_Char(units);
  2291  0B92  1283               	bcf	3,5	;RP0=0, select bank0
  2292  0B93  1303               	bcf	3,6	;RP1=0, select bank0
  2293  0B94  086C               	movf	_units,w
  2294  0B95  160A  118A  23FF  120A  158A  	fcall	_LCD_Write_Char
  2295  0B9A                     l182:
  2296  0B9A  0008               	return
  2297  0B9B                     __end_of_LCD_Send:
  2298                           
  2299                           	psect	text6
  2300  160F                     __ptext6:	
  2301 ;; *************** function _division *****************
  2302 ;; Defined at:
  2303 ;;		line 367 in file "Master_PIC.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  valor           1    wreg     unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  valor           1    5[COMMON] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      unsigned char 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0
  2319 ;;      Temps:          0       3       0       0       0
  2320 ;;      Totals:         1       3       0       0       0
  2321 ;;Total ram usage:        4 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; Hardware stack levels required when called: 2
  2324 ;; This function calls:
  2325 ;;		___awdiv
  2326 ;;		___awmod
  2327 ;; This function is called by:
  2328 ;;		_LCD_Send
  2329 ;;		_Text
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _division
  2335  160F                     _division:
  2336                           
  2337                           ;incstack = 0
  2338                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2339                           ;division@valor stored from wreg
  2340  160F  00F5               	movwf	division@valor
  2341  1610                     l4029:
  2342                           
  2343                           ;Master_PIC.c: 368:     hundreds = valor/100;
  2344  1610  3064               	movlw	100
  2345  1611  1283               	bcf	3,5	;RP0=0, select bank0
  2346  1612  1303               	bcf	3,6	;RP1=0, select bank0
  2347  1613  00A0               	movwf	___awdiv@divisor
  2348  1614  3000               	movlw	0
  2349  1615  00A1               	movwf	___awdiv@divisor+1
  2350  1616  0875               	movf	division@valor,w
  2351  1617  00A8               	movwf	??_division
  2352  1618  01A9               	clrf	??_division+1
  2353  1619  0828               	movf	??_division,w
  2354  161A  00A2               	movwf	___awdiv@dividend
  2355  161B  0829               	movf	??_division+1,w
  2356  161C  00A3               	movwf	___awdiv@dividend+1
  2357  161D  160A  118A  25A6  160A  118A  	fcall	___awdiv
  2358  1622  1283               	bcf	3,5	;RP0=0, select bank0
  2359  1623  1303               	bcf	3,6	;RP1=0, select bank0
  2360  1624  0820               	movf	?___awdiv,w
  2361  1625  00AA               	movwf	??_division+2
  2362  1626  082A               	movf	??_division+2,w
  2363  1627  00EE               	movwf	_hundreds
  2364                           
  2365                           ;Master_PIC.c: 369:     residuo = valor%100;
  2366  1628  3064               	movlw	100
  2367  1629  00A0               	movwf	___awmod@divisor
  2368  162A  3000               	movlw	0
  2369  162B  00A1               	movwf	___awmod@divisor+1
  2370  162C  0875               	movf	division@valor,w
  2371  162D  00A8               	movwf	??_division
  2372  162E  01A9               	clrf	??_division+1
  2373  162F  0828               	movf	??_division,w
  2374  1630  00A2               	movwf	___awmod@dividend
  2375  1631  0829               	movf	??_division+1,w
  2376  1632  00A3               	movwf	___awmod@dividend+1
  2377  1633  120A  158A  2007  160A  118A  	fcall	___awmod
  2378  1638  1283               	bcf	3,5	;RP0=0, select bank0
  2379  1639  1303               	bcf	3,6	;RP1=0, select bank0
  2380  163A  0820               	movf	?___awmod,w
  2381  163B  00AA               	movwf	??_division+2
  2382  163C  082A               	movf	??_division+2,w
  2383  163D  00F6               	movwf	_residuo
  2384                           
  2385                           ;Master_PIC.c: 370:     tens = residuo/10;
  2386  163E  300A               	movlw	10
  2387  163F  00A0               	movwf	___awdiv@divisor
  2388  1640  3000               	movlw	0
  2389  1641  00A1               	movwf	___awdiv@divisor+1
  2390  1642  0876               	movf	_residuo,w
  2391  1643  00A8               	movwf	??_division
  2392  1644  01A9               	clrf	??_division+1
  2393  1645  0828               	movf	??_division,w
  2394  1646  00A2               	movwf	___awdiv@dividend
  2395  1647  0829               	movf	??_division+1,w
  2396  1648  00A3               	movwf	___awdiv@dividend+1
  2397  1649  160A  118A  25A6  160A  118A  	fcall	___awdiv
  2398  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2399  164F  1303               	bcf	3,6	;RP1=0, select bank0
  2400  1650  0820               	movf	?___awdiv,w
  2401  1651  00AA               	movwf	??_division+2
  2402  1652  082A               	movf	??_division+2,w
  2403  1653  00ED               	movwf	_tens
  2404                           
  2405                           ;Master_PIC.c: 371:     units = residuo%10;
  2406  1654  300A               	movlw	10
  2407  1655  00A0               	movwf	___awmod@divisor
  2408  1656  3000               	movlw	0
  2409  1657  00A1               	movwf	___awmod@divisor+1
  2410  1658  0876               	movf	_residuo,w
  2411  1659  00A8               	movwf	??_division
  2412  165A  01A9               	clrf	??_division+1
  2413  165B  0828               	movf	??_division,w
  2414  165C  00A2               	movwf	___awmod@dividend
  2415  165D  0829               	movf	??_division+1,w
  2416  165E  00A3               	movwf	___awmod@dividend+1
  2417  165F  120A  158A  2007  160A  118A  	fcall	___awmod
  2418  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2419  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2420  1666  0820               	movf	?___awmod,w
  2421  1667  00AA               	movwf	??_division+2
  2422  1668  082A               	movf	??_division+2,w
  2423  1669  00EC               	movwf	_units
  2424  166A                     l4031:
  2425                           
  2426                           ;Master_PIC.c: 373:     hundreds = hundreds + 48;
  2427  166A  086E               	movf	_hundreds,w
  2428  166B  3E30               	addlw	48
  2429  166C  00A8               	movwf	??_division
  2430  166D  0828               	movf	??_division,w
  2431  166E  00EE               	movwf	_hundreds
  2432  166F                     l4033:
  2433                           
  2434                           ;Master_PIC.c: 374:     tens = tens + 48;
  2435  166F  086D               	movf	_tens,w
  2436  1670  3E30               	addlw	48
  2437  1671  00A8               	movwf	??_division
  2438  1672  0828               	movf	??_division,w
  2439  1673  00ED               	movwf	_tens
  2440  1674                     l4035:
  2441                           
  2442                           ;Master_PIC.c: 375:     units = units + 48;
  2443  1674  086C               	movf	_units,w
  2444  1675  3E30               	addlw	48
  2445  1676  00A8               	movwf	??_division
  2446  1677  0828               	movf	??_division,w
  2447  1678  00EC               	movwf	_units
  2448  1679                     l211:
  2449  1679  0008               	return
  2450  167A                     __end_of_division:
  2451                           
  2452                           	psect	text7
  2453  0807                     __ptext7:	
  2454 ;; *************** function ___awmod *****************
  2455 ;; Defined at:
  2456 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  divisor         2    0[BANK0 ] int 
  2459 ;;  dividend        2    2[BANK0 ] int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  sign            1    5[BANK0 ] unsigned char 
  2462 ;;  counter         1    4[BANK0 ] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2    0[BANK0 ] int 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       4       0       0       0
  2473 ;;      Locals:         0       2       0       0       0
  2474 ;;      Temps:          1       0       0       0       0
  2475 ;;      Totals:         1       6       0       0       0
  2476 ;;Total ram usage:        7 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_division
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function ___awmod
  2488  0807                     ___awmod:
  2489  0807                     l3603:	
  2490                           ;incstack = 0
  2491                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2492                           
  2493  0807  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0808  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0809  01A5               	clrf	___awmod@sign
  2496  080A                     l3605:
  2497  080A  1FA3               	btfss	___awmod@dividend+1,7
  2498  080B  280D               	goto	u4631
  2499  080C  280E               	goto	u4630
  2500  080D                     u4631:
  2501  080D  2815               	goto	l3611
  2502  080E                     u4630:
  2503  080E                     l3607:
  2504  080E  09A2               	comf	___awmod@dividend,f
  2505  080F  09A3               	comf	___awmod@dividend+1,f
  2506  0810  0AA2               	incf	___awmod@dividend,f
  2507  0811  1903               	skipnz
  2508  0812  0AA3               	incf	___awmod@dividend+1,f
  2509  0813                     l3609:
  2510  0813  01A5               	clrf	___awmod@sign
  2511  0814  0AA5               	incf	___awmod@sign,f
  2512  0815                     l3611:
  2513  0815  1FA1               	btfss	___awmod@divisor+1,7
  2514  0816  2818               	goto	u4641
  2515  0817  2819               	goto	u4640
  2516  0818                     u4641:
  2517  0818  281E               	goto	l3615
  2518  0819                     u4640:
  2519  0819                     l3613:
  2520  0819  09A0               	comf	___awmod@divisor,f
  2521  081A  09A1               	comf	___awmod@divisor+1,f
  2522  081B  0AA0               	incf	___awmod@divisor,f
  2523  081C  1903               	skipnz
  2524  081D  0AA1               	incf	___awmod@divisor+1,f
  2525  081E                     l3615:
  2526  081E  0820               	movf	___awmod@divisor,w
  2527  081F  0421               	iorwf	___awmod@divisor+1,w
  2528  0820  1903               	btfsc	3,2
  2529  0821  2823               	goto	u4651
  2530  0822  2824               	goto	u4650
  2531  0823                     u4651:
  2532  0823  2853               	goto	l3633
  2533  0824                     u4650:
  2534  0824                     l3617:
  2535  0824  01A4               	clrf	___awmod@counter
  2536  0825  0AA4               	incf	___awmod@counter,f
  2537  0826  2832               	goto	l3623
  2538  0827                     l3619:
  2539  0827  3001               	movlw	1
  2540  0828                     u4665:
  2541  0828  1003               	clrc
  2542  0829  0DA0               	rlf	___awmod@divisor,f
  2543  082A  0DA1               	rlf	___awmod@divisor+1,f
  2544  082B  3EFF               	addlw	-1
  2545  082C  1D03               	skipz
  2546  082D  2828               	goto	u4665
  2547  082E                     l3621:
  2548  082E  3001               	movlw	1
  2549  082F  00F4               	movwf	??___awmod
  2550  0830  0874               	movf	??___awmod,w
  2551  0831  07A4               	addwf	___awmod@counter,f
  2552  0832                     l3623:
  2553  0832  1FA1               	btfss	___awmod@divisor+1,7
  2554  0833  2835               	goto	u4671
  2555  0834  2836               	goto	u4670
  2556  0835                     u4671:
  2557  0835  2827               	goto	l3619
  2558  0836                     u4670:
  2559  0836                     l3625:
  2560  0836  0821               	movf	___awmod@divisor+1,w
  2561  0837  0223               	subwf	___awmod@dividend+1,w
  2562  0838  1D03               	skipz
  2563  0839  283C               	goto	u4685
  2564  083A  0820               	movf	___awmod@divisor,w
  2565  083B  0222               	subwf	___awmod@dividend,w
  2566  083C                     u4685:
  2567  083C  1C03               	skipc
  2568  083D  283F               	goto	u4681
  2569  083E  2840               	goto	u4680
  2570  083F                     u4681:
  2571  083F  2846               	goto	l3629
  2572  0840                     u4680:
  2573  0840                     l3627:
  2574  0840  0820               	movf	___awmod@divisor,w
  2575  0841  02A2               	subwf	___awmod@dividend,f
  2576  0842  0821               	movf	___awmod@divisor+1,w
  2577  0843  1C03               	skipc
  2578  0844  03A3               	decf	___awmod@dividend+1,f
  2579  0845  02A3               	subwf	___awmod@dividend+1,f
  2580  0846                     l3629:
  2581  0846  3001               	movlw	1
  2582  0847                     u4695:
  2583  0847  1003               	clrc
  2584  0848  0CA1               	rrf	___awmod@divisor+1,f
  2585  0849  0CA0               	rrf	___awmod@divisor,f
  2586  084A  3EFF               	addlw	-1
  2587  084B  1D03               	skipz
  2588  084C  2847               	goto	u4695
  2589  084D                     l3631:
  2590  084D  3001               	movlw	1
  2591  084E  02A4               	subwf	___awmod@counter,f
  2592  084F  1D03               	btfss	3,2
  2593  0850  2852               	goto	u4701
  2594  0851  2853               	goto	u4700
  2595  0852                     u4701:
  2596  0852  2836               	goto	l3625
  2597  0853                     u4700:
  2598  0853                     l3633:
  2599  0853  0825               	movf	___awmod@sign,w
  2600  0854  1903               	btfsc	3,2
  2601  0855  2857               	goto	u4711
  2602  0856  2858               	goto	u4710
  2603  0857                     u4711:
  2604  0857  285D               	goto	l3637
  2605  0858                     u4710:
  2606  0858                     l3635:
  2607  0858  09A2               	comf	___awmod@dividend,f
  2608  0859  09A3               	comf	___awmod@dividend+1,f
  2609  085A  0AA2               	incf	___awmod@dividend,f
  2610  085B  1903               	skipnz
  2611  085C  0AA3               	incf	___awmod@dividend+1,f
  2612  085D                     l3637:
  2613  085D  0823               	movf	___awmod@dividend+1,w
  2614  085E  00A1               	movwf	?___awmod+1
  2615  085F  0822               	movf	___awmod@dividend,w
  2616  0860  00A0               	movwf	?___awmod
  2617  0861                     l611:
  2618  0861  0008               	return
  2619  0862                     __end_of___awmod:
  2620                           
  2621                           	psect	text8
  2622  1364                     __ptext8:	
  2623 ;; *************** function ___bmul *****************
  2624 ;; Defined at:
  2625 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  multiplier      1    wreg     unsigned char 
  2628 ;;  multiplicand    1    4[COMMON] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2631 ;;  product         1    0[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         1       0       0       0       0
  2642 ;;      Locals:         0       2       0       0       0
  2643 ;;      Temps:          1       0       0       0       0
  2644 ;;      Totals:         2       2       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_LCD_Send
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function ___bmul
  2657  1364                     ___bmul:
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2661                           ;___bmul@multiplier stored from wreg
  2662  1364  1283               	bcf	3,5	;RP0=0, select bank0
  2663  1365  1303               	bcf	3,6	;RP1=0, select bank0
  2664  1366  00A1               	movwf	___bmul@multiplier
  2665  1367                     l4201:
  2666  1367  01A0               	clrf	___bmul@product
  2667  1368                     l4203:
  2668  1368  1C21               	btfss	___bmul@multiplier,0
  2669  1369  2B6B               	goto	u5821
  2670  136A  2B6C               	goto	u5820
  2671  136B                     u5821:
  2672  136B  2B70               	goto	l4207
  2673  136C                     u5820:
  2674  136C                     l4205:
  2675  136C  0874               	movf	___bmul@multiplicand,w
  2676  136D  00F5               	movwf	??___bmul
  2677  136E  0875               	movf	??___bmul,w
  2678  136F  07A0               	addwf	___bmul@product,f
  2679  1370                     l4207:
  2680  1370  1003               	clrc
  2681  1371  0DF4               	rlf	___bmul@multiplicand,f
  2682  1372                     l4209:
  2683  1372  1003               	clrc
  2684  1373  0CA1               	rrf	___bmul@multiplier,f
  2685  1374  0821               	movf	___bmul@multiplier,w
  2686  1375  1D03               	btfss	3,2
  2687  1376  2B78               	goto	u5831
  2688  1377  2B79               	goto	u5830
  2689  1378                     u5831:
  2690  1378  2B68               	goto	l4203
  2691  1379                     u5830:
  2692  1379                     l4211:
  2693  1379  0820               	movf	___bmul@product,w
  2694  137A                     l471:
  2695  137A  0008               	return
  2696  137B                     __end_of___bmul:
  2697                           
  2698                           	psect	text9
  2699  150F                     __ptext9:	
  2700 ;; *************** function _LCD_Write_String *****************
  2701 ;; Defined at:
  2702 ;;		line 176 in file "I2C_Master.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  Str             2    4[BANK0 ] PTR unsigned char 
  2705 ;;		 -> converted03(10), converted02(10), converted01(10), STR_4(10), 
  2706 ;;		 -> STR_3(9), STR_2(9), STR_1(9), 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  i               2    9[BANK0 ] int 
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       2       0       0       0
  2719 ;;      Locals:         0       2       0       0       0
  2720 ;;      Temps:          0       3       0       0       0
  2721 ;;      Totals:         0       7       0       0       0
  2722 ;;Total ram usage:        7 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 6
  2725 ;; This function calls:
  2726 ;;		_LCD_Write_Char
  2727 ;; This function is called by:
  2728 ;;		_LCD_Start
  2729 ;;		_LCD_Send
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _LCD_Write_String
  2735  150F                     _LCD_Write_String:
  2736  150F                     l4091:	
  2737                           ;incstack = 0
  2738 ;; using string table level
  2739                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2740                           
  2741                           
  2742                           ;I2C_Master.c: 176: void LCD_Write_String(char* Str);I2C_Master.c: 177: {;I2C_Master.c: 
      +                          178:     for(int i=0; Str[i]!='\0'; i++)
  2743  150F  1283               	bcf	3,5	;RP0=0, select bank0
  2744  1510  1303               	bcf	3,6	;RP1=0, select bank0
  2745  1511  01A9               	clrf	LCD_Write_String@i
  2746  1512  01AA               	clrf	LCD_Write_String@i+1
  2747  1513  2D38               	goto	l4097
  2748  1514                     l4093:
  2749                           
  2750                           ;I2C_Master.c: 179:        LCD_Write_Char(Str[i]);
  2751  1514  0829               	movf	LCD_Write_String@i,w
  2752  1515  0724               	addwf	LCD_Write_String@Str,w
  2753  1516  00A7               	movwf	??_LCD_Write_String+1
  2754  1517  0825               	movf	LCD_Write_String@Str+1,w
  2755  1518  00A6               	movwf	??_LCD_Write_String
  2756  1519  1803               	skipnc
  2757  151A  0AA6               	incf	??_LCD_Write_String,f
  2758  151B  1FA9               	btfss	LCD_Write_String@i,7
  2759  151C  2D1E               	goto	u5700
  2760  151D  03A6               	decf	??_LCD_Write_String,f
  2761  151E                     u5700:
  2762  151E  1283               	bcf	3,5	;RP0=0, select bank0
  2763  151F  1303               	bcf	3,6	;RP1=0, select bank0
  2764  1520  0826               	movf	??_LCD_Write_String,w
  2765  1521  00A8               	movwf	??_LCD_Write_String+2
  2766  1522  0828               	movf	??_LCD_Write_String+2,w
  2767  1523  00FF               	movwf	btemp+1
  2768  1524  0827               	movf	??_LCD_Write_String+1,w
  2769  1525  0084               	movwf	4
  2770  1526  160A  118A  2000  160A  118A  	fcall	stringtab
  2771  152B  160A  118A  23FF  160A  118A  	fcall	_LCD_Write_Char
  2772  1530                     l4095:
  2773  1530  3001               	movlw	1
  2774  1531  1283               	bcf	3,5	;RP0=0, select bank0
  2775  1532  1303               	bcf	3,6	;RP1=0, select bank0
  2776  1533  07A9               	addwf	LCD_Write_String@i,f
  2777  1534  1803               	skipnc
  2778  1535  0AAA               	incf	LCD_Write_String@i+1,f
  2779  1536  3000               	movlw	0
  2780  1537  07AA               	addwf	LCD_Write_String@i+1,f
  2781  1538                     l4097:
  2782  1538  0829               	movf	LCD_Write_String@i,w
  2783  1539  0724               	addwf	LCD_Write_String@Str,w
  2784  153A  00A7               	movwf	??_LCD_Write_String+1
  2785  153B  0825               	movf	LCD_Write_String@Str+1,w
  2786  153C  00A6               	movwf	??_LCD_Write_String
  2787  153D  1803               	skipnc
  2788  153E  0AA6               	incf	??_LCD_Write_String,f
  2789  153F  1FA9               	btfss	LCD_Write_String@i,7
  2790  1540  2D42               	goto	u5710
  2791  1541  03A6               	decf	??_LCD_Write_String,f
  2792  1542                     u5710:
  2793  1542  1283               	bcf	3,5	;RP0=0, select bank0
  2794  1543  1303               	bcf	3,6	;RP1=0, select bank0
  2795  1544  0826               	movf	??_LCD_Write_String,w
  2796  1545  00A8               	movwf	??_LCD_Write_String+2
  2797  1546  0828               	movf	??_LCD_Write_String+2,w
  2798  1547  00FF               	movwf	btemp+1
  2799  1548  0827               	movf	??_LCD_Write_String+1,w
  2800  1549  0084               	movwf	4
  2801  154A  160A  118A  2000  160A  118A  	fcall	stringtab
  2802  154F  3A00               	xorlw	0
  2803  1550  1D03               	skipz
  2804  1551  2D53               	goto	u5721
  2805  1552  2D54               	goto	u5720
  2806  1553                     u5721:
  2807  1553  2D14               	goto	l4093
  2808  1554                     u5720:
  2809  1554                     l335:
  2810  1554  0008               	return
  2811  1555                     __end_of_LCD_Write_String:
  2812                           
  2813                           	psect	text10
  2814  13FF                     __ptext10:	
  2815 ;; *************** function _LCD_Write_Char *****************
  2816 ;; Defined at:
  2817 ;;		line 169 in file "I2C_Master.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  Data            1    wreg     unsigned char 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;  Data            1    3[BANK0 ] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2831 ;;      Params:         0       0       0       0       0
  2832 ;;      Locals:         0       1       0       0       0
  2833 ;;      Temps:          0       1       0       0       0
  2834 ;;      Totals:         0       2       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 5
  2838 ;; This function calls:
  2839 ;;		_LCD_Write_4Bit
  2840 ;; This function is called by:
  2841 ;;		_LCD_Send
  2842 ;;		_LCD_Write_String
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function _LCD_Write_Char
  2848  13FF                     _LCD_Write_Char:
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2852                           ;LCD_Write_Char@Data stored from wreg
  2853  13FF  1283               	bcf	3,5	;RP0=0, select bank0
  2854  1400  1303               	bcf	3,6	;RP1=0, select bank0
  2855  1401  00A3               	movwf	LCD_Write_Char@Data
  2856  1402                     l3535:
  2857                           
  2858                           ;I2C_Master.c: 169: void LCD_Write_Char(char Data);I2C_Master.c: 170: {;I2C_Master.c: 17
      +                          1:   RS = 1;
  2859  1402  1683               	bsf	3,5	;RP0=1, select bank1
  2860  1403  1303               	bcf	3,6	;RP1=0, select bank1
  2861  1404  01AF               	clrf	_RS^(0+128)
  2862  1405  0AAF               	incf	_RS^(0+128),f
  2863  1406                     l3537:
  2864                           
  2865                           ;I2C_Master.c: 172:   LCD_Write_4Bit(Data & 0xF0);
  2866  1406  1283               	bcf	3,5	;RP0=0, select bank0
  2867  1407  1303               	bcf	3,6	;RP1=0, select bank0
  2868  1408  0823               	movf	LCD_Write_Char@Data,w
  2869  1409  39F0               	andlw	240
  2870  140A  160A  118A  23DC  160A  118A  	fcall	_LCD_Write_4Bit
  2871                           
  2872                           ;I2C_Master.c: 173:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2873  140F  1283               	bcf	3,5	;RP0=0, select bank0
  2874  1410  1303               	bcf	3,6	;RP1=0, select bank0
  2875  1411  0823               	movf	LCD_Write_Char@Data,w
  2876  1412  00A2               	movwf	??_LCD_Write_Char
  2877  1413  3003               	movlw	3
  2878  1414                     u4475:
  2879  1414  1003               	clrc
  2880  1415  0DA2               	rlf	??_LCD_Write_Char,f
  2881  1416  3EFF               	addlw	-1
  2882  1417  1D03               	skipz
  2883  1418  2C14               	goto	u4475
  2884  1419  1003               	clrc
  2885  141A  0D22               	rlf	??_LCD_Write_Char,w
  2886  141B  39F0               	andlw	240
  2887  141C  160A  118A  23DC  160A  118A  	fcall	_LCD_Write_4Bit
  2888  1421                     l329:
  2889  1421  0008               	return
  2890  1422                     __end_of_LCD_Write_Char:
  2891                           
  2892                           	psect	text11
  2893  149C                     __ptext11:	
  2894 ;; *************** function _LCD_Set_Cursor *****************
  2895 ;; Defined at:
  2896 ;;		line 182 in file "I2C_Master.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  ROW             1    wreg     unsigned char 
  2899 ;;  COL             1    4[BANK0 ] unsigned char 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  ROW             1    7[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       1       0       0       0
  2912 ;;      Locals:         0       1       0       0       0
  2913 ;;      Temps:          0       2       0       0       0
  2914 ;;      Totals:         0       4       0       0       0
  2915 ;;Total ram usage:        4 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 6
  2918 ;; This function calls:
  2919 ;;		_LCD_CMD
  2920 ;; This function is called by:
  2921 ;;		_LCD_Start
  2922 ;;		_LCD_Send
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _LCD_Set_Cursor
  2928  149C                     _LCD_Set_Cursor:
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2932                           ;LCD_Set_Cursor@ROW stored from wreg
  2933  149C  1283               	bcf	3,5	;RP0=0, select bank0
  2934  149D  1303               	bcf	3,6	;RP1=0, select bank0
  2935  149E  00A7               	movwf	LCD_Set_Cursor@ROW
  2936  149F                     l4073:
  2937                           
  2938                           ;I2C_Master.c: 182: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_Master
      +                          .c: 183: {;I2C_Master.c: 184:   switch(ROW)
  2939  149F  2CC0               	goto	l4083
  2940  14A0                     l4075:
  2941                           
  2942                           ;I2C_Master.c: 187:       LCD_CMD(0xC0 + COL-1);
  2943  14A0  0824               	movf	LCD_Set_Cursor@COL,w
  2944  14A1  3EBF               	addlw	191
  2945  14A2  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  2946                           
  2947                           ;I2C_Master.c: 188:       break;
  2948  14A7  2CD3               	goto	l344
  2949  14A8                     l4077:
  2950                           
  2951                           ;I2C_Master.c: 190:       LCD_CMD(0x94 + COL-1);
  2952  14A8  0824               	movf	LCD_Set_Cursor@COL,w
  2953  14A9  3E93               	addlw	147
  2954  14AA  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  2955                           
  2956                           ;I2C_Master.c: 191:       break;
  2957  14AF  2CD3               	goto	l344
  2958  14B0                     l4079:
  2959                           
  2960                           ;I2C_Master.c: 193:       LCD_CMD(0xD4 + COL-1);
  2961  14B0  0824               	movf	LCD_Set_Cursor@COL,w
  2962  14B1  3ED3               	addlw	211
  2963  14B2  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  2964                           
  2965                           ;I2C_Master.c: 194:       break;
  2966  14B7  2CD3               	goto	l344
  2967  14B8                     l4081:
  2968                           
  2969                           ;I2C_Master.c: 197:       LCD_CMD(0x80 + COL-1);
  2970  14B8  0824               	movf	LCD_Set_Cursor@COL,w
  2971  14B9  3E7F               	addlw	127
  2972  14BA  160A  118A  2398  160A  118A  	fcall	_LCD_CMD
  2973                           
  2974                           ;I2C_Master.c: 198:   }
  2975  14BF  2CD3               	goto	l344
  2976  14C0                     l4083:
  2977  14C0  0827               	movf	LCD_Set_Cursor@ROW,w
  2978  14C1  00A5               	movwf	??_LCD_Set_Cursor
  2979  14C2  01A6               	clrf	??_LCD_Set_Cursor+1
  2980                           
  2981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2982                           ; Switch size 1, requested type "simple"
  2983                           ; Number of cases is 1, Range of values is 0 to 0
  2984                           ; switch strategies available:
  2985                           ; Name         Instructions Cycles
  2986                           ; simple_byte            4     3 (average)
  2987                           ; direct_byte           11     8 (fixed)
  2988                           ; jumptable            260     6 (fixed)
  2989                           ;	Chosen strategy is simple_byte
  2990  14C3  0826               	movf	??_LCD_Set_Cursor+1,w
  2991  14C4  3A00               	xorlw	0	; case 0
  2992  14C5  1903               	skipnz
  2993  14C6  2CC8               	goto	l4399
  2994  14C7  2CB8               	goto	l4081
  2995  14C8                     l4399:
  2996                           
  2997                           ; Switch size 1, requested type "simple"
  2998                           ; Number of cases is 3, Range of values is 2 to 4
  2999                           ; switch strategies available:
  3000                           ; Name         Instructions Cycles
  3001                           ; simple_byte           10     6 (average)
  3002                           ; direct_byte           20    11 (fixed)
  3003                           ; jumptable            263     9 (fixed)
  3004                           ;	Chosen strategy is simple_byte
  3005  14C8  0825               	movf	??_LCD_Set_Cursor,w
  3006  14C9  3A02               	xorlw	2	; case 2
  3007  14CA  1903               	skipnz
  3008  14CB  2CA0               	goto	l4075
  3009  14CC  3A01               	xorlw	1	; case 3
  3010  14CD  1903               	skipnz
  3011  14CE  2CA8               	goto	l4077
  3012  14CF  3A07               	xorlw	7	; case 4
  3013  14D0  1903               	skipnz
  3014  14D1  2CB0               	goto	l4079
  3015  14D2  2CB8               	goto	l4081
  3016  14D3                     l344:
  3017  14D3  0008               	return
  3018  14D4                     __end_of_LCD_Set_Cursor:
  3019                           
  3020                           	psect	text12
  3021  1398                     __ptext12:	
  3022 ;; *************** function _LCD_CMD *****************
  3023 ;; Defined at:
  3024 ;;		line 162 in file "I2C_Master.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  CMD             1    wreg     unsigned char 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  CMD             1    3[BANK0 ] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0, pclath, cstack
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         0       1       0       0       0
  3040 ;;      Temps:          0       1       0       0       0
  3041 ;;      Totals:         0       2       0       0       0
  3042 ;;Total ram usage:        2 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; Hardware stack levels required when called: 5
  3045 ;; This function calls:
  3046 ;;		_LCD_Write_4Bit
  3047 ;; This function is called by:
  3048 ;;		_LCD_Init
  3049 ;;		_LCD_Set_Cursor
  3050 ;;		_LCD_SL
  3051 ;;		_LCD_SR
  3052 ;;		_LCD_Clear
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _LCD_CMD
  3058  1398                     _LCD_CMD:
  3059                           
  3060                           ;incstack = 0
  3061                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3062                           ;LCD_CMD@CMD stored from wreg
  3063  1398  1283               	bcf	3,5	;RP0=0, select bank0
  3064  1399  1303               	bcf	3,6	;RP1=0, select bank0
  3065  139A  00A3               	movwf	LCD_CMD@CMD
  3066  139B                     l3539:
  3067                           
  3068                           ;I2C_Master.c: 162: void LCD_CMD(unsigned char CMD);I2C_Master.c: 163: {;I2C_Master.c: 1
      +                          64:   RS = 0;
  3069  139B  1683               	bsf	3,5	;RP0=1, select bank1
  3070  139C  1303               	bcf	3,6	;RP1=0, select bank1
  3071  139D  01AF               	clrf	_RS^(0+128)
  3072  139E                     l3541:
  3073                           
  3074                           ;I2C_Master.c: 165:   LCD_Write_4Bit(CMD & 0xF0);
  3075  139E  1283               	bcf	3,5	;RP0=0, select bank0
  3076  139F  1303               	bcf	3,6	;RP1=0, select bank0
  3077  13A0  0823               	movf	LCD_CMD@CMD,w
  3078  13A1  39F0               	andlw	240
  3079  13A2  160A  118A  23DC  160A  118A  	fcall	_LCD_Write_4Bit
  3080  13A7                     l3543:
  3081                           
  3082                           ;I2C_Master.c: 166:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  3083  13A7  1283               	bcf	3,5	;RP0=0, select bank0
  3084  13A8  1303               	bcf	3,6	;RP1=0, select bank0
  3085  13A9  0823               	movf	LCD_CMD@CMD,w
  3086  13AA  00A2               	movwf	??_LCD_CMD
  3087  13AB  3003               	movlw	3
  3088  13AC                     u4485:
  3089  13AC  1003               	clrc
  3090  13AD  0DA2               	rlf	??_LCD_CMD,f
  3091  13AE  3EFF               	addlw	-1
  3092  13AF  1D03               	skipz
  3093  13B0  2BAC               	goto	u4485
  3094  13B1  1003               	clrc
  3095  13B2  0D22               	rlf	??_LCD_CMD,w
  3096  13B3  39F0               	andlw	240
  3097  13B4  160A  118A  23DC  160A  118A  	fcall	_LCD_Write_4Bit
  3098  13B9                     l326:
  3099  13B9  0008               	return
  3100  13BA                     __end_of_LCD_CMD:
  3101                           
  3102                           	psect	text13
  3103  13DC                     __ptext13:	
  3104 ;; *************** function _LCD_Write_4Bit *****************
  3105 ;; Defined at:
  3106 ;;		line 153 in file "I2C_Master.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  Nibble          1    wreg     unsigned char 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  Nibble          1    1[BANK0 ] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  1    wreg      void 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0, pclath, cstack
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         0       0       0       0       0
  3121 ;;      Locals:         0       1       0       0       0
  3122 ;;      Temps:          0       1       0       0       0
  3123 ;;      Totals:         0       2       0       0       0
  3124 ;;Total ram usage:        2 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; Hardware stack levels required when called: 4
  3127 ;; This function calls:
  3128 ;;		_IO_Expander_Write
  3129 ;; This function is called by:
  3130 ;;		_LCD_CMD
  3131 ;;		_LCD_Write_Char
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           
  3136                           ;psect for function _LCD_Write_4Bit
  3137  13DC                     _LCD_Write_4Bit:
  3138                           
  3139                           ;incstack = 0
  3140                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  3141                           ;LCD_Write_4Bit@Nibble stored from wreg
  3142  13DC  1283               	bcf	3,5	;RP0=0, select bank0
  3143  13DD  1303               	bcf	3,6	;RP1=0, select bank0
  3144  13DE  00A1               	movwf	LCD_Write_4Bit@Nibble
  3145  13DF                     l3321:
  3146                           
  3147                           ;I2C_Master.c: 153: void LCD_Write_4Bit(unsigned char Nibble);I2C_Master.c: 154: {;I2C_M
      +                          aster.c: 156:   Nibble |= RS;
  3148  13DF  1683               	bsf	3,5	;RP0=1, select bank1
  3149  13E0  1303               	bcf	3,6	;RP1=0, select bank1
  3150  13E1  082F               	movf	_RS^(0+128),w
  3151  13E2  1283               	bcf	3,5	;RP0=0, select bank0
  3152  13E3  1303               	bcf	3,6	;RP1=0, select bank0
  3153  13E4  00A0               	movwf	??_LCD_Write_4Bit
  3154  13E5  0820               	movf	??_LCD_Write_4Bit,w
  3155  13E6  04A1               	iorwf	LCD_Write_4Bit@Nibble,f
  3156  13E7                     l3323:
  3157                           
  3158                           ;I2C_Master.c: 157:   IO_Expander_Write(Nibble | 0x04);
  3159  13E7  0821               	movf	LCD_Write_4Bit@Nibble,w
  3160  13E8  3804               	iorlw	4
  3161  13E9  160A  118A  237B  160A  118A  	fcall	_IO_Expander_Write
  3162  13EE                     l3325:
  3163                           
  3164                           ;I2C_Master.c: 158:   IO_Expander_Write(Nibble & 0xFB);
  3165  13EE  1283               	bcf	3,5	;RP0=0, select bank0
  3166  13EF  1303               	bcf	3,6	;RP1=0, select bank0
  3167  13F0  0821               	movf	LCD_Write_4Bit@Nibble,w
  3168  13F1  39FB               	andlw	251
  3169  13F2  160A  118A  237B  160A  118A  	fcall	_IO_Expander_Write
  3170                           
  3171                           ;I2C_Master.c: 159:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  3172  13F7  3020               	movlw	32
  3173  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  3174  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  3175  13FA  00A0               	movwf	??_LCD_Write_4Bit
  3176  13FB                     u6027:
  3177  13FB  0BA0               	decfsz	??_LCD_Write_4Bit,f
  3178  13FC  2BFB               	goto	u6027
  3179  13FD  0000               	nop
  3180  13FE                     l323:
  3181  13FE  0008               	return
  3182  13FF                     __end_of_LCD_Write_4Bit:
  3183                           
  3184                           	psect	text14
  3185  137B                     __ptext14:	
  3186 ;; *************** function _IO_Expander_Write *****************
  3187 ;; Defined at:
  3188 ;;		line 145 in file "I2C_Master.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  Data            1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  Data            1    5[COMMON] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      void 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         1       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         1       0       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 3
  3209 ;; This function calls:
  3210 ;;		_I2C_Master_Start
  3211 ;;		_I2C_Master_Stop
  3212 ;;		_I2C_Master_Write
  3213 ;; This function is called by:
  3214 ;;		_LCD_Init
  3215 ;;		_LCD_Write_4Bit
  3216 ;;		_Backlight
  3217 ;;		_noBacklight
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           
  3222                           ;psect for function _IO_Expander_Write
  3223  137B                     _IO_Expander_Write:
  3224                           
  3225                           ;incstack = 0
  3226                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  3227                           ;IO_Expander_Write@Data stored from wreg
  3228  137B  00F5               	movwf	IO_Expander_Write@Data
  3229  137C                     l3319:
  3230                           
  3231                           ;I2C_Master.c: 145: void IO_Expander_Write(unsigned char Data);I2C_Master.c: 146: {;I2C_
      +                          Master.c: 147:   I2C_Master_Start();
  3232  137C  160A  118A  2311  160A  118A  	fcall	_I2C_Master_Start
  3233                           
  3234                           ;I2C_Master.c: 148:   I2C_Master_Write(i2c_add);
  3235  1381  1683               	bsf	3,5	;RP0=1, select bank1
  3236  1382  1303               	bcf	3,6	;RP1=0, select bank1
  3237  1383  082E               	movf	_i2c_add^(0+128),w
  3238  1384  160A  118A  233D  160A  118A  	fcall	_I2C_Master_Write
  3239                           
  3240                           ;I2C_Master.c: 149:   I2C_Master_Write(Data | BackLight_State);
  3241  1389  0875               	movf	IO_Expander_Write@Data,w
  3242  138A  1683               	bsf	3,5	;RP0=1, select bank1
  3243  138B  1303               	bcf	3,6	;RP1=0, select bank1
  3244  138C  0468               	iorwf	_BackLight_State^(0+128),w
  3245  138D  160A  118A  233D  160A  118A  	fcall	_I2C_Master_Write
  3246                           
  3247                           ;I2C_Master.c: 150:   I2C_Master_Stop();
  3248  1392  160A  118A  231A  160A  118A  	fcall	_I2C_Master_Stop
  3249  1397                     l320:
  3250  1397  0008               	return
  3251  1398                     __end_of_IO_Expander_Write:
  3252                           
  3253                           	psect	text15
  3254  0037                     __ptext15:	
  3255 ;; *************** function _ADC_convert *****************
  3256 ;; Defined at:
  3257 ;;		line 308 in file "Master_PIC.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;  data            1    wreg     PTR unsigned char 
  3260 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3261 ;;  a               4   63[BANK0 ] float 
  3262 ;;  place           2   67[BANK0 ] int 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  data            1    4[BANK1 ] PTR unsigned char 
  3265 ;;		 -> converted03(10), converted02(10), converted01(10), 
  3266 ;;  x               4    5[BANK1 ] float 
  3267 ;;  mu              2   13[BANK1 ] int 
  3268 ;;  digits          2   11[BANK1 ] int 
  3269 ;;  i               2    9[BANK1 ] int 
  3270 ;;  j               2    2[BANK1 ] int 
  3271 ;;  temp            2    0[BANK1 ] int 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      void 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       6       0       0       0
  3282 ;;      Locals:         0       0      15       0       0
  3283 ;;      Temps:          0       2       0       0       0
  3284 ;;      Totals:         0       8      15       0       0
  3285 ;;Total ram usage:       23 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; Hardware stack levels required when called: 3
  3288 ;; This function calls:
  3289 ;;		___awdiv
  3290 ;;		___fldiv
  3291 ;;		___flge
  3292 ;;		___flmul
  3293 ;;		___flsub
  3294 ;;		___fltol
  3295 ;;		___wmul
  3296 ;;		___xxtofl
  3297 ;; This function is called by:
  3298 ;;		_LCD_Send
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _ADC_convert
  3304  0037                     _ADC_convert:
  3305                           
  3306                           ;incstack = 0
  3307                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3308                           ;ADC_convert@data stored from wreg
  3309  0037  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0038  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0039  00D9               	movwf	ADC_convert@data^(0+128)
  3312  003A                     l4099:
  3313                           
  3314                           ;Master_PIC.c: 308: void ADC_convert(char *data,float a, int place);Master_PIC.c: 309: {
      +                          ;Master_PIC.c: 310:      int temp=a;
  3315  003A  1283               	bcf	3,5	;RP0=0, select bank0
  3316  003B  1303               	bcf	3,6	;RP1=0, select bank0
  3317  003C  0862               	movf	ADC_convert@a+3,w
  3318  003D  00A3               	movwf	___fltol@f1+3
  3319  003E  0861               	movf	ADC_convert@a+2,w
  3320  003F  00A2               	movwf	___fltol@f1+2
  3321  0040  0860               	movf	ADC_convert@a+1,w
  3322  0041  00A1               	movwf	___fltol@f1+1
  3323  0042  085F               	movf	ADC_convert@a,w
  3324  0043  00A0               	movwf	___fltol@f1
  3325  0044  160A  118A  26E9  120A  118A  	fcall	___fltol
  3326  0049  1283               	bcf	3,5	;RP0=0, select bank0
  3327  004A  1303               	bcf	3,6	;RP1=0, select bank0
  3328  004B  0821               	movf	?___fltol+1,w
  3329  004C  1683               	bsf	3,5	;RP0=1, select bank1
  3330  004D  1303               	bcf	3,6	;RP1=0, select bank1
  3331  004E  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  3332  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0051  0820               	movf	?___fltol,w
  3335  0052  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0053  1303               	bcf	3,6	;RP1=0, select bank1
  3337  0054  00D5               	movwf	ADC_convert@temp^(0+128)
  3338  0055                     l4101:
  3339  0055                     l4103:
  3340                           
  3341                           ;Master_PIC.c: 312:      int digits=0;
  3342  0055  01E0               	clrf	ADC_convert@digits^(0+128)
  3343  0056  01E1               	clrf	(ADC_convert@digits+1)^(0+128)
  3344  0057                     l4105:
  3345                           
  3346                           ;Master_PIC.c: 313:      int i=0,mu=1;
  3347  0057  01DE               	clrf	ADC_convert@i^(0+128)
  3348  0058  01DF               	clrf	(ADC_convert@i+1)^(0+128)
  3349  0059                     l4107:
  3350  0059  3001               	movlw	1
  3351  005A  00E2               	movwf	ADC_convert@mu^(0+128)
  3352  005B  3000               	movlw	0
  3353  005C  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3354  005D                     l4109:
  3355  005D                     l4111:
  3356                           
  3357                           ;Master_PIC.c: 315:      if(a<0)
  3358  005D  1283               	bcf	3,5	;RP0=0, select bank0
  3359  005E  1303               	bcf	3,6	;RP1=0, select bank0
  3360  005F  0862               	movf	ADC_convert@a+3,w
  3361  0060  00A3               	movwf	___flge@ff1+3
  3362  0061  0861               	movf	ADC_convert@a+2,w
  3363  0062  00A2               	movwf	___flge@ff1+2
  3364  0063  0860               	movf	ADC_convert@a+1,w
  3365  0064  00A1               	movwf	___flge@ff1+1
  3366  0065  085F               	movf	ADC_convert@a,w
  3367  0066  00A0               	movwf	___flge@ff1
  3368  0067  3000               	movlw	0
  3369  0068  00A7               	movwf	___flge@ff2+3
  3370  0069  3000               	movlw	0
  3371  006A  00A6               	movwf	___flge@ff2+2
  3372  006B  3000               	movlw	0
  3373  006C  00A5               	movwf	___flge@ff2+1
  3374  006D  3000               	movlw	0
  3375  006E  00A4               	movwf	___flge@ff2
  3376  006F  120A  158A  2062  120A  118A  	fcall	___flge
  3377  0074  1803               	btfsc	3,0
  3378  0075  2877               	goto	u5731
  3379  0076  2878               	goto	u5730
  3380  0077                     u5731:
  3381  0077  28D6               	goto	l4123
  3382  0078                     u5730:
  3383  0078                     l4113:
  3384                           
  3385                           ;Master_PIC.c: 316:      {;Master_PIC.c: 317:             a=a*-1;
  3386  0078  30BF               	movlw	191
  3387  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3388  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3389  007B  00C8               	movwf	___flmul@b+3
  3390  007C  3080               	movlw	128
  3391  007D  00C7               	movwf	___flmul@b+2
  3392  007E  3000               	movlw	0
  3393  007F  00C6               	movwf	___flmul@b+1
  3394  0080  3000               	movlw	0
  3395  0081  00C5               	movwf	___flmul@b
  3396  0082  0862               	movf	ADC_convert@a+3,w
  3397  0083  00CC               	movwf	___flmul@a+3
  3398  0084  0861               	movf	ADC_convert@a+2,w
  3399  0085  00CB               	movwf	___flmul@a+2
  3400  0086  0860               	movf	ADC_convert@a+1,w
  3401  0087  00CA               	movwf	___flmul@a+1
  3402  0088  085F               	movf	ADC_convert@a,w
  3403  0089  00C9               	movwf	___flmul@a
  3404  008A  120A  118A  2479  120A  118A  	fcall	___flmul
  3405  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0090  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0091  0848               	movf	?___flmul+3,w
  3408  0092  00E2               	movwf	ADC_convert@a+3
  3409  0093  0847               	movf	?___flmul+2,w
  3410  0094  00E1               	movwf	ADC_convert@a+2
  3411  0095  0846               	movf	?___flmul+1,w
  3412  0096  00E0               	movwf	ADC_convert@a+1
  3413  0097  0845               	movf	?___flmul,w
  3414  0098  00DF               	movwf	ADC_convert@a
  3415  0099                     l4115:
  3416                           
  3417                           ;Master_PIC.c: 318:             data[i]='-';
  3418  0099  302D               	movlw	45
  3419  009A  00E5               	movwf	??_ADC_convert
  3420  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3421  009C  1303               	bcf	3,6	;RP1=0, select bank1
  3422  009D  0859               	movf	ADC_convert@data^(0+128),w
  3423  009E  0084               	movwf	4
  3424  009F  1283               	bcf	3,5	;RP0=0, select bank0
  3425  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  3426  00A1  0865               	movf	??_ADC_convert,w
  3427  00A2  1383               	bcf	3,7	;select IRP bank0
  3428  00A3  0080               	movwf	0
  3429  00A4                     l4117:
  3430                           
  3431                           ;Master_PIC.c: 319:             i++;
  3432  00A4  3001               	movlw	1
  3433  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  3434  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  3435  00A7  07DE               	addwf	ADC_convert@i^(0+128),f
  3436  00A8  1803               	skipnc
  3437  00A9  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3438  00AA  3000               	movlw	0
  3439  00AB  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3440  00AC  28D6               	goto	l4123
  3441  00AD                     l4119:
  3442                           
  3443                           ;Master_PIC.c: 323:      {;Master_PIC.c: 324:          temp=temp/10;
  3444  00AD  300A               	movlw	10
  3445  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  3446  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  3447  00B0  00A0               	movwf	___awdiv@divisor
  3448  00B1  3000               	movlw	0
  3449  00B2  00A1               	movwf	___awdiv@divisor+1
  3450  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3451  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  3452  00B5  0856               	movf	(ADC_convert@temp+1)^(0+128),w
  3453  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3454  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3455  00B8  00A3               	movwf	___awdiv@dividend+1
  3456  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3457  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  3458  00BB  0855               	movf	ADC_convert@temp^(0+128),w
  3459  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3460  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3461  00BE  00A2               	movwf	___awdiv@dividend
  3462  00BF  160A  118A  25A6  120A  118A  	fcall	___awdiv
  3463  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3464  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3465  00C6  0821               	movf	?___awdiv+1,w
  3466  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  3467  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  3468  00C9  00D6               	movwf	(ADC_convert@temp+1)^(0+128)
  3469  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3470  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3471  00CC  0820               	movf	?___awdiv,w
  3472  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3473  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3474  00CF  00D5               	movwf	ADC_convert@temp^(0+128)
  3475  00D0                     l4121:
  3476                           
  3477                           ;Master_PIC.c: 325:          digits++;
  3478  00D0  3001               	movlw	1
  3479  00D1  07E0               	addwf	ADC_convert@digits^(0+128),f
  3480  00D2  1803               	skipnc
  3481  00D3  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  3482  00D4  3000               	movlw	0
  3483  00D5  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  3484  00D6                     l4123:
  3485                           
  3486                           ;Master_PIC.c: 322:      while(temp!=0)
  3487  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3488  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3489  00D8  0855               	movf	ADC_convert@temp^(0+128),w
  3490  00D9  0456               	iorwf	(ADC_convert@temp+1)^(0+128),w
  3491  00DA  1D03               	btfss	3,2
  3492  00DB  28DD               	goto	u5741
  3493  00DC  28DE               	goto	u5740
  3494  00DD                     u5741:
  3495  00DD  28AD               	goto	l4119
  3496  00DE                     u5740:
  3497  00DE  2A16               	goto	l4147
  3498  00DF                     l4125:
  3499                           
  3500                           ;Master_PIC.c: 328:      {;Master_PIC.c: 329:          if(digits==1)mu=1;
  3501  00DF  0360               	decf	ADC_convert@digits^(0+128),w
  3502  00E0  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3503  00E1  1D03               	btfss	3,2
  3504  00E2  28E4               	goto	u5751
  3505  00E3  28E5               	goto	u5750
  3506  00E4                     u5751:
  3507  00E4  28EA               	goto	l4129
  3508  00E5                     u5750:
  3509  00E5                     l4127:
  3510  00E5  3001               	movlw	1
  3511  00E6  00E2               	movwf	ADC_convert@mu^(0+128)
  3512  00E7  3000               	movlw	0
  3513  00E8  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3514  00E9  292C               	goto	l4137
  3515  00EA                     l4129:
  3516  00EA  3002               	movlw	2
  3517  00EB  00D7               	movwf	ADC_convert@j^(0+128)
  3518  00EC  3000               	movlw	0
  3519  00ED  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  3520  00EE  2916               	goto	l4135
  3521  00EF                     l4131:
  3522  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  3523  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  3524  00F1  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3525  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  3526  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  3527  00F4  00AA               	movwf	___wmul@multiplier+1
  3528  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  3529  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  3530  00F7  0862               	movf	ADC_convert@mu^(0+128),w
  3531  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  3532  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  3533  00FA  00A9               	movwf	___wmul@multiplier
  3534  00FB  300A               	movlw	10
  3535  00FC  00AB               	movwf	___wmul@multiplicand
  3536  00FD  3000               	movlw	0
  3537  00FE  00AC               	movwf	___wmul@multiplicand+1
  3538  00FF  160A  118A  2422  120A  118A  	fcall	___wmul
  3539  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3540  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3541  0106  082A               	movf	?___wmul+1,w
  3542  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3543  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3544  0109  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  3545  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3546  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3547  010C  0829               	movf	?___wmul,w
  3548  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3549  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3550  010F  00E2               	movwf	ADC_convert@mu^(0+128)
  3551  0110                     l4133:
  3552  0110  3001               	movlw	1
  3553  0111  07D7               	addwf	ADC_convert@j^(0+128),f
  3554  0112  1803               	skipnc
  3555  0113  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  3556  0114  3000               	movlw	0
  3557  0115  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  3558  0116                     l4135:
  3559  0116  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  3560  0117  3A80               	xorlw	128
  3561  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3563  011A  00E5               	movwf	??_ADC_convert
  3564  011B  1683               	bsf	3,5	;RP0=1, select bank1
  3565  011C  1303               	bcf	3,6	;RP1=0, select bank1
  3566  011D  0858               	movf	(ADC_convert@j+1)^(0+128),w
  3567  011E  3A80               	xorlw	128
  3568  011F  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0120  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0121  0265               	subwf	??_ADC_convert,w
  3571  0122  1D03               	skipz
  3572  0123  2928               	goto	u5765
  3573  0124  1683               	bsf	3,5	;RP0=1, select bank1
  3574  0125  1303               	bcf	3,6	;RP1=0, select bank1
  3575  0126  0857               	movf	ADC_convert@j^(0+128),w
  3576  0127  0260               	subwf	ADC_convert@digits^(0+128),w
  3577  0128                     u5765:
  3578  0128  1803               	skipnc
  3579  0129  292B               	goto	u5761
  3580  012A  292C               	goto	u5760
  3581  012B                     u5761:
  3582  012B  28EF               	goto	l4131
  3583  012C                     u5760:
  3584  012C                     l4137:
  3585                           
  3586                           ;Master_PIC.c: 332:          x=a/mu;
  3587  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3588  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3589  012E  0862               	movf	ADC_convert@mu^(0+128),w
  3590  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0131  00AF               	movwf	___xxtofl@val
  3593  0132  1683               	bsf	3,5	;RP0=1, select bank1
  3594  0133  1303               	bcf	3,6	;RP1=0, select bank1
  3595  0134  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3596  0135  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0136  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0137  00B0               	movwf	___xxtofl@val+1
  3599  0138  3000               	movlw	0
  3600  0139  1BB0               	btfsc	___xxtofl@val+1,7
  3601  013A  30FF               	movlw	255
  3602  013B  00B1               	movwf	___xxtofl@val+2
  3603  013C  00B2               	movwf	___xxtofl@val+3
  3604  013D  3001               	movlw	1
  3605  013E  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3606  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3607  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3608  0145  0832               	movf	?___xxtofl+3,w
  3609  0146  00C0               	movwf	___fldiv@a+3
  3610  0147  0831               	movf	?___xxtofl+2,w
  3611  0148  00BF               	movwf	___fldiv@a+2
  3612  0149  0830               	movf	?___xxtofl+1,w
  3613  014A  00BE               	movwf	___fldiv@a+1
  3614  014B  082F               	movf	?___xxtofl,w
  3615  014C  00BD               	movwf	___fldiv@a
  3616  014D  0862               	movf	ADC_convert@a+3,w
  3617  014E  00C4               	movwf	___fldiv@b+3
  3618  014F  0861               	movf	ADC_convert@a+2,w
  3619  0150  00C3               	movwf	___fldiv@b+2
  3620  0151  0860               	movf	ADC_convert@a+1,w
  3621  0152  00C2               	movwf	___fldiv@b+1
  3622  0153  085F               	movf	ADC_convert@a,w
  3623  0154  00C1               	movwf	___fldiv@b
  3624  0155  120A  158A  239B  120A  118A  	fcall	___fldiv
  3625  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3626  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3627  015C  0840               	movf	?___fldiv+3,w
  3628  015D  1683               	bsf	3,5	;RP0=1, select bank1
  3629  015E  1303               	bcf	3,6	;RP1=0, select bank1
  3630  015F  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  3631  0160  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0161  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0162  083F               	movf	?___fldiv+2,w
  3634  0163  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0164  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0165  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  3637  0166  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0167  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0168  083E               	movf	?___fldiv+1,w
  3640  0169  1683               	bsf	3,5	;RP0=1, select bank1
  3641  016A  1303               	bcf	3,6	;RP1=0, select bank1
  3642  016B  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  3643  016C  1283               	bcf	3,5	;RP0=0, select bank0
  3644  016D  1303               	bcf	3,6	;RP1=0, select bank0
  3645  016E  083D               	movf	?___fldiv,w
  3646  016F  1683               	bsf	3,5	;RP0=1, select bank1
  3647  0170  1303               	bcf	3,6	;RP1=0, select bank1
  3648  0171  00DA               	movwf	ADC_convert@x^(0+128)
  3649                           
  3650                           ;Master_PIC.c: 333:          a=a-((int)x*mu);
  3651  0172  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3652  0173  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0174  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0175  00AC               	movwf	___wmul@multiplicand+1
  3655  0176  1683               	bsf	3,5	;RP0=1, select bank1
  3656  0177  1303               	bcf	3,6	;RP1=0, select bank1
  3657  0178  0862               	movf	ADC_convert@mu^(0+128),w
  3658  0179  1283               	bcf	3,5	;RP0=0, select bank0
  3659  017A  1303               	bcf	3,6	;RP1=0, select bank0
  3660  017B  00AB               	movwf	___wmul@multiplicand
  3661  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3662  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3663  017E  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3664  017F  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0180  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0181  00A3               	movwf	___fltol@f1+3
  3667  0182  1683               	bsf	3,5	;RP0=1, select bank1
  3668  0183  1303               	bcf	3,6	;RP1=0, select bank1
  3669  0184  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3670  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0187  00A2               	movwf	___fltol@f1+2
  3673  0188  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0189  1303               	bcf	3,6	;RP1=0, select bank1
  3675  018A  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3676  018B  1283               	bcf	3,5	;RP0=0, select bank0
  3677  018C  1303               	bcf	3,6	;RP1=0, select bank0
  3678  018D  00A1               	movwf	___fltol@f1+1
  3679  018E  1683               	bsf	3,5	;RP0=1, select bank1
  3680  018F  1303               	bcf	3,6	;RP1=0, select bank1
  3681  0190  085A               	movf	ADC_convert@x^(0+128),w
  3682  0191  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0192  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0193  00A0               	movwf	___fltol@f1
  3685  0194  160A  118A  26E9  120A  118A  	fcall	___fltol
  3686  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3687  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3688  019B  0821               	movf	?___fltol+1,w
  3689  019C  00AA               	movwf	___wmul@multiplier+1
  3690  019D  0820               	movf	?___fltol,w
  3691  019E  00A9               	movwf	___wmul@multiplier
  3692  019F  160A  118A  2422  120A  118A  	fcall	___wmul
  3693  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3694  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3695  01A6  0829               	movf	?___wmul,w
  3696  01A7  00AF               	movwf	___xxtofl@val
  3697  01A8  082A               	movf	?___wmul+1,w
  3698  01A9  00B0               	movwf	___xxtofl@val+1
  3699  01AA  3000               	movlw	0
  3700  01AB  1BB0               	btfsc	___xxtofl@val+1,7
  3701  01AC  30FF               	movlw	255
  3702  01AD  00B1               	movwf	___xxtofl@val+2
  3703  01AE  00B2               	movwf	___xxtofl@val+3
  3704  01AF  3001               	movlw	1
  3705  01B0  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3706  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3707  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3708  01B7  0832               	movf	?___xxtofl+3,w
  3709  01B8  00C0               	movwf	___flsub@a+3
  3710  01B9  0831               	movf	?___xxtofl+2,w
  3711  01BA  00BF               	movwf	___flsub@a+2
  3712  01BB  0830               	movf	?___xxtofl+1,w
  3713  01BC  00BE               	movwf	___flsub@a+1
  3714  01BD  082F               	movf	?___xxtofl,w
  3715  01BE  00BD               	movwf	___flsub@a
  3716  01BF  0862               	movf	ADC_convert@a+3,w
  3717  01C0  00C4               	movwf	___flsub@b+3
  3718  01C1  0861               	movf	ADC_convert@a+2,w
  3719  01C2  00C3               	movwf	___flsub@b+2
  3720  01C3  0860               	movf	ADC_convert@a+1,w
  3721  01C4  00C2               	movwf	___flsub@b+1
  3722  01C5  085F               	movf	ADC_convert@a,w
  3723  01C6  00C1               	movwf	___flsub@b
  3724  01C7  120A  118A  27DA  120A  118A  	fcall	___flsub
  3725  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3726  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3727  01CE  0840               	movf	?___flsub+3,w
  3728  01CF  00E2               	movwf	ADC_convert@a+3
  3729  01D0  083F               	movf	?___flsub+2,w
  3730  01D1  00E1               	movwf	ADC_convert@a+2
  3731  01D2  083E               	movf	?___flsub+1,w
  3732  01D3  00E0               	movwf	ADC_convert@a+1
  3733  01D4  083D               	movf	?___flsub,w
  3734  01D5  00DF               	movwf	ADC_convert@a
  3735  01D6                     l4139:
  3736                           
  3737                           ;Master_PIC.c: 334:          data[i]=0x30+((int)x);
  3738  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  3739  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  3740  01D8  085D               	movf	(ADC_convert@x+3)^(0+128),w
  3741  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3742  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3743  01DB  00A3               	movwf	___fltol@f1+3
  3744  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3745  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3746  01DE  085C               	movf	(ADC_convert@x+2)^(0+128),w
  3747  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3748  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3749  01E1  00A2               	movwf	___fltol@f1+2
  3750  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  3751  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  3752  01E4  085B               	movf	(ADC_convert@x+1)^(0+128),w
  3753  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3754  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3755  01E7  00A1               	movwf	___fltol@f1+1
  3756  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  3757  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  3758  01EA  085A               	movf	ADC_convert@x^(0+128),w
  3759  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  3760  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  3761  01ED  00A0               	movwf	___fltol@f1
  3762  01EE  160A  118A  26E9  120A  118A  	fcall	___fltol
  3763  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  3764  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  3765  01F5  0820               	movf	?___fltol,w
  3766  01F6  3E30               	addlw	48
  3767  01F7  00E5               	movwf	??_ADC_convert
  3768  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3769  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  3770  01FA  085E               	movf	ADC_convert@i^(0+128),w
  3771  01FB  0759               	addwf	ADC_convert@data^(0+128),w
  3772  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3773  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3774  01FE  00E6               	movwf	??_ADC_convert+1
  3775  01FF  0866               	movf	??_ADC_convert+1,w
  3776  0200  0084               	movwf	4
  3777  0201  0865               	movf	??_ADC_convert,w
  3778  0202  1383               	bcf	3,7	;select IRP bank0
  3779  0203  0080               	movwf	0
  3780  0204                     l4141:
  3781                           
  3782                           ;Master_PIC.c: 335:          i++;
  3783  0204  3001               	movlw	1
  3784  0205  1683               	bsf	3,5	;RP0=1, select bank1
  3785  0206  1303               	bcf	3,6	;RP1=0, select bank1
  3786  0207  07DE               	addwf	ADC_convert@i^(0+128),f
  3787  0208  1803               	skipnc
  3788  0209  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3789  020A  3000               	movlw	0
  3790  020B  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3791  020C                     l4143:
  3792                           
  3793                           ;Master_PIC.c: 336:          digits--;
  3794  020C  30FF               	movlw	255
  3795  020D  07E0               	addwf	ADC_convert@digits^(0+128),f
  3796  020E  1803               	skipnc
  3797  020F  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  3798  0210  30FF               	movlw	255
  3799  0211  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  3800  0212                     l4145:
  3801                           
  3802                           ;Master_PIC.c: 337:          mu=1;
  3803  0212  3001               	movlw	1
  3804  0213  00E2               	movwf	ADC_convert@mu^(0+128)
  3805  0214  3000               	movlw	0
  3806  0215  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  3807  0216                     l4147:
  3808                           
  3809                           ;Master_PIC.c: 327:      while(digits!=0)
  3810  0216  0860               	movf	ADC_convert@digits^(0+128),w
  3811  0217  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3812  0218  1D03               	btfss	3,2
  3813  0219  2A1B               	goto	u5771
  3814  021A  2A1C               	goto	u5770
  3815  021B                     u5771:
  3816  021B  28DF               	goto	l4125
  3817  021C                     u5770:
  3818  021C                     l4149:
  3819                           
  3820                           ;Master_PIC.c: 340:      data[i]='.';
  3821  021C  302E               	movlw	46
  3822  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3823  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3824  021F  00E5               	movwf	??_ADC_convert
  3825  0220  1683               	bsf	3,5	;RP0=1, select bank1
  3826  0221  1303               	bcf	3,6	;RP1=0, select bank1
  3827  0222  085E               	movf	ADC_convert@i^(0+128),w
  3828  0223  0759               	addwf	ADC_convert@data^(0+128),w
  3829  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0226  00E6               	movwf	??_ADC_convert+1
  3832  0227  0866               	movf	??_ADC_convert+1,w
  3833  0228  0084               	movwf	4
  3834  0229  0865               	movf	??_ADC_convert,w
  3835  022A  1383               	bcf	3,7	;select IRP bank0
  3836  022B  0080               	movwf	0
  3837  022C                     l4151:
  3838                           
  3839                           ;Master_PIC.c: 341:      i++;
  3840  022C  3001               	movlw	1
  3841  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3842  022E  1303               	bcf	3,6	;RP1=0, select bank1
  3843  022F  07DE               	addwf	ADC_convert@i^(0+128),f
  3844  0230  1803               	skipnc
  3845  0231  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  3846  0232  3000               	movlw	0
  3847  0233  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  3848  0234                     l4153:
  3849  0234                     l4155:
  3850                           
  3851                           ;Master_PIC.c: 343:      for(j=1;j<=place;j++)mu=mu*10;
  3852  0234  3001               	movlw	1
  3853  0235  00D7               	movwf	ADC_convert@j^(0+128)
  3854  0236  3000               	movlw	0
  3855  0237  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  3856  0238  2A60               	goto	l4161
  3857  0239                     l4157:
  3858  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3859  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3860  023B  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3861  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3862  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3863  023E  00AA               	movwf	___wmul@multiplier+1
  3864  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3865  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3866  0241  0862               	movf	ADC_convert@mu^(0+128),w
  3867  0242  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0243  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0244  00A9               	movwf	___wmul@multiplier
  3870  0245  300A               	movlw	10
  3871  0246  00AB               	movwf	___wmul@multiplicand
  3872  0247  3000               	movlw	0
  3873  0248  00AC               	movwf	___wmul@multiplicand+1
  3874  0249  160A  118A  2422  120A  118A  	fcall	___wmul
  3875  024E  1283               	bcf	3,5	;RP0=0, select bank0
  3876  024F  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0250  082A               	movf	?___wmul+1,w
  3878  0251  1683               	bsf	3,5	;RP0=1, select bank1
  3879  0252  1303               	bcf	3,6	;RP1=0, select bank1
  3880  0253  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  3881  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3882  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3883  0256  0829               	movf	?___wmul,w
  3884  0257  1683               	bsf	3,5	;RP0=1, select bank1
  3885  0258  1303               	bcf	3,6	;RP1=0, select bank1
  3886  0259  00E2               	movwf	ADC_convert@mu^(0+128)
  3887  025A                     l4159:
  3888  025A  3001               	movlw	1
  3889  025B  07D7               	addwf	ADC_convert@j^(0+128),f
  3890  025C  1803               	skipnc
  3891  025D  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  3892  025E  3000               	movlw	0
  3893  025F  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  3894  0260                     l4161:
  3895  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3896  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3897  0262  0864               	movf	ADC_convert@place+1,w
  3898  0263  3A80               	xorlw	128
  3899  0264  00E5               	movwf	??_ADC_convert
  3900  0265  1683               	bsf	3,5	;RP0=1, select bank1
  3901  0266  1303               	bcf	3,6	;RP1=0, select bank1
  3902  0267  0858               	movf	(ADC_convert@j+1)^(0+128),w
  3903  0268  3A80               	xorlw	128
  3904  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3905  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3906  026B  0265               	subwf	??_ADC_convert,w
  3907  026C  1D03               	skipz
  3908  026D  2A74               	goto	u5785
  3909  026E  1683               	bsf	3,5	;RP0=1, select bank1
  3910  026F  1303               	bcf	3,6	;RP1=0, select bank1
  3911  0270  0857               	movf	ADC_convert@j^(0+128),w
  3912  0271  1283               	bcf	3,5	;RP0=0, select bank0
  3913  0272  1303               	bcf	3,6	;RP1=0, select bank0
  3914  0273  0263               	subwf	ADC_convert@place,w
  3915  0274                     u5785:
  3916  0274  1803               	skipnc
  3917  0275  2A77               	goto	u5781
  3918  0276  2A78               	goto	u5780
  3919  0277                     u5781:
  3920  0277  2A39               	goto	l4157
  3921  0278                     u5780:
  3922  0278                     l4163:
  3923                           
  3924                           ;Master_PIC.c: 344:      x=(a-(int)a)*mu;
  3925  0278  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0279  1303               	bcf	3,6	;RP1=0, select bank1
  3927  027A  0862               	movf	ADC_convert@mu^(0+128),w
  3928  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3929  027C  1303               	bcf	3,6	;RP1=0, select bank0
  3930  027D  00AF               	movwf	___xxtofl@val
  3931  027E  1683               	bsf	3,5	;RP0=1, select bank1
  3932  027F  1303               	bcf	3,6	;RP1=0, select bank1
  3933  0280  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  3934  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0282  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0283  00B0               	movwf	___xxtofl@val+1
  3937  0284  3000               	movlw	0
  3938  0285  1BB0               	btfsc	___xxtofl@val+1,7
  3939  0286  30FF               	movlw	255
  3940  0287  00B1               	movwf	___xxtofl@val+2
  3941  0288  00B2               	movwf	___xxtofl@val+3
  3942  0289  3001               	movlw	1
  3943  028A  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3944  028F  1283               	bcf	3,5	;RP0=0, select bank0
  3945  0290  1303               	bcf	3,6	;RP1=0, select bank0
  3946  0291  0832               	movf	?___xxtofl+3,w
  3947  0292  00C8               	movwf	___flmul@b+3
  3948  0293  0831               	movf	?___xxtofl+2,w
  3949  0294  00C7               	movwf	___flmul@b+2
  3950  0295  0830               	movf	?___xxtofl+1,w
  3951  0296  00C6               	movwf	___flmul@b+1
  3952  0297  082F               	movf	?___xxtofl,w
  3953  0298  00C5               	movwf	___flmul@b
  3954  0299  0862               	movf	ADC_convert@a+3,w
  3955  029A  00A3               	movwf	___fltol@f1+3
  3956  029B  0861               	movf	ADC_convert@a+2,w
  3957  029C  00A2               	movwf	___fltol@f1+2
  3958  029D  0860               	movf	ADC_convert@a+1,w
  3959  029E  00A1               	movwf	___fltol@f1+1
  3960  029F  085F               	movf	ADC_convert@a,w
  3961  02A0  00A0               	movwf	___fltol@f1
  3962  02A1  160A  118A  26E9  120A  118A  	fcall	___fltol
  3963  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3964  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3965  02A8  0820               	movf	?___fltol,w
  3966  02A9  00AF               	movwf	___xxtofl@val
  3967  02AA  0821               	movf	?___fltol+1,w
  3968  02AB  00B0               	movwf	___xxtofl@val+1
  3969  02AC  3000               	movlw	0
  3970  02AD  1BB0               	btfsc	___xxtofl@val+1,7
  3971  02AE  30FF               	movlw	255
  3972  02AF  00B1               	movwf	___xxtofl@val+2
  3973  02B0  00B2               	movwf	___xxtofl@val+3
  3974  02B1  3001               	movlw	1
  3975  02B2  120A  158A  2106  120A  118A  	fcall	___xxtofl
  3976  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  3977  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  3978  02B9  0832               	movf	?___xxtofl+3,w
  3979  02BA  00C0               	movwf	___flsub@a+3
  3980  02BB  0831               	movf	?___xxtofl+2,w
  3981  02BC  00BF               	movwf	___flsub@a+2
  3982  02BD  0830               	movf	?___xxtofl+1,w
  3983  02BE  00BE               	movwf	___flsub@a+1
  3984  02BF  082F               	movf	?___xxtofl,w
  3985  02C0  00BD               	movwf	___flsub@a
  3986  02C1  0862               	movf	ADC_convert@a+3,w
  3987  02C2  00C4               	movwf	___flsub@b+3
  3988  02C3  0861               	movf	ADC_convert@a+2,w
  3989  02C4  00C3               	movwf	___flsub@b+2
  3990  02C5  0860               	movf	ADC_convert@a+1,w
  3991  02C6  00C2               	movwf	___flsub@b+1
  3992  02C7  085F               	movf	ADC_convert@a,w
  3993  02C8  00C1               	movwf	___flsub@b
  3994  02C9  120A  118A  27DA  120A  118A  	fcall	___flsub
  3995  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3996  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3997  02D0  0840               	movf	?___flsub+3,w
  3998  02D1  00CC               	movwf	___flmul@a+3
  3999  02D2  083F               	movf	?___flsub+2,w
  4000  02D3  00CB               	movwf	___flmul@a+2
  4001  02D4  083E               	movf	?___flsub+1,w
  4002  02D5  00CA               	movwf	___flmul@a+1
  4003  02D6  083D               	movf	?___flsub,w
  4004  02D7  00C9               	movwf	___flmul@a
  4005  02D8  120A  118A  2479  120A  118A  	fcall	___flmul
  4006  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  4007  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  4008  02DF  0848               	movf	?___flmul+3,w
  4009  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  4010  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  4011  02E2  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  4012  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  4013  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  4014  02E5  0847               	movf	?___flmul+2,w
  4015  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  4016  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  4017  02E8  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  4018  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  4019  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  4020  02EB  0846               	movf	?___flmul+1,w
  4021  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  4022  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  4023  02EE  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  4024  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4025  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4026  02F1  0845               	movf	?___flmul,w
  4027  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  4028  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  4029  02F4  00DA               	movwf	ADC_convert@x^(0+128)
  4030  02F5                     l4165:
  4031                           
  4032                           ;Master_PIC.c: 345:      a=x;
  4033  02F5  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4034  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  4035  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  4036  02F8  00E2               	movwf	ADC_convert@a+3
  4037  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  4038  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  4039  02FB  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4040  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  4041  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  4042  02FE  00E1               	movwf	ADC_convert@a+2
  4043  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  4044  0300  1303               	bcf	3,6	;RP1=0, select bank1
  4045  0301  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4046  0302  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0303  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0304  00E0               	movwf	ADC_convert@a+1
  4049  0305  1683               	bsf	3,5	;RP0=1, select bank1
  4050  0306  1303               	bcf	3,6	;RP1=0, select bank1
  4051  0307  085A               	movf	ADC_convert@x^(0+128),w
  4052  0308  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0309  1303               	bcf	3,6	;RP1=0, select bank0
  4054  030A  00DF               	movwf	ADC_convert@a
  4055  030B                     l4167:
  4056  030B  0862               	movf	ADC_convert@a+3,w
  4057  030C  00A3               	movwf	___fltol@f1+3
  4058  030D  0861               	movf	ADC_convert@a+2,w
  4059  030E  00A2               	movwf	___fltol@f1+2
  4060  030F  0860               	movf	ADC_convert@a+1,w
  4061  0310  00A1               	movwf	___fltol@f1+1
  4062  0311  085F               	movf	ADC_convert@a,w
  4063  0312  00A0               	movwf	___fltol@f1
  4064  0313  160A  118A  26E9  120A  118A  	fcall	___fltol
  4065  0318                     l4169:
  4066  0318                     l4171:
  4067                           
  4068                           ;Master_PIC.c: 348:      mu=1;
  4069  0318  3001               	movlw	1
  4070  0319  1683               	bsf	3,5	;RP0=1, select bank1
  4071  031A  1303               	bcf	3,6	;RP1=0, select bank1
  4072  031B  00E2               	movwf	ADC_convert@mu^(0+128)
  4073  031C  3000               	movlw	0
  4074  031D  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4075  031E                     l4173:
  4076                           
  4077                           ;Master_PIC.c: 349:      digits=place;
  4078  031E  1283               	bcf	3,5	;RP0=0, select bank0
  4079  031F  1303               	bcf	3,6	;RP1=0, select bank0
  4080  0320  0864               	movf	ADC_convert@place+1,w
  4081  0321  1683               	bsf	3,5	;RP0=1, select bank1
  4082  0322  1303               	bcf	3,6	;RP1=0, select bank1
  4083  0323  00E1               	movwf	(ADC_convert@digits+1)^(0+128)
  4084  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4086  0326  0863               	movf	ADC_convert@place,w
  4087  0327  1683               	bsf	3,5	;RP0=1, select bank1
  4088  0328  1303               	bcf	3,6	;RP1=0, select bank1
  4089  0329  00E0               	movwf	ADC_convert@digits^(0+128)
  4090                           
  4091                           ;Master_PIC.c: 350:      while(digits!=0)
  4092  032A  2C62               	goto	l4197
  4093  032B                     l4175:
  4094                           
  4095                           ;Master_PIC.c: 351:      {;Master_PIC.c: 352:          if(digits==1)mu=1;
  4096  032B  0360               	decf	ADC_convert@digits^(0+128),w
  4097  032C  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4098  032D  1D03               	btfss	3,2
  4099  032E  2B30               	goto	u5791
  4100  032F  2B31               	goto	u5790
  4101  0330                     u5791:
  4102  0330  2B36               	goto	l4179
  4103  0331                     u5790:
  4104  0331                     l4177:
  4105  0331  3001               	movlw	1
  4106  0332  00E2               	movwf	ADC_convert@mu^(0+128)
  4107  0333  3000               	movlw	0
  4108  0334  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4109  0335  2B78               	goto	l4187
  4110  0336                     l4179:
  4111  0336  3002               	movlw	2
  4112  0337  00D7               	movwf	ADC_convert@j^(0+128)
  4113  0338  3000               	movlw	0
  4114  0339  00D8               	movwf	(ADC_convert@j^(0+128)+1)
  4115  033A  2B62               	goto	l4185
  4116  033B                     l4181:
  4117  033B  1683               	bsf	3,5	;RP0=1, select bank1
  4118  033C  1303               	bcf	3,6	;RP1=0, select bank1
  4119  033D  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4120  033E  1283               	bcf	3,5	;RP0=0, select bank0
  4121  033F  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0340  00AA               	movwf	___wmul@multiplier+1
  4123  0341  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0342  1303               	bcf	3,6	;RP1=0, select bank1
  4125  0343  0862               	movf	ADC_convert@mu^(0+128),w
  4126  0344  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0345  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0346  00A9               	movwf	___wmul@multiplier
  4129  0347  300A               	movlw	10
  4130  0348  00AB               	movwf	___wmul@multiplicand
  4131  0349  3000               	movlw	0
  4132  034A  00AC               	movwf	___wmul@multiplicand+1
  4133  034B  160A  118A  2422  120A  118A  	fcall	___wmul
  4134  0350  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0351  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0352  082A               	movf	?___wmul+1,w
  4137  0353  1683               	bsf	3,5	;RP0=1, select bank1
  4138  0354  1303               	bcf	3,6	;RP1=0, select bank1
  4139  0355  00E3               	movwf	(ADC_convert@mu+1)^(0+128)
  4140  0356  1283               	bcf	3,5	;RP0=0, select bank0
  4141  0357  1303               	bcf	3,6	;RP1=0, select bank0
  4142  0358  0829               	movf	?___wmul,w
  4143  0359  1683               	bsf	3,5	;RP0=1, select bank1
  4144  035A  1303               	bcf	3,6	;RP1=0, select bank1
  4145  035B  00E2               	movwf	ADC_convert@mu^(0+128)
  4146  035C                     l4183:
  4147  035C  3001               	movlw	1
  4148  035D  07D7               	addwf	ADC_convert@j^(0+128),f
  4149  035E  1803               	skipnc
  4150  035F  0AD8               	incf	(ADC_convert@j+1)^(0+128),f
  4151  0360  3000               	movlw	0
  4152  0361  07D8               	addwf	(ADC_convert@j+1)^(0+128),f
  4153  0362                     l4185:
  4154  0362  0861               	movf	(ADC_convert@digits+1)^(0+128),w
  4155  0363  3A80               	xorlw	128
  4156  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0366  00E5               	movwf	??_ADC_convert
  4159  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4160  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4161  0369  0858               	movf	(ADC_convert@j+1)^(0+128),w
  4162  036A  3A80               	xorlw	128
  4163  036B  1283               	bcf	3,5	;RP0=0, select bank0
  4164  036C  1303               	bcf	3,6	;RP1=0, select bank0
  4165  036D  0265               	subwf	??_ADC_convert,w
  4166  036E  1D03               	skipz
  4167  036F  2B74               	goto	u5805
  4168  0370  1683               	bsf	3,5	;RP0=1, select bank1
  4169  0371  1303               	bcf	3,6	;RP1=0, select bank1
  4170  0372  0857               	movf	ADC_convert@j^(0+128),w
  4171  0373  0260               	subwf	ADC_convert@digits^(0+128),w
  4172  0374                     u5805:
  4173  0374  1803               	skipnc
  4174  0375  2B77               	goto	u5801
  4175  0376  2B78               	goto	u5800
  4176  0377                     u5801:
  4177  0377  2B3B               	goto	l4181
  4178  0378                     u5800:
  4179  0378                     l4187:
  4180                           
  4181                           ;Master_PIC.c: 355:          x=a/mu;
  4182  0378  1683               	bsf	3,5	;RP0=1, select bank1
  4183  0379  1303               	bcf	3,6	;RP1=0, select bank1
  4184  037A  0862               	movf	ADC_convert@mu^(0+128),w
  4185  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4186  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4187  037D  00AF               	movwf	___xxtofl@val
  4188  037E  1683               	bsf	3,5	;RP0=1, select bank1
  4189  037F  1303               	bcf	3,6	;RP1=0, select bank1
  4190  0380  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4191  0381  1283               	bcf	3,5	;RP0=0, select bank0
  4192  0382  1303               	bcf	3,6	;RP1=0, select bank0
  4193  0383  00B0               	movwf	___xxtofl@val+1
  4194  0384  3000               	movlw	0
  4195  0385  1BB0               	btfsc	___xxtofl@val+1,7
  4196  0386  30FF               	movlw	255
  4197  0387  00B1               	movwf	___xxtofl@val+2
  4198  0388  00B2               	movwf	___xxtofl@val+3
  4199  0389  3001               	movlw	1
  4200  038A  120A  158A  2106  120A  118A  	fcall	___xxtofl
  4201  038F  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0390  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0391  0832               	movf	?___xxtofl+3,w
  4204  0392  00C0               	movwf	___fldiv@a+3
  4205  0393  0831               	movf	?___xxtofl+2,w
  4206  0394  00BF               	movwf	___fldiv@a+2
  4207  0395  0830               	movf	?___xxtofl+1,w
  4208  0396  00BE               	movwf	___fldiv@a+1
  4209  0397  082F               	movf	?___xxtofl,w
  4210  0398  00BD               	movwf	___fldiv@a
  4211  0399  0862               	movf	ADC_convert@a+3,w
  4212  039A  00C4               	movwf	___fldiv@b+3
  4213  039B  0861               	movf	ADC_convert@a+2,w
  4214  039C  00C3               	movwf	___fldiv@b+2
  4215  039D  0860               	movf	ADC_convert@a+1,w
  4216  039E  00C2               	movwf	___fldiv@b+1
  4217  039F  085F               	movf	ADC_convert@a,w
  4218  03A0  00C1               	movwf	___fldiv@b
  4219  03A1  120A  158A  239B  120A  118A  	fcall	___fldiv
  4220  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  4221  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  4222  03A8  0840               	movf	?___fldiv+3,w
  4223  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  4224  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  4225  03AB  00DD               	movwf	(ADC_convert@x+3)^(0+128)
  4226  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  4227  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  4228  03AE  083F               	movf	?___fldiv+2,w
  4229  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  4230  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  4231  03B1  00DC               	movwf	(ADC_convert@x+2)^(0+128)
  4232  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  4233  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  4234  03B4  083E               	movf	?___fldiv+1,w
  4235  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  4236  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  4237  03B7  00DB               	movwf	(ADC_convert@x+1)^(0+128)
  4238  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4239  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4240  03BA  083D               	movf	?___fldiv,w
  4241  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  4242  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  4243  03BD  00DA               	movwf	ADC_convert@x^(0+128)
  4244                           
  4245                           ;Master_PIC.c: 356:          a=a-((int)x*mu);
  4246  03BE  0863               	movf	(ADC_convert@mu+1)^(0+128),w
  4247  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  4248  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  4249  03C1  00AC               	movwf	___wmul@multiplicand+1
  4250  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  4251  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  4252  03C4  0862               	movf	ADC_convert@mu^(0+128),w
  4253  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4254  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4255  03C7  00AB               	movwf	___wmul@multiplicand
  4256  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  4257  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  4258  03CA  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4259  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4260  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  4261  03CD  00A3               	movwf	___fltol@f1+3
  4262  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  4263  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  4264  03D0  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4265  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4266  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4267  03D3  00A2               	movwf	___fltol@f1+2
  4268  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  4269  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  4270  03D6  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4271  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  4272  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  4273  03D9  00A1               	movwf	___fltol@f1+1
  4274  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  4275  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  4276  03DC  085A               	movf	ADC_convert@x^(0+128),w
  4277  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  4278  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  4279  03DF  00A0               	movwf	___fltol@f1
  4280  03E0  160A  118A  26E9  120A  118A  	fcall	___fltol
  4281  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4282  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4283  03E7  0821               	movf	?___fltol+1,w
  4284  03E8  00AA               	movwf	___wmul@multiplier+1
  4285  03E9  0820               	movf	?___fltol,w
  4286  03EA  00A9               	movwf	___wmul@multiplier
  4287  03EB  160A  118A  2422  120A  118A  	fcall	___wmul
  4288  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4289  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  4290  03F2  0829               	movf	?___wmul,w
  4291  03F3  00AF               	movwf	___xxtofl@val
  4292  03F4  082A               	movf	?___wmul+1,w
  4293  03F5  00B0               	movwf	___xxtofl@val+1
  4294  03F6  3000               	movlw	0
  4295  03F7  1BB0               	btfsc	___xxtofl@val+1,7
  4296  03F8  30FF               	movlw	255
  4297  03F9  00B1               	movwf	___xxtofl@val+2
  4298  03FA  00B2               	movwf	___xxtofl@val+3
  4299  03FB  3001               	movlw	1
  4300  03FC  120A  158A  2106  120A  118A  	fcall	___xxtofl
  4301  0401  1283               	bcf	3,5	;RP0=0, select bank0
  4302  0402  1303               	bcf	3,6	;RP1=0, select bank0
  4303  0403  0832               	movf	?___xxtofl+3,w
  4304  0404  00C0               	movwf	___flsub@a+3
  4305  0405  0831               	movf	?___xxtofl+2,w
  4306  0406  00BF               	movwf	___flsub@a+2
  4307  0407  0830               	movf	?___xxtofl+1,w
  4308  0408  00BE               	movwf	___flsub@a+1
  4309  0409  082F               	movf	?___xxtofl,w
  4310  040A  00BD               	movwf	___flsub@a
  4311  040B  0862               	movf	ADC_convert@a+3,w
  4312  040C  00C4               	movwf	___flsub@b+3
  4313  040D  0861               	movf	ADC_convert@a+2,w
  4314  040E  00C3               	movwf	___flsub@b+2
  4315  040F  0860               	movf	ADC_convert@a+1,w
  4316  0410  00C2               	movwf	___flsub@b+1
  4317  0411  085F               	movf	ADC_convert@a,w
  4318  0412  00C1               	movwf	___flsub@b
  4319  0413  120A  118A  27DA  120A  118A  	fcall	___flsub
  4320  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4322  041A  0840               	movf	?___flsub+3,w
  4323  041B  00E2               	movwf	ADC_convert@a+3
  4324  041C  083F               	movf	?___flsub+2,w
  4325  041D  00E1               	movwf	ADC_convert@a+2
  4326  041E  083E               	movf	?___flsub+1,w
  4327  041F  00E0               	movwf	ADC_convert@a+1
  4328  0420  083D               	movf	?___flsub,w
  4329  0421  00DF               	movwf	ADC_convert@a
  4330  0422                     l4189:
  4331                           
  4332                           ;Master_PIC.c: 357:          data[i]=0x30+((int)x);
  4333  0422  1683               	bsf	3,5	;RP0=1, select bank1
  4334  0423  1303               	bcf	3,6	;RP1=0, select bank1
  4335  0424  085D               	movf	(ADC_convert@x+3)^(0+128),w
  4336  0425  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0426  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0427  00A3               	movwf	___fltol@f1+3
  4339  0428  1683               	bsf	3,5	;RP0=1, select bank1
  4340  0429  1303               	bcf	3,6	;RP1=0, select bank1
  4341  042A  085C               	movf	(ADC_convert@x+2)^(0+128),w
  4342  042B  1283               	bcf	3,5	;RP0=0, select bank0
  4343  042C  1303               	bcf	3,6	;RP1=0, select bank0
  4344  042D  00A2               	movwf	___fltol@f1+2
  4345  042E  1683               	bsf	3,5	;RP0=1, select bank1
  4346  042F  1303               	bcf	3,6	;RP1=0, select bank1
  4347  0430  085B               	movf	(ADC_convert@x+1)^(0+128),w
  4348  0431  1283               	bcf	3,5	;RP0=0, select bank0
  4349  0432  1303               	bcf	3,6	;RP1=0, select bank0
  4350  0433  00A1               	movwf	___fltol@f1+1
  4351  0434  1683               	bsf	3,5	;RP0=1, select bank1
  4352  0435  1303               	bcf	3,6	;RP1=0, select bank1
  4353  0436  085A               	movf	ADC_convert@x^(0+128),w
  4354  0437  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0438  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0439  00A0               	movwf	___fltol@f1
  4357  043A  160A  118A  26E9  120A  118A  	fcall	___fltol
  4358  043F  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0440  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0441  0820               	movf	?___fltol,w
  4361  0442  3E30               	addlw	48
  4362  0443  00E5               	movwf	??_ADC_convert
  4363  0444  1683               	bsf	3,5	;RP0=1, select bank1
  4364  0445  1303               	bcf	3,6	;RP1=0, select bank1
  4365  0446  085E               	movf	ADC_convert@i^(0+128),w
  4366  0447  0759               	addwf	ADC_convert@data^(0+128),w
  4367  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4369  044A  00E6               	movwf	??_ADC_convert+1
  4370  044B  0866               	movf	??_ADC_convert+1,w
  4371  044C  0084               	movwf	4
  4372  044D  0865               	movf	??_ADC_convert,w
  4373  044E  1383               	bcf	3,7	;select IRP bank0
  4374  044F  0080               	movwf	0
  4375  0450                     l4191:
  4376                           
  4377                           ;Master_PIC.c: 358:          i++;
  4378  0450  3001               	movlw	1
  4379  0451  1683               	bsf	3,5	;RP0=1, select bank1
  4380  0452  1303               	bcf	3,6	;RP1=0, select bank1
  4381  0453  07DE               	addwf	ADC_convert@i^(0+128),f
  4382  0454  1803               	skipnc
  4383  0455  0ADF               	incf	(ADC_convert@i+1)^(0+128),f
  4384  0456  3000               	movlw	0
  4385  0457  07DF               	addwf	(ADC_convert@i+1)^(0+128),f
  4386  0458                     l4193:
  4387                           
  4388                           ;Master_PIC.c: 359:          digits--;
  4389  0458  30FF               	movlw	255
  4390  0459  07E0               	addwf	ADC_convert@digits^(0+128),f
  4391  045A  1803               	skipnc
  4392  045B  0AE1               	incf	(ADC_convert@digits+1)^(0+128),f
  4393  045C  30FF               	movlw	255
  4394  045D  07E1               	addwf	(ADC_convert@digits+1)^(0+128),f
  4395  045E                     l4195:
  4396                           
  4397                           ;Master_PIC.c: 360:          mu=1;
  4398  045E  3001               	movlw	1
  4399  045F  00E2               	movwf	ADC_convert@mu^(0+128)
  4400  0460  3000               	movlw	0
  4401  0461  00E3               	movwf	(ADC_convert@mu^(0+128)+1)
  4402  0462                     l4197:
  4403                           
  4404                           ;Master_PIC.c: 350:      while(digits!=0)
  4405  0462  0860               	movf	ADC_convert@digits^(0+128),w
  4406  0463  0461               	iorwf	(ADC_convert@digits+1)^(0+128),w
  4407  0464  1D03               	btfss	3,2
  4408  0465  2C67               	goto	u5811
  4409  0466  2C68               	goto	u5810
  4410  0467                     u5811:
  4411  0467  2B2B               	goto	l4175
  4412  0468                     u5810:
  4413  0468                     l4199:
  4414                           
  4415                           ;Master_PIC.c: 363:     data[i]='\n';
  4416  0468  300A               	movlw	10
  4417  0469  1283               	bcf	3,5	;RP0=0, select bank0
  4418  046A  1303               	bcf	3,6	;RP1=0, select bank0
  4419  046B  00E5               	movwf	??_ADC_convert
  4420  046C  1683               	bsf	3,5	;RP0=1, select bank1
  4421  046D  1303               	bcf	3,6	;RP1=0, select bank1
  4422  046E  085E               	movf	ADC_convert@i^(0+128),w
  4423  046F  0759               	addwf	ADC_convert@data^(0+128),w
  4424  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4425  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4426  0472  00E6               	movwf	??_ADC_convert+1
  4427  0473  0866               	movf	??_ADC_convert+1,w
  4428  0474  0084               	movwf	4
  4429  0475  0865               	movf	??_ADC_convert,w
  4430  0476  1383               	bcf	3,7	;select IRP bank0
  4431  0477  0080               	movwf	0
  4432  0478                     l208:
  4433  0478  0008               	return
  4434  0479                     __end_of_ADC_convert:
  4435                           
  4436                           	psect	text16
  4437  0906                     __ptext16:	
  4438 ;; *************** function ___xxtofl *****************
  4439 ;; Defined at:
  4440 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  sign            1    wreg     unsigned char 
  4443 ;;  val             4   15[BANK0 ] long 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  sign            1   23[BANK0 ] unsigned char 
  4446 ;;  arg             4   25[BANK0 ] unsigned long 
  4447 ;;  exp             1   24[BANK0 ] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  4   15[BANK0 ] unsigned char 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4457 ;;      Params:         0       4       0       0       0
  4458 ;;      Locals:         0       6       0       0       0
  4459 ;;      Temps:          0       4       0       0       0
  4460 ;;      Totals:         0      14       0       0       0
  4461 ;;Total ram usage:       14 bytes
  4462 ;; Hardware stack levels used: 1
  4463 ;; Hardware stack levels required when called: 1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_LCD_Send
  4468 ;;		_ADC_convert
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function ___xxtofl
  4474  0906                     ___xxtofl:
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4478                           ;___xxtofl@sign stored from wreg
  4479  0906  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0907  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0908  00B7               	movwf	___xxtofl@sign
  4482  0909                     l3985:
  4483  0909  0837               	movf	___xxtofl@sign,w
  4484  090A  1903               	btfsc	3,2
  4485  090B  290D               	goto	u5551
  4486  090C  290E               	goto	u5550
  4487  090D                     u5551:
  4488  090D  2922               	goto	l3991
  4489  090E                     u5550:
  4490  090E                     l3987:
  4491  090E  1FB2               	btfss	___xxtofl@val+3,7
  4492  090F  2911               	goto	u5561
  4493  0910  2912               	goto	u5560
  4494  0911                     u5561:
  4495  0911  2922               	goto	l3991
  4496  0912                     u5560:
  4497  0912                     l3989:
  4498  0912  092F               	comf	___xxtofl@val,w
  4499  0913  00B9               	movwf	___xxtofl@arg
  4500  0914  0930               	comf	___xxtofl@val+1,w
  4501  0915  00BA               	movwf	___xxtofl@arg+1
  4502  0916  0931               	comf	___xxtofl@val+2,w
  4503  0917  00BB               	movwf	___xxtofl@arg+2
  4504  0918  0932               	comf	___xxtofl@val+3,w
  4505  0919  00BC               	movwf	___xxtofl@arg+3
  4506  091A  0AB9               	incf	___xxtofl@arg,f
  4507  091B  1903               	skipnz
  4508  091C  0ABA               	incf	___xxtofl@arg+1,f
  4509  091D  1903               	skipnz
  4510  091E  0ABB               	incf	___xxtofl@arg+2,f
  4511  091F  1903               	skipnz
  4512  0920  0ABC               	incf	___xxtofl@arg+3,f
  4513  0921  292A               	goto	l878
  4514  0922                     l3991:
  4515  0922  0832               	movf	___xxtofl@val+3,w
  4516  0923  00BC               	movwf	___xxtofl@arg+3
  4517  0924  0831               	movf	___xxtofl@val+2,w
  4518  0925  00BB               	movwf	___xxtofl@arg+2
  4519  0926  0830               	movf	___xxtofl@val+1,w
  4520  0927  00BA               	movwf	___xxtofl@arg+1
  4521  0928  082F               	movf	___xxtofl@val,w
  4522  0929  00B9               	movwf	___xxtofl@arg
  4523  092A                     l878:
  4524  092A  0832               	movf	___xxtofl@val+3,w
  4525  092B  0431               	iorwf	___xxtofl@val+2,w
  4526  092C  0430               	iorwf	___xxtofl@val+1,w
  4527  092D  042F               	iorwf	___xxtofl@val,w
  4528  092E  1D03               	skipz
  4529  092F  2931               	goto	u5571
  4530  0930  2932               	goto	u5570
  4531  0931                     u5571:
  4532  0931  293B               	goto	l3997
  4533  0932                     u5570:
  4534  0932                     l3993:
  4535  0932  3000               	movlw	0
  4536  0933  00B2               	movwf	?___xxtofl+3
  4537  0934  3000               	movlw	0
  4538  0935  00B1               	movwf	?___xxtofl+2
  4539  0936  3000               	movlw	0
  4540  0937  00B0               	movwf	?___xxtofl+1
  4541  0938  3000               	movlw	0
  4542  0939  00AF               	movwf	?___xxtofl
  4543  093A  29C1               	goto	l880
  4544  093B                     l3997:
  4545  093B  3096               	movlw	150
  4546  093C  00B3               	movwf	??___xxtofl
  4547  093D  0833               	movf	??___xxtofl,w
  4548  093E  00B8               	movwf	___xxtofl@exp
  4549  093F  294D               	goto	l4001
  4550  0940                     l3999:
  4551  0940  3001               	movlw	1
  4552  0941  00B3               	movwf	??___xxtofl
  4553  0942  0833               	movf	??___xxtofl,w
  4554  0943  07B8               	addwf	___xxtofl@exp,f
  4555  0944  3001               	movlw	1
  4556  0945                     u5585:
  4557  0945  1003               	clrc
  4558  0946  0CBC               	rrf	___xxtofl@arg+3,f
  4559  0947  0CBB               	rrf	___xxtofl@arg+2,f
  4560  0948  0CBA               	rrf	___xxtofl@arg+1,f
  4561  0949  0CB9               	rrf	___xxtofl@arg,f
  4562  094A  3EFF               	addlw	-1
  4563  094B  1D03               	skipz
  4564  094C  2945               	goto	u5585
  4565  094D                     l4001:
  4566  094D  30FE               	movlw	254
  4567  094E  053C               	andwf	___xxtofl@arg+3,w
  4568  094F  1D03               	btfss	3,2
  4569  0950  2952               	goto	u5591
  4570  0951  2953               	goto	u5590
  4571  0952                     u5591:
  4572  0952  2940               	goto	l3999
  4573  0953                     u5590:
  4574  0953  296F               	goto	l884
  4575  0954                     l4003:
  4576  0954  3001               	movlw	1
  4577  0955  00B3               	movwf	??___xxtofl
  4578  0956  0833               	movf	??___xxtofl,w
  4579  0957  07B8               	addwf	___xxtofl@exp,f
  4580  0958                     l4005:
  4581  0958  3001               	movlw	1
  4582  0959  07B9               	addwf	___xxtofl@arg,f
  4583  095A  3000               	movlw	0
  4584  095B  1803               	skipnc
  4585  095C  3001               	movlw	1
  4586  095D  07BA               	addwf	___xxtofl@arg+1,f
  4587  095E  3000               	movlw	0
  4588  095F  1803               	skipnc
  4589  0960  3001               	movlw	1
  4590  0961  07BB               	addwf	___xxtofl@arg+2,f
  4591  0962  3000               	movlw	0
  4592  0963  1803               	skipnc
  4593  0964  3001               	movlw	1
  4594  0965  07BC               	addwf	___xxtofl@arg+3,f
  4595  0966                     l4007:
  4596  0966  3001               	movlw	1
  4597  0967                     u5605:
  4598  0967  1003               	clrc
  4599  0968  0CBC               	rrf	___xxtofl@arg+3,f
  4600  0969  0CBB               	rrf	___xxtofl@arg+2,f
  4601  096A  0CBA               	rrf	___xxtofl@arg+1,f
  4602  096B  0CB9               	rrf	___xxtofl@arg,f
  4603  096C  3EFF               	addlw	-1
  4604  096D  1D03               	skipz
  4605  096E  2967               	goto	u5605
  4606  096F                     l884:
  4607  096F  30FF               	movlw	255
  4608  0970  053C               	andwf	___xxtofl@arg+3,w
  4609  0971  1D03               	btfss	3,2
  4610  0972  2974               	goto	u5611
  4611  0973  2975               	goto	u5610
  4612  0974                     u5611:
  4613  0974  2954               	goto	l4003
  4614  0975                     u5610:
  4615  0975  2981               	goto	l4011
  4616  0976                     l4009:
  4617  0976  3001               	movlw	1
  4618  0977  02B8               	subwf	___xxtofl@exp,f
  4619  0978  3001               	movlw	1
  4620  0979  00B3               	movwf	??___xxtofl
  4621  097A                     u5625:
  4622  097A  1003               	clrc
  4623  097B  0DB9               	rlf	___xxtofl@arg,f
  4624  097C  0DBA               	rlf	___xxtofl@arg+1,f
  4625  097D  0DBB               	rlf	___xxtofl@arg+2,f
  4626  097E  0DBC               	rlf	___xxtofl@arg+3,f
  4627  097F  0BB3               	decfsz	??___xxtofl,f
  4628  0980  297A               	goto	u5625
  4629  0981                     l4011:
  4630  0981  1BBB               	btfsc	___xxtofl@arg+2,7
  4631  0982  2984               	goto	u5631
  4632  0983  2985               	goto	u5630
  4633  0984                     u5631:
  4634  0984  298B               	goto	l891
  4635  0985                     u5630:
  4636  0985                     l4013:
  4637  0985  3002               	movlw	2
  4638  0986  0238               	subwf	___xxtofl@exp,w
  4639  0987  1803               	skipnc
  4640  0988  298A               	goto	u5641
  4641  0989  298B               	goto	u5640
  4642  098A                     u5641:
  4643  098A  2976               	goto	l4009
  4644  098B                     u5640:
  4645  098B                     l891:
  4646  098B  1838               	btfsc	___xxtofl@exp,0
  4647  098C  298E               	goto	u5651
  4648  098D  298F               	goto	u5650
  4649  098E                     u5651:
  4650  098E  2997               	goto	l892
  4651  098F                     u5650:
  4652  098F                     l4015:
  4653  098F  30FF               	movlw	255
  4654  0990  05B9               	andwf	___xxtofl@arg,f
  4655  0991  30FF               	movlw	255
  4656  0992  05BA               	andwf	___xxtofl@arg+1,f
  4657  0993  307F               	movlw	127
  4658  0994  05BB               	andwf	___xxtofl@arg+2,f
  4659  0995  30FF               	movlw	255
  4660  0996  05BC               	andwf	___xxtofl@arg+3,f
  4661  0997                     l892:
  4662  0997  1003               	clrc
  4663  0998  0CB8               	rrf	___xxtofl@exp,f
  4664  0999                     l4017:
  4665  0999  0838               	movf	___xxtofl@exp,w
  4666  099A  00B3               	movwf	??___xxtofl
  4667  099B  01B4               	clrf	??___xxtofl+1
  4668  099C  01B5               	clrf	??___xxtofl+2
  4669  099D  01B6               	clrf	??___xxtofl+3
  4670  099E  3018               	movlw	24
  4671  099F                     u5665:
  4672  099F  1003               	clrc
  4673  09A0  0DB3               	rlf	??___xxtofl,f
  4674  09A1  0DB4               	rlf	??___xxtofl+1,f
  4675  09A2  0DB5               	rlf	??___xxtofl+2,f
  4676  09A3  0DB6               	rlf	??___xxtofl+3,f
  4677  09A4                     u5660:
  4678  09A4  3EFF               	addlw	-1
  4679  09A5  1D03               	skipz
  4680  09A6  299F               	goto	u5665
  4681  09A7  0833               	movf	??___xxtofl,w
  4682  09A8  04B9               	iorwf	___xxtofl@arg,f
  4683  09A9  0834               	movf	??___xxtofl+1,w
  4684  09AA  04BA               	iorwf	___xxtofl@arg+1,f
  4685  09AB  0835               	movf	??___xxtofl+2,w
  4686  09AC  04BB               	iorwf	___xxtofl@arg+2,f
  4687  09AD  0836               	movf	??___xxtofl+3,w
  4688  09AE  04BC               	iorwf	___xxtofl@arg+3,f
  4689  09AF                     l4019:
  4690  09AF  0837               	movf	___xxtofl@sign,w
  4691  09B0  1903               	btfsc	3,2
  4692  09B1  29B3               	goto	u5671
  4693  09B2  29B4               	goto	u5670
  4694  09B3                     u5671:
  4695  09B3  29B9               	goto	l4025
  4696  09B4                     u5670:
  4697  09B4                     l4021:
  4698  09B4  1FB2               	btfss	___xxtofl@val+3,7
  4699  09B5  29B7               	goto	u5681
  4700  09B6  29B8               	goto	u5680
  4701  09B7                     u5681:
  4702  09B7  29B9               	goto	l4025
  4703  09B8                     u5680:
  4704  09B8                     l4023:
  4705  09B8  17BC               	bsf	___xxtofl@arg+3,7
  4706  09B9                     l4025:
  4707  09B9  083C               	movf	___xxtofl@arg+3,w
  4708  09BA  00B2               	movwf	?___xxtofl+3
  4709  09BB  083B               	movf	___xxtofl@arg+2,w
  4710  09BC  00B1               	movwf	?___xxtofl+2
  4711  09BD  083A               	movf	___xxtofl@arg+1,w
  4712  09BE  00B0               	movwf	?___xxtofl+1
  4713  09BF  0839               	movf	___xxtofl@arg,w
  4714  09C0  00AF               	movwf	?___xxtofl
  4715  09C1                     l880:
  4716  09C1  0008               	return
  4717  09C2                     __end_of___xxtofl:
  4718                           
  4719                           	psect	text17
  4720  1422                     __ptext17:	
  4721 ;; *************** function ___wmul *****************
  4722 ;; Defined at:
  4723 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  multiplier      2    9[BANK0 ] unsigned int 
  4726 ;;  multiplicand    2   11[BANK0 ] unsigned int 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  product         2   13[BANK0 ] unsigned int 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    9[BANK0 ] unsigned int 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       4       0       0       0
  4739 ;;      Locals:         0       2       0       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         0       6       0       0       0
  4742 ;;Total ram usage:        6 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_ADC_convert
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function ___wmul
  4754  1422                     ___wmul:
  4755  1422                     l3545:	
  4756                           ;incstack = 0
  4757                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4758                           
  4759  1422  1283               	bcf	3,5	;RP0=0, select bank0
  4760  1423  1303               	bcf	3,6	;RP1=0, select bank0
  4761  1424  01AD               	clrf	___wmul@product
  4762  1425  01AE               	clrf	___wmul@product+1
  4763  1426                     l3547:
  4764  1426  1C29               	btfss	___wmul@multiplier,0
  4765  1427  2C29               	goto	u4491
  4766  1428  2C2A               	goto	u4490
  4767  1429                     u4491:
  4768  1429  2C30               	goto	l445
  4769  142A                     u4490:
  4770  142A                     l3549:
  4771  142A  082B               	movf	___wmul@multiplicand,w
  4772  142B  07AD               	addwf	___wmul@product,f
  4773  142C  1803               	skipnc
  4774  142D  0AAE               	incf	___wmul@product+1,f
  4775  142E  082C               	movf	___wmul@multiplicand+1,w
  4776  142F  07AE               	addwf	___wmul@product+1,f
  4777  1430                     l445:
  4778  1430  3001               	movlw	1
  4779  1431                     u4505:
  4780  1431  1003               	clrc
  4781  1432  0DAB               	rlf	___wmul@multiplicand,f
  4782  1433  0DAC               	rlf	___wmul@multiplicand+1,f
  4783  1434  3EFF               	addlw	-1
  4784  1435  1D03               	skipz
  4785  1436  2C31               	goto	u4505
  4786  1437                     l3551:
  4787  1437  3001               	movlw	1
  4788  1438                     u4515:
  4789  1438  1003               	clrc
  4790  1439  0CAA               	rrf	___wmul@multiplier+1,f
  4791  143A  0CA9               	rrf	___wmul@multiplier,f
  4792  143B  3EFF               	addlw	-1
  4793  143C  1D03               	skipz
  4794  143D  2C38               	goto	u4515
  4795  143E                     l3553:
  4796  143E  0829               	movf	___wmul@multiplier,w
  4797  143F  042A               	iorwf	___wmul@multiplier+1,w
  4798  1440  1D03               	btfss	3,2
  4799  1441  2C43               	goto	u4521
  4800  1442  2C44               	goto	u4520
  4801  1443                     u4521:
  4802  1443  2C26               	goto	l3547
  4803  1444                     u4520:
  4804  1444                     l3555:
  4805  1444  082E               	movf	___wmul@product+1,w
  4806  1445  00AA               	movwf	?___wmul+1
  4807  1446  082D               	movf	___wmul@product,w
  4808  1447  00A9               	movwf	?___wmul
  4809  1448                     l447:
  4810  1448  0008               	return
  4811  1449                     __end_of___wmul:
  4812                           
  4813                           	psect	text18
  4814  16E9                     __ptext18:	
  4815 ;; *************** function ___fltol *****************
  4816 ;; Defined at:
  4817 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  f1              4    0[BANK0 ] unsigned int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  exp1            1    5[COMMON] unsigned char 
  4822 ;;  sign1           1    4[COMMON] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  4    0[BANK0 ] long 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       4       0       0       0
  4833 ;;      Locals:         2       0       0       0       0
  4834 ;;      Temps:          0       5       0       0       0
  4835 ;;      Totals:         2       9       0       0       0
  4836 ;;Total ram usage:       11 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_ADC_convert
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           
  4847                           ;psect for function ___fltol
  4848  16E9                     ___fltol:
  4849  16E9                     l3661:	
  4850                           ;incstack = 0
  4851                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4852                           
  4853  16E9  1003               	clrc
  4854  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  4855  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  4856  16EC  0D22               	rlf	___fltol@f1+2,w
  4857  16ED  0D23               	rlf	___fltol@f1+3,w
  4858  16EE  00A4               	movwf	??___fltol
  4859  16EF  0824               	movf	??___fltol,w
  4860  16F0  00F5               	movwf	___fltol@exp1
  4861  16F1  0875               	movf	___fltol@exp1,w
  4862  16F2  1D03               	btfss	3,2
  4863  16F3  2EF5               	goto	u4791
  4864  16F4  2EF6               	goto	u4790
  4865  16F5                     u4791:
  4866  16F5  2EFF               	goto	l3667
  4867  16F6                     u4790:
  4868  16F6                     l3663:
  4869  16F6  3000               	movlw	0
  4870  16F7  00A3               	movwf	?___fltol+3
  4871  16F8  3000               	movlw	0
  4872  16F9  00A2               	movwf	?___fltol+2
  4873  16FA  3000               	movlw	0
  4874  16FB  00A1               	movwf	?___fltol+1
  4875  16FC  3000               	movlw	0
  4876  16FD  00A0               	movwf	?___fltol
  4877  16FE  2F64               	goto	l631
  4878  16FF                     l3667:
  4879  16FF  0820               	movf	___fltol@f1,w
  4880  1700  00A4               	movwf	??___fltol
  4881  1701  0821               	movf	___fltol@f1+1,w
  4882  1702  00A5               	movwf	??___fltol+1
  4883  1703  0822               	movf	___fltol@f1+2,w
  4884  1704  00A6               	movwf	??___fltol+2
  4885  1705  0823               	movf	___fltol@f1+3,w
  4886  1706  00A7               	movwf	??___fltol+3
  4887  1707  301F               	movlw	31
  4888  1708                     u4805:
  4889  1708  1003               	clrc
  4890  1709  0CA7               	rrf	??___fltol+3,f
  4891  170A  0CA6               	rrf	??___fltol+2,f
  4892  170B  0CA5               	rrf	??___fltol+1,f
  4893  170C  0CA4               	rrf	??___fltol,f
  4894  170D                     u4800:
  4895  170D  3EFF               	addlw	-1
  4896  170E  1D03               	skipz
  4897  170F  2F08               	goto	u4805
  4898  1710  0824               	movf	??___fltol,w
  4899  1711  00A8               	movwf	??___fltol+4
  4900  1712  0828               	movf	??___fltol+4,w
  4901  1713  00F4               	movwf	___fltol@sign1
  4902  1714                     l3669:
  4903  1714  17A2               	bsf	___fltol@f1+2,7
  4904  1715                     l3671:
  4905  1715  30FF               	movlw	255
  4906  1716  05A0               	andwf	___fltol@f1,f
  4907  1717  30FF               	movlw	255
  4908  1718  05A1               	andwf	___fltol@f1+1,f
  4909  1719  30FF               	movlw	255
  4910  171A  05A2               	andwf	___fltol@f1+2,f
  4911  171B  3000               	movlw	0
  4912  171C  05A3               	andwf	___fltol@f1+3,f
  4913  171D                     l3673:
  4914  171D  3096               	movlw	150
  4915  171E  02F5               	subwf	___fltol@exp1,f
  4916  171F                     l3675:
  4917  171F  1FF5               	btfss	___fltol@exp1,7
  4918  1720  2F22               	goto	u4811
  4919  1721  2F23               	goto	u4810
  4920  1722                     u4811:
  4921  1722  2F3D               	goto	l3685
  4922  1723                     u4810:
  4923  1723                     l3677:
  4924  1723  0875               	movf	___fltol@exp1,w
  4925  1724  3A80               	xorlw	128
  4926  1725  3E97               	addlw	151
  4927  1726  1803               	skipnc
  4928  1727  2F29               	goto	u4821
  4929  1728  2F2A               	goto	u4820
  4930  1729                     u4821:
  4931  1729  2F2B               	goto	l3683
  4932  172A                     u4820:
  4933  172A  2EF6               	goto	l3663
  4934  172B                     l3683:
  4935  172B  3001               	movlw	1
  4936  172C                     u4835:
  4937  172C  1003               	clrc
  4938  172D  0CA3               	rrf	___fltol@f1+3,f
  4939  172E  0CA2               	rrf	___fltol@f1+2,f
  4940  172F  0CA1               	rrf	___fltol@f1+1,f
  4941  1730  0CA0               	rrf	___fltol@f1,f
  4942  1731  3EFF               	addlw	-1
  4943  1732  1D03               	skipz
  4944  1733  2F2C               	goto	u4835
  4945  1734  3001               	movlw	1
  4946  1735  00A4               	movwf	??___fltol
  4947  1736  0824               	movf	??___fltol,w
  4948  1737  07F5               	addwf	___fltol@exp1,f
  4949  1738  1D03               	btfss	3,2
  4950  1739  2F3B               	goto	u4841
  4951  173A  2F3C               	goto	u4840
  4952  173B                     u4841:
  4953  173B  2F2B               	goto	l3683
  4954  173C                     u4840:
  4955  173C  2F54               	goto	l3693
  4956  173D                     l3685:
  4957  173D  3020               	movlw	32
  4958  173E  0275               	subwf	___fltol@exp1,w
  4959  173F  1C03               	skipc
  4960  1740  2F42               	goto	u4851
  4961  1741  2F43               	goto	u4850
  4962  1742                     u4851:
  4963  1742  2F4F               	goto	l638
  4964  1743                     u4850:
  4965  1743  2EF6               	goto	l3663
  4966  1744                     l3691:
  4967  1744  3001               	movlw	1
  4968  1745  00A4               	movwf	??___fltol
  4969  1746                     u4865:
  4970  1746  1003               	clrc
  4971  1747  0DA0               	rlf	___fltol@f1,f
  4972  1748  0DA1               	rlf	___fltol@f1+1,f
  4973  1749  0DA2               	rlf	___fltol@f1+2,f
  4974  174A  0DA3               	rlf	___fltol@f1+3,f
  4975  174B  0BA4               	decfsz	??___fltol,f
  4976  174C  2F46               	goto	u4865
  4977  174D  3001               	movlw	1
  4978  174E  02F5               	subwf	___fltol@exp1,f
  4979  174F                     l638:
  4980  174F  0875               	movf	___fltol@exp1,w
  4981  1750  1D03               	btfss	3,2
  4982  1751  2F53               	goto	u4871
  4983  1752  2F54               	goto	u4870
  4984  1753                     u4871:
  4985  1753  2F44               	goto	l3691
  4986  1754                     u4870:
  4987  1754                     l3693:
  4988  1754  0874               	movf	___fltol@sign1,w
  4989  1755  1903               	btfsc	3,2
  4990  1756  2F58               	goto	u4881
  4991  1757  2F59               	goto	u4880
  4992  1758                     u4881:
  4993  1758  2F64               	goto	l641
  4994  1759                     u4880:
  4995  1759                     l3695:
  4996  1759  09A0               	comf	___fltol@f1,f
  4997  175A  09A1               	comf	___fltol@f1+1,f
  4998  175B  09A2               	comf	___fltol@f1+2,f
  4999  175C  09A3               	comf	___fltol@f1+3,f
  5000  175D  0AA0               	incf	___fltol@f1,f
  5001  175E  1903               	skipnz
  5002  175F  0AA1               	incf	___fltol@f1+1,f
  5003  1760  1903               	skipnz
  5004  1761  0AA2               	incf	___fltol@f1+2,f
  5005  1762  1903               	skipnz
  5006  1763  0AA3               	incf	___fltol@f1+3,f
  5007  1764                     l641:
  5008  1764                     l631:
  5009  1764  0008               	return
  5010  1765                     __end_of___fltol:
  5011                           
  5012                           	psect	text19
  5013  07DA                     __ptext19:	
  5014 ;; *************** function ___flsub *****************
  5015 ;; Defined at:
  5016 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  a               4   29[BANK0 ] long 
  5019 ;;  b               4   33[BANK0 ] long 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  4   29[BANK0 ] long 
  5024 ;; Registers used:
  5025 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5031 ;;      Params:         0       8       0       0       0
  5032 ;;      Locals:         0       0       0       0       0
  5033 ;;      Temps:          0       0       0       0       0
  5034 ;;      Totals:         0       8       0       0       0
  5035 ;;Total ram usage:        8 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 2
  5038 ;; This function calls:
  5039 ;;		___fladd
  5040 ;; This function is called by:
  5041 ;;		_ADC_convert
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           
  5046                           ;psect for function ___flsub
  5047  07DA                     ___flsub:
  5048  07DA                     l3697:	
  5049                           ;incstack = 0
  5050                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5051                           
  5052  07DA  3080               	movlw	128
  5053  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  5054  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  5055  07DD  06C0               	xorwf	___flsub@a+3,f
  5056  07DE                     l3699:
  5057  07DE  0844               	movf	___flsub@b+3,w
  5058  07DF  00A3               	movwf	___fladd@b+3
  5059  07E0  0843               	movf	___flsub@b+2,w
  5060  07E1  00A2               	movwf	___fladd@b+2
  5061  07E2  0842               	movf	___flsub@b+1,w
  5062  07E3  00A1               	movwf	___fladd@b+1
  5063  07E4  0841               	movf	___flsub@b,w
  5064  07E5  00A0               	movwf	___fladd@b
  5065  07E6  0840               	movf	___flsub@a+3,w
  5066  07E7  00A7               	movwf	___fladd@a+3
  5067  07E8  083F               	movf	___flsub@a+2,w
  5068  07E9  00A6               	movwf	___fladd@a+2
  5069  07EA  083E               	movf	___flsub@a+1,w
  5070  07EB  00A5               	movwf	___fladd@a+1
  5071  07EC  083D               	movf	___flsub@a,w
  5072  07ED  00A4               	movwf	___fladd@a
  5073  07EE  120A  158A  2578  120A  118A  	fcall	___fladd
  5074  07F3  1283               	bcf	3,5	;RP0=0, select bank0
  5075  07F4  1303               	bcf	3,6	;RP1=0, select bank0
  5076  07F5  0823               	movf	?___fladd+3,w
  5077  07F6  00C0               	movwf	?___flsub+3
  5078  07F7  0822               	movf	?___fladd+2,w
  5079  07F8  00BF               	movwf	?___flsub+2
  5080  07F9  0821               	movf	?___fladd+1,w
  5081  07FA  00BE               	movwf	?___flsub+1
  5082  07FB  0820               	movf	?___fladd,w
  5083  07FC  00BD               	movwf	?___flsub
  5084  07FD                     l784:
  5085  07FD  0008               	return
  5086  07FE                     __end_of___flsub:
  5087                           
  5088                           	psect	text20
  5089  0D78                     __ptext20:	
  5090 ;; *************** function ___fladd *****************
  5091 ;; Defined at:
  5092 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  b               4    0[BANK0 ] long 
  5095 ;;  a               4    4[BANK0 ] long 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  grs             1   19[BANK0 ] unsigned char 
  5098 ;;  bexp            1   18[BANK0 ] unsigned char 
  5099 ;;  aexp            1   17[BANK0 ] unsigned char 
  5100 ;;  signs           1   16[BANK0 ] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  4    0[BANK0 ] unsigned char 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0, btemp+1
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       8       0       0       0
  5111 ;;      Locals:         0       4       0       0       0
  5112 ;;      Temps:          0       8       0       0       0
  5113 ;;      Totals:         0      20       0       0       0
  5114 ;;Total ram usage:       20 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		___flsub
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function ___fladd
  5126  0D78                     ___fladd:
  5127  0D78                     l3327:	
  5128                           ;incstack = 0
  5129                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  5130                           
  5131  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0D7A  0823               	movf	___fladd@b+3,w
  5134  0D7B  3980               	andlw	128
  5135  0D7C  00A8               	movwf	??___fladd
  5136  0D7D  0828               	movf	??___fladd,w
  5137  0D7E  00B0               	movwf	___fladd@signs
  5138  0D7F                     l3329:
  5139  0D7F  0823               	movf	___fladd@b+3,w
  5140  0D80  00A8               	movwf	??___fladd
  5141  0D81  0728               	addwf	??___fladd,w
  5142  0D82  00A9               	movwf	??___fladd+1
  5143  0D83  0829               	movf	??___fladd+1,w
  5144  0D84  00B2               	movwf	___fladd@bexp
  5145  0D85                     l3331:
  5146  0D85  1FA2               	btfss	___fladd@b+2,7
  5147  0D86  2D88               	goto	u3981
  5148  0D87  2D89               	goto	u3980
  5149  0D88                     u3981:
  5150  0D88  2D8A               	goto	l3335
  5151  0D89                     u3980:
  5152  0D89                     l3333:
  5153  0D89  1432               	bsf	___fladd@bexp,0
  5154  0D8A                     l3335:
  5155  0D8A  0832               	movf	___fladd@bexp,w
  5156  0D8B  1903               	btfsc	3,2
  5157  0D8C  2D8E               	goto	u3991
  5158  0D8D  2D8F               	goto	u3990
  5159  0D8E                     u3991:
  5160  0D8E  2D9F               	goto	l3345
  5161  0D8F                     u3990:
  5162  0D8F                     l3337:
  5163  0D8F  0A32               	incf	___fladd@bexp,w
  5164  0D90  1D03               	btfss	3,2
  5165  0D91  2D93               	goto	u4001
  5166  0D92  2D94               	goto	u4000
  5167  0D93                     u4001:
  5168  0D93  2D9C               	goto	l3341
  5169  0D94                     u4000:
  5170  0D94                     l3339:
  5171  0D94  3000               	movlw	0
  5172  0D95  00A3               	movwf	___fladd@b+3
  5173  0D96  3000               	movlw	0
  5174  0D97  00A2               	movwf	___fladd@b+2
  5175  0D98  3000               	movlw	0
  5176  0D99  00A1               	movwf	___fladd@b+1
  5177  0D9A  3000               	movlw	0
  5178  0D9B  00A0               	movwf	___fladd@b
  5179  0D9C                     l3341:
  5180  0D9C  17A2               	bsf	___fladd@b+2,7
  5181  0D9D                     l3343:
  5182  0D9D  01A3               	clrf	___fladd@b+3
  5183  0D9E  2DA7               	goto	l3347
  5184  0D9F                     l3345:
  5185  0D9F  3000               	movlw	0
  5186  0DA0  00A3               	movwf	___fladd@b+3
  5187  0DA1  3000               	movlw	0
  5188  0DA2  00A2               	movwf	___fladd@b+2
  5189  0DA3  3000               	movlw	0
  5190  0DA4  00A1               	movwf	___fladd@b+1
  5191  0DA5  3000               	movlw	0
  5192  0DA6  00A0               	movwf	___fladd@b
  5193  0DA7                     l3347:
  5194  0DA7  0827               	movf	___fladd@a+3,w
  5195  0DA8  3980               	andlw	128
  5196  0DA9  00A8               	movwf	??___fladd
  5197  0DAA  0828               	movf	??___fladd,w
  5198  0DAB  00B1               	movwf	___fladd@aexp
  5199  0DAC                     l3349:
  5200  0DAC  0831               	movf	___fladd@aexp,w
  5201  0DAD  0630               	xorwf	___fladd@signs,w
  5202  0DAE  1903               	skipnz
  5203  0DAF  2DB1               	goto	u4011
  5204  0DB0  2DB2               	goto	u4010
  5205  0DB1                     u4011:
  5206  0DB1  2DB3               	goto	l3353
  5207  0DB2                     u4010:
  5208  0DB2                     l3351:
  5209  0DB2  1730               	bsf	___fladd@signs,6
  5210  0DB3                     l3353:
  5211  0DB3  0827               	movf	___fladd@a+3,w
  5212  0DB4  00A8               	movwf	??___fladd
  5213  0DB5  0728               	addwf	??___fladd,w
  5214  0DB6  00A9               	movwf	??___fladd+1
  5215  0DB7  0829               	movf	??___fladd+1,w
  5216  0DB8  00B1               	movwf	___fladd@aexp
  5217  0DB9                     l3355:
  5218  0DB9  1FA6               	btfss	___fladd@a+2,7
  5219  0DBA  2DBC               	goto	u4021
  5220  0DBB  2DBD               	goto	u4020
  5221  0DBC                     u4021:
  5222  0DBC  2DBE               	goto	l3359
  5223  0DBD                     u4020:
  5224  0DBD                     l3357:
  5225  0DBD  1431               	bsf	___fladd@aexp,0
  5226  0DBE                     l3359:
  5227  0DBE  0831               	movf	___fladd@aexp,w
  5228  0DBF  1903               	btfsc	3,2
  5229  0DC0  2DC2               	goto	u4031
  5230  0DC1  2DC3               	goto	u4030
  5231  0DC2                     u4031:
  5232  0DC2  2DD3               	goto	l3369
  5233  0DC3                     u4030:
  5234  0DC3                     l3361:
  5235  0DC3  0A31               	incf	___fladd@aexp,w
  5236  0DC4  1D03               	btfss	3,2
  5237  0DC5  2DC7               	goto	u4041
  5238  0DC6  2DC8               	goto	u4040
  5239  0DC7                     u4041:
  5240  0DC7  2DD0               	goto	l3365
  5241  0DC8                     u4040:
  5242  0DC8                     l3363:
  5243  0DC8  3000               	movlw	0
  5244  0DC9  00A7               	movwf	___fladd@a+3
  5245  0DCA  3000               	movlw	0
  5246  0DCB  00A6               	movwf	___fladd@a+2
  5247  0DCC  3000               	movlw	0
  5248  0DCD  00A5               	movwf	___fladd@a+1
  5249  0DCE  3000               	movlw	0
  5250  0DCF  00A4               	movwf	___fladd@a
  5251  0DD0                     l3365:
  5252  0DD0  17A6               	bsf	___fladd@a+2,7
  5253  0DD1                     l3367:
  5254  0DD1  01A7               	clrf	___fladd@a+3
  5255  0DD2  2DDB               	goto	l738
  5256  0DD3                     l3369:
  5257  0DD3  3000               	movlw	0
  5258  0DD4  00A7               	movwf	___fladd@a+3
  5259  0DD5  3000               	movlw	0
  5260  0DD6  00A6               	movwf	___fladd@a+2
  5261  0DD7  3000               	movlw	0
  5262  0DD8  00A5               	movwf	___fladd@a+1
  5263  0DD9  3000               	movlw	0
  5264  0DDA  00A4               	movwf	___fladd@a
  5265  0DDB                     l738:
  5266  0DDB  0832               	movf	___fladd@bexp,w
  5267  0DDC  0231               	subwf	___fladd@aexp,w
  5268  0DDD  1803               	skipnc
  5269  0DDE  2DE0               	goto	u4051
  5270  0DDF  2DE1               	goto	u4050
  5271  0DE0                     u4051:
  5272  0DE0  2E25               	goto	l3405
  5273  0DE1                     u4050:
  5274  0DE1                     l3371:
  5275  0DE1  1F30               	btfss	___fladd@signs,6
  5276  0DE2  2DE4               	goto	u4061
  5277  0DE3  2DE5               	goto	u4060
  5278  0DE4                     u4061:
  5279  0DE4  2DE9               	goto	l3375
  5280  0DE5                     u4060:
  5281  0DE5                     l3373:
  5282  0DE5  3080               	movlw	128
  5283  0DE6  00A8               	movwf	??___fladd
  5284  0DE7  0828               	movf	??___fladd,w
  5285  0DE8  06B0               	xorwf	___fladd@signs,f
  5286  0DE9                     l3375:
  5287  0DE9  0832               	movf	___fladd@bexp,w
  5288  0DEA  00A8               	movwf	??___fladd
  5289  0DEB  0828               	movf	??___fladd,w
  5290  0DEC  00B3               	movwf	___fladd@grs
  5291  0DED                     l3377:
  5292  0DED  0831               	movf	___fladd@aexp,w
  5293  0DEE  00A8               	movwf	??___fladd
  5294  0DEF  0828               	movf	??___fladd,w
  5295  0DF0  00B2               	movwf	___fladd@bexp
  5296  0DF1                     l3379:
  5297  0DF1  0833               	movf	___fladd@grs,w
  5298  0DF2  00A8               	movwf	??___fladd
  5299  0DF3  0828               	movf	??___fladd,w
  5300  0DF4  00B1               	movwf	___fladd@aexp
  5301  0DF5                     l3381:
  5302  0DF5  0820               	movf	___fladd@b,w
  5303  0DF6  00A8               	movwf	??___fladd
  5304  0DF7  0828               	movf	??___fladd,w
  5305  0DF8  00B3               	movwf	___fladd@grs
  5306  0DF9                     l3383:
  5307  0DF9  0824               	movf	___fladd@a,w
  5308  0DFA  00A8               	movwf	??___fladd
  5309  0DFB  0828               	movf	??___fladd,w
  5310  0DFC  00A0               	movwf	___fladd@b
  5311  0DFD                     l3385:
  5312  0DFD  0833               	movf	___fladd@grs,w
  5313  0DFE  00A8               	movwf	??___fladd
  5314  0DFF  0828               	movf	??___fladd,w
  5315  0E00  00A4               	movwf	___fladd@a
  5316  0E01                     l3387:
  5317  0E01  0821               	movf	___fladd@b+1,w
  5318  0E02  00A8               	movwf	??___fladd
  5319  0E03  0828               	movf	??___fladd,w
  5320  0E04  00B3               	movwf	___fladd@grs
  5321  0E05                     l3389:
  5322  0E05  0825               	movf	___fladd@a+1,w
  5323  0E06  00A8               	movwf	??___fladd
  5324  0E07  0828               	movf	??___fladd,w
  5325  0E08  00A1               	movwf	___fladd@b+1
  5326  0E09                     l3391:
  5327  0E09  0833               	movf	___fladd@grs,w
  5328  0E0A  00A8               	movwf	??___fladd
  5329  0E0B  0828               	movf	??___fladd,w
  5330  0E0C  00A5               	movwf	___fladd@a+1
  5331  0E0D                     l3393:
  5332  0E0D  0822               	movf	___fladd@b+2,w
  5333  0E0E  00A8               	movwf	??___fladd
  5334  0E0F  0828               	movf	??___fladd,w
  5335  0E10  00B3               	movwf	___fladd@grs
  5336  0E11                     l3395:
  5337  0E11  0826               	movf	___fladd@a+2,w
  5338  0E12  00A8               	movwf	??___fladd
  5339  0E13  0828               	movf	??___fladd,w
  5340  0E14  00A2               	movwf	___fladd@b+2
  5341  0E15                     l3397:
  5342  0E15  0833               	movf	___fladd@grs,w
  5343  0E16  00A8               	movwf	??___fladd
  5344  0E17  0828               	movf	??___fladd,w
  5345  0E18  00A6               	movwf	___fladd@a+2
  5346  0E19                     l3399:
  5347  0E19  0823               	movf	___fladd@b+3,w
  5348  0E1A  00A8               	movwf	??___fladd
  5349  0E1B  0828               	movf	??___fladd,w
  5350  0E1C  00B3               	movwf	___fladd@grs
  5351  0E1D                     l3401:
  5352  0E1D  0827               	movf	___fladd@a+3,w
  5353  0E1E  00A8               	movwf	??___fladd
  5354  0E1F  0828               	movf	??___fladd,w
  5355  0E20  00A3               	movwf	___fladd@b+3
  5356  0E21                     l3403:
  5357  0E21  0833               	movf	___fladd@grs,w
  5358  0E22  00A8               	movwf	??___fladd
  5359  0E23  0828               	movf	??___fladd,w
  5360  0E24  00A7               	movwf	___fladd@a+3
  5361  0E25                     l3405:
  5362  0E25  01B3               	clrf	___fladd@grs
  5363  0E26                     l3407:
  5364  0E26  0831               	movf	___fladd@aexp,w
  5365  0E27  00A8               	movwf	??___fladd
  5366  0E28  01A9               	clrf	??___fladd+1
  5367  0E29  0829               	movf	??___fladd+1,w
  5368  0E2A  00AB               	movwf	??___fladd+3
  5369  0E2B  0832               	movf	___fladd@bexp,w
  5370  0E2C  0228               	subwf	??___fladd,w
  5371  0E2D  00AA               	movwf	??___fladd+2
  5372  0E2E  1C03               	skipc
  5373  0E2F  03AB               	decf	??___fladd+3,f
  5374  0E30  082B               	movf	??___fladd+3,w
  5375  0E31  3A80               	xorlw	128
  5376  0E32  00FF               	movwf	btemp+1
  5377  0E33  3080               	movlw	128
  5378  0E34  027F               	subwf	btemp+1,w
  5379  0E35  1D03               	skipz
  5380  0E36  2E39               	goto	u4075
  5381  0E37  301A               	movlw	26
  5382  0E38  022A               	subwf	??___fladd+2,w
  5383  0E39                     u4075:
  5384  0E39  1C03               	skipc
  5385  0E3A  2E3C               	goto	u4071
  5386  0E3B  2E3D               	goto	u4070
  5387  0E3C                     u4071:
  5388  0E3C  2E7A               	goto	l3423
  5389  0E3D                     u4070:
  5390  0E3D                     l3409:
  5391  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5392  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5393  0E3F  0823               	movf	___fladd@b+3,w
  5394  0E40  0422               	iorwf	___fladd@b+2,w
  5395  0E41  0421               	iorwf	___fladd@b+1,w
  5396  0E42  0420               	iorwf	___fladd@b,w
  5397  0E43  1D03               	skipz
  5398  0E44  2E46               	goto	u4081
  5399  0E45  2E48               	goto	u4080
  5400  0E46                     u4081:
  5401  0E46  3001               	movlw	1
  5402  0E47  2E49               	goto	u4090
  5403  0E48                     u4080:
  5404  0E48  3000               	movlw	0
  5405  0E49                     u4090:
  5406  0E49  00A8               	movwf	??___fladd
  5407  0E4A  0828               	movf	??___fladd,w
  5408  0E4B  00B3               	movwf	___fladd@grs
  5409  0E4C  3000               	movlw	0
  5410  0E4D  00A3               	movwf	___fladd@b+3
  5411  0E4E  3000               	movlw	0
  5412  0E4F  00A2               	movwf	___fladd@b+2
  5413  0E50  3000               	movlw	0
  5414  0E51  00A1               	movwf	___fladd@b+1
  5415  0E52  3000               	movlw	0
  5416  0E53  00A0               	movwf	___fladd@b
  5417  0E54  0831               	movf	___fladd@aexp,w
  5418  0E55  00A8               	movwf	??___fladd
  5419  0E56  0828               	movf	??___fladd,w
  5420  0E57  00B2               	movwf	___fladd@bexp
  5421  0E58  2E82               	goto	l742
  5422  0E59                     l744:
  5423  0E59  1C33               	btfss	___fladd@grs,0
  5424  0E5A  2E5C               	goto	u4101
  5425  0E5B  2E5D               	goto	u4100
  5426  0E5C                     u4101:
  5427  0E5C  2E66               	goto	l3413
  5428  0E5D                     u4100:
  5429  0E5D                     l3411:
  5430  0E5D  0833               	movf	___fladd@grs,w
  5431  0E5E  00A8               	movwf	??___fladd
  5432  0E5F  1003               	clrc
  5433  0E60  0C28               	rrf	??___fladd,w
  5434  0E61  3801               	iorlw	1
  5435  0E62  00A9               	movwf	??___fladd+1
  5436  0E63  0829               	movf	??___fladd+1,w
  5437  0E64  00B3               	movwf	___fladd@grs
  5438  0E65  2E68               	goto	l3415
  5439  0E66                     l3413:
  5440  0E66  1003               	clrc
  5441  0E67  0CB3               	rrf	___fladd@grs,f
  5442  0E68                     l3415:
  5443  0E68  1C20               	btfss	___fladd@b,0
  5444  0E69  2E6B               	goto	u4111
  5445  0E6A  2E6C               	goto	u4110
  5446  0E6B                     u4111:
  5447  0E6B  2E6D               	goto	l3419
  5448  0E6C                     u4110:
  5449  0E6C                     l3417:
  5450  0E6C  17B3               	bsf	___fladd@grs,7
  5451  0E6D                     l3419:
  5452  0E6D  3001               	movlw	1
  5453  0E6E  00A8               	movwf	??___fladd
  5454  0E6F                     u4125:
  5455  0E6F  0D23               	rlf	___fladd@b+3,w
  5456  0E70  0CA3               	rrf	___fladd@b+3,f
  5457  0E71  0CA2               	rrf	___fladd@b+2,f
  5458  0E72  0CA1               	rrf	___fladd@b+1,f
  5459  0E73  0CA0               	rrf	___fladd@b,f
  5460  0E74  0BA8               	decfsz	??___fladd& (0+127),f
  5461  0E75  2E6F               	goto	u4125
  5462  0E76                     l3421:
  5463  0E76  3001               	movlw	1
  5464  0E77  00A8               	movwf	??___fladd
  5465  0E78  0828               	movf	??___fladd,w
  5466  0E79  07B2               	addwf	___fladd@bexp,f
  5467  0E7A                     l3423:
  5468  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0E7C  0831               	movf	___fladd@aexp,w
  5471  0E7D  0232               	subwf	___fladd@bexp,w
  5472  0E7E  1C03               	skipc
  5473  0E7F  2E81               	goto	u4131
  5474  0E80  2E82               	goto	u4130
  5475  0E81                     u4131:
  5476  0E81  2E59               	goto	l744
  5477  0E82                     u4130:
  5478  0E82                     l742:
  5479  0E82  1B30               	btfsc	___fladd@signs,6
  5480  0E83  2E85               	goto	u4141
  5481  0E84  2E86               	goto	u4140
  5482  0E85                     u4141:
  5483  0E85  2ED1               	goto	l3449
  5484  0E86                     u4140:
  5485  0E86                     l3425:
  5486  0E86  0832               	movf	___fladd@bexp,w
  5487  0E87  1D03               	btfss	3,2
  5488  0E88  2E8A               	goto	u4151
  5489  0E89  2E8B               	goto	u4150
  5490  0E8A                     u4151:
  5491  0E8A  2E94               	goto	l3431
  5492  0E8B                     u4150:
  5493  0E8B                     l3427:
  5494  0E8B  3000               	movlw	0
  5495  0E8C  00A3               	movwf	?___fladd+3
  5496  0E8D  3000               	movlw	0
  5497  0E8E  00A2               	movwf	?___fladd+2
  5498  0E8F  3000               	movlw	0
  5499  0E90  00A1               	movwf	?___fladd+1
  5500  0E91  3000               	movlw	0
  5501  0E92  00A0               	movwf	?___fladd
  5502  0E93  2FFF               	goto	l751
  5503  0E94                     l3431:
  5504  0E94  0824               	movf	___fladd@a,w
  5505  0E95  07A0               	addwf	___fladd@b,f
  5506  0E96  0825               	movf	___fladd@a+1,w
  5507  0E97  1103               	clrz
  5508  0E98  1803               	skipnc
  5509  0E99  3E01               	addlw	1
  5510  0E9A  1903               	skipnz
  5511  0E9B  2E9D               	goto	u4161
  5512  0E9C  07A1               	addwf	___fladd@b+1,f
  5513  0E9D                     u4161:
  5514  0E9D  0826               	movf	___fladd@a+2,w
  5515  0E9E  1103               	clrz
  5516  0E9F  1803               	skipnc
  5517  0EA0  3E01               	addlw	1
  5518  0EA1  1903               	skipnz
  5519  0EA2  2EA4               	goto	u4162
  5520  0EA3  07A2               	addwf	___fladd@b+2,f
  5521  0EA4                     u4162:
  5522  0EA4  0827               	movf	___fladd@a+3,w
  5523  0EA5  1103               	clrz
  5524  0EA6  1803               	skipnc
  5525  0EA7  3E01               	addlw	1
  5526  0EA8  1903               	skipnz
  5527  0EA9  2EAB               	goto	u4163
  5528  0EAA  07A3               	addwf	___fladd@b+3,f
  5529  0EAB                     u4163:
  5530  0EAB                     l3433:
  5531  0EAB  1C23               	btfss	___fladd@b+3,0
  5532  0EAC  2EAE               	goto	u4171
  5533  0EAD  2EAF               	goto	u4170
  5534  0EAE                     u4171:
  5535  0EAE  2F85               	goto	l3483
  5536  0EAF                     u4170:
  5537  0EAF                     l3435:
  5538  0EAF  1C33               	btfss	___fladd@grs,0
  5539  0EB0  2EB2               	goto	u4181
  5540  0EB1  2EB3               	goto	u4180
  5541  0EB2                     u4181:
  5542  0EB2  2EBC               	goto	l3439
  5543  0EB3                     u4180:
  5544  0EB3                     l3437:
  5545  0EB3  0833               	movf	___fladd@grs,w
  5546  0EB4  00A8               	movwf	??___fladd
  5547  0EB5  1003               	clrc
  5548  0EB6  0C28               	rrf	??___fladd,w
  5549  0EB7  3801               	iorlw	1
  5550  0EB8  00A9               	movwf	??___fladd+1
  5551  0EB9  0829               	movf	??___fladd+1,w
  5552  0EBA  00B3               	movwf	___fladd@grs
  5553  0EBB  2EBE               	goto	l3441
  5554  0EBC                     l3439:
  5555  0EBC  1003               	clrc
  5556  0EBD  0CB3               	rrf	___fladd@grs,f
  5557  0EBE                     l3441:
  5558  0EBE  1C20               	btfss	___fladd@b,0
  5559  0EBF  2EC1               	goto	u4191
  5560  0EC0  2EC2               	goto	u4190
  5561  0EC1                     u4191:
  5562  0EC1  2EC3               	goto	l3445
  5563  0EC2                     u4190:
  5564  0EC2                     l3443:
  5565  0EC2  17B3               	bsf	___fladd@grs,7
  5566  0EC3                     l3445:
  5567  0EC3  3001               	movlw	1
  5568  0EC4  00A8               	movwf	??___fladd
  5569  0EC5                     u4205:
  5570  0EC5  0D23               	rlf	___fladd@b+3,w
  5571  0EC6  0CA3               	rrf	___fladd@b+3,f
  5572  0EC7  0CA2               	rrf	___fladd@b+2,f
  5573  0EC8  0CA1               	rrf	___fladd@b+1,f
  5574  0EC9  0CA0               	rrf	___fladd@b,f
  5575  0ECA  0BA8               	decfsz	??___fladd& (0+127),f
  5576  0ECB  2EC5               	goto	u4205
  5577  0ECC                     l3447:
  5578  0ECC  3001               	movlw	1
  5579  0ECD  00A8               	movwf	??___fladd
  5580  0ECE  0828               	movf	??___fladd,w
  5581  0ECF  07B2               	addwf	___fladd@bexp,f
  5582  0ED0  2F85               	goto	l3483
  5583  0ED1                     l3449:
  5584  0ED1  0823               	movf	___fladd@b+3,w
  5585  0ED2  3A80               	xorlw	128
  5586  0ED3  00FF               	movwf	btemp+1
  5587  0ED4  0827               	movf	___fladd@a+3,w
  5588  0ED5  3A80               	xorlw	128
  5589  0ED6  027F               	subwf	btemp+1,w
  5590  0ED7  1D03               	skipz
  5591  0ED8  2EE3               	goto	u4213
  5592  0ED9  0826               	movf	___fladd@a+2,w
  5593  0EDA  0222               	subwf	___fladd@b+2,w
  5594  0EDB  1D03               	skipz
  5595  0EDC  2EE3               	goto	u4213
  5596  0EDD  0825               	movf	___fladd@a+1,w
  5597  0EDE  0221               	subwf	___fladd@b+1,w
  5598  0EDF  1D03               	skipz
  5599  0EE0  2EE3               	goto	u4213
  5600  0EE1  0824               	movf	___fladd@a,w
  5601  0EE2  0220               	subwf	___fladd@b,w
  5602  0EE3                     u4213:
  5603  0EE3  1803               	skipnc
  5604  0EE4  2EE6               	goto	u4211
  5605  0EE5  2EE7               	goto	u4210
  5606  0EE6                     u4211:
  5607  0EE6  2F3F               	goto	l3459
  5608  0EE7                     u4210:
  5609  0EE7                     l3451:
  5610  0EE7  30FF               	movlw	255
  5611  0EE8  00A8               	movwf	??___fladd
  5612  0EE9  30FF               	movlw	255
  5613  0EEA  00A9               	movwf	??___fladd+1
  5614  0EEB  30FF               	movlw	255
  5615  0EEC  00AA               	movwf	??___fladd+2
  5616  0EED  30FF               	movlw	255
  5617  0EEE  00AB               	movwf	??___fladd+3
  5618  0EEF  0824               	movf	___fladd@a,w
  5619  0EF0  00AC               	movwf	??___fladd+4
  5620  0EF1  0825               	movf	___fladd@a+1,w
  5621  0EF2  00AD               	movwf	??___fladd+5
  5622  0EF3  0826               	movf	___fladd@a+2,w
  5623  0EF4  00AE               	movwf	??___fladd+6
  5624  0EF5  0827               	movf	___fladd@a+3,w
  5625  0EF6  00AF               	movwf	??___fladd+7
  5626  0EF7  0820               	movf	___fladd@b,w
  5627  0EF8  02AC               	subwf	??___fladd+4,f
  5628  0EF9  0821               	movf	___fladd@b+1,w
  5629  0EFA  1C03               	skipc
  5630  0EFB  0F21               	incfsz	___fladd@b+1,w
  5631  0EFC  2EFE               	goto	u4221
  5632  0EFD  2EFF               	goto	u4222
  5633  0EFE                     u4221:
  5634  0EFE  02AD               	subwf	??___fladd+5,f
  5635  0EFF                     u4222:
  5636  0EFF  0822               	movf	___fladd@b+2,w
  5637  0F00  1C03               	skipc
  5638  0F01  0F22               	incfsz	___fladd@b+2,w
  5639  0F02  2F04               	goto	u4223
  5640  0F03  2F05               	goto	u4224
  5641  0F04                     u4223:
  5642  0F04  02AE               	subwf	??___fladd+6,f
  5643  0F05                     u4224:
  5644  0F05  0823               	movf	___fladd@b+3,w
  5645  0F06  1C03               	skipc
  5646  0F07  0F23               	incfsz	___fladd@b+3,w
  5647  0F08  2F0A               	goto	u4225
  5648  0F09  2F0B               	goto	u4226
  5649  0F0A                     u4225:
  5650  0F0A  02AF               	subwf	??___fladd+7,f
  5651  0F0B                     u4226:
  5652  0F0B  082C               	movf	??___fladd+4,w
  5653  0F0C  07A8               	addwf	??___fladd,f
  5654  0F0D  082D               	movf	??___fladd+5,w
  5655  0F0E  1803               	skipnc
  5656  0F0F  0F2D               	incfsz	??___fladd+5,w
  5657  0F10  2F12               	goto	u4230
  5658  0F11  2F13               	goto	u4231
  5659  0F12                     u4230:
  5660  0F12  07A9               	addwf	??___fladd+1,f
  5661  0F13                     u4231:
  5662  0F13  082E               	movf	??___fladd+6,w
  5663  0F14  1803               	skipnc
  5664  0F15  0F2E               	incfsz	??___fladd+6,w
  5665  0F16  2F18               	goto	u4232
  5666  0F17  2F19               	goto	u4233
  5667  0F18                     u4232:
  5668  0F18  07AA               	addwf	??___fladd+2,f
  5669  0F19                     u4233:
  5670  0F19  082F               	movf	??___fladd+7,w
  5671  0F1A  1803               	skipnc
  5672  0F1B  0A2F               	incf	??___fladd+7,w
  5673  0F1C  07AB               	addwf	??___fladd+3,f
  5674  0F1D  082B               	movf	??___fladd+3,w
  5675  0F1E  00A3               	movwf	___fladd@b+3
  5676  0F1F  082A               	movf	??___fladd+2,w
  5677  0F20  00A2               	movwf	___fladd@b+2
  5678  0F21  0829               	movf	??___fladd+1,w
  5679  0F22  00A1               	movwf	___fladd@b+1
  5680  0F23  0828               	movf	??___fladd,w
  5681  0F24  00A0               	movwf	___fladd@b
  5682  0F25                     l3453:
  5683  0F25  3080               	movlw	128
  5684  0F26  00A8               	movwf	??___fladd
  5685  0F27  0828               	movf	??___fladd,w
  5686  0F28  06B0               	xorwf	___fladd@signs,f
  5687  0F29  09B3               	comf	___fladd@grs,f
  5688  0F2A  0AB3               	incf	___fladd@grs,f
  5689  0F2B                     l3455:
  5690  0F2B  0833               	movf	___fladd@grs,w
  5691  0F2C  1D03               	btfss	3,2
  5692  0F2D  2F2F               	goto	u4241
  5693  0F2E  2F30               	goto	u4240
  5694  0F2F                     u4241:
  5695  0F2F  2F4D               	goto	l759
  5696  0F30                     u4240:
  5697  0F30                     l3457:
  5698  0F30  3001               	movlw	1
  5699  0F31  07A0               	addwf	___fladd@b,f
  5700  0F32  3000               	movlw	0
  5701  0F33  1803               	skipnc
  5702  0F34  3001               	movlw	1
  5703  0F35  07A1               	addwf	___fladd@b+1,f
  5704  0F36  3000               	movlw	0
  5705  0F37  1803               	skipnc
  5706  0F38  3001               	movlw	1
  5707  0F39  07A2               	addwf	___fladd@b+2,f
  5708  0F3A  3000               	movlw	0
  5709  0F3B  1803               	skipnc
  5710  0F3C  3001               	movlw	1
  5711  0F3D  07A3               	addwf	___fladd@b+3,f
  5712  0F3E  2F4D               	goto	l759
  5713  0F3F                     l3459:
  5714  0F3F  0824               	movf	___fladd@a,w
  5715  0F40  02A0               	subwf	___fladd@b,f
  5716  0F41  0825               	movf	___fladd@a+1,w
  5717  0F42  1C03               	skipc
  5718  0F43  0F25               	incfsz	___fladd@a+1,w
  5719  0F44  02A1               	subwf	___fladd@b+1,f
  5720  0F45  0826               	movf	___fladd@a+2,w
  5721  0F46  1C03               	skipc
  5722  0F47  0F26               	incfsz	___fladd@a+2,w
  5723  0F48  02A2               	subwf	___fladd@b+2,f
  5724  0F49  0827               	movf	___fladd@a+3,w
  5725  0F4A  1C03               	skipc
  5726  0F4B  0F27               	incfsz	___fladd@a+3,w
  5727  0F4C  02A3               	subwf	___fladd@b+3,f
  5728  0F4D                     l759:
  5729  0F4D  0823               	movf	___fladd@b+3,w
  5730  0F4E  0422               	iorwf	___fladd@b+2,w
  5731  0F4F  0421               	iorwf	___fladd@b+1,w
  5732  0F50  0420               	iorwf	___fladd@b,w
  5733  0F51  1D03               	skipz
  5734  0F52  2F54               	goto	u4251
  5735  0F53  2F55               	goto	u4250
  5736  0F54                     u4251:
  5737  0F54  2F81               	goto	l3481
  5738  0F55                     u4250:
  5739  0F55                     l3461:
  5740  0F55  0833               	movf	___fladd@grs,w
  5741  0F56  1D03               	btfss	3,2
  5742  0F57  2F59               	goto	u4261
  5743  0F58  2F5A               	goto	u4260
  5744  0F59                     u4261:
  5745  0F59  2F81               	goto	l3481
  5746  0F5A                     u4260:
  5747  0F5A                     l3463:
  5748  0F5A  3000               	movlw	0
  5749  0F5B  00A3               	movwf	?___fladd+3
  5750  0F5C  3000               	movlw	0
  5751  0F5D  00A2               	movwf	?___fladd+2
  5752  0F5E  3000               	movlw	0
  5753  0F5F  00A1               	movwf	?___fladd+1
  5754  0F60  3000               	movlw	0
  5755  0F61  00A0               	movwf	?___fladd
  5756  0F62  2FFF               	goto	l751
  5757  0F63                     l3467:
  5758  0F63  3001               	movlw	1
  5759  0F64  00A8               	movwf	??___fladd
  5760  0F65                     u4275:
  5761  0F65  1003               	clrc
  5762  0F66  0DA0               	rlf	___fladd@b,f
  5763  0F67  0DA1               	rlf	___fladd@b+1,f
  5764  0F68  0DA2               	rlf	___fladd@b+2,f
  5765  0F69  0DA3               	rlf	___fladd@b+3,f
  5766  0F6A  0BA8               	decfsz	??___fladd,f
  5767  0F6B  2F65               	goto	u4275
  5768  0F6C                     l3469:
  5769  0F6C  1FB3               	btfss	___fladd@grs,7
  5770  0F6D  2F6F               	goto	u4281
  5771  0F6E  2F70               	goto	u4280
  5772  0F6F                     u4281:
  5773  0F6F  2F71               	goto	l763
  5774  0F70                     u4280:
  5775  0F70                     l3471:
  5776  0F70  1420               	bsf	___fladd@b,0
  5777  0F71                     l763:
  5778  0F71  1C33               	btfss	___fladd@grs,0
  5779  0F72  2F74               	goto	u4291
  5780  0F73  2F75               	goto	u4290
  5781  0F74                     u4291:
  5782  0F74  2F78               	goto	l3475
  5783  0F75                     u4290:
  5784  0F75                     l3473:
  5785  0F75  1403               	setc
  5786  0F76  0DB3               	rlf	___fladd@grs,f
  5787  0F77  2F7A               	goto	l3477
  5788  0F78                     l3475:
  5789  0F78  1003               	clrc
  5790  0F79  0DB3               	rlf	___fladd@grs,f
  5791  0F7A                     l3477:
  5792  0F7A  0832               	movf	___fladd@bexp,w
  5793  0F7B  1903               	btfsc	3,2
  5794  0F7C  2F7E               	goto	u4301
  5795  0F7D  2F7F               	goto	u4300
  5796  0F7E                     u4301:
  5797  0F7E  2F81               	goto	l3481
  5798  0F7F                     u4300:
  5799  0F7F                     l3479:
  5800  0F7F  3001               	movlw	1
  5801  0F80  02B2               	subwf	___fladd@bexp,f
  5802  0F81                     l3481:
  5803  0F81  1FA2               	btfss	___fladd@b+2,7
  5804  0F82  2F84               	goto	u4311
  5805  0F83  2F85               	goto	u4310
  5806  0F84                     u4311:
  5807  0F84  2F63               	goto	l3467
  5808  0F85                     u4310:
  5809  0F85                     l3483:
  5810  0F85  01B1               	clrf	___fladd@aexp
  5811  0F86                     l3485:
  5812  0F86  1FB3               	btfss	___fladd@grs,7
  5813  0F87  2F89               	goto	u4321
  5814  0F88  2F8A               	goto	u4320
  5815  0F89                     u4321:
  5816  0F89  2F98               	goto	l3493
  5817  0F8A                     u4320:
  5818  0F8A                     l3487:
  5819  0F8A  0833               	movf	___fladd@grs,w
  5820  0F8B  397F               	andlw	127
  5821  0F8C  1903               	btfsc	3,2
  5822  0F8D  2F8F               	goto	u4331
  5823  0F8E  2F90               	goto	u4330
  5824  0F8F                     u4331:
  5825  0F8F  2F93               	goto	l769
  5826  0F90                     u4330:
  5827  0F90                     l3489:
  5828  0F90  01B1               	clrf	___fladd@aexp
  5829  0F91  0AB1               	incf	___fladd@aexp,f
  5830  0F92  2F98               	goto	l3493
  5831  0F93                     l769:
  5832  0F93  1C20               	btfss	___fladd@b,0
  5833  0F94  2F96               	goto	u4341
  5834  0F95  2F97               	goto	u4340
  5835  0F96                     u4341:
  5836  0F96  2F98               	goto	l3493
  5837  0F97                     u4340:
  5838  0F97  2F90               	goto	l3489
  5839  0F98                     l3493:
  5840  0F98  0831               	movf	___fladd@aexp,w
  5841  0F99  1903               	btfsc	3,2
  5842  0F9A  2F9C               	goto	u4351
  5843  0F9B  2F9D               	goto	u4350
  5844  0F9C                     u4351:
  5845  0F9C  2FD1               	goto	l772
  5846  0F9D                     u4350:
  5847  0F9D                     l3495:
  5848  0F9D  3001               	movlw	1
  5849  0F9E  07A0               	addwf	___fladd@b,f
  5850  0F9F  3000               	movlw	0
  5851  0FA0  1803               	skipnc
  5852  0FA1  3001               	movlw	1
  5853  0FA2  07A1               	addwf	___fladd@b+1,f
  5854  0FA3  3000               	movlw	0
  5855  0FA4  1803               	skipnc
  5856  0FA5  3001               	movlw	1
  5857  0FA6  07A2               	addwf	___fladd@b+2,f
  5858  0FA7  3000               	movlw	0
  5859  0FA8  1803               	skipnc
  5860  0FA9  3001               	movlw	1
  5861  0FAA  07A3               	addwf	___fladd@b+3,f
  5862  0FAB                     l3497:
  5863  0FAB  1C23               	btfss	___fladd@b+3,0
  5864  0FAC  2FAE               	goto	u4361
  5865  0FAD  2FAF               	goto	u4360
  5866  0FAE                     u4361:
  5867  0FAE  2FD1               	goto	l772
  5868  0FAF                     u4360:
  5869  0FAF                     l3499:
  5870  0FAF  0820               	movf	___fladd@b,w
  5871  0FB0  00A8               	movwf	??___fladd
  5872  0FB1  0821               	movf	___fladd@b+1,w
  5873  0FB2  00A9               	movwf	??___fladd+1
  5874  0FB3  0822               	movf	___fladd@b+2,w
  5875  0FB4  00AA               	movwf	??___fladd+2
  5876  0FB5  0823               	movf	___fladd@b+3,w
  5877  0FB6  00AB               	movwf	??___fladd+3
  5878  0FB7  3001               	movlw	1
  5879  0FB8  00AC               	movwf	??___fladd+4
  5880  0FB9                     u4375:
  5881  0FB9  0D2B               	rlf	??___fladd+3,w
  5882  0FBA  0CAB               	rrf	??___fladd+3,f
  5883  0FBB  0CAA               	rrf	??___fladd+2,f
  5884  0FBC  0CA9               	rrf	??___fladd+1,f
  5885  0FBD  0CA8               	rrf	??___fladd,f
  5886  0FBE                     u4370:
  5887  0FBE  0BAC               	decfsz	??___fladd+4,f
  5888  0FBF  2FB9               	goto	u4375
  5889  0FC0  082B               	movf	??___fladd+3,w
  5890  0FC1  00A3               	movwf	___fladd@b+3
  5891  0FC2  082A               	movf	??___fladd+2,w
  5892  0FC3  00A2               	movwf	___fladd@b+2
  5893  0FC4  0829               	movf	??___fladd+1,w
  5894  0FC5  00A1               	movwf	___fladd@b+1
  5895  0FC6  0828               	movf	??___fladd,w
  5896  0FC7  00A0               	movwf	___fladd@b
  5897  0FC8  0A32               	incf	___fladd@bexp,w
  5898  0FC9  1903               	btfsc	3,2
  5899  0FCA  2FCC               	goto	u4381
  5900  0FCB  2FCD               	goto	u4380
  5901  0FCC                     u4381:
  5902  0FCC  2FD1               	goto	l772
  5903  0FCD                     u4380:
  5904  0FCD                     l3501:
  5905  0FCD  3001               	movlw	1
  5906  0FCE  00A8               	movwf	??___fladd
  5907  0FCF  0828               	movf	??___fladd,w
  5908  0FD0  07B2               	addwf	___fladd@bexp,f
  5909  0FD1                     l772:
  5910  0FD1  0A32               	incf	___fladd@bexp,w
  5911  0FD2  1903               	btfsc	3,2
  5912  0FD3  2FD5               	goto	u4391
  5913  0FD4  2FD6               	goto	u4390
  5914  0FD5                     u4391:
  5915  0FD5  2FDB               	goto	l3505
  5916  0FD6                     u4390:
  5917  0FD6                     l3503:
  5918  0FD6  0832               	movf	___fladd@bexp,w
  5919  0FD7  1D03               	btfss	3,2
  5920  0FD8  2FDA               	goto	u4401
  5921  0FD9  2FDB               	goto	u4400
  5922  0FDA                     u4401:
  5923  0FDA  2FE9               	goto	l3511
  5924  0FDB                     u4400:
  5925  0FDB                     l3505:
  5926  0FDB  3000               	movlw	0
  5927  0FDC  00A3               	movwf	___fladd@b+3
  5928  0FDD  3000               	movlw	0
  5929  0FDE  00A2               	movwf	___fladd@b+2
  5930  0FDF  3000               	movlw	0
  5931  0FE0  00A1               	movwf	___fladd@b+1
  5932  0FE1  3000               	movlw	0
  5933  0FE2  00A0               	movwf	___fladd@b
  5934  0FE3                     l3507:
  5935  0FE3  0832               	movf	___fladd@bexp,w
  5936  0FE4  1D03               	btfss	3,2
  5937  0FE5  2FE7               	goto	u4411
  5938  0FE6  2FE8               	goto	u4410
  5939  0FE7                     u4411:
  5940  0FE7  2FE9               	goto	l3511
  5941  0FE8                     u4410:
  5942  0FE8                     l3509:
  5943  0FE8  01B0               	clrf	___fladd@signs
  5944  0FE9                     l3511:
  5945  0FE9  1C32               	btfss	___fladd@bexp,0
  5946  0FEA  2FEC               	goto	u4421
  5947  0FEB  2FED               	goto	u4420
  5948  0FEC                     u4421:
  5949  0FEC  2FEF               	goto	l3515
  5950  0FED                     u4420:
  5951  0FED                     l3513:
  5952  0FED  17A2               	bsf	___fladd@b+2,7
  5953  0FEE  2FF3               	goto	l780
  5954  0FEF                     l3515:
  5955  0FEF  307F               	movlw	127
  5956  0FF0  00A8               	movwf	??___fladd
  5957  0FF1  0828               	movf	??___fladd,w
  5958  0FF2  05A2               	andwf	___fladd@b+2,f
  5959  0FF3                     l780:
  5960  0FF3  0832               	movf	___fladd@bexp,w
  5961  0FF4  00A8               	movwf	??___fladd
  5962  0FF5  1003               	clrc
  5963  0FF6  0C28               	rrf	??___fladd,w
  5964  0FF7  00A9               	movwf	??___fladd+1
  5965  0FF8  0829               	movf	??___fladd+1,w
  5966  0FF9  00A3               	movwf	___fladd@b+3
  5967  0FFA                     l3517:
  5968  0FFA  1FB0               	btfss	___fladd@signs,7
  5969  0FFB  2FFD               	goto	u4431
  5970  0FFC  2FFE               	goto	u4430
  5971  0FFD                     u4431:
  5972  0FFD  2FFF               	goto	l781
  5973  0FFE                     u4430:
  5974  0FFE                     l3519:
  5975  0FFE  17A3               	bsf	___fladd@b+3,7
  5976  0FFF                     l781:
  5977  0FFF                     l751:
  5978  0FFF  0008               	return
  5979  1000                     __end_of___fladd:
  5980                           
  5981                           	psect	text21
  5982  0479                     __ptext21:	
  5983 ;; *************** function ___flmul *****************
  5984 ;; Defined at:
  5985 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  b               4   37[BANK0 ] unsigned char 
  5988 ;;  a               4   41[BANK0 ] unsigned char 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  prod            4   57[BANK0 ] struct .
  5991 ;;  grs             4   52[BANK0 ] unsigned long 
  5992 ;;  temp            2   61[BANK0 ] struct .
  5993 ;;  bexp            1   56[BANK0 ] unsigned char 
  5994 ;;  aexp            1   51[BANK0 ] unsigned char 
  5995 ;;  sign            1   50[BANK0 ] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  4   37[BANK0 ] unsigned char 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6005 ;;      Params:         0       8       0       0       0
  6006 ;;      Locals:         0      13       0       0       0
  6007 ;;      Temps:          0       5       0       0       0
  6008 ;;      Totals:         0      26       0       0       0
  6009 ;;Total ram usage:       26 bytes
  6010 ;; Hardware stack levels used: 1
  6011 ;; Hardware stack levels required when called: 2
  6012 ;; This function calls:
  6013 ;;		__Umul8_16
  6014 ;; This function is called by:
  6015 ;;		_ADC_convert
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           
  6020                           ;psect for function ___flmul
  6021  0479                     ___flmul:
  6022  0479                     l3845:	
  6023                           ;incstack = 0
  6024                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6025                           
  6026  0479  1283               	bcf	3,5	;RP0=0, select bank0
  6027  047A  1303               	bcf	3,6	;RP1=0, select bank0
  6028  047B  0848               	movf	___flmul@b+3,w
  6029  047C  3980               	andlw	128
  6030  047D  00CD               	movwf	??___flmul
  6031  047E  084D               	movf	??___flmul,w
  6032  047F  00D2               	movwf	___flmul@sign
  6033  0480                     l3847:
  6034  0480  0848               	movf	___flmul@b+3,w
  6035  0481  00CD               	movwf	??___flmul
  6036  0482  074D               	addwf	??___flmul,w
  6037  0483  00CE               	movwf	??___flmul+1
  6038  0484  084E               	movf	??___flmul+1,w
  6039  0485  00D8               	movwf	___flmul@bexp
  6040  0486                     l3849:
  6041  0486  1FC7               	btfss	___flmul@b+2,7
  6042  0487  2C89               	goto	u5181
  6043  0488  2C8A               	goto	u5180
  6044  0489                     u5181:
  6045  0489  2C8B               	goto	l3853
  6046  048A                     u5180:
  6047  048A                     l3851:
  6048  048A  1458               	bsf	___flmul@bexp,0
  6049  048B                     l3853:
  6050  048B  0858               	movf	___flmul@bexp,w
  6051  048C  1903               	btfsc	3,2
  6052  048D  2C8F               	goto	u5191
  6053  048E  2C90               	goto	u5190
  6054  048F                     u5191:
  6055  048F  2C9F               	goto	l3861
  6056  0490                     u5190:
  6057  0490                     l3855:
  6058  0490  0A58               	incf	___flmul@bexp,w
  6059  0491  1D03               	btfss	3,2
  6060  0492  2C94               	goto	u5201
  6061  0493  2C95               	goto	u5200
  6062  0494                     u5201:
  6063  0494  2C9D               	goto	l3859
  6064  0495                     u5200:
  6065  0495                     l3857:
  6066  0495  3000               	movlw	0
  6067  0496  00C8               	movwf	___flmul@b+3
  6068  0497  3000               	movlw	0
  6069  0498  00C7               	movwf	___flmul@b+2
  6070  0499  3000               	movlw	0
  6071  049A  00C6               	movwf	___flmul@b+1
  6072  049B  3000               	movlw	0
  6073  049C  00C5               	movwf	___flmul@b
  6074  049D                     l3859:
  6075  049D  17C7               	bsf	___flmul@b+2,7
  6076  049E  2CA7               	goto	l3863
  6077  049F                     l3861:
  6078  049F  3000               	movlw	0
  6079  04A0  00C8               	movwf	___flmul@b+3
  6080  04A1  3000               	movlw	0
  6081  04A2  00C7               	movwf	___flmul@b+2
  6082  04A3  3000               	movlw	0
  6083  04A4  00C6               	movwf	___flmul@b+1
  6084  04A5  3000               	movlw	0
  6085  04A6  00C5               	movwf	___flmul@b
  6086  04A7                     l3863:
  6087  04A7  084C               	movf	___flmul@a+3,w
  6088  04A8  3980               	andlw	128
  6089  04A9  00CD               	movwf	??___flmul
  6090  04AA  084D               	movf	??___flmul,w
  6091  04AB  06D2               	xorwf	___flmul@sign,f
  6092  04AC                     l3865:
  6093  04AC  084C               	movf	___flmul@a+3,w
  6094  04AD  00CD               	movwf	??___flmul
  6095  04AE  074D               	addwf	??___flmul,w
  6096  04AF  00CE               	movwf	??___flmul+1
  6097  04B0  084E               	movf	??___flmul+1,w
  6098  04B1  00D3               	movwf	___flmul@aexp
  6099  04B2                     l3867:
  6100  04B2  1FCB               	btfss	___flmul@a+2,7
  6101  04B3  2CB5               	goto	u5211
  6102  04B4  2CB6               	goto	u5210
  6103  04B5                     u5211:
  6104  04B5  2CB7               	goto	l3871
  6105  04B6                     u5210:
  6106  04B6                     l3869:
  6107  04B6  1453               	bsf	___flmul@aexp,0
  6108  04B7                     l3871:
  6109  04B7  0853               	movf	___flmul@aexp,w
  6110  04B8  1903               	btfsc	3,2
  6111  04B9  2CBB               	goto	u5221
  6112  04BA  2CBC               	goto	u5220
  6113  04BB                     u5221:
  6114  04BB  2CCB               	goto	l3879
  6115  04BC                     u5220:
  6116  04BC                     l3873:
  6117  04BC  0A53               	incf	___flmul@aexp,w
  6118  04BD  1D03               	btfss	3,2
  6119  04BE  2CC0               	goto	u5231
  6120  04BF  2CC1               	goto	u5230
  6121  04C0                     u5231:
  6122  04C0  2CC9               	goto	l3877
  6123  04C1                     u5230:
  6124  04C1                     l3875:
  6125  04C1  3000               	movlw	0
  6126  04C2  00CC               	movwf	___flmul@a+3
  6127  04C3  3000               	movlw	0
  6128  04C4  00CB               	movwf	___flmul@a+2
  6129  04C5  3000               	movlw	0
  6130  04C6  00CA               	movwf	___flmul@a+1
  6131  04C7  3000               	movlw	0
  6132  04C8  00C9               	movwf	___flmul@a
  6133  04C9                     l3877:
  6134  04C9  17CB               	bsf	___flmul@a+2,7
  6135  04CA  2CD3               	goto	l3881
  6136  04CB                     l3879:
  6137  04CB  3000               	movlw	0
  6138  04CC  00CC               	movwf	___flmul@a+3
  6139  04CD  3000               	movlw	0
  6140  04CE  00CB               	movwf	___flmul@a+2
  6141  04CF  3000               	movlw	0
  6142  04D0  00CA               	movwf	___flmul@a+1
  6143  04D1  3000               	movlw	0
  6144  04D2  00C9               	movwf	___flmul@a
  6145  04D3                     l3881:
  6146  04D3  0853               	movf	___flmul@aexp,w
  6147  04D4  1903               	btfsc	3,2
  6148  04D5  2CD7               	goto	u5241
  6149  04D6  2CD8               	goto	u5240
  6150  04D7                     u5241:
  6151  04D7  2CDD               	goto	l3885
  6152  04D8                     u5240:
  6153  04D8                     l3883:
  6154  04D8  0858               	movf	___flmul@bexp,w
  6155  04D9  1D03               	btfss	3,2
  6156  04DA  2CDC               	goto	u5251
  6157  04DB  2CDD               	goto	u5250
  6158  04DC                     u5251:
  6159  04DC  2CE6               	goto	l3889
  6160  04DD                     u5250:
  6161  04DD                     l3885:
  6162  04DD  3000               	movlw	0
  6163  04DE  00C8               	movwf	?___flmul+3
  6164  04DF  3000               	movlw	0
  6165  04E0  00C7               	movwf	?___flmul+2
  6166  04E1  3000               	movlw	0
  6167  04E2  00C6               	movwf	?___flmul+1
  6168  04E3  3000               	movlw	0
  6169  04E4  00C5               	movwf	?___flmul
  6170  04E5  2FD9               	goto	l834
  6171  04E6                     l3889:
  6172  04E6  0845               	movf	___flmul@b,w
  6173  04E7  00CD               	movwf	??___flmul
  6174  04E8  084D               	movf	??___flmul,w
  6175  04E9  00F4               	movwf	__Umul8_16@multiplicand
  6176  04EA  084B               	movf	___flmul@a+2,w
  6177  04EB  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6178  04F0  0875               	movf	?__Umul8_16+1,w
  6179  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  6180  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  6181  04F3  00DE               	movwf	___flmul@temp+1
  6182  04F4  0874               	movf	?__Umul8_16,w
  6183  04F5  00DD               	movwf	___flmul@temp
  6184  04F6                     l3891:
  6185  04F6  085D               	movf	___flmul@temp,w
  6186  04F7  00CD               	movwf	??___flmul
  6187  04F8  01CE               	clrf	??___flmul+1
  6188  04F9  01CF               	clrf	??___flmul+2
  6189  04FA  01D0               	clrf	??___flmul+3
  6190  04FB  0850               	movf	??___flmul+3,w
  6191  04FC  00D7               	movwf	___flmul@grs+3
  6192  04FD  084F               	movf	??___flmul+2,w
  6193  04FE  00D6               	movwf	___flmul@grs+2
  6194  04FF  084E               	movf	??___flmul+1,w
  6195  0500  00D5               	movwf	___flmul@grs+1
  6196  0501  084D               	movf	??___flmul,w
  6197  0502  00D4               	movwf	___flmul@grs
  6198  0503                     l3893:
  6199  0503  085E               	movf	___flmul@temp+1,w
  6200  0504  00CD               	movwf	??___flmul
  6201  0505  01CE               	clrf	??___flmul+1
  6202  0506  01CF               	clrf	??___flmul+2
  6203  0507  01D0               	clrf	??___flmul+3
  6204  0508  0850               	movf	??___flmul+3,w
  6205  0509  00DC               	movwf	___flmul@prod+3
  6206  050A  084F               	movf	??___flmul+2,w
  6207  050B  00DB               	movwf	___flmul@prod+2
  6208  050C  084E               	movf	??___flmul+1,w
  6209  050D  00DA               	movwf	___flmul@prod+1
  6210  050E  084D               	movf	??___flmul,w
  6211  050F  00D9               	movwf	___flmul@prod
  6212  0510  0846               	movf	___flmul@b+1,w
  6213  0511  00CD               	movwf	??___flmul
  6214  0512  084D               	movf	??___flmul,w
  6215  0513  00F4               	movwf	__Umul8_16@multiplicand
  6216  0514  084A               	movf	___flmul@a+1,w
  6217  0515  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6218  051A  0875               	movf	?__Umul8_16+1,w
  6219  051B  1283               	bcf	3,5	;RP0=0, select bank0
  6220  051C  1303               	bcf	3,6	;RP1=0, select bank0
  6221  051D  00DE               	movwf	___flmul@temp+1
  6222  051E  0874               	movf	?__Umul8_16,w
  6223  051F  00DD               	movwf	___flmul@temp
  6224  0520                     l3895:
  6225  0520  085D               	movf	___flmul@temp,w
  6226  0521  00CD               	movwf	??___flmul
  6227  0522  01CE               	clrf	??___flmul+1
  6228  0523  01CF               	clrf	??___flmul+2
  6229  0524  01D0               	clrf	??___flmul+3
  6230  0525  084D               	movf	??___flmul,w
  6231  0526  07D4               	addwf	___flmul@grs,f
  6232  0527  084E               	movf	??___flmul+1,w
  6233  0528  1103               	clrz
  6234  0529  1803               	skipnc
  6235  052A  3E01               	addlw	1
  6236  052B  1903               	skipnz
  6237  052C  2D2E               	goto	u5261
  6238  052D  07D5               	addwf	___flmul@grs+1,f
  6239  052E                     u5261:
  6240  052E  084F               	movf	??___flmul+2,w
  6241  052F  1103               	clrz
  6242  0530  1803               	skipnc
  6243  0531  3E01               	addlw	1
  6244  0532  1903               	skipnz
  6245  0533  2D35               	goto	u5262
  6246  0534  07D6               	addwf	___flmul@grs+2,f
  6247  0535                     u5262:
  6248  0535  0850               	movf	??___flmul+3,w
  6249  0536  1103               	clrz
  6250  0537  1803               	skipnc
  6251  0538  3E01               	addlw	1
  6252  0539  1903               	skipnz
  6253  053A  2D3C               	goto	u5263
  6254  053B  07D7               	addwf	___flmul@grs+3,f
  6255  053C                     u5263:
  6256  053C                     l3897:
  6257  053C  085E               	movf	___flmul@temp+1,w
  6258  053D  00CD               	movwf	??___flmul
  6259  053E  01CE               	clrf	??___flmul+1
  6260  053F  01CF               	clrf	??___flmul+2
  6261  0540  01D0               	clrf	??___flmul+3
  6262  0541  084D               	movf	??___flmul,w
  6263  0542  07D9               	addwf	___flmul@prod,f
  6264  0543  084E               	movf	??___flmul+1,w
  6265  0544  1103               	clrz
  6266  0545  1803               	skipnc
  6267  0546  3E01               	addlw	1
  6268  0547  1903               	skipnz
  6269  0548  2D4A               	goto	u5271
  6270  0549  07DA               	addwf	___flmul@prod+1,f
  6271  054A                     u5271:
  6272  054A  084F               	movf	??___flmul+2,w
  6273  054B  1103               	clrz
  6274  054C  1803               	skipnc
  6275  054D  3E01               	addlw	1
  6276  054E  1903               	skipnz
  6277  054F  2D51               	goto	u5272
  6278  0550  07DB               	addwf	___flmul@prod+2,f
  6279  0551                     u5272:
  6280  0551  0850               	movf	??___flmul+3,w
  6281  0552  1103               	clrz
  6282  0553  1803               	skipnc
  6283  0554  3E01               	addlw	1
  6284  0555  1903               	skipnz
  6285  0556  2D58               	goto	u5273
  6286  0557  07DC               	addwf	___flmul@prod+3,f
  6287  0558                     u5273:
  6288  0558  0847               	movf	___flmul@b+2,w
  6289  0559  00CD               	movwf	??___flmul
  6290  055A  084D               	movf	??___flmul,w
  6291  055B  00F4               	movwf	__Umul8_16@multiplicand
  6292  055C  0849               	movf	___flmul@a,w
  6293  055D  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6294  0562  0875               	movf	?__Umul8_16+1,w
  6295  0563  1283               	bcf	3,5	;RP0=0, select bank0
  6296  0564  1303               	bcf	3,6	;RP1=0, select bank0
  6297  0565  00DE               	movwf	___flmul@temp+1
  6298  0566  0874               	movf	?__Umul8_16,w
  6299  0567  00DD               	movwf	___flmul@temp
  6300  0568                     l3899:
  6301  0568  085D               	movf	___flmul@temp,w
  6302  0569  00CD               	movwf	??___flmul
  6303  056A  01CE               	clrf	??___flmul+1
  6304  056B  01CF               	clrf	??___flmul+2
  6305  056C  01D0               	clrf	??___flmul+3
  6306  056D  084D               	movf	??___flmul,w
  6307  056E  07D4               	addwf	___flmul@grs,f
  6308  056F  084E               	movf	??___flmul+1,w
  6309  0570  1103               	clrz
  6310  0571  1803               	skipnc
  6311  0572  3E01               	addlw	1
  6312  0573  1903               	skipnz
  6313  0574  2D76               	goto	u5281
  6314  0575  07D5               	addwf	___flmul@grs+1,f
  6315  0576                     u5281:
  6316  0576  084F               	movf	??___flmul+2,w
  6317  0577  1103               	clrz
  6318  0578  1803               	skipnc
  6319  0579  3E01               	addlw	1
  6320  057A  1903               	skipnz
  6321  057B  2D7D               	goto	u5282
  6322  057C  07D6               	addwf	___flmul@grs+2,f
  6323  057D                     u5282:
  6324  057D  0850               	movf	??___flmul+3,w
  6325  057E  1103               	clrz
  6326  057F  1803               	skipnc
  6327  0580  3E01               	addlw	1
  6328  0581  1903               	skipnz
  6329  0582  2D84               	goto	u5283
  6330  0583  07D7               	addwf	___flmul@grs+3,f
  6331  0584                     u5283:
  6332  0584                     l3901:
  6333  0584  085E               	movf	___flmul@temp+1,w
  6334  0585  00CD               	movwf	??___flmul
  6335  0586  01CE               	clrf	??___flmul+1
  6336  0587  01CF               	clrf	??___flmul+2
  6337  0588  01D0               	clrf	??___flmul+3
  6338  0589  084D               	movf	??___flmul,w
  6339  058A  07D9               	addwf	___flmul@prod,f
  6340  058B  084E               	movf	??___flmul+1,w
  6341  058C  1103               	clrz
  6342  058D  1803               	skipnc
  6343  058E  3E01               	addlw	1
  6344  058F  1903               	skipnz
  6345  0590  2D92               	goto	u5291
  6346  0591  07DA               	addwf	___flmul@prod+1,f
  6347  0592                     u5291:
  6348  0592  084F               	movf	??___flmul+2,w
  6349  0593  1103               	clrz
  6350  0594  1803               	skipnc
  6351  0595  3E01               	addlw	1
  6352  0596  1903               	skipnz
  6353  0597  2D99               	goto	u5292
  6354  0598  07DB               	addwf	___flmul@prod+2,f
  6355  0599                     u5292:
  6356  0599  0850               	movf	??___flmul+3,w
  6357  059A  1103               	clrz
  6358  059B  1803               	skipnc
  6359  059C  3E01               	addlw	1
  6360  059D  1903               	skipnz
  6361  059E  2DA0               	goto	u5293
  6362  059F  07DC               	addwf	___flmul@prod+3,f
  6363  05A0                     u5293:
  6364  05A0                     l3903:
  6365  05A0  3008               	movlw	8
  6366  05A1  00CD               	movwf	??___flmul
  6367  05A2                     u5305:
  6368  05A2  1003               	clrc
  6369  05A3  0DD4               	rlf	___flmul@grs,f
  6370  05A4  0DD5               	rlf	___flmul@grs+1,f
  6371  05A5  0DD6               	rlf	___flmul@grs+2,f
  6372  05A6  0DD7               	rlf	___flmul@grs+3,f
  6373  05A7  0BCD               	decfsz	??___flmul,f
  6374  05A8  2DA2               	goto	u5305
  6375  05A9                     l3905:
  6376  05A9  0846               	movf	___flmul@b+1,w
  6377  05AA  00CD               	movwf	??___flmul
  6378  05AB  084D               	movf	??___flmul,w
  6379  05AC  00F4               	movwf	__Umul8_16@multiplicand
  6380  05AD  0849               	movf	___flmul@a,w
  6381  05AE  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6382  05B3  0875               	movf	?__Umul8_16+1,w
  6383  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  6384  05B5  1303               	bcf	3,6	;RP1=0, select bank0
  6385  05B6  00DE               	movwf	___flmul@temp+1
  6386  05B7  0874               	movf	?__Umul8_16,w
  6387  05B8  00DD               	movwf	___flmul@temp
  6388  05B9                     l3907:
  6389  05B9  085D               	movf	___flmul@temp,w
  6390  05BA  00CD               	movwf	??___flmul
  6391  05BB  085E               	movf	___flmul@temp+1,w
  6392  05BC  00CE               	movwf	??___flmul+1
  6393  05BD  01CF               	clrf	??___flmul+2
  6394  05BE  01D0               	clrf	??___flmul+3
  6395  05BF  084D               	movf	??___flmul,w
  6396  05C0  07D4               	addwf	___flmul@grs,f
  6397  05C1  084E               	movf	??___flmul+1,w
  6398  05C2  1103               	clrz
  6399  05C3  1803               	skipnc
  6400  05C4  3E01               	addlw	1
  6401  05C5  1903               	skipnz
  6402  05C6  2DC8               	goto	u5311
  6403  05C7  07D5               	addwf	___flmul@grs+1,f
  6404  05C8                     u5311:
  6405  05C8  084F               	movf	??___flmul+2,w
  6406  05C9  1103               	clrz
  6407  05CA  1803               	skipnc
  6408  05CB  3E01               	addlw	1
  6409  05CC  1903               	skipnz
  6410  05CD  2DCF               	goto	u5312
  6411  05CE  07D6               	addwf	___flmul@grs+2,f
  6412  05CF                     u5312:
  6413  05CF  0850               	movf	??___flmul+3,w
  6414  05D0  1103               	clrz
  6415  05D1  1803               	skipnc
  6416  05D2  3E01               	addlw	1
  6417  05D3  1903               	skipnz
  6418  05D4  2DD6               	goto	u5313
  6419  05D5  07D7               	addwf	___flmul@grs+3,f
  6420  05D6                     u5313:
  6421  05D6                     l3909:
  6422  05D6  0845               	movf	___flmul@b,w
  6423  05D7  00CD               	movwf	??___flmul
  6424  05D8  084D               	movf	??___flmul,w
  6425  05D9  00F4               	movwf	__Umul8_16@multiplicand
  6426  05DA  084A               	movf	___flmul@a+1,w
  6427  05DB  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6428  05E0  0875               	movf	?__Umul8_16+1,w
  6429  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  6430  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  6431  05E3  00DE               	movwf	___flmul@temp+1
  6432  05E4  0874               	movf	?__Umul8_16,w
  6433  05E5  00DD               	movwf	___flmul@temp
  6434  05E6                     l3911:
  6435  05E6  085D               	movf	___flmul@temp,w
  6436  05E7  00CD               	movwf	??___flmul
  6437  05E8  085E               	movf	___flmul@temp+1,w
  6438  05E9  00CE               	movwf	??___flmul+1
  6439  05EA  01CF               	clrf	??___flmul+2
  6440  05EB  01D0               	clrf	??___flmul+3
  6441  05EC  084D               	movf	??___flmul,w
  6442  05ED  07D4               	addwf	___flmul@grs,f
  6443  05EE  084E               	movf	??___flmul+1,w
  6444  05EF  1103               	clrz
  6445  05F0  1803               	skipnc
  6446  05F1  3E01               	addlw	1
  6447  05F2  1903               	skipnz
  6448  05F3  2DF5               	goto	u5321
  6449  05F4  07D5               	addwf	___flmul@grs+1,f
  6450  05F5                     u5321:
  6451  05F5  084F               	movf	??___flmul+2,w
  6452  05F6  1103               	clrz
  6453  05F7  1803               	skipnc
  6454  05F8  3E01               	addlw	1
  6455  05F9  1903               	skipnz
  6456  05FA  2DFC               	goto	u5322
  6457  05FB  07D6               	addwf	___flmul@grs+2,f
  6458  05FC                     u5322:
  6459  05FC  0850               	movf	??___flmul+3,w
  6460  05FD  1103               	clrz
  6461  05FE  1803               	skipnc
  6462  05FF  3E01               	addlw	1
  6463  0600  1903               	skipnz
  6464  0601  2E03               	goto	u5323
  6465  0602  07D7               	addwf	___flmul@grs+3,f
  6466  0603                     u5323:
  6467  0603                     l3913:
  6468  0603  3008               	movlw	8
  6469  0604  00CD               	movwf	??___flmul
  6470  0605                     u5335:
  6471  0605  1003               	clrc
  6472  0606  0DD4               	rlf	___flmul@grs,f
  6473  0607  0DD5               	rlf	___flmul@grs+1,f
  6474  0608  0DD6               	rlf	___flmul@grs+2,f
  6475  0609  0DD7               	rlf	___flmul@grs+3,f
  6476  060A  0BCD               	decfsz	??___flmul,f
  6477  060B  2E05               	goto	u5335
  6478  060C  0845               	movf	___flmul@b,w
  6479  060D  00CD               	movwf	??___flmul
  6480  060E  084D               	movf	??___flmul,w
  6481  060F  00F4               	movwf	__Umul8_16@multiplicand
  6482  0610  0849               	movf	___flmul@a,w
  6483  0611  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6484  0616  0875               	movf	?__Umul8_16+1,w
  6485  0617  1283               	bcf	3,5	;RP0=0, select bank0
  6486  0618  1303               	bcf	3,6	;RP1=0, select bank0
  6487  0619  00DE               	movwf	___flmul@temp+1
  6488  061A  0874               	movf	?__Umul8_16,w
  6489  061B  00DD               	movwf	___flmul@temp
  6490  061C                     l3915:
  6491  061C  085D               	movf	___flmul@temp,w
  6492  061D  00CD               	movwf	??___flmul
  6493  061E  085E               	movf	___flmul@temp+1,w
  6494  061F  00CE               	movwf	??___flmul+1
  6495  0620  01CF               	clrf	??___flmul+2
  6496  0621  01D0               	clrf	??___flmul+3
  6497  0622  084D               	movf	??___flmul,w
  6498  0623  07D4               	addwf	___flmul@grs,f
  6499  0624  084E               	movf	??___flmul+1,w
  6500  0625  1103               	clrz
  6501  0626  1803               	skipnc
  6502  0627  3E01               	addlw	1
  6503  0628  1903               	skipnz
  6504  0629  2E2B               	goto	u5341
  6505  062A  07D5               	addwf	___flmul@grs+1,f
  6506  062B                     u5341:
  6507  062B  084F               	movf	??___flmul+2,w
  6508  062C  1103               	clrz
  6509  062D  1803               	skipnc
  6510  062E  3E01               	addlw	1
  6511  062F  1903               	skipnz
  6512  0630  2E32               	goto	u5342
  6513  0631  07D6               	addwf	___flmul@grs+2,f
  6514  0632                     u5342:
  6515  0632  0850               	movf	??___flmul+3,w
  6516  0633  1103               	clrz
  6517  0634  1803               	skipnc
  6518  0635  3E01               	addlw	1
  6519  0636  1903               	skipnz
  6520  0637  2E39               	goto	u5343
  6521  0638  07D7               	addwf	___flmul@grs+3,f
  6522  0639                     u5343:
  6523  0639                     l3917:
  6524  0639  0846               	movf	___flmul@b+1,w
  6525  063A  00CD               	movwf	??___flmul
  6526  063B  084D               	movf	??___flmul,w
  6527  063C  00F4               	movwf	__Umul8_16@multiplicand
  6528  063D  084B               	movf	___flmul@a+2,w
  6529  063E  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6530  0643  0875               	movf	?__Umul8_16+1,w
  6531  0644  1283               	bcf	3,5	;RP0=0, select bank0
  6532  0645  1303               	bcf	3,6	;RP1=0, select bank0
  6533  0646  00DE               	movwf	___flmul@temp+1
  6534  0647  0874               	movf	?__Umul8_16,w
  6535  0648  00DD               	movwf	___flmul@temp
  6536  0649  085D               	movf	___flmul@temp,w
  6537  064A  00CD               	movwf	??___flmul
  6538  064B  085E               	movf	___flmul@temp+1,w
  6539  064C  00CE               	movwf	??___flmul+1
  6540  064D  01CF               	clrf	??___flmul+2
  6541  064E  01D0               	clrf	??___flmul+3
  6542  064F  084D               	movf	??___flmul,w
  6543  0650  07D9               	addwf	___flmul@prod,f
  6544  0651  084E               	movf	??___flmul+1,w
  6545  0652  1103               	clrz
  6546  0653  1803               	skipnc
  6547  0654  3E01               	addlw	1
  6548  0655  1903               	skipnz
  6549  0656  2E58               	goto	u5351
  6550  0657  07DA               	addwf	___flmul@prod+1,f
  6551  0658                     u5351:
  6552  0658  084F               	movf	??___flmul+2,w
  6553  0659  1103               	clrz
  6554  065A  1803               	skipnc
  6555  065B  3E01               	addlw	1
  6556  065C  1903               	skipnz
  6557  065D  2E5F               	goto	u5352
  6558  065E  07DB               	addwf	___flmul@prod+2,f
  6559  065F                     u5352:
  6560  065F  0850               	movf	??___flmul+3,w
  6561  0660  1103               	clrz
  6562  0661  1803               	skipnc
  6563  0662  3E01               	addlw	1
  6564  0663  1903               	skipnz
  6565  0664  2E66               	goto	u5353
  6566  0665  07DC               	addwf	___flmul@prod+3,f
  6567  0666                     u5353:
  6568  0666                     l3919:
  6569  0666  0847               	movf	___flmul@b+2,w
  6570  0667  00CD               	movwf	??___flmul
  6571  0668  084D               	movf	??___flmul,w
  6572  0669  00F4               	movwf	__Umul8_16@multiplicand
  6573  066A  084A               	movf	___flmul@a+1,w
  6574  066B  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6575  0670  0875               	movf	?__Umul8_16+1,w
  6576  0671  1283               	bcf	3,5	;RP0=0, select bank0
  6577  0672  1303               	bcf	3,6	;RP1=0, select bank0
  6578  0673  00DE               	movwf	___flmul@temp+1
  6579  0674  0874               	movf	?__Umul8_16,w
  6580  0675  00DD               	movwf	___flmul@temp
  6581  0676                     l3921:
  6582  0676  085D               	movf	___flmul@temp,w
  6583  0677  00CD               	movwf	??___flmul
  6584  0678  085E               	movf	___flmul@temp+1,w
  6585  0679  00CE               	movwf	??___flmul+1
  6586  067A  01CF               	clrf	??___flmul+2
  6587  067B  01D0               	clrf	??___flmul+3
  6588  067C  084D               	movf	??___flmul,w
  6589  067D  07D9               	addwf	___flmul@prod,f
  6590  067E  084E               	movf	??___flmul+1,w
  6591  067F  1103               	clrz
  6592  0680  1803               	skipnc
  6593  0681  3E01               	addlw	1
  6594  0682  1903               	skipnz
  6595  0683  2E85               	goto	u5361
  6596  0684  07DA               	addwf	___flmul@prod+1,f
  6597  0685                     u5361:
  6598  0685  084F               	movf	??___flmul+2,w
  6599  0686  1103               	clrz
  6600  0687  1803               	skipnc
  6601  0688  3E01               	addlw	1
  6602  0689  1903               	skipnz
  6603  068A  2E8C               	goto	u5362
  6604  068B  07DB               	addwf	___flmul@prod+2,f
  6605  068C                     u5362:
  6606  068C  0850               	movf	??___flmul+3,w
  6607  068D  1103               	clrz
  6608  068E  1803               	skipnc
  6609  068F  3E01               	addlw	1
  6610  0690  1903               	skipnz
  6611  0691  2E93               	goto	u5363
  6612  0692  07DC               	addwf	___flmul@prod+3,f
  6613  0693                     u5363:
  6614  0693  0847               	movf	___flmul@b+2,w
  6615  0694  00CD               	movwf	??___flmul
  6616  0695  084D               	movf	??___flmul,w
  6617  0696  00F4               	movwf	__Umul8_16@multiplicand
  6618  0697  084B               	movf	___flmul@a+2,w
  6619  0698  160A  118A  2449  120A  118A  	fcall	__Umul8_16
  6620  069D  0875               	movf	?__Umul8_16+1,w
  6621  069E  1283               	bcf	3,5	;RP0=0, select bank0
  6622  069F  1303               	bcf	3,6	;RP1=0, select bank0
  6623  06A0  00DE               	movwf	___flmul@temp+1
  6624  06A1  0874               	movf	?__Umul8_16,w
  6625  06A2  00DD               	movwf	___flmul@temp
  6626  06A3                     l3923:
  6627  06A3  085D               	movf	___flmul@temp,w
  6628  06A4  00CD               	movwf	??___flmul
  6629  06A5  085E               	movf	___flmul@temp+1,w
  6630  06A6  00CE               	movwf	??___flmul+1
  6631  06A7  01CF               	clrf	??___flmul+2
  6632  06A8  01D0               	clrf	??___flmul+3
  6633  06A9  3008               	movlw	8
  6634  06AA                     u5375:
  6635  06AA  1003               	clrc
  6636  06AB  0DCD               	rlf	??___flmul,f
  6637  06AC  0DCE               	rlf	??___flmul+1,f
  6638  06AD  0DCF               	rlf	??___flmul+2,f
  6639  06AE  0DD0               	rlf	??___flmul+3,f
  6640  06AF                     u5370:
  6641  06AF  3EFF               	addlw	-1
  6642  06B0  1D03               	skipz
  6643  06B1  2EAA               	goto	u5375
  6644  06B2  084D               	movf	??___flmul,w
  6645  06B3  07D9               	addwf	___flmul@prod,f
  6646  06B4  084E               	movf	??___flmul+1,w
  6647  06B5  1103               	clrz
  6648  06B6  1803               	skipnc
  6649  06B7  3E01               	addlw	1
  6650  06B8  1903               	skipnz
  6651  06B9  2EBB               	goto	u5381
  6652  06BA  07DA               	addwf	___flmul@prod+1,f
  6653  06BB                     u5381:
  6654  06BB  084F               	movf	??___flmul+2,w
  6655  06BC  1103               	clrz
  6656  06BD  1803               	skipnc
  6657  06BE  3E01               	addlw	1
  6658  06BF  1903               	skipnz
  6659  06C0  2EC2               	goto	u5382
  6660  06C1  07DB               	addwf	___flmul@prod+2,f
  6661  06C2                     u5382:
  6662  06C2  0850               	movf	??___flmul+3,w
  6663  06C3  1103               	clrz
  6664  06C4  1803               	skipnc
  6665  06C5  3E01               	addlw	1
  6666  06C6  1903               	skipnz
  6667  06C7  2EC9               	goto	u5383
  6668  06C8  07DC               	addwf	___flmul@prod+3,f
  6669  06C9                     u5383:
  6670  06C9                     l3925:
  6671  06C9  0854               	movf	___flmul@grs,w
  6672  06CA  00CD               	movwf	??___flmul
  6673  06CB  0855               	movf	___flmul@grs+1,w
  6674  06CC  00CE               	movwf	??___flmul+1
  6675  06CD  0856               	movf	___flmul@grs+2,w
  6676  06CE  00CF               	movwf	??___flmul+2
  6677  06CF  0857               	movf	___flmul@grs+3,w
  6678  06D0  00D0               	movwf	??___flmul+3
  6679  06D1  3018               	movlw	24
  6680  06D2                     u5395:
  6681  06D2  1003               	clrc
  6682  06D3  0CD0               	rrf	??___flmul+3,f
  6683  06D4  0CCF               	rrf	??___flmul+2,f
  6684  06D5  0CCE               	rrf	??___flmul+1,f
  6685  06D6  0CCD               	rrf	??___flmul,f
  6686  06D7                     u5390:
  6687  06D7  3EFF               	addlw	-1
  6688  06D8  1D03               	skipz
  6689  06D9  2ED2               	goto	u5395
  6690  06DA  084D               	movf	??___flmul,w
  6691  06DB  07D9               	addwf	___flmul@prod,f
  6692  06DC  084E               	movf	??___flmul+1,w
  6693  06DD  1103               	clrz
  6694  06DE  1803               	skipnc
  6695  06DF  3E01               	addlw	1
  6696  06E0  1903               	skipnz
  6697  06E1  2EE3               	goto	u5401
  6698  06E2  07DA               	addwf	___flmul@prod+1,f
  6699  06E3                     u5401:
  6700  06E3  084F               	movf	??___flmul+2,w
  6701  06E4  1103               	clrz
  6702  06E5  1803               	skipnc
  6703  06E6  3E01               	addlw	1
  6704  06E7  1903               	skipnz
  6705  06E8  2EEA               	goto	u5402
  6706  06E9  07DB               	addwf	___flmul@prod+2,f
  6707  06EA                     u5402:
  6708  06EA  0850               	movf	??___flmul+3,w
  6709  06EB  1103               	clrz
  6710  06EC  1803               	skipnc
  6711  06ED  3E01               	addlw	1
  6712  06EE  1903               	skipnz
  6713  06EF  2EF1               	goto	u5403
  6714  06F0  07DC               	addwf	___flmul@prod+3,f
  6715  06F1                     u5403:
  6716  06F1                     l3927:
  6717  06F1  3008               	movlw	8
  6718  06F2  00CD               	movwf	??___flmul
  6719  06F3                     u5415:
  6720  06F3  1003               	clrc
  6721  06F4  0DD4               	rlf	___flmul@grs,f
  6722  06F5  0DD5               	rlf	___flmul@grs+1,f
  6723  06F6  0DD6               	rlf	___flmul@grs+2,f
  6724  06F7  0DD7               	rlf	___flmul@grs+3,f
  6725  06F8  0BCD               	decfsz	??___flmul,f
  6726  06F9  2EF3               	goto	u5415
  6727  06FA                     l3929:
  6728  06FA  0858               	movf	___flmul@bexp,w
  6729  06FB  0753               	addwf	___flmul@aexp,w
  6730  06FC  00CD               	movwf	??___flmul
  6731  06FD  01CE               	clrf	??___flmul+1
  6732  06FE  0DCE               	rlf	??___flmul+1,f
  6733  06FF  084D               	movf	??___flmul,w
  6734  0700  3E82               	addlw	130
  6735  0701  00DD               	movwf	___flmul@temp
  6736  0702  084E               	movf	??___flmul+1,w
  6737  0703  1803               	skipnc
  6738  0704  3E01               	addlw	1
  6739  0705  3EFF               	addlw	255
  6740  0706  00DE               	movwf	___flmul@temp+1
  6741  0707  2F25               	goto	l3941
  6742  0708                     l3931:
  6743  0708  3001               	movlw	1
  6744  0709  00CD               	movwf	??___flmul
  6745  070A                     u5425:
  6746  070A  1003               	clrc
  6747  070B  0DD9               	rlf	___flmul@prod,f
  6748  070C  0DDA               	rlf	___flmul@prod+1,f
  6749  070D  0DDB               	rlf	___flmul@prod+2,f
  6750  070E  0DDC               	rlf	___flmul@prod+3,f
  6751  070F  0BCD               	decfsz	??___flmul,f
  6752  0710  2F0A               	goto	u5425
  6753  0711                     l3933:
  6754  0711  1FD7               	btfss	___flmul@grs+3,7
  6755  0712  2F14               	goto	u5431
  6756  0713  2F15               	goto	u5430
  6757  0714                     u5431:
  6758  0714  2F16               	goto	l3937
  6759  0715                     u5430:
  6760  0715                     l3935:
  6761  0715  1459               	bsf	___flmul@prod,0
  6762  0716                     l3937:
  6763  0716  3001               	movlw	1
  6764  0717  00CD               	movwf	??___flmul
  6765  0718                     u5445:
  6766  0718  1003               	clrc
  6767  0719  0DD4               	rlf	___flmul@grs,f
  6768  071A  0DD5               	rlf	___flmul@grs+1,f
  6769  071B  0DD6               	rlf	___flmul@grs+2,f
  6770  071C  0DD7               	rlf	___flmul@grs+3,f
  6771  071D  0BCD               	decfsz	??___flmul,f
  6772  071E  2F18               	goto	u5445
  6773  071F                     l3939:
  6774  071F  30FF               	movlw	255
  6775  0720  07DD               	addwf	___flmul@temp,f
  6776  0721  1803               	skipnc
  6777  0722  0ADE               	incf	___flmul@temp+1,f
  6778  0723  30FF               	movlw	255
  6779  0724  07DE               	addwf	___flmul@temp+1,f
  6780  0725                     l3941:
  6781  0725  1FDB               	btfss	___flmul@prod+2,7
  6782  0726  2F28               	goto	u5451
  6783  0727  2F29               	goto	u5450
  6784  0728                     u5451:
  6785  0728  2F08               	goto	l3931
  6786  0729                     u5450:
  6787  0729                     l3943:
  6788  0729  01D3               	clrf	___flmul@aexp
  6789  072A                     l3945:
  6790  072A  1FD7               	btfss	___flmul@grs+3,7
  6791  072B  2F2D               	goto	u5461
  6792  072C  2F2E               	goto	u5460
  6793  072D                     u5461:
  6794  072D  2F4A               	goto	l3953
  6795  072E                     u5460:
  6796  072E                     l3947:
  6797  072E  30FF               	movlw	255
  6798  072F  0554               	andwf	___flmul@grs,w
  6799  0730  00CD               	movwf	??___flmul
  6800  0731  30FF               	movlw	255
  6801  0732  0555               	andwf	___flmul@grs+1,w
  6802  0733  00CE               	movwf	??___flmul+1
  6803  0734  30FF               	movlw	255
  6804  0735  0556               	andwf	___flmul@grs+2,w
  6805  0736  00CF               	movwf	??___flmul+2
  6806  0737  307F               	movlw	127
  6807  0738  0557               	andwf	___flmul@grs+3,w
  6808  0739  00D0               	movwf	??___flmul+3
  6809  073A  0850               	movf	??___flmul+3,w
  6810  073B  044F               	iorwf	??___flmul+2,w
  6811  073C  044E               	iorwf	??___flmul+1,w
  6812  073D  044D               	iorwf	??___flmul,w
  6813  073E  1903               	skipnz
  6814  073F  2F41               	goto	u5471
  6815  0740  2F42               	goto	u5470
  6816  0741                     u5471:
  6817  0741  2F45               	goto	l840
  6818  0742                     u5470:
  6819  0742                     l3949:
  6820  0742  01D3               	clrf	___flmul@aexp
  6821  0743  0AD3               	incf	___flmul@aexp,f
  6822  0744  2F4A               	goto	l3953
  6823  0745                     l840:
  6824  0745  1C59               	btfss	___flmul@prod,0
  6825  0746  2F48               	goto	u5481
  6826  0747  2F49               	goto	u5480
  6827  0748                     u5481:
  6828  0748  2F4A               	goto	l3953
  6829  0749                     u5480:
  6830  0749  2F42               	goto	l3949
  6831  074A                     l3953:
  6832  074A  0853               	movf	___flmul@aexp,w
  6833  074B  1903               	btfsc	3,2
  6834  074C  2F4E               	goto	u5491
  6835  074D  2F4F               	goto	u5490
  6836  074E                     u5491:
  6837  074E  2F80               	goto	l3963
  6838  074F                     u5490:
  6839  074F                     l3955:
  6840  074F  3001               	movlw	1
  6841  0750  07D9               	addwf	___flmul@prod,f
  6842  0751  3000               	movlw	0
  6843  0752  1803               	skipnc
  6844  0753  3001               	movlw	1
  6845  0754  07DA               	addwf	___flmul@prod+1,f
  6846  0755  3000               	movlw	0
  6847  0756  1803               	skipnc
  6848  0757  3001               	movlw	1
  6849  0758  07DB               	addwf	___flmul@prod+2,f
  6850  0759  3000               	movlw	0
  6851  075A  1803               	skipnc
  6852  075B  3001               	movlw	1
  6853  075C  07DC               	addwf	___flmul@prod+3,f
  6854  075D                     l3957:
  6855  075D  1C5C               	btfss	___flmul@prod+3,0
  6856  075E  2F60               	goto	u5501
  6857  075F  2F61               	goto	u5500
  6858  0760                     u5501:
  6859  0760  2F80               	goto	l3963
  6860  0761                     u5500:
  6861  0761                     l3959:
  6862  0761  0859               	movf	___flmul@prod,w
  6863  0762  00CD               	movwf	??___flmul
  6864  0763  085A               	movf	___flmul@prod+1,w
  6865  0764  00CE               	movwf	??___flmul+1
  6866  0765  085B               	movf	___flmul@prod+2,w
  6867  0766  00CF               	movwf	??___flmul+2
  6868  0767  085C               	movf	___flmul@prod+3,w
  6869  0768  00D0               	movwf	??___flmul+3
  6870  0769  3001               	movlw	1
  6871  076A  00D1               	movwf	??___flmul+4
  6872  076B                     u5515:
  6873  076B  0D50               	rlf	??___flmul+3,w
  6874  076C  0CD0               	rrf	??___flmul+3,f
  6875  076D  0CCF               	rrf	??___flmul+2,f
  6876  076E  0CCE               	rrf	??___flmul+1,f
  6877  076F  0CCD               	rrf	??___flmul,f
  6878  0770                     u5510:
  6879  0770  0BD1               	decfsz	??___flmul+4,f
  6880  0771  2F6B               	goto	u5515
  6881  0772  0850               	movf	??___flmul+3,w
  6882  0773  00DC               	movwf	___flmul@prod+3
  6883  0774  084F               	movf	??___flmul+2,w
  6884  0775  00DB               	movwf	___flmul@prod+2
  6885  0776  084E               	movf	??___flmul+1,w
  6886  0777  00DA               	movwf	___flmul@prod+1
  6887  0778  084D               	movf	??___flmul,w
  6888  0779  00D9               	movwf	___flmul@prod
  6889  077A                     l3961:
  6890  077A  3001               	movlw	1
  6891  077B  07DD               	addwf	___flmul@temp,f
  6892  077C  1803               	skipnc
  6893  077D  0ADE               	incf	___flmul@temp+1,f
  6894  077E  3000               	movlw	0
  6895  077F  07DE               	addwf	___flmul@temp+1,f
  6896  0780                     l3963:
  6897  0780  085E               	movf	___flmul@temp+1,w
  6898  0781  3A80               	xorlw	128
  6899  0782  00FF               	movwf	btemp+1
  6900  0783  3080               	movlw	128
  6901  0784  027F               	subwf	btemp+1,w
  6902  0785  1D03               	skipz
  6903  0786  2F89               	goto	u5525
  6904  0787  30FF               	movlw	255
  6905  0788  025D               	subwf	___flmul@temp,w
  6906  0789                     u5525:
  6907  0789  1C03               	skipc
  6908  078A  2F8C               	goto	u5521
  6909  078B  2F8D               	goto	u5520
  6910  078C                     u5521:
  6911  078C  2F98               	goto	l3967
  6912  078D                     u5520:
  6913  078D                     l3965:
  6914  078D  307F               	movlw	127
  6915  078E  1283               	bcf	3,5	;RP0=0, select bank0
  6916  078F  1303               	bcf	3,6	;RP1=0, select bank0
  6917  0790  00DC               	movwf	___flmul@prod+3
  6918  0791  3080               	movlw	128
  6919  0792  00DB               	movwf	___flmul@prod+2
  6920  0793  3000               	movlw	0
  6921  0794  00DA               	movwf	___flmul@prod+1
  6922  0795  3000               	movlw	0
  6923  0796  00D9               	movwf	___flmul@prod
  6924  0797  2FCD               	goto	l846
  6925  0798                     l3967:
  6926  0798  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0799  1303               	bcf	3,6	;RP1=0, select bank0
  6928  079A  085E               	movf	___flmul@temp+1,w
  6929  079B  3A80               	xorlw	128
  6930  079C  00FF               	movwf	btemp+1
  6931  079D  3080               	movlw	128
  6932  079E  027F               	subwf	btemp+1,w
  6933  079F  1D03               	skipz
  6934  07A0  2FA3               	goto	u5535
  6935  07A1  3001               	movlw	1
  6936  07A2  025D               	subwf	___flmul@temp,w
  6937  07A3                     u5535:
  6938  07A3  1803               	skipnc
  6939  07A4  2FA6               	goto	u5531
  6940  07A5  2FA7               	goto	u5530
  6941  07A6                     u5531:
  6942  07A6  2FB3               	goto	l3973
  6943  07A7                     u5530:
  6944  07A7                     l3969:
  6945  07A7  3000               	movlw	0
  6946  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  6947  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  6948  07AA  00DC               	movwf	___flmul@prod+3
  6949  07AB  3000               	movlw	0
  6950  07AC  00DB               	movwf	___flmul@prod+2
  6951  07AD  3000               	movlw	0
  6952  07AE  00DA               	movwf	___flmul@prod+1
  6953  07AF  3000               	movlw	0
  6954  07B0  00D9               	movwf	___flmul@prod
  6955  07B1                     l3971:
  6956  07B1  01D2               	clrf	___flmul@sign
  6957  07B2  2FCD               	goto	l846
  6958  07B3                     l3973:
  6959  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  6960  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  6961  07B5  085D               	movf	___flmul@temp,w
  6962  07B6  00CD               	movwf	??___flmul
  6963  07B7  084D               	movf	??___flmul,w
  6964  07B8  00D8               	movwf	___flmul@bexp
  6965  07B9  30FF               	movlw	255
  6966  07BA  05D9               	andwf	___flmul@prod,f
  6967  07BB  30FF               	movlw	255
  6968  07BC  05DA               	andwf	___flmul@prod+1,f
  6969  07BD  307F               	movlw	127
  6970  07BE  05DB               	andwf	___flmul@prod+2,f
  6971  07BF  3000               	movlw	0
  6972  07C0  05DC               	andwf	___flmul@prod+3,f
  6973  07C1                     l3975:
  6974  07C1  1C58               	btfss	___flmul@bexp,0
  6975  07C2  2FC4               	goto	u5541
  6976  07C3  2FC5               	goto	u5540
  6977  07C4                     u5541:
  6978  07C4  2FC6               	goto	l3979
  6979  07C5                     u5540:
  6980  07C5                     l3977:
  6981  07C5  17DB               	bsf	___flmul@prod+2,7
  6982  07C6                     l3979:
  6983  07C6  0858               	movf	___flmul@bexp,w
  6984  07C7  00CD               	movwf	??___flmul
  6985  07C8  1003               	clrc
  6986  07C9  0C4D               	rrf	??___flmul,w
  6987  07CA  00CE               	movwf	??___flmul+1
  6988  07CB  084E               	movf	??___flmul+1,w
  6989  07CC  00DC               	movwf	___flmul@prod+3
  6990  07CD                     l846:
  6991  07CD  0852               	movf	___flmul@sign,w
  6992  07CE  00CD               	movwf	??___flmul
  6993  07CF  084D               	movf	??___flmul,w
  6994  07D0  04DC               	iorwf	___flmul@prod+3,f
  6995  07D1                     l3981:
  6996  07D1  085C               	movf	___flmul@prod+3,w
  6997  07D2  00C8               	movwf	?___flmul+3
  6998  07D3  085B               	movf	___flmul@prod+2,w
  6999  07D4  00C7               	movwf	?___flmul+2
  7000  07D5  085A               	movf	___flmul@prod+1,w
  7001  07D6  00C6               	movwf	?___flmul+1
  7002  07D7  0859               	movf	___flmul@prod,w
  7003  07D8  00C5               	movwf	?___flmul
  7004  07D9                     l834:
  7005  07D9  0008               	return
  7006  07DA                     __end_of___flmul:
  7007                           
  7008                           	psect	text22
  7009  1449                     __ptext22:	
  7010 ;; *************** function __Umul8_16 *****************
  7011 ;; Defined at:
  7012 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;  multiplier      1    wreg     unsigned char 
  7015 ;;  multiplicand    1    4[COMMON] unsigned char 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;  multiplier      1    6[BANK0 ] unsigned char 
  7018 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  7019 ;;  product         2    2[BANK0 ] unsigned int 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  2    4[COMMON] unsigned int 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7029 ;;      Params:         2       0       0       0       0
  7030 ;;      Locals:         0       5       0       0       0
  7031 ;;      Temps:          0       2       0       0       0
  7032 ;;      Totals:         2       7       0       0       0
  7033 ;;Total ram usage:        9 bytes
  7034 ;; Hardware stack levels used: 1
  7035 ;; Hardware stack levels required when called: 1
  7036 ;; This function calls:
  7037 ;;		Nothing
  7038 ;; This function is called by:
  7039 ;;		___flmul
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           
  7044                           ;psect for function __Umul8_16
  7045  1449                     __Umul8_16:
  7046                           
  7047                           ;incstack = 0
  7048                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7049                           ;__Umul8_16@multiplier stored from wreg
  7050  1449  1283               	bcf	3,5	;RP0=0, select bank0
  7051  144A  1303               	bcf	3,6	;RP1=0, select bank0
  7052  144B  00A6               	movwf	__Umul8_16@multiplier
  7053  144C                     l3521:
  7054  144C  01A2               	clrf	__Umul8_16@product
  7055  144D  01A3               	clrf	__Umul8_16@product+1
  7056  144E                     l3523:
  7057  144E  0874               	movf	__Umul8_16@multiplicand,w
  7058  144F  00A0               	movwf	??__Umul8_16
  7059  1450  01A1               	clrf	??__Umul8_16+1
  7060  1451  0820               	movf	??__Umul8_16,w
  7061  1452  00A4               	movwf	__Umul8_16@word_mpld
  7062  1453  0821               	movf	??__Umul8_16+1,w
  7063  1454  00A5               	movwf	__Umul8_16@word_mpld+1
  7064  1455                     l3525:
  7065  1455  1C26               	btfss	__Umul8_16@multiplier,0
  7066  1456  2C58               	goto	u4441
  7067  1457  2C59               	goto	u4440
  7068  1458                     u4441:
  7069  1458  2C5F               	goto	l853
  7070  1459                     u4440:
  7071  1459                     l3527:
  7072  1459  0824               	movf	__Umul8_16@word_mpld,w
  7073  145A  07A2               	addwf	__Umul8_16@product,f
  7074  145B  1803               	skipnc
  7075  145C  0AA3               	incf	__Umul8_16@product+1,f
  7076  145D  0825               	movf	__Umul8_16@word_mpld+1,w
  7077  145E  07A3               	addwf	__Umul8_16@product+1,f
  7078  145F                     l853:
  7079  145F  3001               	movlw	1
  7080  1460                     u4455:
  7081  1460  1003               	clrc
  7082  1461  0DA4               	rlf	__Umul8_16@word_mpld,f
  7083  1462  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  7084  1463  3EFF               	addlw	-1
  7085  1464  1D03               	skipz
  7086  1465  2C60               	goto	u4455
  7087  1466  1003               	clrc
  7088  1467  0CA6               	rrf	__Umul8_16@multiplier,f
  7089  1468                     l3529:
  7090  1468  0826               	movf	__Umul8_16@multiplier,w
  7091  1469  1D03               	btfss	3,2
  7092  146A  2C6C               	goto	u4461
  7093  146B  2C6D               	goto	u4460
  7094  146C                     u4461:
  7095  146C  2C55               	goto	l3525
  7096  146D                     u4460:
  7097  146D                     l3531:
  7098  146D  0823               	movf	__Umul8_16@product+1,w
  7099  146E  00F5               	movwf	?__Umul8_16+1
  7100  146F  0822               	movf	__Umul8_16@product,w
  7101  1470  00F4               	movwf	?__Umul8_16
  7102  1471                     l855:
  7103  1471  0008               	return
  7104  1472                     __end_of__Umul8_16:
  7105                           
  7106                           	psect	text23
  7107  0862                     __ptext23:	
  7108 ;; *************** function ___flge *****************
  7109 ;; Defined at:
  7110 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  7111 ;; Parameters:    Size  Location     Type
  7112 ;;  ff1             4    0[BANK0 ] unsigned int 
  7113 ;;  ff2             4    4[BANK0 ] unsigned int 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;		None
  7116 ;; Return value:  Size  Location     Type
  7117 ;;		None               void
  7118 ;; Registers used:
  7119 ;;		wreg, status,2, status,0
  7120 ;; Tracked objects:
  7121 ;;		On entry : 0/0
  7122 ;;		On exit  : 0/0
  7123 ;;		Unchanged: 0/0
  7124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7125 ;;      Params:         0       8       0       0       0
  7126 ;;      Locals:         0       0       0       0       0
  7127 ;;      Temps:          0       4       0       0       0
  7128 ;;      Totals:         0      12       0       0       0
  7129 ;;Total ram usage:       12 bytes
  7130 ;; Hardware stack levels used: 1
  7131 ;; Hardware stack levels required when called: 1
  7132 ;; This function calls:
  7133 ;;		Nothing
  7134 ;; This function is called by:
  7135 ;;		_ADC_convert
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           
  7140                           ;psect for function ___flge
  7141  0862                     ___flge:
  7142  0862                     l3641:	
  7143                           ;incstack = 0
  7144                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7145                           
  7146  0862  3000               	movlw	0
  7147  0863  1283               	bcf	3,5	;RP0=0, select bank0
  7148  0864  1303               	bcf	3,6	;RP1=0, select bank0
  7149  0865  0520               	andwf	___flge@ff1,w
  7150  0866  00A8               	movwf	??___flge
  7151  0867  3000               	movlw	0
  7152  0868  0521               	andwf	___flge@ff1+1,w
  7153  0869  00A9               	movwf	??___flge+1
  7154  086A  3080               	movlw	128
  7155  086B  0522               	andwf	___flge@ff1+2,w
  7156  086C  00AA               	movwf	??___flge+2
  7157  086D  307F               	movlw	127
  7158  086E  0523               	andwf	___flge@ff1+3,w
  7159  086F  00AB               	movwf	??___flge+3
  7160  0870  082B               	movf	??___flge+3,w
  7161  0871  042A               	iorwf	??___flge+2,w
  7162  0872  0429               	iorwf	??___flge+1,w
  7163  0873  0428               	iorwf	??___flge,w
  7164  0874  1D03               	skipz
  7165  0875  2877               	goto	u4721
  7166  0876  2878               	goto	u4720
  7167  0877                     u4721:
  7168  0877  2880               	goto	l619
  7169  0878                     u4720:
  7170  0878                     l3643:
  7171  0878  3000               	movlw	0
  7172  0879  00A3               	movwf	___flge@ff1+3
  7173  087A  3000               	movlw	0
  7174  087B  00A2               	movwf	___flge@ff1+2
  7175  087C  3000               	movlw	0
  7176  087D  00A1               	movwf	___flge@ff1+1
  7177  087E  3000               	movlw	0
  7178  087F  00A0               	movwf	___flge@ff1
  7179  0880                     l619:
  7180  0880  3000               	movlw	0
  7181  0881  0524               	andwf	___flge@ff2,w
  7182  0882  00A8               	movwf	??___flge
  7183  0883  3000               	movlw	0
  7184  0884  0525               	andwf	___flge@ff2+1,w
  7185  0885  00A9               	movwf	??___flge+1
  7186  0886  3080               	movlw	128
  7187  0887  0526               	andwf	___flge@ff2+2,w
  7188  0888  00AA               	movwf	??___flge+2
  7189  0889  307F               	movlw	127
  7190  088A  0527               	andwf	___flge@ff2+3,w
  7191  088B  00AB               	movwf	??___flge+3
  7192  088C  082B               	movf	??___flge+3,w
  7193  088D  042A               	iorwf	??___flge+2,w
  7194  088E  0429               	iorwf	??___flge+1,w
  7195  088F  0428               	iorwf	??___flge,w
  7196  0890  1D03               	skipz
  7197  0891  2893               	goto	u4731
  7198  0892  2894               	goto	u4730
  7199  0893                     u4731:
  7200  0893  289C               	goto	l3647
  7201  0894                     u4730:
  7202  0894                     l3645:
  7203  0894  3000               	movlw	0
  7204  0895  00A7               	movwf	___flge@ff2+3
  7205  0896  3000               	movlw	0
  7206  0897  00A6               	movwf	___flge@ff2+2
  7207  0898  3000               	movlw	0
  7208  0899  00A5               	movwf	___flge@ff2+1
  7209  089A  3000               	movlw	0
  7210  089B  00A4               	movwf	___flge@ff2
  7211  089C                     l3647:
  7212  089C  1FA3               	btfss	___flge@ff1+3,7
  7213  089D  289F               	goto	u4741
  7214  089E  28A0               	goto	u4740
  7215  089F                     u4741:
  7216  089F  28C4               	goto	l3651
  7217  08A0                     u4740:
  7218  08A0                     l3649:
  7219  08A0  3000               	movlw	0
  7220  08A1  00A8               	movwf	??___flge
  7221  08A2  3000               	movlw	0
  7222  08A3  00A9               	movwf	??___flge+1
  7223  08A4  3000               	movlw	0
  7224  08A5  00AA               	movwf	??___flge+2
  7225  08A6  3080               	movlw	128
  7226  08A7  00AB               	movwf	??___flge+3
  7227  08A8  0820               	movf	___flge@ff1,w
  7228  08A9  02A8               	subwf	??___flge,f
  7229  08AA  0821               	movf	___flge@ff1+1,w
  7230  08AB  1C03               	skipc
  7231  08AC  0F21               	incfsz	___flge@ff1+1,w
  7232  08AD  28AF               	goto	u4751
  7233  08AE  28B0               	goto	u4752
  7234  08AF                     u4751:
  7235  08AF  02A9               	subwf	??___flge+1,f
  7236  08B0                     u4752:
  7237  08B0  0822               	movf	___flge@ff1+2,w
  7238  08B1  1C03               	skipc
  7239  08B2  0F22               	incfsz	___flge@ff1+2,w
  7240  08B3  28B5               	goto	u4753
  7241  08B4  28B6               	goto	u4754
  7242  08B5                     u4753:
  7243  08B5  02AA               	subwf	??___flge+2,f
  7244  08B6                     u4754:
  7245  08B6  0823               	movf	___flge@ff1+3,w
  7246  08B7  1C03               	skipc
  7247  08B8  0F23               	incfsz	___flge@ff1+3,w
  7248  08B9  28BB               	goto	u4755
  7249  08BA  28BC               	goto	u4756
  7250  08BB                     u4755:
  7251  08BB  02AB               	subwf	??___flge+3,f
  7252  08BC                     u4756:
  7253  08BC  082B               	movf	??___flge+3,w
  7254  08BD  00A3               	movwf	___flge@ff1+3
  7255  08BE  082A               	movf	??___flge+2,w
  7256  08BF  00A2               	movwf	___flge@ff1+2
  7257  08C0  0829               	movf	??___flge+1,w
  7258  08C1  00A1               	movwf	___flge@ff1+1
  7259  08C2  0828               	movf	??___flge,w
  7260  08C3  00A0               	movwf	___flge@ff1
  7261  08C4                     l3651:
  7262  08C4  1FA7               	btfss	___flge@ff2+3,7
  7263  08C5  28C7               	goto	u4761
  7264  08C6  28C8               	goto	u4760
  7265  08C7                     u4761:
  7266  08C7  28EC               	goto	l622
  7267  08C8                     u4760:
  7268  08C8                     l3653:
  7269  08C8  3000               	movlw	0
  7270  08C9  00A8               	movwf	??___flge
  7271  08CA  3000               	movlw	0
  7272  08CB  00A9               	movwf	??___flge+1
  7273  08CC  3000               	movlw	0
  7274  08CD  00AA               	movwf	??___flge+2
  7275  08CE  3080               	movlw	128
  7276  08CF  00AB               	movwf	??___flge+3
  7277  08D0  0824               	movf	___flge@ff2,w
  7278  08D1  02A8               	subwf	??___flge,f
  7279  08D2  0825               	movf	___flge@ff2+1,w
  7280  08D3  1C03               	skipc
  7281  08D4  0F25               	incfsz	___flge@ff2+1,w
  7282  08D5  28D7               	goto	u4771
  7283  08D6  28D8               	goto	u4772
  7284  08D7                     u4771:
  7285  08D7  02A9               	subwf	??___flge+1,f
  7286  08D8                     u4772:
  7287  08D8  0826               	movf	___flge@ff2+2,w
  7288  08D9  1C03               	skipc
  7289  08DA  0F26               	incfsz	___flge@ff2+2,w
  7290  08DB  28DD               	goto	u4773
  7291  08DC  28DE               	goto	u4774
  7292  08DD                     u4773:
  7293  08DD  02AA               	subwf	??___flge+2,f
  7294  08DE                     u4774:
  7295  08DE  0827               	movf	___flge@ff2+3,w
  7296  08DF  1C03               	skipc
  7297  08E0  0F27               	incfsz	___flge@ff2+3,w
  7298  08E1  28E3               	goto	u4775
  7299  08E2  28E4               	goto	u4776
  7300  08E3                     u4775:
  7301  08E3  02AB               	subwf	??___flge+3,f
  7302  08E4                     u4776:
  7303  08E4  082B               	movf	??___flge+3,w
  7304  08E5  00A7               	movwf	___flge@ff2+3
  7305  08E6  082A               	movf	??___flge+2,w
  7306  08E7  00A6               	movwf	___flge@ff2+2
  7307  08E8  0829               	movf	??___flge+1,w
  7308  08E9  00A5               	movwf	___flge@ff2+1
  7309  08EA  0828               	movf	??___flge,w
  7310  08EB  00A4               	movwf	___flge@ff2
  7311  08EC                     l622:
  7312  08EC  3080               	movlw	128
  7313  08ED  06A3               	xorwf	___flge@ff1+3,f
  7314  08EE  3080               	movlw	128
  7315  08EF  06A7               	xorwf	___flge@ff2+3,f
  7316  08F0  0827               	movf	___flge@ff2+3,w
  7317  08F1  0223               	subwf	___flge@ff1+3,w
  7318  08F2  1D03               	skipz
  7319  08F3  28FE               	goto	u4785
  7320  08F4  0826               	movf	___flge@ff2+2,w
  7321  08F5  0222               	subwf	___flge@ff1+2,w
  7322  08F6  1D03               	skipz
  7323  08F7  28FE               	goto	u4785
  7324  08F8  0825               	movf	___flge@ff2+1,w
  7325  08F9  0221               	subwf	___flge@ff1+1,w
  7326  08FA  1D03               	skipz
  7327  08FB  28FE               	goto	u4785
  7328  08FC  0824               	movf	___flge@ff2,w
  7329  08FD  0220               	subwf	___flge@ff1,w
  7330  08FE                     u4785:
  7331  08FE  1803               	skipnc
  7332  08FF  2901               	goto	u4781
  7333  0900  2902               	goto	u4780
  7334  0901                     u4781:
  7335  0901  2904               	goto	l3657
  7336  0902                     u4780:
  7337  0902                     l3655:
  7338  0902  1003               	clrc
  7339  0903  2905               	goto	l623
  7340  0904                     l3657:
  7341  0904  1403               	setc
  7342  0905                     l623:
  7343  0905  0008               	return
  7344  0906                     __end_of___flge:
  7345                           
  7346                           	psect	text24
  7347  0B9B                     __ptext24:	
  7348 ;; *************** function ___fldiv *****************
  7349 ;; Defined at:
  7350 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  a               4   29[BANK0 ] unsigned int 
  7353 ;;  b               4   33[BANK0 ] unsigned int 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  grs             4   49[BANK0 ] unsigned long 
  7356 ;;  rem             4   42[BANK0 ] unsigned long 
  7357 ;;  new_exp         2   47[BANK0 ] int 
  7358 ;;  aexp            1   54[BANK0 ] unsigned char 
  7359 ;;  bexp            1   53[BANK0 ] unsigned char 
  7360 ;;  sign            1   46[BANK0 ] unsigned char 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  4   29[BANK0 ] unsigned char 
  7363 ;; Registers used:
  7364 ;;		wreg, status,2, status,0, btemp+1
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7370 ;;      Params:         0       8       0       0       0
  7371 ;;      Locals:         0      13       0       0       0
  7372 ;;      Temps:          0       5       0       0       0
  7373 ;;      Totals:         0      26       0       0       0
  7374 ;;Total ram usage:       26 bytes
  7375 ;; Hardware stack levels used: 1
  7376 ;; Hardware stack levels required when called: 1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_ADC_convert
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___fldiv
  7386  0B9B                     ___fldiv:
  7387  0B9B                     l3703:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7390                           
  7391  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  7392  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  7393  0B9D  0844               	movf	___fldiv@b+3,w
  7394  0B9E  3980               	andlw	128
  7395  0B9F  00C5               	movwf	??___fldiv
  7396  0BA0  0845               	movf	??___fldiv,w
  7397  0BA1  00CE               	movwf	___fldiv@sign
  7398  0BA2                     l3705:
  7399  0BA2  0844               	movf	___fldiv@b+3,w
  7400  0BA3  00C5               	movwf	??___fldiv
  7401  0BA4  0745               	addwf	??___fldiv,w
  7402  0BA5  00C6               	movwf	??___fldiv+1
  7403  0BA6  0846               	movf	??___fldiv+1,w
  7404  0BA7  00D5               	movwf	___fldiv@bexp
  7405  0BA8                     l3707:
  7406  0BA8  1FC3               	btfss	___fldiv@b+2,7
  7407  0BA9  2BAB               	goto	u4891
  7408  0BAA  2BAC               	goto	u4890
  7409  0BAB                     u4891:
  7410  0BAB  2BAD               	goto	l3711
  7411  0BAC                     u4890:
  7412  0BAC                     l3709:
  7413  0BAC  1455               	bsf	___fldiv@bexp,0
  7414  0BAD                     l3711:
  7415  0BAD  0855               	movf	___fldiv@bexp,w
  7416  0BAE  1903               	btfsc	3,2
  7417  0BAF  2BB1               	goto	u4901
  7418  0BB0  2BB2               	goto	u4900
  7419  0BB1                     u4901:
  7420  0BB1  2BC2               	goto	l3721
  7421  0BB2                     u4900:
  7422  0BB2                     l3713:
  7423  0BB2  0A55               	incf	___fldiv@bexp,w
  7424  0BB3  1D03               	btfss	3,2
  7425  0BB4  2BB6               	goto	u4911
  7426  0BB5  2BB7               	goto	u4910
  7427  0BB6                     u4911:
  7428  0BB6  2BBF               	goto	l3717
  7429  0BB7                     u4910:
  7430  0BB7                     l3715:
  7431  0BB7  3000               	movlw	0
  7432  0BB8  00C4               	movwf	___fldiv@b+3
  7433  0BB9  3000               	movlw	0
  7434  0BBA  00C3               	movwf	___fldiv@b+2
  7435  0BBB  3000               	movlw	0
  7436  0BBC  00C2               	movwf	___fldiv@b+1
  7437  0BBD  3000               	movlw	0
  7438  0BBE  00C1               	movwf	___fldiv@b
  7439  0BBF                     l3717:
  7440  0BBF  17C3               	bsf	___fldiv@b+2,7
  7441  0BC0                     l3719:
  7442  0BC0  01C4               	clrf	___fldiv@b+3
  7443  0BC1  2BCA               	goto	l3723
  7444  0BC2                     l3721:
  7445  0BC2  3000               	movlw	0
  7446  0BC3  00C4               	movwf	___fldiv@b+3
  7447  0BC4  3000               	movlw	0
  7448  0BC5  00C3               	movwf	___fldiv@b+2
  7449  0BC6  3000               	movlw	0
  7450  0BC7  00C2               	movwf	___fldiv@b+1
  7451  0BC8  3000               	movlw	0
  7452  0BC9  00C1               	movwf	___fldiv@b
  7453  0BCA                     l3723:
  7454  0BCA  0840               	movf	___fldiv@a+3,w
  7455  0BCB  3980               	andlw	128
  7456  0BCC  00C5               	movwf	??___fldiv
  7457  0BCD  0845               	movf	??___fldiv,w
  7458  0BCE  06CE               	xorwf	___fldiv@sign,f
  7459  0BCF                     l3725:
  7460  0BCF  0840               	movf	___fldiv@a+3,w
  7461  0BD0  00C5               	movwf	??___fldiv
  7462  0BD1  0745               	addwf	??___fldiv,w
  7463  0BD2  00C6               	movwf	??___fldiv+1
  7464  0BD3  0846               	movf	??___fldiv+1,w
  7465  0BD4  00D6               	movwf	___fldiv@aexp
  7466  0BD5                     l3727:
  7467  0BD5  1FBF               	btfss	___fldiv@a+2,7
  7468  0BD6  2BD8               	goto	u4921
  7469  0BD7  2BD9               	goto	u4920
  7470  0BD8                     u4921:
  7471  0BD8  2BDA               	goto	l3731
  7472  0BD9                     u4920:
  7473  0BD9                     l3729:
  7474  0BD9  1456               	bsf	___fldiv@aexp,0
  7475  0BDA                     l3731:
  7476  0BDA  0856               	movf	___fldiv@aexp,w
  7477  0BDB  1903               	btfsc	3,2
  7478  0BDC  2BDE               	goto	u4931
  7479  0BDD  2BDF               	goto	u4930
  7480  0BDE                     u4931:
  7481  0BDE  2BEF               	goto	l3741
  7482  0BDF                     u4930:
  7483  0BDF                     l3733:
  7484  0BDF  0A56               	incf	___fldiv@aexp,w
  7485  0BE0  1D03               	btfss	3,2
  7486  0BE1  2BE3               	goto	u4941
  7487  0BE2  2BE4               	goto	u4940
  7488  0BE3                     u4941:
  7489  0BE3  2BEC               	goto	l3737
  7490  0BE4                     u4940:
  7491  0BE4                     l3735:
  7492  0BE4  3000               	movlw	0
  7493  0BE5  00C0               	movwf	___fldiv@a+3
  7494  0BE6  3000               	movlw	0
  7495  0BE7  00BF               	movwf	___fldiv@a+2
  7496  0BE8  3000               	movlw	0
  7497  0BE9  00BE               	movwf	___fldiv@a+1
  7498  0BEA  3000               	movlw	0
  7499  0BEB  00BD               	movwf	___fldiv@a
  7500  0BEC                     l3737:
  7501  0BEC  17BF               	bsf	___fldiv@a+2,7
  7502  0BED                     l3739:
  7503  0BED  01C0               	clrf	___fldiv@a+3
  7504  0BEE  2BF7               	goto	l794
  7505  0BEF                     l3741:
  7506  0BEF  3000               	movlw	0
  7507  0BF0  00C0               	movwf	___fldiv@a+3
  7508  0BF1  3000               	movlw	0
  7509  0BF2  00BF               	movwf	___fldiv@a+2
  7510  0BF3  3000               	movlw	0
  7511  0BF4  00BE               	movwf	___fldiv@a+1
  7512  0BF5  3000               	movlw	0
  7513  0BF6  00BD               	movwf	___fldiv@a
  7514  0BF7                     l794:
  7515  0BF7  0840               	movf	___fldiv@a+3,w
  7516  0BF8  043F               	iorwf	___fldiv@a+2,w
  7517  0BF9  043E               	iorwf	___fldiv@a+1,w
  7518  0BFA  043D               	iorwf	___fldiv@a,w
  7519  0BFB  1D03               	skipz
  7520  0BFC  2BFE               	goto	u4951
  7521  0BFD  2BFF               	goto	u4950
  7522  0BFE                     u4951:
  7523  0BFE  2C18               	goto	l3751
  7524  0BFF                     u4950:
  7525  0BFF                     l3743:
  7526  0BFF  3000               	movlw	0
  7527  0C00  00C4               	movwf	___fldiv@b+3
  7528  0C01  3000               	movlw	0
  7529  0C02  00C3               	movwf	___fldiv@b+2
  7530  0C03  3000               	movlw	0
  7531  0C04  00C2               	movwf	___fldiv@b+1
  7532  0C05  3000               	movlw	0
  7533  0C06  00C1               	movwf	___fldiv@b
  7534  0C07  3080               	movlw	128
  7535  0C08  04C3               	iorwf	___fldiv@b+2,f
  7536  0C09  307F               	movlw	127
  7537  0C0A  04C4               	iorwf	___fldiv@b+3,f
  7538  0C0B                     l3745:
  7539  0C0B  084E               	movf	___fldiv@sign,w
  7540  0C0C  00C5               	movwf	??___fldiv
  7541  0C0D  0845               	movf	??___fldiv,w
  7542  0C0E  04C4               	iorwf	___fldiv@b+3,f
  7543  0C0F                     l3747:
  7544  0C0F  0844               	movf	___fldiv@b+3,w
  7545  0C10  00C0               	movwf	?___fldiv+3
  7546  0C11  0843               	movf	___fldiv@b+2,w
  7547  0C12  00BF               	movwf	?___fldiv+2
  7548  0C13  0842               	movf	___fldiv@b+1,w
  7549  0C14  00BE               	movwf	?___fldiv+1
  7550  0C15  0841               	movf	___fldiv@b,w
  7551  0C16  00BD               	movwf	?___fldiv
  7552  0C17  2D77               	goto	l796
  7553  0C18                     l3751:
  7554  0C18  0855               	movf	___fldiv@bexp,w
  7555  0C19  1D03               	btfss	3,2
  7556  0C1A  2C1C               	goto	u4961
  7557  0C1B  2C1D               	goto	u4960
  7558  0C1C                     u4961:
  7559  0C1C  2C26               	goto	l3757
  7560  0C1D                     u4960:
  7561  0C1D                     l3753:
  7562  0C1D  3000               	movlw	0
  7563  0C1E  00C0               	movwf	?___fldiv+3
  7564  0C1F  3000               	movlw	0
  7565  0C20  00BF               	movwf	?___fldiv+2
  7566  0C21  3000               	movlw	0
  7567  0C22  00BE               	movwf	?___fldiv+1
  7568  0C23  3000               	movlw	0
  7569  0C24  00BD               	movwf	?___fldiv
  7570  0C25  2D77               	goto	l796
  7571  0C26                     l3757:
  7572  0C26  0855               	movf	___fldiv@bexp,w
  7573  0C27  00C5               	movwf	??___fldiv
  7574  0C28  01C6               	clrf	??___fldiv+1
  7575  0C29  0846               	movf	??___fldiv+1,w
  7576  0C2A  00C8               	movwf	??___fldiv+3
  7577  0C2B  0856               	movf	___fldiv@aexp,w
  7578  0C2C  0245               	subwf	??___fldiv,w
  7579  0C2D  00C7               	movwf	??___fldiv+2
  7580  0C2E  1C03               	skipc
  7581  0C2F  03C8               	decf	??___fldiv+3,f
  7582  0C30  0847               	movf	??___fldiv+2,w
  7583  0C31  3E7F               	addlw	127
  7584  0C32  00CF               	movwf	___fldiv@new_exp
  7585  0C33  0848               	movf	??___fldiv+3,w
  7586  0C34  1803               	skipnc
  7587  0C35  3E01               	addlw	1
  7588  0C36  3E00               	addlw	0
  7589  0C37  00D0               	movwf	___fldiv@new_exp+1
  7590  0C38                     l3759:
  7591  0C38  0844               	movf	___fldiv@b+3,w
  7592  0C39  00CD               	movwf	___fldiv@rem+3
  7593  0C3A  0843               	movf	___fldiv@b+2,w
  7594  0C3B  00CC               	movwf	___fldiv@rem+2
  7595  0C3C  0842               	movf	___fldiv@b+1,w
  7596  0C3D  00CB               	movwf	___fldiv@rem+1
  7597  0C3E  0841               	movf	___fldiv@b,w
  7598  0C3F  00CA               	movwf	___fldiv@rem
  7599  0C40                     l3761:
  7600  0C40  3000               	movlw	0
  7601  0C41  00C4               	movwf	___fldiv@b+3
  7602  0C42  3000               	movlw	0
  7603  0C43  00C3               	movwf	___fldiv@b+2
  7604  0C44  3000               	movlw	0
  7605  0C45  00C2               	movwf	___fldiv@b+1
  7606  0C46  3000               	movlw	0
  7607  0C47  00C1               	movwf	___fldiv@b
  7608  0C48                     l3763:
  7609  0C48  3000               	movlw	0
  7610  0C49  00D4               	movwf	___fldiv@grs+3
  7611  0C4A  3000               	movlw	0
  7612  0C4B  00D3               	movwf	___fldiv@grs+2
  7613  0C4C  3000               	movlw	0
  7614  0C4D  00D2               	movwf	___fldiv@grs+1
  7615  0C4E  3000               	movlw	0
  7616  0C4F  00D1               	movwf	___fldiv@grs
  7617  0C50                     l3765:
  7618  0C50  01D6               	clrf	___fldiv@aexp
  7619  0C51  2C9C               	goto	l3785
  7620  0C52                     l3767:
  7621  0C52  0856               	movf	___fldiv@aexp,w
  7622  0C53  1903               	btfsc	3,2
  7623  0C54  2C56               	goto	u4971
  7624  0C55  2C57               	goto	u4970
  7625  0C56                     u4971:
  7626  0C56  2C77               	goto	l3777
  7627  0C57                     u4970:
  7628  0C57                     l3769:
  7629  0C57  3001               	movlw	1
  7630  0C58  00C5               	movwf	??___fldiv
  7631  0C59                     u4985:
  7632  0C59  1003               	clrc
  7633  0C5A  0DCA               	rlf	___fldiv@rem,f
  7634  0C5B  0DCB               	rlf	___fldiv@rem+1,f
  7635  0C5C  0DCC               	rlf	___fldiv@rem+2,f
  7636  0C5D  0DCD               	rlf	___fldiv@rem+3,f
  7637  0C5E  0BC5               	decfsz	??___fldiv,f
  7638  0C5F  2C59               	goto	u4985
  7639  0C60  3001               	movlw	1
  7640  0C61  00C5               	movwf	??___fldiv
  7641  0C62                     u4995:
  7642  0C62  1003               	clrc
  7643  0C63  0DC1               	rlf	___fldiv@b,f
  7644  0C64  0DC2               	rlf	___fldiv@b+1,f
  7645  0C65  0DC3               	rlf	___fldiv@b+2,f
  7646  0C66  0DC4               	rlf	___fldiv@b+3,f
  7647  0C67  0BC5               	decfsz	??___fldiv,f
  7648  0C68  2C62               	goto	u4995
  7649  0C69                     l3771:
  7650  0C69  1FD4               	btfss	___fldiv@grs+3,7
  7651  0C6A  2C6C               	goto	u5001
  7652  0C6B  2C6D               	goto	u5000
  7653  0C6C                     u5001:
  7654  0C6C  2C6E               	goto	l3775
  7655  0C6D                     u5000:
  7656  0C6D                     l3773:
  7657  0C6D  1441               	bsf	___fldiv@b,0
  7658  0C6E                     l3775:
  7659  0C6E  3001               	movlw	1
  7660  0C6F  00C5               	movwf	??___fldiv
  7661  0C70                     u5015:
  7662  0C70  1003               	clrc
  7663  0C71  0DD1               	rlf	___fldiv@grs,f
  7664  0C72  0DD2               	rlf	___fldiv@grs+1,f
  7665  0C73  0DD3               	rlf	___fldiv@grs+2,f
  7666  0C74  0DD4               	rlf	___fldiv@grs+3,f
  7667  0C75  0BC5               	decfsz	??___fldiv,f
  7668  0C76  2C70               	goto	u5015
  7669  0C77                     l3777:
  7670  0C77  0840               	movf	___fldiv@a+3,w
  7671  0C78  024D               	subwf	___fldiv@rem+3,w
  7672  0C79  1D03               	skipz
  7673  0C7A  2C85               	goto	u5025
  7674  0C7B  083F               	movf	___fldiv@a+2,w
  7675  0C7C  024C               	subwf	___fldiv@rem+2,w
  7676  0C7D  1D03               	skipz
  7677  0C7E  2C85               	goto	u5025
  7678  0C7F  083E               	movf	___fldiv@a+1,w
  7679  0C80  024B               	subwf	___fldiv@rem+1,w
  7680  0C81  1D03               	skipz
  7681  0C82  2C85               	goto	u5025
  7682  0C83  083D               	movf	___fldiv@a,w
  7683  0C84  024A               	subwf	___fldiv@rem,w
  7684  0C85                     u5025:
  7685  0C85  1C03               	skipc
  7686  0C86  2C88               	goto	u5021
  7687  0C87  2C89               	goto	u5020
  7688  0C88                     u5021:
  7689  0C88  2C98               	goto	l3783
  7690  0C89                     u5020:
  7691  0C89                     l3779:
  7692  0C89  1754               	bsf	___fldiv@grs+3,6
  7693  0C8A                     l3781:
  7694  0C8A  083D               	movf	___fldiv@a,w
  7695  0C8B  02CA               	subwf	___fldiv@rem,f
  7696  0C8C  083E               	movf	___fldiv@a+1,w
  7697  0C8D  1C03               	skipc
  7698  0C8E  0F3E               	incfsz	___fldiv@a+1,w
  7699  0C8F  02CB               	subwf	___fldiv@rem+1,f
  7700  0C90  083F               	movf	___fldiv@a+2,w
  7701  0C91  1C03               	skipc
  7702  0C92  0F3F               	incfsz	___fldiv@a+2,w
  7703  0C93  02CC               	subwf	___fldiv@rem+2,f
  7704  0C94  0840               	movf	___fldiv@a+3,w
  7705  0C95  1C03               	skipc
  7706  0C96  0F40               	incfsz	___fldiv@a+3,w
  7707  0C97  02CD               	subwf	___fldiv@rem+3,f
  7708  0C98                     l3783:
  7709  0C98  3001               	movlw	1
  7710  0C99  00C5               	movwf	??___fldiv
  7711  0C9A  0845               	movf	??___fldiv,w
  7712  0C9B  07D6               	addwf	___fldiv@aexp,f
  7713  0C9C                     l3785:
  7714  0C9C  301A               	movlw	26
  7715  0C9D  0256               	subwf	___fldiv@aexp,w
  7716  0C9E  1C03               	skipc
  7717  0C9F  2CA1               	goto	u5031
  7718  0CA0  2CA2               	goto	u5030
  7719  0CA1                     u5031:
  7720  0CA1  2C52               	goto	l3767
  7721  0CA2                     u5030:
  7722  0CA2                     l3787:
  7723  0CA2  084D               	movf	___fldiv@rem+3,w
  7724  0CA3  044C               	iorwf	___fldiv@rem+2,w
  7725  0CA4  044B               	iorwf	___fldiv@rem+1,w
  7726  0CA5  044A               	iorwf	___fldiv@rem,w
  7727  0CA6  1903               	skipnz
  7728  0CA7  2CA9               	goto	u5041
  7729  0CA8  2CAA               	goto	u5040
  7730  0CA9                     u5041:
  7731  0CA9  2CC9               	goto	l3801
  7732  0CAA                     u5040:
  7733  0CAA                     l3789:
  7734  0CAA  1451               	bsf	___fldiv@grs,0
  7735  0CAB  2CC9               	goto	l3801
  7736  0CAC                     l3791:
  7737  0CAC  3001               	movlw	1
  7738  0CAD  00C5               	movwf	??___fldiv
  7739  0CAE                     u5055:
  7740  0CAE  1003               	clrc
  7741  0CAF  0DC1               	rlf	___fldiv@b,f
  7742  0CB0  0DC2               	rlf	___fldiv@b+1,f
  7743  0CB1  0DC3               	rlf	___fldiv@b+2,f
  7744  0CB2  0DC4               	rlf	___fldiv@b+3,f
  7745  0CB3  0BC5               	decfsz	??___fldiv,f
  7746  0CB4  2CAE               	goto	u5055
  7747  0CB5                     l3793:
  7748  0CB5  1FD4               	btfss	___fldiv@grs+3,7
  7749  0CB6  2CB8               	goto	u5061
  7750  0CB7  2CB9               	goto	u5060
  7751  0CB8                     u5061:
  7752  0CB8  2CBA               	goto	l3797
  7753  0CB9                     u5060:
  7754  0CB9                     l3795:
  7755  0CB9  1441               	bsf	___fldiv@b,0
  7756  0CBA                     l3797:
  7757  0CBA  3001               	movlw	1
  7758  0CBB  00C5               	movwf	??___fldiv
  7759  0CBC                     u5075:
  7760  0CBC  1003               	clrc
  7761  0CBD  0DD1               	rlf	___fldiv@grs,f
  7762  0CBE  0DD2               	rlf	___fldiv@grs+1,f
  7763  0CBF  0DD3               	rlf	___fldiv@grs+2,f
  7764  0CC0  0DD4               	rlf	___fldiv@grs+3,f
  7765  0CC1  0BC5               	decfsz	??___fldiv,f
  7766  0CC2  2CBC               	goto	u5075
  7767  0CC3                     l3799:
  7768  0CC3  30FF               	movlw	255
  7769  0CC4  07CF               	addwf	___fldiv@new_exp,f
  7770  0CC5  1803               	skipnc
  7771  0CC6  0AD0               	incf	___fldiv@new_exp+1,f
  7772  0CC7  30FF               	movlw	255
  7773  0CC8  07D0               	addwf	___fldiv@new_exp+1,f
  7774  0CC9                     l3801:
  7775  0CC9  1FC3               	btfss	___fldiv@b+2,7
  7776  0CCA  2CCC               	goto	u5081
  7777  0CCB  2CCD               	goto	u5080
  7778  0CCC                     u5081:
  7779  0CCC  2CAC               	goto	l3791
  7780  0CCD                     u5080:
  7781  0CCD                     l3803:
  7782  0CCD  01D6               	clrf	___fldiv@aexp
  7783  0CCE                     l3805:
  7784  0CCE  1FD4               	btfss	___fldiv@grs+3,7
  7785  0CCF  2CD1               	goto	u5091
  7786  0CD0  2CD2               	goto	u5090
  7787  0CD1                     u5091:
  7788  0CD1  2CEE               	goto	l3813
  7789  0CD2                     u5090:
  7790  0CD2                     l3807:
  7791  0CD2  30FF               	movlw	255
  7792  0CD3  0551               	andwf	___fldiv@grs,w
  7793  0CD4  00C5               	movwf	??___fldiv
  7794  0CD5  30FF               	movlw	255
  7795  0CD6  0552               	andwf	___fldiv@grs+1,w
  7796  0CD7  00C6               	movwf	??___fldiv+1
  7797  0CD8  30FF               	movlw	255
  7798  0CD9  0553               	andwf	___fldiv@grs+2,w
  7799  0CDA  00C7               	movwf	??___fldiv+2
  7800  0CDB  307F               	movlw	127
  7801  0CDC  0554               	andwf	___fldiv@grs+3,w
  7802  0CDD  00C8               	movwf	??___fldiv+3
  7803  0CDE  0848               	movf	??___fldiv+3,w
  7804  0CDF  0447               	iorwf	??___fldiv+2,w
  7805  0CE0  0446               	iorwf	??___fldiv+1,w
  7806  0CE1  0445               	iorwf	??___fldiv,w
  7807  0CE2  1903               	skipnz
  7808  0CE3  2CE5               	goto	u5101
  7809  0CE4  2CE6               	goto	u5100
  7810  0CE5                     u5101:
  7811  0CE5  2CE9               	goto	l810
  7812  0CE6                     u5100:
  7813  0CE6                     l3809:
  7814  0CE6  01D6               	clrf	___fldiv@aexp
  7815  0CE7  0AD6               	incf	___fldiv@aexp,f
  7816  0CE8  2CEE               	goto	l3813
  7817  0CE9                     l810:
  7818  0CE9  1C41               	btfss	___fldiv@b,0
  7819  0CEA  2CEC               	goto	u5111
  7820  0CEB  2CED               	goto	u5110
  7821  0CEC                     u5111:
  7822  0CEC  2CEE               	goto	l3813
  7823  0CED                     u5110:
  7824  0CED  2CE6               	goto	l3809
  7825  0CEE                     l3813:
  7826  0CEE  0856               	movf	___fldiv@aexp,w
  7827  0CEF  1903               	btfsc	3,2
  7828  0CF0  2CF2               	goto	u5121
  7829  0CF1  2CF3               	goto	u5120
  7830  0CF2                     u5121:
  7831  0CF2  2D24               	goto	l3823
  7832  0CF3                     u5120:
  7833  0CF3                     l3815:
  7834  0CF3  3001               	movlw	1
  7835  0CF4  07C1               	addwf	___fldiv@b,f
  7836  0CF5  3000               	movlw	0
  7837  0CF6  1803               	skipnc
  7838  0CF7  3001               	movlw	1
  7839  0CF8  07C2               	addwf	___fldiv@b+1,f
  7840  0CF9  3000               	movlw	0
  7841  0CFA  1803               	skipnc
  7842  0CFB  3001               	movlw	1
  7843  0CFC  07C3               	addwf	___fldiv@b+2,f
  7844  0CFD  3000               	movlw	0
  7845  0CFE  1803               	skipnc
  7846  0CFF  3001               	movlw	1
  7847  0D00  07C4               	addwf	___fldiv@b+3,f
  7848  0D01                     l3817:
  7849  0D01  1C44               	btfss	___fldiv@b+3,0
  7850  0D02  2D04               	goto	u5131
  7851  0D03  2D05               	goto	u5130
  7852  0D04                     u5131:
  7853  0D04  2D24               	goto	l3823
  7854  0D05                     u5130:
  7855  0D05                     l3819:
  7856  0D05  0841               	movf	___fldiv@b,w
  7857  0D06  00C5               	movwf	??___fldiv
  7858  0D07  0842               	movf	___fldiv@b+1,w
  7859  0D08  00C6               	movwf	??___fldiv+1
  7860  0D09  0843               	movf	___fldiv@b+2,w
  7861  0D0A  00C7               	movwf	??___fldiv+2
  7862  0D0B  0844               	movf	___fldiv@b+3,w
  7863  0D0C  00C8               	movwf	??___fldiv+3
  7864  0D0D  3001               	movlw	1
  7865  0D0E  00C9               	movwf	??___fldiv+4
  7866  0D0F                     u5145:
  7867  0D0F  0D48               	rlf	??___fldiv+3,w
  7868  0D10  0CC8               	rrf	??___fldiv+3,f
  7869  0D11  0CC7               	rrf	??___fldiv+2,f
  7870  0D12  0CC6               	rrf	??___fldiv+1,f
  7871  0D13  0CC5               	rrf	??___fldiv,f
  7872  0D14                     u5140:
  7873  0D14  0BC9               	decfsz	??___fldiv+4,f
  7874  0D15  2D0F               	goto	u5145
  7875  0D16  0848               	movf	??___fldiv+3,w
  7876  0D17  00C4               	movwf	___fldiv@b+3
  7877  0D18  0847               	movf	??___fldiv+2,w
  7878  0D19  00C3               	movwf	___fldiv@b+2
  7879  0D1A  0846               	movf	??___fldiv+1,w
  7880  0D1B  00C2               	movwf	___fldiv@b+1
  7881  0D1C  0845               	movf	??___fldiv,w
  7882  0D1D  00C1               	movwf	___fldiv@b
  7883  0D1E                     l3821:
  7884  0D1E  3001               	movlw	1
  7885  0D1F  07CF               	addwf	___fldiv@new_exp,f
  7886  0D20  1803               	skipnc
  7887  0D21  0AD0               	incf	___fldiv@new_exp+1,f
  7888  0D22  3000               	movlw	0
  7889  0D23  07D0               	addwf	___fldiv@new_exp+1,f
  7890  0D24                     l3823:
  7891  0D24  0850               	movf	___fldiv@new_exp+1,w
  7892  0D25  3A80               	xorlw	128
  7893  0D26  00FF               	movwf	btemp+1
  7894  0D27  3080               	movlw	128
  7895  0D28  027F               	subwf	btemp+1,w
  7896  0D29  1D03               	skipz
  7897  0D2A  2D2D               	goto	u5155
  7898  0D2B  30FF               	movlw	255
  7899  0D2C  024F               	subwf	___fldiv@new_exp,w
  7900  0D2D                     u5155:
  7901  0D2D  1C03               	skipc
  7902  0D2E  2D30               	goto	u5151
  7903  0D2F  2D31               	goto	u5150
  7904  0D30                     u5151:
  7905  0D30  2D3F               	goto	l3827
  7906  0D31                     u5150:
  7907  0D31                     l3825:
  7908  0D31  30FF               	movlw	255
  7909  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  7910  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  7911  0D34  00CF               	movwf	___fldiv@new_exp
  7912  0D35  3000               	movlw	0
  7913  0D36  00D0               	movwf	___fldiv@new_exp+1
  7914  0D37  3000               	movlw	0
  7915  0D38  00C4               	movwf	___fldiv@b+3
  7916  0D39  3000               	movlw	0
  7917  0D3A  00C3               	movwf	___fldiv@b+2
  7918  0D3B  3000               	movlw	0
  7919  0D3C  00C2               	movwf	___fldiv@b+1
  7920  0D3D  3000               	movlw	0
  7921  0D3E  00C1               	movwf	___fldiv@b
  7922  0D3F                     l3827:
  7923  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  7924  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  7925  0D41  0850               	movf	___fldiv@new_exp+1,w
  7926  0D42  3A80               	xorlw	128
  7927  0D43  00FF               	movwf	btemp+1
  7928  0D44  3080               	movlw	128
  7929  0D45  027F               	subwf	btemp+1,w
  7930  0D46  1D03               	skipz
  7931  0D47  2D4A               	goto	u5165
  7932  0D48  3001               	movlw	1
  7933  0D49  024F               	subwf	___fldiv@new_exp,w
  7934  0D4A                     u5165:
  7935  0D4A  1803               	skipnc
  7936  0D4B  2D4D               	goto	u5161
  7937  0D4C  2D4E               	goto	u5160
  7938  0D4D                     u5161:
  7939  0D4D  2D5B               	goto	l816
  7940  0D4E                     u5160:
  7941  0D4E                     l3829:
  7942  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  7943  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  7944  0D50  01CF               	clrf	___fldiv@new_exp
  7945  0D51  01D0               	clrf	___fldiv@new_exp+1
  7946  0D52                     l3831:
  7947  0D52  3000               	movlw	0
  7948  0D53  00C4               	movwf	___fldiv@b+3
  7949  0D54  3000               	movlw	0
  7950  0D55  00C3               	movwf	___fldiv@b+2
  7951  0D56  3000               	movlw	0
  7952  0D57  00C2               	movwf	___fldiv@b+1
  7953  0D58  3000               	movlw	0
  7954  0D59  00C1               	movwf	___fldiv@b
  7955  0D5A                     l3833:
  7956  0D5A  01CE               	clrf	___fldiv@sign
  7957  0D5B                     l816:
  7958  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  7959  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  7960  0D5D  084F               	movf	___fldiv@new_exp,w
  7961  0D5E  00C5               	movwf	??___fldiv
  7962  0D5F  0845               	movf	??___fldiv,w
  7963  0D60  00D5               	movwf	___fldiv@bexp
  7964  0D61                     l3835:
  7965  0D61  1C55               	btfss	___fldiv@bexp,0
  7966  0D62  2D64               	goto	u5171
  7967  0D63  2D65               	goto	u5170
  7968  0D64                     u5171:
  7969  0D64  2D67               	goto	l3839
  7970  0D65                     u5170:
  7971  0D65                     l3837:
  7972  0D65  17C3               	bsf	___fldiv@b+2,7
  7973  0D66  2D6B               	goto	l818
  7974  0D67                     l3839:
  7975  0D67  307F               	movlw	127
  7976  0D68  00C5               	movwf	??___fldiv
  7977  0D69  0845               	movf	??___fldiv,w
  7978  0D6A  05C3               	andwf	___fldiv@b+2,f
  7979  0D6B                     l818:
  7980  0D6B  0855               	movf	___fldiv@bexp,w
  7981  0D6C  00C5               	movwf	??___fldiv
  7982  0D6D  1003               	clrc
  7983  0D6E  0C45               	rrf	??___fldiv,w
  7984  0D6F  00C6               	movwf	??___fldiv+1
  7985  0D70  0846               	movf	??___fldiv+1,w
  7986  0D71  00C4               	movwf	___fldiv@b+3
  7987  0D72  084E               	movf	___fldiv@sign,w
  7988  0D73  00C5               	movwf	??___fldiv
  7989  0D74  0845               	movf	??___fldiv,w
  7990  0D75  04C4               	iorwf	___fldiv@b+3,f
  7991  0D76  2C0F               	goto	l3747
  7992  0D77                     l796:
  7993  0D77  0008               	return
  7994  0D78                     __end_of___fldiv:
  7995                           
  7996                           	psect	text25
  7997  15A6                     __ptext25:	
  7998 ;; *************** function ___awdiv *****************
  7999 ;; Defined at:
  8000 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;  divisor         2    0[BANK0 ] int 
  8003 ;;  dividend        2    2[BANK0 ] int 
  8004 ;; Auto vars:     Size  Location     Type
  8005 ;;  quotient        2    6[BANK0 ] int 
  8006 ;;  sign            1    5[BANK0 ] unsigned char 
  8007 ;;  counter         1    4[BANK0 ] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  2    0[BANK0 ] int 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8017 ;;      Params:         0       4       0       0       0
  8018 ;;      Locals:         0       4       0       0       0
  8019 ;;      Temps:          1       0       0       0       0
  8020 ;;      Totals:         1       8       0       0       0
  8021 ;;Total ram usage:        9 bytes
  8022 ;; Hardware stack levels used: 1
  8023 ;; Hardware stack levels required when called: 1
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_ADC_convert
  8028 ;;		_division
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           
  8033                           ;psect for function ___awdiv
  8034  15A6                     ___awdiv:
  8035  15A6                     l3559:	
  8036                           ;incstack = 0
  8037                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8038                           
  8039  15A6  1283               	bcf	3,5	;RP0=0, select bank0
  8040  15A7  1303               	bcf	3,6	;RP1=0, select bank0
  8041  15A8  01A5               	clrf	___awdiv@sign
  8042  15A9                     l3561:
  8043  15A9  1FA1               	btfss	___awdiv@divisor+1,7
  8044  15AA  2DAC               	goto	u4531
  8045  15AB  2DAD               	goto	u4530
  8046  15AC                     u4531:
  8047  15AC  2DB4               	goto	l3567
  8048  15AD                     u4530:
  8049  15AD                     l3563:
  8050  15AD  09A0               	comf	___awdiv@divisor,f
  8051  15AE  09A1               	comf	___awdiv@divisor+1,f
  8052  15AF  0AA0               	incf	___awdiv@divisor,f
  8053  15B0  1903               	skipnz
  8054  15B1  0AA1               	incf	___awdiv@divisor+1,f
  8055  15B2                     l3565:
  8056  15B2  01A5               	clrf	___awdiv@sign
  8057  15B3  0AA5               	incf	___awdiv@sign,f
  8058  15B4                     l3567:
  8059  15B4  1FA3               	btfss	___awdiv@dividend+1,7
  8060  15B5  2DB7               	goto	u4541
  8061  15B6  2DB8               	goto	u4540
  8062  15B7                     u4541:
  8063  15B7  2DC1               	goto	l3573
  8064  15B8                     u4540:
  8065  15B8                     l3569:
  8066  15B8  09A2               	comf	___awdiv@dividend,f
  8067  15B9  09A3               	comf	___awdiv@dividend+1,f
  8068  15BA  0AA2               	incf	___awdiv@dividend,f
  8069  15BB  1903               	skipnz
  8070  15BC  0AA3               	incf	___awdiv@dividend+1,f
  8071  15BD                     l3571:
  8072  15BD  3001               	movlw	1
  8073  15BE  00F4               	movwf	??___awdiv
  8074  15BF  0874               	movf	??___awdiv,w
  8075  15C0  06A5               	xorwf	___awdiv@sign,f
  8076  15C1                     l3573:
  8077  15C1  01A6               	clrf	___awdiv@quotient
  8078  15C2  01A7               	clrf	___awdiv@quotient+1
  8079  15C3                     l3575:
  8080  15C3  0820               	movf	___awdiv@divisor,w
  8081  15C4  0421               	iorwf	___awdiv@divisor+1,w
  8082  15C5  1903               	btfsc	3,2
  8083  15C6  2DC8               	goto	u4551
  8084  15C7  2DC9               	goto	u4550
  8085  15C8                     u4551:
  8086  15C8  2E00               	goto	l3595
  8087  15C9                     u4550:
  8088  15C9                     l3577:
  8089  15C9  01A4               	clrf	___awdiv@counter
  8090  15CA  0AA4               	incf	___awdiv@counter,f
  8091  15CB  2DD7               	goto	l3583
  8092  15CC                     l3579:
  8093  15CC  3001               	movlw	1
  8094  15CD                     u4565:
  8095  15CD  1003               	clrc
  8096  15CE  0DA0               	rlf	___awdiv@divisor,f
  8097  15CF  0DA1               	rlf	___awdiv@divisor+1,f
  8098  15D0  3EFF               	addlw	-1
  8099  15D1  1D03               	skipz
  8100  15D2  2DCD               	goto	u4565
  8101  15D3                     l3581:
  8102  15D3  3001               	movlw	1
  8103  15D4  00F4               	movwf	??___awdiv
  8104  15D5  0874               	movf	??___awdiv,w
  8105  15D6  07A4               	addwf	___awdiv@counter,f
  8106  15D7                     l3583:
  8107  15D7  1FA1               	btfss	___awdiv@divisor+1,7
  8108  15D8  2DDA               	goto	u4571
  8109  15D9  2DDB               	goto	u4570
  8110  15DA                     u4571:
  8111  15DA  2DCC               	goto	l3579
  8112  15DB                     u4570:
  8113  15DB                     l3585:
  8114  15DB  3001               	movlw	1
  8115  15DC                     u4585:
  8116  15DC  1003               	clrc
  8117  15DD  0DA6               	rlf	___awdiv@quotient,f
  8118  15DE  0DA7               	rlf	___awdiv@quotient+1,f
  8119  15DF  3EFF               	addlw	-1
  8120  15E0  1D03               	skipz
  8121  15E1  2DDC               	goto	u4585
  8122  15E2  0821               	movf	___awdiv@divisor+1,w
  8123  15E3  0223               	subwf	___awdiv@dividend+1,w
  8124  15E4  1D03               	skipz
  8125  15E5  2DE8               	goto	u4595
  8126  15E6  0820               	movf	___awdiv@divisor,w
  8127  15E7  0222               	subwf	___awdiv@dividend,w
  8128  15E8                     u4595:
  8129  15E8  1C03               	skipc
  8130  15E9  2DEB               	goto	u4591
  8131  15EA  2DEC               	goto	u4590
  8132  15EB                     u4591:
  8133  15EB  2DF3               	goto	l3591
  8134  15EC                     u4590:
  8135  15EC                     l3587:
  8136  15EC  0820               	movf	___awdiv@divisor,w
  8137  15ED  02A2               	subwf	___awdiv@dividend,f
  8138  15EE  0821               	movf	___awdiv@divisor+1,w
  8139  15EF  1C03               	skipc
  8140  15F0  03A3               	decf	___awdiv@dividend+1,f
  8141  15F1  02A3               	subwf	___awdiv@dividend+1,f
  8142  15F2                     l3589:
  8143  15F2  1426               	bsf	___awdiv@quotient,0
  8144  15F3                     l3591:
  8145  15F3  3001               	movlw	1
  8146  15F4                     u4605:
  8147  15F4  1003               	clrc
  8148  15F5  0CA1               	rrf	___awdiv@divisor+1,f
  8149  15F6  0CA0               	rrf	___awdiv@divisor,f
  8150  15F7  3EFF               	addlw	-1
  8151  15F8  1D03               	skipz
  8152  15F9  2DF4               	goto	u4605
  8153  15FA                     l3593:
  8154  15FA  3001               	movlw	1
  8155  15FB  02A4               	subwf	___awdiv@counter,f
  8156  15FC  1D03               	btfss	3,2
  8157  15FD  2DFF               	goto	u4611
  8158  15FE  2E00               	goto	u4610
  8159  15FF                     u4611:
  8160  15FF  2DDB               	goto	l3585
  8161  1600                     u4610:
  8162  1600                     l3595:
  8163  1600  0825               	movf	___awdiv@sign,w
  8164  1601  1903               	btfsc	3,2
  8165  1602  2E04               	goto	u4621
  8166  1603  2E05               	goto	u4620
  8167  1604                     u4621:
  8168  1604  2E0A               	goto	l3599
  8169  1605                     u4620:
  8170  1605                     l3597:
  8171  1605  09A6               	comf	___awdiv@quotient,f
  8172  1606  09A7               	comf	___awdiv@quotient+1,f
  8173  1607  0AA6               	incf	___awdiv@quotient,f
  8174  1608  1903               	skipnz
  8175  1609  0AA7               	incf	___awdiv@quotient+1,f
  8176  160A                     l3599:
  8177  160A  0827               	movf	___awdiv@quotient+1,w
  8178  160B  00A1               	movwf	?___awdiv+1
  8179  160C  0826               	movf	___awdiv@quotient,w
  8180  160D  00A0               	movwf	?___awdiv
  8181  160E                     l598:
  8182  160E  0008               	return
  8183  160F                     __end_of___awdiv:
  8184                           
  8185                           	psect	text26
  8186  1472                     __ptext26:	
  8187 ;; *************** function _I2C_Comunication *****************
  8188 ;; Defined at:
  8189 ;;		line 232 in file "Master_PIC.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0, pclath, cstack
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8203 ;;      Params:         0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0
  8205 ;;      Temps:          0       3       0       0       0
  8206 ;;      Totals:         0       3       0       0       0
  8207 ;;Total ram usage:        3 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 3
  8210 ;; This function calls:
  8211 ;;		_I2C_Master_Start
  8212 ;;		_I2C_Master_Stop
  8213 ;;		_I2C_Master_Write
  8214 ;;		_I2C_Read_Byte
  8215 ;; This function is called by:
  8216 ;;		_main
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           
  8221                           ;psect for function _I2C_Comunication
  8222  1472                     _I2C_Comunication:
  8223  1472                     l4287:	
  8224                           ;incstack = 0
  8225                           ; Regs used in _I2C_Comunication: [wreg+status,2+status,0+pclath+cstack]
  8226                           
  8227                           
  8228                           ;Master_PIC.c: 234:     I2C_Master_Start();
  8229  1472  160A  118A  2311  160A  118A  	fcall	_I2C_Master_Start
  8230                           
  8231                           ;Master_PIC.c: 235:     I2C_Master_Write(0x61);
  8232  1477  3061               	movlw	97
  8233  1478  160A  118A  233D  160A  118A  	fcall	_I2C_Master_Write
  8234                           
  8235                           ;Master_PIC.c: 236:     slave01 = I2C_Read_Byte();
  8236  147D  160A  118A  234D  160A  118A  	fcall	_I2C_Read_Byte
  8237  1482  1283               	bcf	3,5	;RP0=0, select bank0
  8238  1483  1303               	bcf	3,6	;RP1=0, select bank0
  8239  1484  00A0               	movwf	??_I2C_Comunication
  8240  1485  0820               	movf	??_I2C_Comunication,w
  8241  1486  00EF               	movwf	_slave01
  8242                           
  8243                           ;Master_PIC.c: 237:     I2C_Master_Stop();
  8244  1487  160A  118A  231A  160A  118A  	fcall	_I2C_Master_Stop
  8245  148C                     l4289:
  8246                           
  8247                           ;Master_PIC.c: 238:     _delay((unsigned long)((200)*(8000000/4000.0)));
  8248  148C  3003               	movlw	3
  8249  148D  1283               	bcf	3,5	;RP0=0, select bank0
  8250  148E  1303               	bcf	3,6	;RP1=0, select bank0
  8251  148F  00A2               	movwf	??_I2C_Comunication+2
  8252  1490  3008               	movlw	8
  8253  1491  00A1               	movwf	??_I2C_Comunication+1
  8254  1492  3076               	movlw	118
  8255  1493  00A0               	movwf	??_I2C_Comunication
  8256  1494                     u6037:
  8257  1494  0BA0               	decfsz	??_I2C_Comunication,f
  8258  1495  2C94               	goto	u6037
  8259  1496  0BA1               	decfsz	??_I2C_Comunication+1,f
  8260  1497  2C94               	goto	u6037
  8261  1498  0BA2               	decfsz	??_I2C_Comunication+2,f
  8262  1499  2C94               	goto	u6037
  8263  149A  0000               	nop
  8264  149B                     l176:
  8265  149B  0008               	return
  8266  149C                     __end_of_I2C_Comunication:
  8267                           
  8268                           	psect	text27
  8269  134D                     __ptext27:	
  8270 ;; *************** function _I2C_Read_Byte *****************
  8271 ;; Defined at:
  8272 ;;		line 71 in file "I2C_Master.c"
  8273 ;; Parameters:    Size  Location     Type
  8274 ;;		None
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      unsigned char 
  8279 ;; Registers used:
  8280 ;;		wreg, status,2, status,0, pclath, cstack
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8286 ;;      Params:         0       0       0       0       0
  8287 ;;      Locals:         0       0       0       0       0
  8288 ;;      Temps:          0       0       0       0       0
  8289 ;;      Totals:         0       0       0       0       0
  8290 ;;Total ram usage:        0 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 2
  8293 ;; This function calls:
  8294 ;;		_I2C_Master_Wait
  8295 ;; This function is called by:
  8296 ;;		_I2C_Comunication
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           
  8301                           ;psect for function _I2C_Read_Byte
  8302  134D                     _I2C_Read_Byte:
  8303  134D                     l4037:	
  8304                           ;incstack = 0
  8305                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  8306                           
  8307                           
  8308                           ;I2C_Master.c: 74:  I2C_Master_Wait();
  8309  134D  160A  118A  2323  160A  118A  	fcall	_I2C_Master_Wait
  8310  1352                     l4039:
  8311                           
  8312                           ;I2C_Master.c: 75:     RCEN = 1;
  8313  1352  1683               	bsf	3,5	;RP0=1, select bank1
  8314  1353  1303               	bcf	3,6	;RP1=0, select bank1
  8315  1354  1591               	bsf	17,3	;volatile
  8316  1355                     l303:	
  8317                           ;I2C_Master.c: 76:  while(!SSPIF);
  8318                           
  8319  1355  1283               	bcf	3,5	;RP0=0, select bank0
  8320  1356  1D8C               	btfss	12,3	;volatile
  8321  1357  2B59               	goto	u5691
  8322  1358  2B5A               	goto	u5690
  8323  1359                     u5691:
  8324  1359  2B55               	goto	l303
  8325  135A                     u5690:
  8326  135A                     l305:
  8327                           
  8328                           ;I2C_Master.c: 77:  SSPIF = 0;
  8329  135A  118C               	bcf	12,3	;volatile
  8330  135B                     l4041:
  8331                           
  8332                           ;I2C_Master.c: 78:     I2C_Master_Wait();
  8333  135B  160A  118A  2323  160A  118A  	fcall	_I2C_Master_Wait
  8334  1360                     l4043:
  8335                           
  8336                           ;I2C_Master.c: 79:     return SSPBUF;
  8337  1360  1283               	bcf	3,5	;RP0=0, select bank0
  8338  1361  1303               	bcf	3,6	;RP1=0, select bank0
  8339  1362  0813               	movf	19,w	;volatile
  8340  1363                     l306:
  8341  1363  0008               	return
  8342  1364                     __end_of_I2C_Read_Byte:
  8343                           
  8344                           	psect	text28
  8345  133D                     __ptext28:	
  8346 ;; *************** function _I2C_Master_Write *****************
  8347 ;; Defined at:
  8348 ;;		line 62 in file "I2C_Master.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  data            1    wreg     unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  data            1    4[COMMON] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8362 ;;      Params:         0       0       0       0       0
  8363 ;;      Locals:         1       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0
  8365 ;;      Totals:         1       0       0       0       0
  8366 ;;Total ram usage:        1 bytes
  8367 ;; Hardware stack levels used: 1
  8368 ;; Hardware stack levels required when called: 2
  8369 ;; This function calls:
  8370 ;;		_I2C_Master_Wait
  8371 ;; This function is called by:
  8372 ;;		_I2C_Comunication
  8373 ;;		_IO_Expander_Write
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function _I2C_Master_Write
  8379  133D                     _I2C_Master_Write:
  8380                           
  8381                           ;incstack = 0
  8382                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8383                           ;I2C_Master_Write@data stored from wreg
  8384  133D  00F4               	movwf	I2C_Master_Write@data
  8385  133E                     l3311:
  8386                           
  8387                           ;I2C_Master.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_Master.c: 63: 
      +                          {;I2C_Master.c: 64:     I2C_Master_Wait();
  8388  133E  160A  118A  2323  160A  118A  	fcall	_I2C_Master_Wait
  8389  1343                     l3313:
  8390                           
  8391                           ;I2C_Master.c: 65:     SSPBUF = data;
  8392  1343  0874               	movf	I2C_Master_Write@data,w
  8393  1344  1283               	bcf	3,5	;RP0=0, select bank0
  8394  1345  1303               	bcf	3,6	;RP1=0, select bank0
  8395  1346  0093               	movwf	19	;volatile
  8396  1347                     l297:	
  8397                           ;I2C_Master.c: 66:     while(!SSPIF);
  8398                           
  8399  1347  1D8C               	btfss	12,3	;volatile
  8400  1348  2B4A               	goto	u3971
  8401  1349  2B4B               	goto	u3970
  8402  134A                     u3971:
  8403  134A  2B47               	goto	l297
  8404  134B                     u3970:
  8405  134B                     l299:
  8406                           
  8407                           ;I2C_Master.c: 67:  SSPIF = 0;
  8408  134B  118C               	bcf	12,3	;volatile
  8409  134C                     l300:	
  8410                           ;I2C_Master.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  8411                           
  8412  134C  0008               	return
  8413  134D                     __end_of_I2C_Master_Write:
  8414                           
  8415                           	psect	text29
  8416  131A                     __ptext29:	
  8417 ;; *************** function _I2C_Master_Stop *****************
  8418 ;; Defined at:
  8419 ;;		line 42 in file "I2C_Master.c"
  8420 ;; Parameters:    Size  Location     Type
  8421 ;;		None
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;		None
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, pclath, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8433 ;;      Params:         0       0       0       0       0
  8434 ;;      Locals:         0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0
  8436 ;;      Totals:         0       0       0       0       0
  8437 ;;Total ram usage:        0 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 2
  8440 ;; This function calls:
  8441 ;;		_I2C_Master_Wait
  8442 ;; This function is called by:
  8443 ;;		_I2C_Comunication
  8444 ;;		_IO_Expander_Write
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           
  8449                           ;psect for function _I2C_Master_Stop
  8450  131A                     _I2C_Master_Stop:
  8451  131A                     l3315:	
  8452                           ;incstack = 0
  8453                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8454                           
  8455                           
  8456                           ;I2C_Master.c: 44:     I2C_Master_Wait();
  8457  131A  160A  118A  2323  160A  118A  	fcall	_I2C_Master_Wait
  8458  131F                     l3317:
  8459                           
  8460                           ;I2C_Master.c: 45:     PEN = 1;
  8461  131F  1683               	bsf	3,5	;RP0=1, select bank1
  8462  1320  1303               	bcf	3,6	;RP1=0, select bank1
  8463  1321  1511               	bsf	17,2	;volatile
  8464  1322                     l288:
  8465  1322  0008               	return
  8466  1323                     __end_of_I2C_Master_Stop:
  8467                           
  8468                           	psect	text30
  8469  1311                     __ptext30:	
  8470 ;; *************** function _I2C_Master_Start *****************
  8471 ;; Defined at:
  8472 ;;		line 30 in file "I2C_Master.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0, pclath, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8486 ;;      Params:         0       0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0
  8488 ;;      Temps:          0       0       0       0       0
  8489 ;;      Totals:         0       0       0       0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; Hardware stack levels required when called: 2
  8493 ;; This function calls:
  8494 ;;		_I2C_Master_Wait
  8495 ;; This function is called by:
  8496 ;;		_I2C_Comunication
  8497 ;;		_IO_Expander_Write
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           
  8502                           ;psect for function _I2C_Master_Start
  8503  1311                     _I2C_Master_Start:
  8504  1311                     l3307:	
  8505                           ;incstack = 0
  8506                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8507                           
  8508                           
  8509                           ;I2C_Master.c: 32:     I2C_Master_Wait();
  8510  1311  160A  118A  2323  160A  118A  	fcall	_I2C_Master_Wait
  8511  1316                     l3309:
  8512                           
  8513                           ;I2C_Master.c: 33:     SEN = 1;
  8514  1316  1683               	bsf	3,5	;RP0=1, select bank1
  8515  1317  1303               	bcf	3,6	;RP1=0, select bank1
  8516  1318  1411               	bsf	17,0	;volatile
  8517  1319                     l282:
  8518  1319  0008               	return
  8519  131A                     __end_of_I2C_Master_Start:
  8520                           
  8521                           	psect	text31
  8522  1323                     __ptext31:	
  8523 ;; *************** function _I2C_Master_Wait *****************
  8524 ;; Defined at:
  8525 ;;		line 25 in file "I2C_Master.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8539 ;;      Params:         0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used: 1
  8545 ;; Hardware stack levels required when called: 1
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_I2C_Master_Start
  8550 ;;		_I2C_Master_Stop
  8551 ;;		_I2C_Master_Write
  8552 ;;		_I2C_Read_Byte
  8553 ;;		_I2C_Master_RepeatedStart
  8554 ;;		_I2C_ACK
  8555 ;;		_I2C_NACK
  8556 ;;		_I2C_Master_Read
  8557 ;; This function uses a non-reentrant model
  8558 ;;
  8559                           
  8560                           
  8561                           ;psect for function _I2C_Master_Wait
  8562  1323                     _I2C_Master_Wait:
  8563  1323                     l3303:	
  8564                           ;incstack = 0
  8565                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8566                           
  8567  1323                     l276:	
  8568                           ;I2C_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8569                           
  8570  1323  1683               	bsf	3,5	;RP0=1, select bank1
  8571  1324  1303               	bcf	3,6	;RP1=0, select bank1
  8572  1325  1914               	btfsc	20,2	;volatile
  8573  1326  2B28               	goto	u3951
  8574  1327  2B29               	goto	u3950
  8575  1328                     u3951:
  8576  1328  2B23               	goto	l276
  8577  1329                     u3950:
  8578  1329                     l3305:
  8579  1329  0811               	movf	17,w	;volatile
  8580  132A  391F               	andlw	31
  8581  132B  1D03               	btfss	3,2
  8582  132C  2B2E               	goto	u3961
  8583  132D  2B2F               	goto	u3960
  8584  132E                     u3961:
  8585  132E  2B23               	goto	l276
  8586  132F                     u3960:
  8587  132F                     l279:
  8588  132F  0008               	return
  8589  1330                     __end_of_I2C_Master_Wait:
  8590                           
  8591                           	psect	text32
  8592  14D4                     __ptext32:	
  8593 ;; *************** function _isr *****************
  8594 ;; Defined at:
  8595 ;;		line 75 in file "Master_PIC.c"
  8596 ;; Parameters:    Size  Location     Type
  8597 ;;		None
  8598 ;; Auto vars:     Size  Location     Type
  8599 ;;		None
  8600 ;; Return value:  Size  Location     Type
  8601 ;;                  1    wreg      void 
  8602 ;; Registers used:
  8603 ;;		wreg, status,2, status,0
  8604 ;; Tracked objects:
  8605 ;;		On entry : 0/0
  8606 ;;		On exit  : 0/0
  8607 ;;		Unchanged: 0/0
  8608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8609 ;;      Params:         0       0       0       0       0
  8610 ;;      Locals:         0       0       0       0       0
  8611 ;;      Temps:          4       0       0       0       0
  8612 ;;      Totals:         4       0       0       0       0
  8613 ;;Total ram usage:        4 bytes
  8614 ;; Hardware stack levels used: 1
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		Interrupt level 1
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           
  8622                           
  8623                           ;psect for function _isr
  8624  14D4                     _isr:
  8625  14D4                     i1l2059:
  8626                           
  8627                           ;Master_PIC.c: 78: 
  8628  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  8629  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  8630  14D6  1F0C               	btfss	12,6	;volatile
  8631  14D7  2CD9               	goto	u191_21
  8632  14D8  2CDA               	goto	u191_20
  8633  14D9                     u191_21:
  8634  14D9  2D08               	goto	i1l147
  8635  14DA                     u191_20:
  8636  14DA                     i1l2061:
  8637                           
  8638                           ;Master_PIC.c: 79: 
  8639  14DA  0C1F               	rrf	31,w	;volatile
  8640  14DB  00F0               	movwf	??_isr
  8641  14DC  0C70               	rrf	??_isr,w
  8642  14DD  390F               	andlw	15
  8643  14DE  3A00               	xorlw	0
  8644  14DF  1D03               	skipz
  8645  14E0  2CE2               	goto	u192_21
  8646  14E1  2CE3               	goto	u192_20
  8647  14E2                     u192_21:
  8648  14E2  2D07               	goto	i1l2065
  8649  14E3                     u192_20:
  8650  14E3                     i1l2063:
  8651                           
  8652                           ;Master_PIC.c: 80: void setup(void){
  8653  14E3  081E               	movf	30,w	;volatile
  8654  14E4  00F0               	movwf	??_isr
  8655  14E5  1003               	clrc
  8656  14E6  0C70               	rrf	??_isr,w
  8657  14E7  3E7C               	addlw	124
  8658  14E8  0095               	movwf	21	;volatile
  8659                           
  8660                           ;Master_PIC.c: 81: 
  8661  14E9  081E               	movf	30,w	;volatile
  8662  14EA  3901               	andlw	1
  8663  14EB  00F0               	movwf	??_isr
  8664  14EC  0EF0               	swapf	??_isr,f
  8665  14ED  0DF0               	rlf	??_isr,f
  8666  14EE  0817               	movf	23,w	;volatile
  8667  14EF  0670               	xorwf	??_isr,w
  8668  14F0  39DF               	andlw	-33
  8669  14F1  0670               	xorwf	??_isr,w
  8670  14F2  0097               	movwf	23	;volatile
  8671                           
  8672                           ;Master_PIC.c: 82:     ANSEL = 0b00000001;
  8673  14F3  1683               	bsf	3,5	;RP0=1, select bank1
  8674  14F4  1303               	bcf	3,6	;RP1=0, select bank1
  8675  14F5  081E               	movf	30,w	;volatile
  8676  14F6  00F0               	movwf	??_isr
  8677  14F7  3007               	movlw	7
  8678  14F8                     u193_25:
  8679  14F8  1003               	clrc
  8680  14F9  0CF0               	rrf	??_isr,f
  8681  14FA  3EFF               	addlw	-1
  8682  14FB  1D03               	skipz
  8683  14FC  2CF8               	goto	u193_25
  8684  14FD  0870               	movf	??_isr,w
  8685  14FE  00F1               	movwf	??_isr+1
  8686  14FF  0EF1               	swapf	??_isr+1,f
  8687  1500  1283               	bcf	3,5	;RP0=0, select bank0
  8688  1501  1303               	bcf	3,6	;RP1=0, select bank0
  8689  1502  0817               	movf	23,w	;volatile
  8690  1503  0671               	xorwf	??_isr+1,w
  8691  1504  39EF               	andlw	-17
  8692  1505  0671               	xorwf	??_isr+1,w
  8693  1506  0097               	movwf	23	;volatile
  8694  1507                     i1l2065:
  8695                           
  8696                           ;Master_PIC.c: 85: 
  8697  1507  130C               	bcf	12,6	;volatile
  8698  1508                     i1l147:
  8699  1508  0873               	movf	??_isr+3,w
  8700  1509  008A               	movwf	10
  8701  150A  0E72               	swapf	??_isr+2,w
  8702  150B  0083               	movwf	3
  8703  150C  0EFE               	swapf	btemp,f
  8704  150D  0E7E               	swapf	btemp,w
  8705  150E  0009               	retfie
  8706  150F                     __end_of_isr:
  8707  007E                     btemp	set	126	;btemp
  8708  007E                     wtemp0	set	126
  8709                           
  8710                           	psect	intentry
  8711  0004                     __pintentry:	
  8712                           ;incstack = 0
  8713                           ; Regs used in _isr: [wreg+status,2+status,0]
  8714                           
  8715  0004                     interrupt_function:
  8716  007E                     saved_w	set	btemp
  8717  0004  00FE               	movwf	btemp
  8718  0005  0E03               	swapf	3,w
  8719  0006  00F2               	movwf	??_isr+2
  8720  0007  080A               	movf	10,w
  8721  0008  00F3               	movwf	??_isr+3
  8722  0009  160A  118A  2CD4   	ljmp	_isr
  8723                           
  8724                           	psect	config
  8725                           
  8726                           ;Config register CONFIG1 @ 0x2007
  8727                           ;	Oscillator Selection bits
  8728                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8729                           ;	Watchdog Timer Enable bit
  8730                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8731                           ;	Power-up Timer Enable bit
  8732                           ;	PWRTE = OFF, PWRT disabled
  8733                           ;	RE3/MCLR pin function select bit
  8734                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8735                           ;	Code Protection bit
  8736                           ;	CP = OFF, Program memory code protection is disabled
  8737                           ;	Data Code Protection bit
  8738                           ;	CPD = OFF, Data memory code protection is disabled
  8739                           ;	Brown Out Reset Selection bits
  8740                           ;	BOREN = OFF, BOR disabled
  8741                           ;	Internal External Switchover bit
  8742                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8743                           ;	Fail-Safe Clock Monitor Enabled bit
  8744                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8745                           ;	Low Voltage Programming Enable bit
  8746                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8747                           ;	In-Circuit Debugger Mode bit
  8748                           ;	DEBUG = 0x1, unprogrammed default
  8749  2007                     	org	8199
  8750  2007  20D4               	dw	8404
  8751                           
  8752                           ;Config register CONFIG2 @ 0x2008
  8753                           ;	Brown-out Reset Selection bit
  8754                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8755                           ;	Flash Program Memory Self Write Enable bits
  8756                           ;	WRT = OFF, Write protection off
  8757  2008                     	org	8200
  8758  2008  3FFF               	dw	16383

Data Sizes:
    Strings     40
    Constant    0
    Data        1
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     76      80
    BANK1            80     19      73
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S1056__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S1056__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), STR_4(CODE[10]), 
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[9]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted03(BANK1[10]), converted02(BANK1[10]), converted01(BANK1[10]), 


Critical Paths under _main in COMMON

    _LCD_Init->_IO_Expander_Write
    _LCD_Send->___bmul
    _LCD_Send->_division
    _division->___awdiv
    _division->___awmod
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___fltol
    ___xxtofl->___fltol
    ___wmul->___fltol
    ___flsub->___fltol
    ___flmul->__Umul8_16
    ___flmul->___fltol
    _I2C_Comunication->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Send
    _LCD_Start->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Send->_ADC_convert
    _division->___awdiv
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_LCD_Send
    _LCD_Send->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   25056
                                             75 BANK0      1     1      0
                   _I2C_Comunication
                           _LCD_Send
                          _LCD_Start
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            3     3      0    2565
                                             11 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     282
                                              4 BANK0      3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Send                                             8     8      0   22460
                                             71 BANK0      4     4      0
                                             15 BANK1      4     4      0
                        _ADC_convert
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                   _LCD_Write_String
                             ___bmul
                           ___xxtofl
                           _division
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1840
                                              5 COMMON     1     1      0
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     949
                                              4 BANK0      7     5      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1    1334
                                              4 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     189
                                              2 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     127
                                              0 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      62
                                              5 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _ADC_convert                                         23    17      6   16354
                                             63 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1286
                                             15 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1176
                                              9 BANK0      6     2      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     967
                                              4 COMMON     2     2      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3727
                                             29 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3122
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             37 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             29 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Comunication                                     3     3      0      31
                                              0 BANK0      3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      31
                                              4 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Comunication
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _LCD_Send
     _ADC_convert
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___flsub (ARG)
           ___fladd
           ___fltol (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flsub
       ___fltol
       ___wmul
       ___xxtofl
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
     _LCD_Write_Char
       _LCD_Write_4Bit
     _LCD_Write_String
       _LCD_Write_Char
     ___bmul
     ___xxtofl
     _division
       ___awdiv
       ___awmod
   _LCD_Start
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String
   _setup
     _I2C_Master_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     13      49       7       91.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CB      12        0.0%
ABS                  0      0      CB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Sep 05 04:59:33 2021

              ___fldiv@aexp 0056                ___fldiv@bexp 0055                           pc 0002  
              ___fldiv@sign 004E              ___bmul@product 0020                          _RS 00AF  
              ___awdiv@sign 0025                          fsr 0004         ___wmul@multiplicand 002B  
       __Umul8_16@word_mpld 0024                         l211 1679                         l300 134C  
                       l303 1355                         l208 0478                         l320 1397  
                       l160 1592                         l305 135A                         l161 15A5  
                       l306 1363                         l323 13FE                         l317 17FF  
                       l326 13B9                         l182 0B9A                         l158 158E  
                       l335 1554                         l176 149B                         l344 14D3  
                       l329 1421                         l273 133C                         l282 1319  
                       l611 0861                         l179 16E8                         l276 1323  
                       l445 1430                         l622 08EC                         l279 132F  
                       l623 0905                         l631 1764                         l447 1448  
                       l471 137A                         l288 1322                         l297 1347  
                       l641 1764                         l810 0CE9                         l299 134B  
                       l619 0880                         l742 0E82                         l638 174F  
                       l751 0FFF                         l816 0D5B                         l840 0745  
                       l744 0E59                         l818 0D6B                         l834 07D9  
                       l738 0DDB                         l763 0F71                         l780 0FF3  
                       l772 0FD1                         l853 145F                         l781 0FFF  
                       l598 160E                         l846 07CD                         l855 1471  
                       l759 0F4D                         l784 07FD                         l880 09C1  
                       l769 0F93                         l794 0BF7                         l891 098B  
                       l796 0D77                         l892 0997                         l884 096F  
                       l878 092A                         _GIE 005F                         _RA0 0028  
                       _RB7 0037                         _PR2 0092                         _PEN 048A  
                       _SEN 0488                         _POT 00B5                         _isr 14D4  
                       fsr0 0004                         _sum 00B3                         indf 0000  
              ___awmod@sign 0025           ?_I2C_Comunication 0070                ___flmul@aexp 0053  
              ___flmul@bexp 0058                ___flmul@sign 0052                ___flmul@temp 005D  
              ___flmul@prod 0059             __end_of_LCD_CMD 13BA          ??_I2C_Comunication 0020  
       LCD_Write_String@Str 0024              _LCD_Set_Cursor 149C                ___fltol@exp1 0075  
                      l4001 094D                        l4011 0981                        l4003 0954  
                      l4021 09B4                        l4013 0985                        l4005 0958  
                      l4101 0055                        l3303 1323                        l3311 133E  
                      l4023 09B8                        l4015 098F                        l4007 0966  
                      l4111 005D                        l4103 0055                        l4031 166A  
                      l3305 1329                        l3313 1343                        l4041 135B  
                      l3401 0E1D                        l4025 09B9                        l4017 0999  
                      l4009 0976                        l4121 00D0                        l4113 0078  
                      l4105 0057                        l3321 13DF                        l4201 1367  
                      l4033 166F                        l3307 1311                        l3315 131A  
                      l4043 1360                        l3411 0E5D                        l3403 0E21  
                      l3331 0D85                        l4019 09AF                        l4131 00EF  
                      l4115 0099                        l4123 00D6                        l4107 0059  
                      l3323 13E7                        l4211 1379                        l4203 1368  
                      l4035 1674                        l1731 133A                        l4051 1774  
                      l3309 1316                        l3317 131F                        l4037 134D  
                      l3501 0FCD                        l3421 0E76                        l3413 0E66  
                      l3405 0E25                        l3341 0D9C                        l3333 0D89  
                      l4141 0204                        l4133 0110                        l4125 00DF  
                      l4117 00A4                        l4109 005D                        l3325 13EE  
                      l4205 136C                        l4029 1610                        l1733 133B  
                      l1725 1330                        l4061 17B5                        l4053 1785  
                      l4221 169A                        l4039 1352                        l3511 0FE9  
                      l3503 0FD6                        l3431 0E94                        l3415 0E68  
                      l3423 0E7A                        l3407 0E26                        l3351 0DB2  
                      l3343 0D9D                        l3335 0D8A                        l3327 0D78  
                      l4151 022C                        l4143 020C                        l4135 0116  
                      l4127 00E5                        l4119 00AD                        l3319 137C  
                      l4207 1370                        l1727 1334                        l4071 17EF  
                      l4063 17BF                        l4055 178F                        l4047 1768  
                      l4231 16CE                        l4223 16A4                        l4215 167A  
                      l3521 144C                        l3513 0FED                        l3505 0FDB  
                      l3441 0EBE                        l3433 0EAB                        l3425 0E86  
                      l3417 0E6C                        l3409 0E3D                        l3361 0DC3  
                      l3353 0DB3                        l3337 0D8F                        l3345 0D9F  
                      l3329 0D7F                        l4161 0260                        l4153 0234  
                      l4145 0212                        l4137 012C                        l4129 00EA  
                      l4081 14B8                        l4073 149F                        l4209 1372  
                      l4241 09E8                        l1729 1337                        l4065 17CF  
                      l4057 179F                        l4049 176E                        l4233 16D9  
                      l4225 16AF                        l4217 1685                        l1921 1559  
                      l3531 146D                        l3523 144E                        l3515 0FEF  
                      l3507 0FE3                        l3451 0EE7                        l3443 0EC2  
                      l3435 0EAF                        l3427 0E8B                        l3419 0E6D  
                      l3371 0DE1                        l3363 0DC8                        l3355 0DB9  
                      l3347 0DA7                        l3339 0D94                        l4171 0318  
                      l4163 0278                        l4155 0234                        l4139 01D6  
                      l4147 0216                        l4075 14A0                        l4083 14C0  
                      l4091 150F                        l3611 0815                        l3603 0807  
                      l4251 0A43                        l4243 09F4                        l4235 09C2  
                      l4067 17D5                        l4059 17A5                        l4227 16B9  
                      l4219 168F                        l1931 1560                        l1923 155A  
                      l3525 1455                        l3517 0FFA                        l3509 0FE8  
                      l3461 0F55                        l3453 0F25                        l3445 0EC3  
                      l3437 0EB3                        l3381 0DF5                        l3373 0DE5  
                      l3365 0DD0                        l3357 0DBD                        l3349 0DAC  
                      l4181 033B                        l4173 031E                        l4165 02F5  
                      l4157 0239                        l4149 021C                        l3541 139E  
                      l4077 14A8                        l4093 1514                        l3621 082E  
                      l3613 0819                        l3605 080A                        l4261 0AFD  
                      l4253 0A63                        l4245 09FF                        l4237 09D1  
                      l4069 17E5                        l4229 16C4                        l1941 156E  
                      l1933 1561                        l1925 155D                        l3711 0BAD  
                      l3703 0B9B                        l3527 1459                        l3519 0FFE  
                      l3471 0F70                        l3463 0F5A                        l3455 0F2B  
                      l3447 0ECC                        l3439 0EBC                        l3391 0E09  
                      l3383 0DF9                        l3375 0DE9                        l3367 0DD1  
                      l3359 0DBE                        l3551 1437                        l4191 0450  
                      l4183 035C                        l4175 032B                        l4167 030B  
                      l4159 025A                        l3543 13A7                        l4079 14B0  
                      l3535 1402                        l4095 1530                        l3631 084D  
                      l3623 0832                        l3615 081E                        l3607 080E  
                      l4271 0B4C                        l4263 0B10                        l4255 0A90  
                      l4247 0A0B                        l4239 09DD                        l1951 1575  
                      l1943 156F                        l1935 1565                        l1927 155E  
                      l1919 1555                        l3561 15A9                        l3801 0CC9  
                      l3713 0BB2                        l3721 0BC2                        l3705 0BA2  
                      l3641 0862                        l3529 1468                        l3473 0F75  
                      l3481 0F81                        l3457 0F30                        l3449 0ED1  
                      l3393 0E0D                        l3385 0DFD                        l3377 0DED  
                      l3369 0DD3                        l3553 143E                        l3545 1422  
                      l4193 0458                        l4185 0362                        l4177 0331  
                      l4169 0318                        l3537 1406                        l4097 1538  
                      l3625 0836                        l3617 0824                        l3633 0853  
                      l3609 0813                        l4281 0B7E                        l4273 0B58  
                      l4265 0B23                        l4257 0AB0                        l4249 0A16  
                      l1961 1582                        l1953 1576                        l1945 1572  
                      l1937 156A                        l1929 155F                        l3571 15BD  
                      l3563 15AD                        l3803 0CCD                        l3731 0BDA  
                      l3723 0BCA                        l3715 0BB7                        l3707 0BA8  
                      l3651 08C4                        l3643 0878                        l3475 0F78  
                      l3467 0F63                        l3459 0F3F                        l3483 0F85  
                      l3395 0E11                        l3387 0E01                        l3379 0DF1  
                      l3555 1444                        l3547 1426                        l4195 045E  
                      l4187 0378                        l4179 0336                        l4099 003A  
                      l3539 139B                        l3635 0858                        l3627 0840  
                      l3619 0827                        l4283 0B86                        l4275 0B60  
                      l4267 0B36                        l4259 0ADD                        l1971 158A  
                      l1963 1584                        l1955 1578                        l1947 1573  
                      l1939 156D                        l4291 13BA                        l3581 15D3  
                      l3573 15C1                        l3565 15B2                        l3821 0D1E  
                      l3813 0CEE                        l3805 0CCE                        l3733 0BDF  
                      l3741 0BEF                        l3725 0BCF                        l3717 0BBF  
                      l3709 0BAC                        l3653 08C8                        l3645 0894  
                      l3901 0584                        l3493 0F98                        l3485 0F86  
                      l3477 0F7A                        l3469 0F6C                        l3397 0E15  
                      l3389 0E05                        l3661 16E9                        l3549 142A  
                      l4189 0422                        l4197 0462                        l3637 085D  
                      l3629 0846                        l4285 0B92                        l4277 0B6C  
                      l4269 0B46                        l1981 15A0                        l1973 158B  
                      l1965 1586                        l1957 157C                        l1949 1574  
                      l4293 13BF                        l4287 1472                        l3591 15F3  
                      l3583 15D7                        l3575 15C3                        l3567 15B4  
                      l3559 15A6                        l3831 0D52                        l3815 0CF3  
                      l3823 0D24                        l3807 0CD2                        l3743 0BFF  
                      l3751 0C18                        l3735 0BE4                        l3727 0BD5  
                      l3719 0BC0                        l3655 0902                        l3647 089C  
                      l3911 05E6                        l3903 05A0                        l3495 0F9D  
                      l3487 0F8A                        l3479 0F7F                        l3399 0E19  
                      l3671 1715                        l3663 16F6                        l4199 0468  
                      l4279 0B72                        l1975 158C                        l1967 1588  
                      l1959 157E                        l4295 13C4                        l4289 148C  
                      l3593 15FA                        l3585 15DB                        l3577 15C9  
                      l3569 15B8                        l3833 0D5A                        l3825 0D31  
                      l3817 0D01                        l3809 0CE6                        l3761 0C40  
                      l3753 0C1D                        l3745 0C0B                        l3737 0BEC  
                      l3729 0BD9                        l3657 0904                        l3649 08A0  
                      l3921 0676                        l3913 0603                        l3905 05A9  
                      l3497 0FAB                        l3489 0F90                        l3673 171D  
                      l1977 158D                        l1969 1589                        l4297 13CE  
                      l3587 15EC                        l3579 15CC                        l3595 1600  
                      l3835 0D61                        l3827 0D3F                        l3819 0D05  
                      l3771 0C69                        l3763 0C48                        l3747 0C0F  
                      l3739 0BED                        l3931 0708                        l3923 06A3  
                      l3915 061C                        l3907 05B9                        l3851 048A  
                      l3499 0FAF                        l3691 1744                        l3683 172B  
                      l3675 171F                        l3667 16FF                        l1979 1599  
                      l4299 13D5                        l3597 1605                        l3589 15F2  
                      l3837 0D65                        l3829 0D4E                        l3781 0C8A  
                      l3773 0C6D                        l3765 0C50                        l3757 0C26  
                      l3933 0711                        l3941 0725                        l3925 06C9  
                      l3917 0639                        l3909 05D6                        l3861 049F  
                      l3853 048B                        l3845 0479                        l3693 1754  
                      l3677 1723                        l3685 173D                        l3669 1714  
                      l3599 160A                        l3839 0D67                        l3791 0CAC  
                      l3783 0C98                        l3775 0C6E                        l3767 0C52  
                      l3759 0C38                        l3943 0729                        l3935 0715  
                      l3927 06F1                        l3919 0666                        l3871 04B7  
                      l3863 04A7                        l3855 0490                        l3847 0480  
                      l3695 1759                        l4399 14C8                        l3793 0CB5  
                      l3769 0C57                        l3777 0C77                        l3785 0C9C  
                      l3961 077A                        l3953 074A                        l3945 072A  
                      l3937 0716                        l3929 06FA                        l3881 04D3  
                      l3873 04BC                        l3865 04AC                        l3857 0495  
                      l3849 0486                        l3697 07DA                        l3795 0CB9  
                      l3787 0CA2                        l3779 0C89                        l3971 07B1  
                      l3955 074F                        l3963 0780                        l3947 072E  
                      l3939 071F                        l3891 04F6                        l3883 04D8  
                      l3875 04C1                        l3867 04B2                        l3859 049D  
                      l3699 07DE                        l3797 0CBA                        l3789 0CAA  
                      l3981 07D1                        l3973 07B3                        l3965 078D  
                      l3957 075D                        l3949 0742                        l3893 0503  
                      l3885 04DD                        l3877 04C9                        l3869 04B6  
                      l3799 0CC3                        l3975 07C1                        l3967 0798  
                      l3959 0761                        l3895 0520                        l3879 04CB  
                      l3991 0922                        _ADIF 0066                        l3977 07C5  
                      l3969 07A7                        l3897 053C                        l3889 04E6  
                      l3993 0932                        l3985 0909                        l3979 07C6  
                      l3899 0568                        l3987 090E                        ?_isr 0070  
                      l3997 093B                        l3989 0912                        l3999 0940  
                      STR_1 101A                        STR_2 1023                        STR_3 102C  
                      STR_4 1010                        STR_5 1035                        _CONT 00B6  
                      u4000 0D94                        u4001 0D93                        u4010 0DB2  
                      u4011 0DB1                        u4100 0E5D                        u4020 0DBD  
                      u4101 0E5C                        u4021 0DBC                        u4110 0E6C  
                      u4030 0DC3                        u4111 0E6B                        u4031 0DC2  
                      u5000 0C6D                        u4040 0DC8                        u5001 0C6C  
                      u4041 0DC7                        u4210 0EE7                        u4130 0E82  
                      u4050 0DE1                        u4211 0EE6                        u4131 0E81  
                      u4051 0DE0                        u5100 0CE6                        u5020 0C89  
                      u4300 0F7F                        u4140 0E86                        u4060 0DE5  
                      u1900 1592                        u5101 0CE5                        u5021 0C88  
                      u4301 0F7E                        u4221 0EFE                        u4213 0EE3  
                      u4205 0EC5                        u4141 0E85                        u4125 0E6F  
                      u4061 0DE4                        u1901 1591                        u5110 0CED  
                      u5030 0CA2                        u4310 0F85                        u4230 0F12  
                      u4222 0EFF                        u4150 0E8B                        u4070 0E3D  
                      u5111 0CEC                        u5031 0CA1                        u5015 0C70  
                      u4311 0F84                        u4231 0F13                        u4223 0F04  
                      u4151 0E8A                        u4071 0E3C                        u5120 0CF3  
                      u5040 0CAA                        u5200 0495                        u4400 0FDB  
                      u4320 0F8A                        u4240 0F30                        u4232 0F18  
                      u4224 0F05                        u4080 0E48                        u5121 0CF2  
                      u5041 0CA9                        u5025 0C85                        u5201 0494  
                      u4401 0FDA                        u4321 0F89                        u4241 0F2F  
                      u4233 0F19                        u4225 0F0A                        u4161 0E9D  
                      u4081 0E46                        u5130 0D05                        u5210 04B6  
                      u4410 0FE8                        u4330 0F90                        u4250 0F55  
                      u4226 0F0B                        u4170 0EAF                        u4162 0EA4  
                      u4090 0E49                        u5131 0D04                        u5211 04B5  
                      u4411 0FE7                        u4331 0F8F                        u4251 0F54  
                      u4171 0EAE                        u4163 0EAB                        u4075 0E39  
                      u5140 0D14                        u5060 0CB9                        u5220 04BC  
                      u4420 0FED                        u4340 0F97                        u4260 0F5A  
                      u4180 0EB3                        u5061 0CB8                        u5221 04BB  
                      u4421 0FEC                        u4341 0F96                        u4261 0F59  
                      u4181 0EB2                        u5150 0D31                        u5230 04C1  
                      u4430 0FFE                        u4350 0F9D                        u4190 0EC2  
                      u5151 0D30                        u5055 0CAE                        u5311 05C8  
                      u5231 04C0                        u4431 0FFD                        u4351 0F9C  
                      u4191 0EC1                        u6007 17FB                        u5160 0D4E  
                      u5080 0CCD                        u4440 1459                        u5312 05CF  
                      u5240 04D8                        u4360 0FAF                        u4280 0F70  
                      u4520 1444                        u5161 0D4D                        u5145 0D0F  
                      u5081 0CCC                        u4441 1458                        u5401 06E3  
                      u5321 05F5                        u5313 05D6                        u5305 05A2  
                      u5241 04D7                        u4361 0FAE                        u4281 0F6F  
                      u4521 1443                        u4505 1431                        u6017 09CA  
                      u4610 1600                        u4530 15AD                        u5170 0D65  
                      u5090 0CD2                        u5402 06EA                        u5322 05FC  
                      u5250 04DD                        u4370 0FBE                        u4290 0F75  
                      u4611 15FF                        u4531 15AC                        u5171 0D64  
                      u5155 0D2D                        u5091 0CD1                        u5075 0CBC  
                      u5403 06F1                        u5323 0603                        u5251 04DC  
                      u4291 0F74                        u4275 0F65                        u4515 1438  
                      u6027 13FB                        _PEIE 005E                        u4620 1605  
                      u4540 15B8                        u4460 146D                        u5500 0761  
                      u5180 048A                        u4380 0FCD                        u4700 0853  
                      u6037 1494                        u4621 1604                        u4605 15F4  
                      u4541 15B7                        u5165 0D4A                        u4461 146C  
                      u5501 0760                        u5341 062B                        u5261 052E  
                      u5181 0489                        u4381 0FCC                        u4701 0852  
                      u4550 15C9                        u5510 0770                        u5430 0715  
                      u5342 0632                        u5262 0535                        u5190 0490  
                      u4390 0FD6                        u4710 0858                        u4630 080E  
                      u4551 15C8                        u4455 1460                        u5431 0714  
                      u5415 06F3                        u5351 0658                        u5343 0639  
                      u5335 0605                        u5271 054A                        u5263 053C  
                      u5191 048F                        u4391 0FD5                        u4375 0FB9  
                      u4711 0857                        u4631 080D                        u4720 0878  
                      u5520 078D                        u5352 065F                        u5272 0551  
                      u4800 170D                        u4640 0819                        u4721 0877  
                      u5521 078C                        u5425 070A                        u5361 0685  
                      u5353 0666                        u5281 0576                        u5273 0558  
                      u4641 0818                        u4570 15DB                        u4730 0894  
                      u5530 07A7                        u5450 0729                        u5370 06AF  
                      u5362 068C                        u5282 057D                        u4810 1723  
                      u4490 142A                        u5610 0975                        u4650 0824  
                      u4571 15DA                        u4731 0893                        u5531 07A6  
                      u5515 076B                        u5451 0728                        u5363 0693  
                      u5291 0592                        u5283 0584                        u4811 1722  
                      u4491 1429                        u5611 0974                        u4475 1414  
                      u4651 0823                        u4900 0BB2                        u4740 08A0  
                      u5540 07C5                        u5460 072E                        u5292 0599  
                      u4820 172A                        u5700 151E                        _RCEN 048B  
                      u4565 15CD                        u4901 0BB1                        u4741 089F  
                      u5541 07C4                        u5525 0789                        u5461 072D  
                      u5445 0718                        u5381 06BB                        u5293 05A0  
                      u4821 1729                        u4805 1708                        u5605 0967  
                      u4485 13AC                        u3950 1329                        u4590 15EC  
                      u4910 0BB7                        u5470 0742                        u5390 06D7  
                      u5382 06C2                        u5630 0985                        u5550 090E  
                      u5710 1542                        u4670 0836                        u3951 1328  
                      u4591 15EB                        u4911 0BB6                        u4751 08AF  
                      u5535 07A3                        u5471 0741                        u5383 06C9  
                      u5375 06AA                        u5631 0984                        u5551 090D  
                      u4671 0835                        u3960 132F                        u4920 0BD9  
                      u4760 08C8                        u4752 08B0                        u5480 0749  
                      u4840 173C                        u5640 098B                        u5560 0912  
                      u5800 0378                        u5720 1554                        u4680 0840  
                      u3961 132E                        u4585 15DC                        u4921 0BD8  
                      u4761 08C7                        u4753 08B5                        u5481 0748  
                      u4841 173B                        u5641 098A                        u5625 097A  
                      u5561 0911                        u5801 0377                        u5721 1553  
                      u4681 083F                        u4665 0828                        u3970 134B  
                      u4930 0BDF                        u4754 08B6                        u5490 074F  
                      u4850 1743                        u5650 098F                        u5570 0932  
                      u5810 0468                        u5730 0078                        u3971 134A  
                      u4595 15E8                        u4931 0BDE                        u4771 08D7  
                      u4755 08BB                        u5491 074E                        u5395 06D2  
                      u4851 1742                        u4835 172C                        u5651 098E  
                      u5571 0931                        u5811 0467                        u5731 0077  
                      u4940 0BE4                        u4780 0902                        u4772 08D8  
                      u4756 08BC                        u3980 0D89                        u5660 09A4  
                      u5740 00DE                        u5820 136C                        u4941 0BE3  
                      u4781 0901                        u4773 08DD                        u3981 0D88  
                      u5805 0374                        u5741 00DD                        u5821 136B  
                      u4685 083C                        u4950 0BFF                        u4774 08DE  
                      u3990 0D8F                        u4870 1754                        u4790 16F6  
                      u5670 09B4                        u5590 0953                        u5750 00E5  
                      u5830 1379                        u4951 0BFE                        u4775 08E3  
                      u3991 0D8E                        u4871 1753                        u4791 16F5  
                      u5671 09B3                        u5591 0952                        u5751 00E4  
                      u5831 1378                        u4695 0847                        u4960 0C1D  
                      u4776 08E4                        u4880 1759                        u5680 09B8  
                      u5760 012C                        u4961 0C1C                        u4785 08FE  
                      u4881 1758                        u4865 1746                        u5681 09B7  
                      u5665 099F                        u5585 0945                        u5761 012B  
                      u5690 135A                        u4970 0C57                        u4890 0BAC  
                      u5770 021C                        u5691 1359                        u4971 0C56  
                      u4891 0BAB                        u5771 021B                        u5907 1567  
                      u5780 0278                        u5781 0277                        u5765 0128  
                      u5917 16E1                        u5790 0331                        u5791 0330  
                      u5927 177A                        u4985 0C59                        u5785 0274  
                      u5937 178B                        u4995 0C62                        u5947 179B  
                      u5957 17AB                        u5967 17BB                        u5977 17CB  
                      u5897 13D2                        u5987 17DB                        u5997 17EB  
                      _RSEN 0489                        _TXIF 0064                        _dec1 00B2  
                      _dec2 00B1                        _dec3 00B0           ?_LCD_Write_String 0024  
                      _main 13BA                        _temp 00AC                        _tens 006D  
                      btemp 007E               ADC_convert@mu 00E2                        start 000C  
        __size_of_LCD_Start 006F          ??_LCD_Write_String 0026             ___fldiv@new_exp 004F  
         ___bmul@multiplier 0021        LCD_Write_4Bit@Nibble 0021        __size_of_ADC_convert 0442  
                     ??_isr 0070            __end_of_LCD_Init 1800            __end_of_LCD_Send 0B9B  
          ?_I2C_Master_Init 0070            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
             ___fltol@sign1 0074             __end_of___fladd 1000                       ?_main 0070  
                     _ACKEN 048C                       _ACKDT 048D             __end_of___fldiv 0D78  
           __end_of___awdiv 160F             __end_of___awmod 0862             __end_of___flmul 07DA  
           __end_of___flsub 07FE             __end_of___fltol 1765                       _ANSEL 0188  
           ___awdiv@divisor 0020                       i1l147 1508             ___awdiv@counter 0024  
                     _RCREG 001A                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       _PORTE 0009  
                     _SSPIE 0463                       _SSPIF 0063                       _TXREG 0019  
    __end_of_LCD_Set_Cursor 14D4                       _conv0 00A8                       _conv1 00A4  
                     _conv2 00A0      __size_of_I2C_Read_Byte 0017                       _valor 00B4  
                     _setup 1555                       _units 006C                       pclath 000A  
                     status 0003                       wtemp0 007E              _LCD_Write_4Bit 13DC  
            _LCD_Write_Char 13FF             __initialization 000F                __end_of_main 13DC  
         _IO_Expander_Write 137B          ?_IO_Expander_Write 0070                      ??_main 006B  
                 ??_LCD_CMD 0022           __end_of_LCD_Start 16E9           ?_I2C_Master_Start 0070  
         ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0075             ?_LCD_Set_Cursor 0024  
        ??_I2C_Master_Start 0074          ??_I2C_Master_Write 0074                      _ADRESH 001E  
                    _ADRESL 009E                      _CCPR1L 0015                      _CCPR2L 001B  
          ___awdiv@dividend 0022                      ?_setup 0070                      _ANSELH 0189  
                    i1l2061 14DA                      i1l2063 14E3                      i1l2065 1507  
                    i1l2059 14D4                      u191_20 14DA                      u191_21 14D9  
                    u192_20 14E3                      u192_21 14E2                      u193_25 14F8  
                    _SSPADD 0093                      _TRISA0 0428                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 13FF            __end_of___xxtofl 09C2      __end_of_LCD_Write_Char 1422  
 __end_of_IO_Expander_Write 1398                      ___flge 0862                      ___bmul 1364  
             _I2C_Read_Byte 134D            __end_of_division 167A                   ??___fladd 0028  
                    ___wmul 1422                   ??___fldiv 0045                   ??___awdiv 0074  
                 ??___awmod 0074                   ??___flmul 004D                   ??___flsub 0076  
                 ??___fltol 0024            ___awdiv@quotient 0026             ___awmod@divisor 0020  
           ___awmod@counter 0024          __size_of__Umul8_16 0029                      saved_w 007E  
           ADC_convert@data 00D9             ADC_convert@temp 00D5                  ___flge@ff1 0020  
                ___flge@ff2 0024                ___xxtofl@arg 0039                ___xxtofl@exp 0038  
              ___xxtofl@val 002F     __end_of__initialization 0033                   ?_LCD_Init 0070  
                 ?_LCD_Send 0070             ?_LCD_Write_4Bit 0070                  ___fltol@f1 0020  
           ?_LCD_Write_Char 0070         ___bmul@multiplicand 0074              ?_I2C_Read_Byte 0070  
            __pcstackCOMMON 0070                __pidataBANK1 07FE               __end_of_setup 15A6  
             division@valor 0075                     ??_setup 0074                  __pbssBANK0 006C  
                __pbssBANK1 00A0                  __pbssBANK3 0190                  ??_LCD_Init 0024  
                ??_LCD_Send 0067   __size_of_I2C_Comunication 002A           __end_of__Umul8_16 1472  
__size_of_IO_Expander_Write 001D                  __pmaintext 13BA                     ?___flge 0020  
                   ?___bmul 0074                     ?___wmul 0029                  __pintentry 0004  
                   _ACKSTAT 048E   __size_of_LCD_Write_String 0046                     _LCD_CMD 1398  
                 ?___xxtofl 002F                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 1000                   ?_division 0070                     _i2c_add 00AE  
           ??_I2C_Read_Byte 0074               ??_ADC_convert 0065             __size_of___flge 00A4  
           __size_of___bmul 0017                     ___fladd 0D78                     ___fldiv 0B9B  
                   ___awdiv 15A6                     ___awmod 0807                     ___flmul 0479  
                   ___flsub 07DA                     ___fltol 16E9             __size_of___wmul 0027  
          ??_LCD_Set_Cursor 0025                     __ptext1 1555                     __ptext2 167A  
                   __ptext3 1765                     __ptext4 1330                     __ptext5 09C2  
                   __ptext6 160F                     __ptext7 0807                     __ptext8 1364  
                   __ptext9 150F                     _counter 0077                   _T2CONbits 0012  
              __size_of_isr 003B                  ??___xxtofl 0033            ___awmod@dividend 0022  
                   _slave01 006F                     _slave02 0079                     _slave03 0078  
  __size_of_I2C_Master_Init 000D                     _residuo 0076    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                   _LCD_Start 167A                     clrloop0 130A  
      end_of_initialization 0033                  ??_division 0028   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010            ADC_convert@place 0063         __end_of_ADC_convert 0479  
                LCD_CMD@CMD 0023                 ___fladd@grs 0033               ___xxtofl@sign 0037  
                 _TRISCbits 0087                 ___fldiv@grs 0051                 ___fldiv@rem 004A  
                ?_LCD_Start 0070            ??_LCD_Write_4Bit 0020           LCD_Write_String@i 0029  
          ??_LCD_Write_Char 0022                 ___flmul@grs 0054                 _CCP1CONbits 0017  
               _CCP2CONbits 001D            _I2C_Comunication 1472           __size_of_LCD_Init 009B  
         __size_of_LCD_Send 01D9                ADC_convert@a 005F                ADC_convert@i 00DE  
              ADC_convert@j 00D7                ADC_convert@x 00DA              __end_of___flge 0906  
            __end_of___bmul 137B              __end_of___wmul 1449            _LCD_Write_String 150F  
       start_initialization 000F                 __end_of_isr 150F           ??_I2C_Master_Init 0074  
         ??_I2C_Master_Wait 0074           ??_I2C_Master_Stop 0074                 _ADC_convert 0037  
                  ??___flge 0028                    ??___bmul 0075                    ??___wmul 0076  
                 __Umul8_16 1449                 __pdataBANK1 00E8                   ___fladd@a 0024  
                 ___fladd@b 0020                    ?_LCD_CMD 0070                   ___fldiv@a 003D  
                 ___fldiv@b 0041                   ___flmul@a 0049                   ___flmul@b 0045  
               __pbssCOMMON 0076                   ___flsub@a 003D                   ___flsub@b 0041  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00D5  
         __size_of___xxtofl 00BC                 ??_LCD_Start 002B           __size_of_division 006B  
          _I2C_Master_Start 1311            _I2C_Master_Write 133D       IO_Expander_Write@Data 0075  
                  ?___fladd 0020                    ?___fldiv 003D                    ?___awdiv 0020  
                  ?___awmod 0020                    ?___flmul 0045                    ?___flsub 003D  
                  ?___fltol 0020                  ?__Umul8_16 0074        I2C_Master_Write@data 0074  
                 __pstrings 1000              __size_of_setup 0051           interrupt_function 0004  
                  _LCD_Init 1765                    _LCD_Send 09C2              ___wmul@product 002D  
                 clear_ram0 1309                    _PIR1bits 000C       __end_of_I2C_Read_Byte 1364  
                _ADCON0bits 001F                 __stringbase 100F                  _ADCON1bits 009F  
         ___wmul@multiplier 0029    __end_of_I2C_Comunication 149C            __size_of_LCD_CMD 0022  
               _converted01 00CB                 _converted02 00C1                 _converted03 00B7  
               _converted04 0190    __end_of_LCD_Write_String 1555                 ??__Umul8_16 0020  
          __size_of___fladd 0288            __size_of___fldiv 01DD            __size_of___awdiv 0069  
          __size_of___awmod 005B            __size_of___flmul 0361            __size_of___flsub 0024  
          __size_of___fltol 007C          __end_of__stringtab 1010             _I2C_Master_Init 1330  
                  ___xxtofl 0906             _I2C_Master_Wait 1323             _I2C_Master_Stop 131A  
                  __ptext10 13FF                    __ptext11 149C                    __ptext20 0D78  
                  __ptext12 1398                    __ptext21 0479                    __ptext13 13DC  
                  __ptext30 1311                    __ptext22 1449                    __ptext14 137B  
                  __ptext31 1323                    __ptext23 0862                    __ptext15 0037  
                  __ptext32 14D4                    __ptext24 0B9B                    __ptext16 0906  
                  __ptext25 15A6                    __ptext17 1422                    __ptext26 1472  
                  __ptext18 16E9                    __ptext27 134D                    __ptext19 07DA  
                  __ptext28 133D                    __ptext29 131A     __size_of_LCD_Set_Cursor 0038  
                  _division 160F             _BackLight_State 00E8               __size_of_main 0022  
                  _hundreds 006E                ?_ADC_convert 005F    __end_of_I2C_Master_Start 131A  
  __end_of_I2C_Master_Write 134D                  _INTCONbits 000B          LCD_Write_Char@Data 0023  
                  intlevel1 0000                   stringcode 100A                  _OSCCONbits 008F  
   __size_of_LCD_Write_4Bit 0023           ADC_convert@digits 00E0     __size_of_LCD_Write_Char 0023  
   __end_of_I2C_Master_Init 133D     __end_of_I2C_Master_Wait 1330     __end_of_I2C_Master_Stop 1323  
           LCD_Init@I2C_Add 0026      __Umul8_16@multiplicand 0074                    stringdir 100A  
                  stringtab 1000           LCD_Set_Cursor@COL 0024           LCD_Set_Cursor@ROW 0027  
               _SSPCON2bits 0091               ___fladd@signs 0030                ___fladd@aexp 0031  
              ___fladd@bexp 0032        __Umul8_16@multiplier 0026               _LCD_Send$1299 00E4  
         __Umul8_16@product 0022  
