

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 01 01:16:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319                           
   320                           	psect	idataBANK1
   321  07FA                     __pidataBANK1:
   322                           
   323                           ;initializer for _BackLight_State
   324  07FA  3408               	retlw	8
   325                           
   326                           	psect	nvBANK1
   327  00C6                     __pnvBANK1:
   328  00C6                     _i2c_add:
   329  00C6                     	ds	1
   330  0013                     _SSPBUF	set	19
   331  0014                     _SSPCON	set	20
   332  0019                     _TXREG	set	25
   333  001A                     _RCREG	set	26
   334  0009                     _PORTE	set	9
   335  0008                     _PORTD	set	8
   336  0007                     _PORTC	set	7
   337  0006                     _PORTB	set	6
   338  0005                     _PORTA	set	5
   339  005E                     _PEIE	set	94
   340  005F                     _GIE	set	95
   341  0063                     _SSPIF	set	99
   342  0064                     _TXIF	set	100
   343  0037                     _RB7	set	55
   344  0028                     _RA0	set	40
   345  0091                     _SSPCON2bits	set	145
   346  0093                     _SSPADD	set	147
   347  0094                     _SSPSTAT	set	148
   348  0091                     _SSPCON2	set	145
   349  008F                     _OSCCONbits	set	143
   350  0088                     _TRISD	set	136
   351  0086                     _TRISBbits	set	134
   352  0463                     _SSPIE	set	1123
   353  048B                     _RCEN	set	1163
   354  048E                     _ACKSTAT	set	1166
   355  048C                     _ACKEN	set	1164
   356  048D                     _ACKDT	set	1165
   357  048A                     _PEN	set	1162
   358  0489                     _RSEN	set	1161
   359  0488                     _SEN	set	1160
   360  043C                     _TRISC4	set	1084
   361  043B                     _TRISC3	set	1083
   362  0430                     _TRISB0	set	1072
   363  0428                     _TRISA0	set	1064
   364  0189                     _ANSELH	set	393
   365  0188                     _ANSEL	set	392
   366                           
   367                           	psect	strings
   368  0800                     __pstrings:
   369  0800                     stringtab:
   370  0800                     __stringtab:
   371                           
   372                           ;	String table - string pointers are 1 byte each
   373  0800  1BFF               	btfsc	btemp+1,7
   374  0801  280A               	ljmp	stringcode
   375  0802  1383               	bcf	3,7
   376  0803  187F               	btfsc	btemp+1,0
   377  0804  1783               	bsf	3,7
   378  0805  0800               	movf	0,w
   379  0806  0A84               	incf	4,f
   380  0807  1903               	skipnz
   381  0808  0AFF               	incf	btemp+1,f
   382  0809  0008               	return
   383  080A                     stringcode:
   384  080A                     stringdir:
   385  080A  3008               	movlw	high stringdir
   386  080B  008A               	movwf	10
   387  080C  0804               	movf	4,w
   388  080D  0A84               	incf	4,f
   389  080E  0782               	addwf	2,f
   390  080F                     __stringbase:
   391  080F  3400               	retlw	0
   392  0810                     __end_of__stringtab:
   393  0810                     STR_2:
   394  0810  3420               	retlw	32	;' '
   395  0811  3420               	retlw	32	;' '
   396  0812  3420               	retlw	32	;' '
   397  0813  344D               	retlw	77	;'M'
   398  0814  346F               	retlw	111	;'o'
   399  0815  346E               	retlw	110	;'n'
   400  0816  3465               	retlw	101	;'e'
   401  0817  3464               	retlw	100	;'d'
   402  0818  3461               	retlw	97	;'a'
   403  0819  3473               	retlw	115	;'s'
   404  081A  3420               	retlw	32	;' '
   405  081B  343D               	retlw	61	;'='
   406  081C  3420               	retlw	32	;' '
   407  081D  3451               	retlw	81	;'Q'
   408  081E  3430               	retlw	48	;'0'
   409  081F  342E               	retlw	46	;'.'
   410  0820  3430               	retlw	48	;'0'
   411  0821  3430               	retlw	48	;'0'
   412  0822  3400               	retlw	0
   413  0823                     STR_3:
   414  0823  3420               	retlw	32	;' '
   415  0824  3431               	retlw	49	;'1'
   416  0825  342E               	retlw	46	;'.'
   417  0826  3430               	retlw	48	;'0'
   418  0827  3430               	retlw	48	;'0'
   419  0828  3420               	retlw	32	;' '
   420  0829  3420               	retlw	32	;' '
   421  082A  3430               	retlw	48	;'0'
   422  082B  342E               	retlw	46	;'.'
   423  082C  3435               	retlw	53	;'5'
   424  082D  3420               	retlw	32	;' '
   425  082E  3420               	retlw	32	;' '
   426  082F  3420               	retlw	32	;' '
   427  0830  3430               	retlw	48	;'0'
   428  0831  342E               	retlw	46	;'.'
   429  0832  3432               	retlw	50	;'2'
   430  0833  3435               	retlw	53	;'5'
   431  0834  3400               	retlw	0
   432  0835                     STR_1:
   433  0835  3420               	retlw	32	;' '
   434  0836  3420               	retlw	32	;' '
   435  0837  3420               	retlw	32	;' '
   436  0838  3420               	retlw	32	;' '
   437  0839  3420               	retlw	32	;' '
   438  083A  344D               	retlw	77	;'M'
   439  083B  346F               	retlw	111	;'o'
   440  083C  346E               	retlw	110	;'n'
   441  083D  3465               	retlw	101	;'e'
   442  083E  3464               	retlw	100	;'d'
   443  083F  3461               	retlw	97	;'a'
   444  0840  346E               	retlw	110	;'n'
   445  0841  3461               	retlw	97	;'a'
   446  0842  3469               	retlw	105	;'i'
   447  0843  3474               	retlw	116	;'t'
   448  0844  346F               	retlw	111	;'o'
   449  0845  3472               	retlw	114	;'r'
   450  0846  3400               	retlw	0
   451  0847                     STR_4:
   452  0847  3425               	retlw	37	;'%'
   453  0848  3464               	retlw	100	;'d'
   454  0849  3400               	retlw	0
   455  0847                     
   456                           	psect	cinit
   457  000F                     start_initialization:	
   458                           ; #config settings
   459                           
   460  000F                     __initialization:
   461                           
   462                           ; Initialize objects allocated to BANK1
   463  000F  1683               	bsf	3,5	;RP0=1, select bank1
   464  0010  1303               	bcf	3,6	;RP1=0, select bank1
   465  0011  120A  118A  27FA  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   466  0016  00C7               	movwf	__pdataBANK1& (0+127)
   467                           
   468                           ; Clear objects allocated to BANK1
   469  0017  1383               	bcf	3,7	;select IRP bank0
   470  0018  30A0               	movlw	low __pbssBANK1
   471  0019  0084               	movwf	4
   472  001A  30B7               	movlw	low (__pbssBANK1+23)
   473  001B  160A  118A  25E1  120A  118A  	fcall	clear_ram0
   474                           
   475                           ; Clear objects allocated to BANK0
   476  0020  1283               	bcf	3,5	;RP0=0, select bank0
   477  0021  1303               	bcf	3,6	;RP1=0, select bank0
   478  0022  01E9               	clrf	__pbssBANK0& (0+127)
   479                           
   480                           ; Clear objects allocated to COMMON
   481  0023  01FA               	clrf	__pbssCOMMON& (0+127)
   482  0024  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   483  0025                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  0025                     __end_of__initialization:
   487  0025  0183               	clrf	3
   488  0026  160A  118A  2EC2   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssCOMMON
   491  007A                     __pbssCOMMON:
   492  007A                     _residuo:
   493  007A                     	ds	1
   494  007B                     _hundreds:
   495  007B                     	ds	1
   496                           
   497                           	psect	bssBANK0
   498  0069                     __pbssBANK0:
   499  0069                     _tens:
   500  0069                     	ds	1
   501                           
   502                           	psect	bssBANK1
   503  00A0                     __pbssBANK1:
   504  00A0                     _conv0:
   505  00A0                     	ds	4
   506  00A4                     _temp:
   507  00A4                     	ds	2
   508  00A6                     _RS:
   509  00A6                     	ds	1
   510  00A7                     _units:
   511  00A7                     	ds	1
   512  00A8                     _valor:
   513  00A8                     	ds	1
   514  00A9                     _POT:
   515  00A9                     	ds	1
   516  00AA                     _CONT:
   517  00AA                     	ds	1
   518  00AB                     _converted:
   519  00AB                     	ds	1
   520  00AC                     _counter:
   521  00AC                     	ds	1
   522  00AD                     _converted02:
   523  00AD                     	ds	10
   524                           
   525                           	psect	dataBANK1
   526  00C7                     __pdataBANK1:
   527  00C7                     _BackLight_State:
   528  00C7                     	ds	1
   529                           
   530                           	psect	clrtext
   531  15E1                     clear_ram0:	
   532                           ;	Called with FSR containing the base address, and
   533                           ;	W with the last address+1
   534                           
   535  15E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   536  15E2                     clrloop0:
   537  15E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   538  15E3  0A84               	incf	4,f	;increment pointer
   539  15E4  0604               	xorwf	4,w	;XOR with final address
   540  15E5  1903               	btfsc	3,2	;have we reached the end yet?
   541  15E6  3400               	retlw	0	;all done for this memory range, return
   542  15E7  0604               	xorwf	4,w	;XOR again to restore value
   543  15E8  2DE2               	goto	clrloop0	;do the next byte
   544                           
   545                           	psect	cstackBANK1
   546  00B7                     __pcstackBANK1:
   547  00B7                     ADC_convert@temp:
   548                           
   549                           ; 2 bytes @ 0x0
   550  00B7                     	ds	2
   551  00B9                     ADC_convert@j:
   552                           
   553                           ; 2 bytes @ 0x2
   554  00B9                     	ds	2
   555  00BB                     ADC_convert@data:
   556                           
   557                           ; 1 bytes @ 0x4
   558  00BB                     	ds	1
   559  00BC                     ADC_convert@x:
   560                           
   561                           ; 4 bytes @ 0x5
   562  00BC                     	ds	4
   563  00C0                     ADC_convert@i:
   564                           
   565                           ; 2 bytes @ 0x9
   566  00C0                     	ds	2
   567  00C2                     ADC_convert@digits:
   568                           
   569                           ; 2 bytes @ 0xB
   570  00C2                     	ds	2
   571  00C4                     ADC_convert@mu:
   572                           
   573                           ; 2 bytes @ 0xD
   574  00C4                     	ds	2
   575                           
   576                           	psect	cstackCOMMON
   577  0070                     __pcstackCOMMON:
   578  0070                     ?_setup:
   579  0070                     ?_LCD_Start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_LCD_Send:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_infrared:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_I2C_Comunication:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_I2C_Master_Write:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_I2C_Read_Byte:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_I2C_Master_Stop:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_I2C_Master_Start:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_I2C_Master_Init:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_LCD_Init:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_IO_Expander_Write:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_LCD_CMD:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_isr:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??_isr:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?_main:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_I2C_Master_Wait:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_LCD_Write_4Bit:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_LCD_Write_Char:	
   631                           ; 1 bytes @ 0x0
   632                           
   633                           
   634                           ; 1 bytes @ 0x0
   635  0070                     	ds	2
   636  0072                     ?___flge:
   637  0072                     ??_setup:	
   638                           ; 1 bit 
   639                           
   640  0072                     ??_infrared:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ??_I2C_Master_Write:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ??_I2C_Read_Byte:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ??_I2C_Master_Stop:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  0072                     ??_I2C_Master_Start:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0072                     ??_I2C_Master_Init:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ??_I2C_Master_Wait:	
   659                           ; 1 bytes @ 0x2
   660                           
   661  0072                     ?__Umul8_16:	
   662                           ; 1 bytes @ 0x2
   663                           
   664  0072                     ?___awdiv:	
   665                           ; 2 bytes @ 0x2
   666                           
   667  0072                     ?___fltol:	
   668                           ; 2 bytes @ 0x2
   669                           
   670  0072                     ?___fladd:	
   671                           ; 4 bytes @ 0x2
   672                           
   673  0072                     I2C_Master_Write@data:	
   674                           ; 4 bytes @ 0x2
   675                           
   676  0072                     __Umul8_16@multiplicand:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     ___awdiv@divisor:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     ___flge@ff1:	
   683                           ; 2 bytes @ 0x2
   684                           
   685  0072                     ___fltol@f1:	
   686                           ; 4 bytes @ 0x2
   687                           
   688  0072                     ___fladd@b:	
   689                           ; 4 bytes @ 0x2
   690                           
   691                           
   692                           ; 4 bytes @ 0x2
   693  0072                     	ds	1
   694  0073                     ??_I2C_Comunication:
   695  0073                     ??_IO_Expander_Write:	
   696                           ; 1 bytes @ 0x3
   697                           
   698  0073                     IO_Expander_Write@Data:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 1 bytes @ 0x3
   703  0073                     	ds	1
   704  0074                     ??__Umul8_16:
   705  0074                     ??_LCD_Write_4Bit:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0074                     ___awdiv@dividend:	
   709                           ; 1 bytes @ 0x4
   710                           
   711                           
   712                           ; 2 bytes @ 0x4
   713  0074                     	ds	1
   714  0075                     LCD_Write_4Bit@Nibble:
   715                           
   716                           ; 1 bytes @ 0x5
   717  0075                     	ds	1
   718  0076                     ??_LCD_CMD:
   719  0076                     ??_LCD_Write_Char:	
   720                           ; 1 bytes @ 0x6
   721                           
   722  0076                     ??___awdiv:	
   723                           ; 1 bytes @ 0x6
   724                           
   725  0076                     ___fltol@sign1:	
   726                           ; 1 bytes @ 0x6
   727                           
   728  0076                     ___flge@ff2:	
   729                           ; 1 bytes @ 0x6
   730                           
   731  0076                     ___fladd@a:	
   732                           ; 4 bytes @ 0x6
   733                           
   734                           
   735                           ; 4 bytes @ 0x6
   736  0076                     	ds	1
   737  0077                     LCD_CMD@CMD:
   738  0077                     LCD_Write_Char@Data:	
   739                           ; 1 bytes @ 0x7
   740                           
   741  0077                     ___fltol@exp1:	
   742                           ; 1 bytes @ 0x7
   743                           
   744                           
   745                           ; 1 bytes @ 0x7
   746  0077                     	ds	1
   747  0078                     ??_LCD_Init:
   748  0078                     ?_LCD_Set_Cursor:	
   749                           ; 1 bytes @ 0x8
   750                           
   751  0078                     ?_LCD_Write_String:	
   752                           ; 1 bytes @ 0x8
   753                           
   754  0078                     ??___wmul:	
   755                           ; 1 bytes @ 0x8
   756                           
   757  0078                     LCD_Set_Cursor@COL:	
   758                           ; 1 bytes @ 0x8
   759                           
   760  0078                     LCD_Write_String@Str:	
   761                           ; 1 bytes @ 0x8
   762                           
   763  0078                     ___wmul@product:	
   764                           ; 2 bytes @ 0x8
   765                           
   766                           
   767                           ; 2 bytes @ 0x8
   768  0078                     	ds	1
   769  0079                     LCD_Set_Cursor@ROW:
   770                           
   771                           ; 1 bytes @ 0x9
   772  0079                     	ds	1
   773  007A                     ??_main:
   774  007A                     ??___flsub:	
   775                           ; 1 bytes @ 0xA
   776                           
   777                           
   778                           	psect	cstackBANK0
   779  0020                     __pcstackBANK0:	
   780                           ; 1 bytes @ 0xA
   781                           
   782  0020                     ??_LCD_Set_Cursor:
   783  0020                     ??_LCD_Write_String:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0020                     ??___flge:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0020                     ??___fltol:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0020                     ??___fladd:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0020                     LCD_Init@I2C_Add:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0020                     ___awdiv@counter:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0020                     __Umul8_16@product:	
   802                           ; 1 bytes @ 0x0
   803                           
   804                           
   805                           ; 2 bytes @ 0x0
   806  0020                     	ds	1
   807  0021                     ___awdiv@sign:
   808                           
   809                           ; 1 bytes @ 0x1
   810  0021                     	ds	1
   811  0022                     ___awdiv@quotient:
   812  0022                     __Umul8_16@word_mpld:	
   813                           ; 2 bytes @ 0x2
   814                           
   815                           
   816                           ; 2 bytes @ 0x2
   817  0022                     	ds	1
   818  0023                     LCD_Write_String@i:
   819                           
   820                           ; 2 bytes @ 0x3
   821  0023                     	ds	1
   822  0024                     __Umul8_16@multiplier:
   823                           
   824                           ; 1 bytes @ 0x4
   825  0024                     	ds	1
   826  0025                     ??_LCD_Start:
   827  0025                     ?___wmul:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0025                     ___wmul@multiplier:	
   831                           ; 2 bytes @ 0x5
   832                           
   833                           
   834                           ; 2 bytes @ 0x5
   835  0025                     	ds	2
   836  0027                     ___wmul@multiplicand:
   837                           
   838                           ; 2 bytes @ 0x7
   839  0027                     	ds	1
   840  0028                     ___fladd@signs:
   841                           
   842                           ; 1 bytes @ 0x8
   843  0028                     	ds	1
   844  0029                     ?___xxtofl:
   845  0029                     ___fladd@aexp:	
   846                           ; 4 bytes @ 0x9
   847                           
   848  0029                     ___xxtofl@val:	
   849                           ; 1 bytes @ 0x9
   850                           
   851                           
   852                           ; 4 bytes @ 0x9
   853  0029                     	ds	1
   854  002A                     ___fladd@bexp:
   855                           
   856                           ; 1 bytes @ 0xA
   857  002A                     	ds	1
   858  002B                     ___fladd@grs:
   859                           
   860                           ; 1 bytes @ 0xB
   861  002B                     	ds	2
   862  002D                     ??___xxtofl:
   863                           
   864                           ; 1 bytes @ 0xD
   865  002D                     	ds	4
   866  0031                     ___xxtofl@sign:
   867                           
   868                           ; 1 bytes @ 0x11
   869  0031                     	ds	1
   870  0032                     ___xxtofl@exp:
   871                           
   872                           ; 1 bytes @ 0x12
   873  0032                     	ds	1
   874  0033                     ___xxtofl@arg:
   875                           
   876                           ; 4 bytes @ 0x13
   877  0033                     	ds	4
   878  0037                     ?___flsub:
   879  0037                     ?___fldiv:	
   880                           ; 4 bytes @ 0x17
   881                           
   882  0037                     ___flsub@a:	
   883                           ; 4 bytes @ 0x17
   884                           
   885  0037                     ___fldiv@a:	
   886                           ; 4 bytes @ 0x17
   887                           
   888                           
   889                           ; 4 bytes @ 0x17
   890  0037                     	ds	4
   891  003B                     ___flsub@b:
   892  003B                     ___fldiv@b:	
   893                           ; 4 bytes @ 0x1B
   894                           
   895                           
   896                           ; 4 bytes @ 0x1B
   897  003B                     	ds	4
   898  003F                     ??___fldiv:
   899  003F                     ?___flmul:	
   900                           ; 1 bytes @ 0x1F
   901                           
   902  003F                     ___flmul@b:	
   903                           ; 4 bytes @ 0x1F
   904                           
   905                           
   906                           ; 4 bytes @ 0x1F
   907  003F                     	ds	4
   908  0043                     ___flmul@a:
   909                           
   910                           ; 4 bytes @ 0x23
   911  0043                     	ds	1
   912  0044                     ___fldiv@rem:
   913                           
   914                           ; 4 bytes @ 0x24
   915  0044                     	ds	3
   916  0047                     ??___flmul:
   917                           
   918                           ; 1 bytes @ 0x27
   919  0047                     	ds	1
   920  0048                     ___fldiv@sign:
   921                           
   922                           ; 1 bytes @ 0x28
   923  0048                     	ds	1
   924  0049                     ___fldiv@new_exp:
   925                           
   926                           ; 2 bytes @ 0x29
   927  0049                     	ds	2
   928  004B                     ___fldiv@grs:
   929                           
   930                           ; 4 bytes @ 0x2B
   931  004B                     	ds	1
   932  004C                     ___flmul@sign:
   933                           
   934                           ; 1 bytes @ 0x2C
   935  004C                     	ds	1
   936  004D                     ___flmul@aexp:
   937                           
   938                           ; 1 bytes @ 0x2D
   939  004D                     	ds	1
   940  004E                     ___flmul@grs:
   941                           
   942                           ; 4 bytes @ 0x2E
   943  004E                     	ds	1
   944  004F                     ___fldiv@bexp:
   945                           
   946                           ; 1 bytes @ 0x2F
   947  004F                     	ds	1
   948  0050                     ___fldiv@aexp:
   949                           
   950                           ; 1 bytes @ 0x30
   951  0050                     	ds	2
   952  0052                     ___flmul@bexp:
   953                           
   954                           ; 1 bytes @ 0x32
   955  0052                     	ds	1
   956  0053                     ___flmul@prod:
   957                           
   958                           ; 4 bytes @ 0x33
   959  0053                     	ds	4
   960  0057                     ___flmul@temp:
   961                           
   962                           ; 2 bytes @ 0x37
   963  0057                     	ds	2
   964  0059                     ?_ADC_convert:
   965  0059                     ADC_convert@a:	
   966                           ; 1 bytes @ 0x39
   967                           
   968                           
   969                           ; 4 bytes @ 0x39
   970  0059                     	ds	4
   971  005D                     ADC_convert@place:
   972                           
   973                           ; 2 bytes @ 0x3D
   974  005D                     	ds	2
   975  005F                     ??_ADC_convert:
   976                           
   977                           ; 1 bytes @ 0x3F
   978  005F                     	ds	2
   979  0061                     ??_LCD_Send:
   980                           
   981                           ; 1 bytes @ 0x41
   982  0061                     	ds	4
   983  0065                     _LCD_Send$1043:
   984                           
   985                           ; 4 bytes @ 0x45
   986  0065                     	ds	4
   987                           
   988                           	psect	maintext
   989  16C2                     __pmaintext:	
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 77 in file "Master_PIC.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;		None
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B00/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         0       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         0       0       0       0       0
  1013 ;;Total ram usage:        0 bytes
  1014 ;; Hardware stack levels required when called: 8
  1015 ;; This function calls:
  1016 ;;		_I2C_Comunication
  1017 ;;		_LCD_Send
  1018 ;;		_LCD_Start
  1019 ;;		_infrared
  1020 ;;		_setup
  1021 ;; This function is called by:
  1022 ;;		Startup code after reset
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           
  1027                           ;psect for function _main
  1028  16C2                     _main:
  1029  16C2                     l3956:	
  1030                           ;incstack = 0
  1031                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1032                           
  1033                           
  1034                           ;Master_PIC.c: 79:     TRISD = 0;
  1035  16C2  160A  118A  2625  160A  118A  	fcall	_setup
  1036  16C7                     l3958:
  1037                           
  1038                           ;Master_PIC.c: 80: 
  1039  16C7  120A  158A  2083  160A  118A  	fcall	_LCD_Start
  1040  16CC                     l3960:
  1041                           
  1042                           ;Master_PIC.c: 83: ;Master_PIC.c: 85: 
  1043  16CC  160A  118A  27B7  160A  118A  	fcall	_LCD_Send
  1044  16D1                     l3962:
  1045                           
  1046                           ;Master_PIC.c: 88:     OSCCONbits.IRCF2 = 1;
  1047  16D1  160A  118A  26DF  160A  118A  	fcall	_infrared
  1048  16D6                     l3964:
  1049                           
  1050                           ;Master_PIC.c: 91: 
  1051  16D6  120A  158A  213A  160A  118A  	fcall	_I2C_Comunication
  1052  16DB  2ECC               	goto	l3960
  1053  16DC  120A  118A  280C   	ljmp	start
  1054  16DF                     __end_of_main:
  1055                           
  1056                           	psect	text1
  1057  1625                     __ptext1:	
  1058 ;; *************** function _setup *****************
  1059 ;; Defined at:
  1060 ;;		line 103 in file "Master_PIC.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		status,2
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 1
  1081 ;; This function calls:
  1082 ;;		Nothing
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _setup
  1090  1625                     _setup:
  1091  1625                     l1810:	
  1092                           ;incstack = 0
  1093                           ; Regs used in _setup: [status,2]
  1094                           
  1095                           
  1096                           ;Master_PIC.c: 105:         RB7 = 0;
  1097  1625  1683               	bsf	3,5	;RP0=1, select bank3
  1098  1626  1703               	bsf	3,6	;RP1=1, select bank3
  1099  1627  0188               	clrf	8	;volatile
  1100                           
  1101                           ;Master_PIC.c: 106:     }
  1102  1628  0189               	clrf	9	;volatile
  1103  1629                     l1812:
  1104                           
  1105                           ;Master_PIC.c: 109:     }
  1106  1629  1683               	bsf	3,5	;RP0=1, select bank1
  1107  162A  1303               	bcf	3,6	;RP1=0, select bank1
  1108  162B  1405               	bsf	5,0	;volatile
  1109  162C                     l1814:
  1110                           
  1111                           ;Master_PIC.c: 112: 
  1112  162C  1406               	bsf	6,0	;volatile
  1113  162D                     l1816:
  1114                           
  1115                           ;Master_PIC.c: 113: void Text(void){
  1116  162D  1386               	bcf	6,7	;volatile
  1117                           
  1118                           ;Master_PIC.c: 118:      _delay((unsigned long)((50)*(8000000/4000.0)));
  1119  162E  0188               	clrf	8	;volatile
  1120  162F                     l1818:
  1121                           
  1122                           ;Master_PIC.c: 125:        }
  1123  162F  160F               	bsf	15,4	;volatile
  1124  1630                     l1820:
  1125                           
  1126                           ;Master_PIC.c: 126:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1127  1630  168F               	bsf	15,5	;volatile
  1128  1631                     l1822:
  1129                           
  1130                           ;Master_PIC.c: 127:     if(TXIF == 1){
  1131  1631  170F               	bsf	15,6	;volatile
  1132  1632                     l1824:
  1133                           
  1134                           ;Master_PIC.c: 128:         TXREG = units;
  1135  1632  140F               	bsf	15,0	;volatile
  1136                           
  1137                           ;Master_PIC.c: 131: 
  1138  1633  1283               	bcf	3,5	;RP0=0, select bank0
  1139  1634  1303               	bcf	3,6	;RP1=0, select bank0
  1140  1635  0185               	clrf	5	;volatile
  1141                           
  1142                           ;Master_PIC.c: 132:      }
  1143  1636  0186               	clrf	6	;volatile
  1144                           
  1145                           ;Master_PIC.c: 133: }
  1146  1637  0187               	clrf	7	;volatile
  1147                           
  1148                           ;Master_PIC.c: 134: 
  1149  1638  0188               	clrf	8	;volatile
  1150                           
  1151                           ;Master_PIC.c: 135: 
  1152  1639  0189               	clrf	9	;volatile
  1153  163A                     l112:
  1154  163A  0008               	return
  1155  163B                     __end_of_setup:
  1156                           
  1157                           	psect	text2
  1158  16DF                     __ptext2:	
  1159 ;; *************** function _infrared *****************
  1160 ;; Defined at:
  1161 ;;		line 139 in file "Master_PIC.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;		None
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  1    wreg      void 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         0       0       0       0       0
  1176 ;;      Locals:         0       0       0       0       0
  1177 ;;      Temps:          3       0       0       0       0
  1178 ;;      Totals:         3       0       0       0       0
  1179 ;;Total ram usage:        3 bytes
  1180 ;; Hardware stack levels used: 1
  1181 ;; Hardware stack levels required when called: 1
  1182 ;; This function calls:
  1183 ;;		Nothing
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _infrared
  1191  16DF                     _infrared:
  1192  16DF                     l2888:	
  1193                           ;incstack = 0
  1194                           ; Regs used in _infrared: [wreg+status,2+status,0]
  1195                           
  1196                           
  1197                           ;Master_PIC.c: 140:     I2C_Master_Stop();
  1198  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  1199  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  1200  16E1  1C05               	btfss	5,0	;volatile
  1201  16E2  2EE4               	goto	u3641
  1202  16E3  2EE5               	goto	u3640
  1203  16E4                     u3641:
  1204  16E4  2EF9               	goto	l2896
  1205  16E5                     u3640:
  1206  16E5                     l2890:
  1207                           
  1208                           ;Master_PIC.c: 141:     _delay((unsigned long)((200)*(8000000/4000.0)));
  1209  16E5  1786               	bsf	6,7	;volatile
  1210  16E6                     l2892:
  1211                           
  1212                           ;Master_PIC.c: 142: 
  1213  16E6  3001               	movlw	1
  1214  16E7  00F2               	movwf	??_infrared
  1215  16E8  0872               	movf	??_infrared,w
  1216  16E9  1683               	bsf	3,5	;RP0=1, select bank1
  1217  16EA  1303               	bcf	3,6	;RP1=0, select bank1
  1218  16EB  07AC               	addwf	_counter^(0+128),f
  1219  16EC                     l2894:
  1220                           
  1221                           ;Master_PIC.c: 143:     I2C_Master_Start();
  1222  16EC  3006               	movlw	6
  1223  16ED  00F4               	movwf	??_infrared+2
  1224  16EE  3013               	movlw	19
  1225  16EF  00F3               	movwf	??_infrared+1
  1226  16F0  30AD               	movlw	173
  1227  16F1  00F2               	movwf	??_infrared
  1228  16F2                     u5627:
  1229  16F2  0BF2               	decfsz	??_infrared,f
  1230  16F3  2EF2               	goto	u5627
  1231  16F4  0BF3               	decfsz	??_infrared+1,f
  1232  16F5  2EF2               	goto	u5627
  1233  16F6  0BF4               	decfsz	??_infrared+2,f
  1234  16F7  2EF2               	goto	u5627
  1235  16F8  2EF9               	nop2
  1236  16F9                     l2896:
  1237                           
  1238                           ;Master_PIC.c: 144:     I2C_Master_Write(0x61);
  1239  16F9  1283               	bcf	3,5	;RP0=0, select bank0
  1240  16FA  1303               	bcf	3,6	;RP1=0, select bank0
  1241  16FB  1386               	bcf	6,7	;volatile
  1242  16FC                     l117:	
  1243                           ;Master_PIC.c: 145:     CONT = I2C_Read_Byte();
  1244                           
  1245  16FC  0008               	return
  1246  16FD                     __end_of_infrared:
  1247                           
  1248                           	psect	text3
  1249  0883                     __ptext3:	
  1250 ;; *************** function _LCD_Start *****************
  1251 ;; Defined at:
  1252 ;;		line 196 in file "Master_PIC.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       3       0       0       0
  1269 ;;      Totals:         0       3       0       0       0
  1270 ;;Total ram usage:        3 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; Hardware stack levels required when called: 7
  1273 ;; This function calls:
  1274 ;;		_I2C_Master_Init
  1275 ;;		_LCD_Init
  1276 ;;		_LCD_Set_Cursor
  1277 ;;		_LCD_Write_String
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _LCD_Start
  1285  0883                     _LCD_Start:
  1286  0883                     l3916:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _LCD_Start: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1289                           
  1290                           
  1291                           ;Master_PIC.c: 197:      {
  1292  0883  160A  118A  2608  120A  158A  	fcall	_I2C_Master_Init
  1293                           
  1294                           ;Master_PIC.c: 198:          temp=temp/10;
  1295  0888  304E               	movlw	78
  1296  0889  120A  158A  21AB  120A  158A  	fcall	_LCD_Init
  1297  088E                     l3918:
  1298                           
  1299                           ;Master_PIC.c: 200:      }
  1300  088E  01F8               	clrf	LCD_Set_Cursor@COL
  1301  088F  0AF8               	incf	LCD_Set_Cursor@COL,f
  1302  0890  3001               	movlw	1
  1303  0891  120A  158A  204B  120A  158A  	fcall	_LCD_Set_Cursor
  1304  0896                     l3920:
  1305                           
  1306                           ;Master_PIC.c: 201:      while(digits!=0)
  1307  0896  3026               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1308  0897  00F8               	movwf	LCD_Write_String@Str
  1309  0898  3080               	movlw	128
  1310  0899  00F9               	movwf	LCD_Write_String@Str+1
  1311  089A  160A  118A  2771  120A  158A  	fcall	_LCD_Write_String
  1312  089F                     l3922:
  1313                           
  1314                           ;Master_PIC.c: 202:      {
  1315  089F  01F8               	clrf	LCD_Set_Cursor@COL
  1316  08A0  0AF8               	incf	LCD_Set_Cursor@COL,f
  1317  08A1  3002               	movlw	2
  1318  08A2  120A  158A  204B  120A  158A  	fcall	_LCD_Set_Cursor
  1319  08A7                     l3924:
  1320                           
  1321                           ;Master_PIC.c: 203:          if(digits==1)mu=1;
  1322  08A7  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1323  08A8  00F8               	movwf	LCD_Write_String@Str
  1324  08A9  3080               	movlw	128
  1325  08AA  00F9               	movwf	LCD_Write_String@Str+1
  1326  08AB  160A  118A  2771  120A  158A  	fcall	_LCD_Write_String
  1327  08B0                     l3926:
  1328                           
  1329                           ;Master_PIC.c: 204:          else for(j=2;j<=digits;j++)mu=mu*10;
  1330  08B0  01F8               	clrf	LCD_Set_Cursor@COL
  1331  08B1  0AF8               	incf	LCD_Set_Cursor@COL,f
  1332  08B2  3003               	movlw	3
  1333  08B3  120A  158A  204B  120A  158A  	fcall	_LCD_Set_Cursor
  1334  08B8                     l3928:
  1335                           
  1336                           ;Master_PIC.c: 205: 
  1337  08B8  3014               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1338  08B9  00F8               	movwf	LCD_Write_String@Str
  1339  08BA  3080               	movlw	128
  1340  08BB  00F9               	movwf	LCD_Write_String@Str+1
  1341  08BC  160A  118A  2771  120A  158A  	fcall	_LCD_Write_String
  1342  08C1                     l3930:
  1343                           
  1344                           ;Master_PIC.c: 206:          x=a/mu;
  1345  08C1  301A               	movlw	26
  1346  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  1347  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  1348  08C4  00A7               	movwf	??_LCD_Start+2
  1349  08C5  305E               	movlw	94
  1350  08C6  00A6               	movwf	??_LCD_Start+1
  1351  08C7  306D               	movlw	109
  1352  08C8  00A5               	movwf	??_LCD_Start
  1353  08C9                     u5637:
  1354  08C9  0BA5               	decfsz	??_LCD_Start,f
  1355  08CA  28C9               	goto	u5637
  1356  08CB  0BA6               	decfsz	??_LCD_Start+1,f
  1357  08CC  28C9               	goto	u5637
  1358  08CD  0BA7               	decfsz	??_LCD_Start+2,f
  1359  08CE  28C9               	goto	u5637
  1360  08CF  28D0               	nop2
  1361  08D0                     l130:
  1362  08D0  0008               	return
  1363  08D1                     __end_of_LCD_Start:
  1364                           
  1365                           	psect	text4
  1366  09AB                     __ptext4:	
  1367 ;; *************** function _LCD_Init *****************
  1368 ;; Defined at:
  1369 ;;		line 121 in file "I2C_Master.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;  I2C_Add         1    wreg     unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  I2C_Add         1    0[BANK0 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         0       1       0       0       0
  1385 ;;      Temps:          2       0       0       0       0
  1386 ;;      Totals:         2       1       0       0       0
  1387 ;;Total ram usage:        3 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 6
  1390 ;; This function calls:
  1391 ;;		_IO_Expander_Write
  1392 ;;		_LCD_CMD
  1393 ;; This function is called by:
  1394 ;;		_LCD_Start
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _LCD_Init
  1400  09AB                     _LCD_Init:
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1404                           ;LCD_Init@I2C_Add stored from wreg
  1405  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  1406  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  1407  09AD  00A0               	movwf	LCD_Init@I2C_Add
  1408  09AE                     l3764:
  1409                           
  1410                           ;I2C_Master.c: 121: void LCD_Init(unsigned char I2C_Add);I2C_Master.c: 122: {;I2C_Master
      +                          .c: 123:   i2c_add = I2C_Add;
  1411  09AE  0820               	movf	LCD_Init@I2C_Add,w
  1412  09AF  00F8               	movwf	??_LCD_Init
  1413  09B0  0878               	movf	??_LCD_Init,w
  1414  09B1  1683               	bsf	3,5	;RP0=1, select bank1
  1415  09B2  1303               	bcf	3,6	;RP1=0, select bank1
  1416  09B3  00C6               	movwf	_i2c_add^(0+128)
  1417  09B4                     l3766:
  1418                           
  1419                           ;I2C_Master.c: 124:   IO_Expander_Write(0x00);
  1420  09B4  3000               	movlw	0
  1421  09B5  160A  118A  2688  120A  158A  	fcall	_IO_Expander_Write
  1422  09BA                     l3768:
  1423                           
  1424                           ;I2C_Master.c: 125:   _delay((unsigned long)((30)*(8000000/4000.0)));
  1425  09BA  304E               	movlw	78
  1426  09BB  00F9               	movwf	??_LCD_Init+1
  1427  09BC  30EB               	movlw	235
  1428  09BD  00F8               	movwf	??_LCD_Init
  1429  09BE                     u5647:
  1430  09BE  0BF8               	decfsz	??_LCD_Init,f
  1431  09BF  29BE               	goto	u5647
  1432  09C0  0BF9               	decfsz	??_LCD_Init+1,f
  1433  09C1  29BE               	goto	u5647
  1434                           
  1435                           ;I2C_Master.c: 126:   LCD_CMD(0x03);
  1436  09C2  3003               	movlw	3
  1437  09C3  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1438  09C8                     l3770:
  1439                           
  1440                           ;I2C_Master.c: 127:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1441  09C8  300D               	movlw	13
  1442  09C9  00F9               	movwf	??_LCD_Init+1
  1443  09CA  30FB               	movlw	251
  1444  09CB  00F8               	movwf	??_LCD_Init
  1445  09CC                     u5657:
  1446  09CC  0BF8               	decfsz	??_LCD_Init,f
  1447  09CD  29CC               	goto	u5657
  1448  09CE  0BF9               	decfsz	??_LCD_Init+1,f
  1449  09CF  29CC               	goto	u5657
  1450  09D0  29D1               	nop2
  1451  09D1                     l3772:
  1452                           
  1453                           ;I2C_Master.c: 128:   LCD_CMD(0x03);
  1454  09D1  3003               	movlw	3
  1455  09D2  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1456                           
  1457                           ;I2C_Master.c: 129:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1458  09D7  300D               	movlw	13
  1459  09D8  00F9               	movwf	??_LCD_Init+1
  1460  09D9  30FB               	movlw	251
  1461  09DA  00F8               	movwf	??_LCD_Init
  1462  09DB                     u5667:
  1463  09DB  0BF8               	decfsz	??_LCD_Init,f
  1464  09DC  29DB               	goto	u5667
  1465  09DD  0BF9               	decfsz	??_LCD_Init+1,f
  1466  09DE  29DB               	goto	u5667
  1467  09DF  29E0               	nop2
  1468  09E0                     l3774:
  1469                           
  1470                           ;I2C_Master.c: 130:   LCD_CMD(0x03);
  1471  09E0  3003               	movlw	3
  1472  09E1  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1473  09E6                     l3776:
  1474                           
  1475                           ;I2C_Master.c: 131:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1476  09E6  300D               	movlw	13
  1477  09E7  00F9               	movwf	??_LCD_Init+1
  1478  09E8  30FB               	movlw	251
  1479  09E9  00F8               	movwf	??_LCD_Init
  1480  09EA                     u5677:
  1481  09EA  0BF8               	decfsz	??_LCD_Init,f
  1482  09EB  29EA               	goto	u5677
  1483  09EC  0BF9               	decfsz	??_LCD_Init+1,f
  1484  09ED  29EA               	goto	u5677
  1485  09EE  29EF               	nop2
  1486                           
  1487                           ;I2C_Master.c: 132:   LCD_CMD(0x02);
  1488  09EF  3002               	movlw	2
  1489  09F0  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1490  09F5                     l3778:
  1491                           
  1492                           ;I2C_Master.c: 133:   _delay((unsigned long)((5)*(8000000/4000.0)));
  1493  09F5  300D               	movlw	13
  1494  09F6  00F9               	movwf	??_LCD_Init+1
  1495  09F7  30FB               	movlw	251
  1496  09F8  00F8               	movwf	??_LCD_Init
  1497  09F9                     u5687:
  1498  09F9  0BF8               	decfsz	??_LCD_Init,f
  1499  09FA  29F9               	goto	u5687
  1500  09FB  0BF9               	decfsz	??_LCD_Init+1,f
  1501  09FC  29F9               	goto	u5687
  1502  09FD  29FE               	nop2
  1503  09FE                     l3780:
  1504                           
  1505                           ;I2C_Master.c: 134:   LCD_CMD(0x20 | (2 << 2));
  1506  09FE  3028               	movlw	40
  1507  09FF  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1508                           
  1509                           ;I2C_Master.c: 135:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1510  0A04  3082               	movlw	130
  1511  0A05  00F9               	movwf	??_LCD_Init+1
  1512  0A06  30DD               	movlw	221
  1513  0A07  00F8               	movwf	??_LCD_Init
  1514  0A08                     u5697:
  1515  0A08  0BF8               	decfsz	??_LCD_Init,f
  1516  0A09  2A08               	goto	u5697
  1517  0A0A  0BF9               	decfsz	??_LCD_Init+1,f
  1518  0A0B  2A08               	goto	u5697
  1519  0A0C  2A0D               	nop2
  1520  0A0D                     l3782:
  1521                           
  1522                           ;I2C_Master.c: 136:   LCD_CMD(0x0C);
  1523  0A0D  300C               	movlw	12
  1524  0A0E  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1525  0A13                     l3784:
  1526                           
  1527                           ;I2C_Master.c: 137:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1528  0A13  3082               	movlw	130
  1529  0A14  00F9               	movwf	??_LCD_Init+1
  1530  0A15  30DD               	movlw	221
  1531  0A16  00F8               	movwf	??_LCD_Init
  1532  0A17                     u5707:
  1533  0A17  0BF8               	decfsz	??_LCD_Init,f
  1534  0A18  2A17               	goto	u5707
  1535  0A19  0BF9               	decfsz	??_LCD_Init+1,f
  1536  0A1A  2A17               	goto	u5707
  1537  0A1B  2A1C               	nop2
  1538                           
  1539                           ;I2C_Master.c: 138:   LCD_CMD(0x01);
  1540  0A1C  3001               	movlw	1
  1541  0A1D  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1542  0A22                     l3786:
  1543                           
  1544                           ;I2C_Master.c: 139:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1545  0A22  3082               	movlw	130
  1546  0A23  00F9               	movwf	??_LCD_Init+1
  1547  0A24  30DD               	movlw	221
  1548  0A25  00F8               	movwf	??_LCD_Init
  1549  0A26                     u5717:
  1550  0A26  0BF8               	decfsz	??_LCD_Init,f
  1551  0A27  2A26               	goto	u5717
  1552  0A28  0BF9               	decfsz	??_LCD_Init+1,f
  1553  0A29  2A26               	goto	u5717
  1554  0A2A  2A2B               	nop2
  1555  0A2B                     l3788:
  1556                           
  1557                           ;I2C_Master.c: 140:   LCD_CMD(0x04 | 0x02);
  1558  0A2B  3006               	movlw	6
  1559  0A2C  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1560                           
  1561                           ;I2C_Master.c: 141:   _delay((unsigned long)((50)*(8000000/4000.0)));
  1562  0A31  3082               	movlw	130
  1563  0A32  00F9               	movwf	??_LCD_Init+1
  1564  0A33  30DD               	movlw	221
  1565  0A34  00F8               	movwf	??_LCD_Init
  1566  0A35                     u5727:
  1567  0A35  0BF8               	decfsz	??_LCD_Init,f
  1568  0A36  2A35               	goto	u5727
  1569  0A37  0BF9               	decfsz	??_LCD_Init+1,f
  1570  0A38  2A35               	goto	u5727
  1571  0A39  2A3A               	nop2
  1572  0A3A                     l268:
  1573  0A3A  0008               	return
  1574  0A3B                     __end_of_LCD_Init:
  1575                           
  1576                           	psect	text5
  1577  1608                     __ptext5:	
  1578 ;; *************** function _I2C_Master_Init *****************
  1579 ;; Defined at:
  1580 ;;		line 15 in file "I2C_Master.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_LCD_Start
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _I2C_Master_Init
  1610  1608                     _I2C_Master_Init:
  1611  1608                     l1648:	
  1612                           ;incstack = 0
  1613                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  1614                           
  1615                           
  1616                           ;I2C_Master.c: 17:   SSPCON = 0x28;
  1617  1608  3028               	movlw	40
  1618  1609  1283               	bcf	3,5	;RP0=0, select bank0
  1619  160A  1303               	bcf	3,6	;RP1=0, select bank0
  1620  160B  0094               	movwf	20	;volatile
  1621  160C                     l1650:
  1622                           
  1623                           ;I2C_Master.c: 18:   SSPCON2 = 0x00;
  1624  160C  1683               	bsf	3,5	;RP0=1, select bank1
  1625  160D  1303               	bcf	3,6	;RP1=0, select bank1
  1626  160E  0191               	clrf	17	;volatile
  1627  160F                     l1652:
  1628                           
  1629                           ;I2C_Master.c: 19:   SSPSTAT = 0x00;
  1630  160F  0194               	clrf	20	;volatile
  1631                           
  1632                           ;I2C_Master.c: 20:   SSPADD = ((8000000/4)/9600) - 1;
  1633  1610  30CF               	movlw	207
  1634  1611  0093               	movwf	19	;volatile
  1635  1612                     l1654:
  1636                           
  1637                           ;I2C_Master.c: 21:   TRISC3 = 1;
  1638  1612  1587               	bsf	7,3	;volatile
  1639  1613                     l1656:
  1640                           
  1641                           ;I2C_Master.c: 22:   TRISC4 = 1;
  1642  1613  1607               	bsf	7,4	;volatile
  1643  1614                     l224:
  1644  1614  0008               	return
  1645  1615                     __end_of_I2C_Master_Init:
  1646                           
  1647                           	psect	text6
  1648  17B7                     __ptext6:	
  1649 ;; *************** function _LCD_Send *****************
  1650 ;; Defined at:
  1651 ;;		line 210 in file "Master_PIC.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       0       0       0       0
  1666 ;;      Locals:         0       4       0       0       0
  1667 ;;      Temps:          0       4       0       0       0
  1668 ;;      Totals:         0       8       0       0       0
  1669 ;;Total ram usage:        8 bytes
  1670 ;; Hardware stack levels used: 1
  1671 ;; Hardware stack levels required when called: 7
  1672 ;; This function calls:
  1673 ;;		_ADC_convert
  1674 ;;		_LCD_Set_Cursor
  1675 ;;		_LCD_Write_String
  1676 ;;		___xxtofl
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _LCD_Send
  1684  17B7                     _LCD_Send:
  1685  17B7                     l3932:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _LCD_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1688                           
  1689                           
  1690                           ;Master_PIC.c: 211:          mu=1;
  1691  17B7  3002               	movlw	2
  1692  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  1693  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  1694  17BA  00E1               	movwf	??_LCD_Send
  1695  17BB  0861               	movf	??_LCD_Send,w
  1696  17BC  00F8               	movwf	LCD_Set_Cursor@COL
  1697  17BD  3004               	movlw	4
  1698  17BE  120A  158A  204B  160A  118A  	fcall	_LCD_Set_Cursor
  1699  17C3                     l3934:
  1700                           
  1701                           ;Master_PIC.c: 212:      }
  1702  17C3  30AD               	movlw	(low (_converted02| 0))& (0+255)
  1703  17C4  00F8               	movwf	LCD_Write_String@Str
  1704  17C5  3000               	movlw	0
  1705  17C6  00F9               	movwf	LCD_Write_String@Str+1
  1706  17C7  160A  118A  2771  160A  118A  	fcall	_LCD_Write_String
  1707  17CC                     l3936:
  1708                           
  1709                           ;Master_PIC.c: 215:      i++;
  1710  17CC  1683               	bsf	3,5	;RP0=1, select bank1
  1711  17CD  1303               	bcf	3,6	;RP1=0, select bank1
  1712  17CE  082C               	movf	_counter^(0+128),w
  1713  17CF  1283               	bcf	3,5	;RP0=0, select bank0
  1714  17D0  1303               	bcf	3,6	;RP1=0, select bank0
  1715  17D1  00E1               	movwf	??_LCD_Send
  1716  17D2  01E2               	clrf	??_LCD_Send+1
  1717  17D3  01E3               	clrf	??_LCD_Send+2
  1718  17D4  01E4               	clrf	??_LCD_Send+3
  1719  17D5  0864               	movf	??_LCD_Send+3,w
  1720  17D6  00AC               	movwf	___xxtofl@val+3
  1721  17D7  0863               	movf	??_LCD_Send+2,w
  1722  17D8  00AB               	movwf	___xxtofl@val+2
  1723  17D9  0862               	movf	??_LCD_Send+1,w
  1724  17DA  00AA               	movwf	___xxtofl@val+1
  1725  17DB  0861               	movf	??_LCD_Send,w
  1726  17DC  00A9               	movwf	___xxtofl@val
  1727  17DD  3000               	movlw	0
  1728  17DE  120A  158A  22DF  160A  118A  	fcall	___xxtofl
  1729  17E3  1283               	bcf	3,5	;RP0=0, select bank0
  1730  17E4  1303               	bcf	3,6	;RP1=0, select bank0
  1731  17E5  082C               	movf	?___xxtofl+3,w
  1732  17E6  00E8               	movwf	_LCD_Send$1043+3
  1733  17E7  082B               	movf	?___xxtofl+2,w
  1734  17E8  00E7               	movwf	_LCD_Send$1043+2
  1735  17E9  082A               	movf	?___xxtofl+1,w
  1736  17EA  00E6               	movwf	_LCD_Send$1043+1
  1737  17EB  0829               	movf	?___xxtofl,w
  1738  17EC  00E5               	movwf	_LCD_Send$1043
  1739  17ED                     l3938:
  1740                           
  1741                           ;Master_PIC.c: 215:      i++;
  1742  17ED  0868               	movf	_LCD_Send$1043+3,w
  1743  17EE  00DC               	movwf	ADC_convert@a+3
  1744  17EF  0867               	movf	_LCD_Send$1043+2,w
  1745  17F0  00DB               	movwf	ADC_convert@a+2
  1746  17F1  0866               	movf	_LCD_Send$1043+1,w
  1747  17F2  00DA               	movwf	ADC_convert@a+1
  1748  17F3  0865               	movf	_LCD_Send$1043,w
  1749  17F4  00D9               	movwf	ADC_convert@a
  1750  17F5  3002               	movlw	2
  1751  17F6  00DD               	movwf	ADC_convert@place
  1752  17F7  3000               	movlw	0
  1753  17F8  00DE               	movwf	ADC_convert@place+1
  1754  17F9  30AD               	movlw	(low (_converted02| 0))& (0+255)
  1755  17FA  120A  118A  2029  160A  118A  	fcall	_ADC_convert
  1756  17FF                     l133:
  1757  17FF  0008               	return
  1758  1800                     __end_of_LCD_Send:
  1759                           
  1760                           	psect	text7
  1761  1771                     __ptext7:	
  1762 ;; *************** function _LCD_Write_String *****************
  1763 ;; Defined at:
  1764 ;;		line 175 in file "I2C_Master.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  Str             2    8[COMMON] PTR unsigned char 
  1767 ;;		 -> converted02(10), STR_3(18), STR_2(19), STR_1(18), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  i               2    3[BANK0 ] int 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1779 ;;      Params:         2       0       0       0       0
  1780 ;;      Locals:         0       2       0       0       0
  1781 ;;      Temps:          0       3       0       0       0
  1782 ;;      Totals:         2       5       0       0       0
  1783 ;;Total ram usage:        7 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 6
  1786 ;; This function calls:
  1787 ;;		_LCD_Write_Char
  1788 ;; This function is called by:
  1789 ;;		_LCD_Start
  1790 ;;		_LCD_Send
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           
  1795                           ;psect for function _LCD_Write_String
  1796  1771                     _LCD_Write_String:
  1797  1771                     l3806:	
  1798                           ;incstack = 0
  1799 ;; using string table level
  1800                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1801                           
  1802                           
  1803                           ;I2C_Master.c: 175: void LCD_Write_String(char* Str);I2C_Master.c: 176: {;I2C_Master.c: 
      +                          177:     for(int i=0; Str[i]!='\0'; i++)
  1804  1771  1283               	bcf	3,5	;RP0=0, select bank0
  1805  1772  1303               	bcf	3,6	;RP1=0, select bank0
  1806  1773  01A3               	clrf	LCD_Write_String@i
  1807  1774  01A4               	clrf	LCD_Write_String@i+1
  1808  1775  2F9A               	goto	l3812
  1809  1776                     l3808:
  1810                           
  1811                           ;I2C_Master.c: 178:        LCD_Write_Char(Str[i]);
  1812  1776  0823               	movf	LCD_Write_String@i,w
  1813  1777  0778               	addwf	LCD_Write_String@Str,w
  1814  1778  00A1               	movwf	??_LCD_Write_String+1
  1815  1779  0879               	movf	LCD_Write_String@Str+1,w
  1816  177A  00A0               	movwf	??_LCD_Write_String
  1817  177B  1803               	skipnc
  1818  177C  0AA0               	incf	??_LCD_Write_String,f
  1819  177D  1FA3               	btfss	LCD_Write_String@i,7
  1820  177E  2F80               	goto	u5450
  1821  177F  03A0               	decf	??_LCD_Write_String,f
  1822  1780                     u5450:
  1823  1780  1283               	bcf	3,5	;RP0=0, select bank0
  1824  1781  1303               	bcf	3,6	;RP1=0, select bank0
  1825  1782  0820               	movf	??_LCD_Write_String,w
  1826  1783  00A2               	movwf	??_LCD_Write_String+2
  1827  1784  0822               	movf	??_LCD_Write_String+2,w
  1828  1785  00FF               	movwf	btemp+1
  1829  1786  0821               	movf	??_LCD_Write_String+1,w
  1830  1787  0084               	movwf	4
  1831  1788  120A  158A  2000  160A  118A  	fcall	stringtab
  1832  178D  160A  118A  26A5  160A  118A  	fcall	_LCD_Write_Char
  1833  1792                     l3810:
  1834  1792  3001               	movlw	1
  1835  1793  1283               	bcf	3,5	;RP0=0, select bank0
  1836  1794  1303               	bcf	3,6	;RP1=0, select bank0
  1837  1795  07A3               	addwf	LCD_Write_String@i,f
  1838  1796  1803               	skipnc
  1839  1797  0AA4               	incf	LCD_Write_String@i+1,f
  1840  1798  3000               	movlw	0
  1841  1799  07A4               	addwf	LCD_Write_String@i+1,f
  1842  179A                     l3812:
  1843  179A  0823               	movf	LCD_Write_String@i,w
  1844  179B  0778               	addwf	LCD_Write_String@Str,w
  1845  179C  00A1               	movwf	??_LCD_Write_String+1
  1846  179D  0879               	movf	LCD_Write_String@Str+1,w
  1847  179E  00A0               	movwf	??_LCD_Write_String
  1848  179F  1803               	skipnc
  1849  17A0  0AA0               	incf	??_LCD_Write_String,f
  1850  17A1  1FA3               	btfss	LCD_Write_String@i,7
  1851  17A2  2FA4               	goto	u5460
  1852  17A3  03A0               	decf	??_LCD_Write_String,f
  1853  17A4                     u5460:
  1854  17A4  1283               	bcf	3,5	;RP0=0, select bank0
  1855  17A5  1303               	bcf	3,6	;RP1=0, select bank0
  1856  17A6  0820               	movf	??_LCD_Write_String,w
  1857  17A7  00A2               	movwf	??_LCD_Write_String+2
  1858  17A8  0822               	movf	??_LCD_Write_String+2,w
  1859  17A9  00FF               	movwf	btemp+1
  1860  17AA  0821               	movf	??_LCD_Write_String+1,w
  1861  17AB  0084               	movwf	4
  1862  17AC  120A  158A  2000  160A  118A  	fcall	stringtab
  1863  17B1  3A00               	xorlw	0
  1864  17B2  1D03               	skipz
  1865  17B3  2FB5               	goto	u5471
  1866  17B4  2FB6               	goto	u5470
  1867  17B5                     u5471:
  1868  17B5  2F76               	goto	l3808
  1869  17B6                     u5470:
  1870  17B6                     l286:
  1871  17B6  0008               	return
  1872  17B7                     __end_of_LCD_Write_String:
  1873                           
  1874                           	psect	text8
  1875  16A5                     __ptext8:	
  1876 ;; *************** function _LCD_Write_Char *****************
  1877 ;; Defined at:
  1878 ;;		line 168 in file "I2C_Master.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  Data            1    wreg     unsigned char 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  Data            1    7[COMMON] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         1       0       0       0       0
  1894 ;;      Temps:          1       0       0       0       0
  1895 ;;      Totals:         2       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 5
  1899 ;; This function calls:
  1900 ;;		_LCD_Write_4Bit
  1901 ;; This function is called by:
  1902 ;;		_LCD_Write_String
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _LCD_Write_Char
  1908  16A5                     _LCD_Write_Char:
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1912                           ;LCD_Write_Char@Data stored from wreg
  1913  16A5  00F7               	movwf	LCD_Write_Char@Data
  1914  16A6                     l3304:
  1915                           
  1916                           ;I2C_Master.c: 168: void LCD_Write_Char(char Data);I2C_Master.c: 169: {;I2C_Master.c: 17
      +                          0:   RS = 1;
  1917  16A6  1683               	bsf	3,5	;RP0=1, select bank1
  1918  16A7  1303               	bcf	3,6	;RP1=0, select bank1
  1919  16A8  01A6               	clrf	_RS^(0+128)
  1920  16A9  0AA6               	incf	_RS^(0+128),f
  1921  16AA                     l3306:
  1922                           
  1923                           ;I2C_Master.c: 171:   LCD_Write_4Bit(Data & 0xF0);
  1924  16AA  0877               	movf	LCD_Write_Char@Data,w
  1925  16AB  39F0               	andlw	240
  1926  16AC  160A  118A  2652  160A  118A  	fcall	_LCD_Write_4Bit
  1927                           
  1928                           ;I2C_Master.c: 172:   LCD_Write_4Bit((Data << 4) & 0xF0);
  1929  16B1  0877               	movf	LCD_Write_Char@Data,w
  1930  16B2  00F6               	movwf	??_LCD_Write_Char
  1931  16B3  3003               	movlw	3
  1932  16B4                     u4325:
  1933  16B4  1003               	clrc
  1934  16B5  0DF6               	rlf	??_LCD_Write_Char,f
  1935  16B6  3EFF               	addlw	-1
  1936  16B7  1D03               	skipz
  1937  16B8  2EB4               	goto	u4325
  1938  16B9  1003               	clrc
  1939  16BA  0D76               	rlf	??_LCD_Write_Char,w
  1940  16BB  39F0               	andlw	240
  1941  16BC  160A  118A  2652  160A  118A  	fcall	_LCD_Write_4Bit
  1942  16C1                     l280:
  1943  16C1  0008               	return
  1944  16C2                     __end_of_LCD_Write_Char:
  1945                           
  1946                           	psect	text9
  1947  084B                     __ptext9:	
  1948 ;; *************** function _LCD_Set_Cursor *****************
  1949 ;; Defined at:
  1950 ;;		line 181 in file "I2C_Master.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  ROW             1    wreg     unsigned char 
  1953 ;;  COL             1    8[COMMON] unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  ROW             1    9[COMMON] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         1       0       0       0       0
  1966 ;;      Locals:         1       0       0       0       0
  1967 ;;      Temps:          0       2       0       0       0
  1968 ;;      Totals:         2       2       0       0       0
  1969 ;;Total ram usage:        4 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 6
  1972 ;; This function calls:
  1973 ;;		_LCD_CMD
  1974 ;; This function is called by:
  1975 ;;		_LCD_Start
  1976 ;;		_LCD_Send
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           
  1981                           ;psect for function _LCD_Set_Cursor
  1982  084B                     _LCD_Set_Cursor:
  1983                           
  1984                           ;incstack = 0
  1985                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1986                           ;LCD_Set_Cursor@ROW stored from wreg
  1987  084B  00F9               	movwf	LCD_Set_Cursor@ROW
  1988  084C                     l3790:
  1989                           
  1990                           ;I2C_Master.c: 181: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_Master
      +                          .c: 182: {;I2C_Master.c: 183:   switch(ROW)
  1991  084C  286D               	goto	l3800
  1992  084D                     l3792:
  1993                           
  1994                           ;I2C_Master.c: 186:       LCD_CMD(0xC0 + COL-1);
  1995  084D  0878               	movf	LCD_Set_Cursor@COL,w
  1996  084E  3EBF               	addlw	191
  1997  084F  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  1998                           
  1999                           ;I2C_Master.c: 187:       break;
  2000  0854  2882               	goto	l295
  2001  0855                     l3794:
  2002                           
  2003                           ;I2C_Master.c: 189:       LCD_CMD(0x94 + COL-1);
  2004  0855  0878               	movf	LCD_Set_Cursor@COL,w
  2005  0856  3E93               	addlw	147
  2006  0857  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  2007                           
  2008                           ;I2C_Master.c: 190:       break;
  2009  085C  2882               	goto	l295
  2010  085D                     l3796:
  2011                           
  2012                           ;I2C_Master.c: 192:       LCD_CMD(0xD4 + COL-1);
  2013  085D  0878               	movf	LCD_Set_Cursor@COL,w
  2014  085E  3ED3               	addlw	211
  2015  085F  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  2016                           
  2017                           ;I2C_Master.c: 193:       break;
  2018  0864  2882               	goto	l295
  2019  0865                     l3798:
  2020                           
  2021                           ;I2C_Master.c: 196:       LCD_CMD(0x80 + COL-1);
  2022  0865  0878               	movf	LCD_Set_Cursor@COL,w
  2023  0866  3E7F               	addlw	127
  2024  0867  160A  118A  266C  120A  158A  	fcall	_LCD_CMD
  2025                           
  2026                           ;I2C_Master.c: 197:   }
  2027  086C  2882               	goto	l295
  2028  086D                     l3800:
  2029  086D  0879               	movf	LCD_Set_Cursor@ROW,w
  2030  086E  1283               	bcf	3,5	;RP0=0, select bank0
  2031  086F  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0870  00A0               	movwf	??_LCD_Set_Cursor
  2033  0871  01A1               	clrf	??_LCD_Set_Cursor+1
  2034                           
  2035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2036                           ; Switch size 1, requested type "simple"
  2037                           ; Number of cases is 1, Range of values is 0 to 0
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            4     3 (average)
  2041                           ; direct_byte           11     8 (fixed)
  2042                           ; jumptable            260     6 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044  0872  0821               	movf	??_LCD_Set_Cursor+1,w
  2045  0873  3A00               	xorlw	0	; case 0
  2046  0874  1903               	skipnz
  2047  0875  2877               	goto	l4062
  2048  0876  2865               	goto	l3798
  2049  0877                     l4062:
  2050                           
  2051                           ; Switch size 1, requested type "simple"
  2052                           ; Number of cases is 3, Range of values is 2 to 4
  2053                           ; switch strategies available:
  2054                           ; Name         Instructions Cycles
  2055                           ; simple_byte           10     6 (average)
  2056                           ; direct_byte           20    11 (fixed)
  2057                           ; jumptable            263     9 (fixed)
  2058                           ;	Chosen strategy is simple_byte
  2059  0877  0820               	movf	??_LCD_Set_Cursor,w
  2060  0878  3A02               	xorlw	2	; case 2
  2061  0879  1903               	skipnz
  2062  087A  284D               	goto	l3792
  2063  087B  3A01               	xorlw	1	; case 3
  2064  087C  1903               	skipnz
  2065  087D  2855               	goto	l3794
  2066  087E  3A07               	xorlw	7	; case 4
  2067  087F  1903               	skipnz
  2068  0880  285D               	goto	l3796
  2069  0881  2865               	goto	l3798
  2070  0882                     l295:
  2071  0882  0008               	return
  2072  0883                     __end_of_LCD_Set_Cursor:
  2073                           
  2074                           	psect	text10
  2075  166C                     __ptext10:	
  2076 ;; *************** function _LCD_CMD *****************
  2077 ;; Defined at:
  2078 ;;		line 161 in file "I2C_Master.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  CMD             1    wreg     unsigned char 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  CMD             1    7[COMMON] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         1       0       0       0       0
  2094 ;;      Temps:          1       0       0       0       0
  2095 ;;      Totals:         2       0       0       0       0
  2096 ;;Total ram usage:        2 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 5
  2099 ;; This function calls:
  2100 ;;		_LCD_Write_4Bit
  2101 ;; This function is called by:
  2102 ;;		_LCD_Init
  2103 ;;		_LCD_Set_Cursor
  2104 ;;		_LCD_SL
  2105 ;;		_LCD_SR
  2106 ;;		_LCD_Clear
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           
  2111                           ;psect for function _LCD_CMD
  2112  166C                     _LCD_CMD:
  2113                           
  2114                           ;incstack = 0
  2115                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2116                           ;LCD_CMD@CMD stored from wreg
  2117  166C  00F7               	movwf	LCD_CMD@CMD
  2118  166D                     l3298:
  2119                           
  2120                           ;I2C_Master.c: 161: void LCD_CMD(unsigned char CMD);I2C_Master.c: 162: {;I2C_Master.c: 1
      +                          63:   RS = 0;
  2121  166D  1683               	bsf	3,5	;RP0=1, select bank1
  2122  166E  1303               	bcf	3,6	;RP1=0, select bank1
  2123  166F  01A6               	clrf	_RS^(0+128)
  2124  1670                     l3300:
  2125                           
  2126                           ;I2C_Master.c: 164:   LCD_Write_4Bit(CMD & 0xF0);
  2127  1670  0877               	movf	LCD_CMD@CMD,w
  2128  1671  39F0               	andlw	240
  2129  1672  160A  118A  2652  160A  118A  	fcall	_LCD_Write_4Bit
  2130  1677                     l3302:
  2131                           
  2132                           ;I2C_Master.c: 165:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2133  1677  0877               	movf	LCD_CMD@CMD,w
  2134  1678  00F6               	movwf	??_LCD_CMD
  2135  1679  3003               	movlw	3
  2136  167A                     u4315:
  2137  167A  1003               	clrc
  2138  167B  0DF6               	rlf	??_LCD_CMD,f
  2139  167C  3EFF               	addlw	-1
  2140  167D  1D03               	skipz
  2141  167E  2E7A               	goto	u4315
  2142  167F  1003               	clrc
  2143  1680  0D76               	rlf	??_LCD_CMD,w
  2144  1681  39F0               	andlw	240
  2145  1682  160A  118A  2652  160A  118A  	fcall	_LCD_Write_4Bit
  2146  1687                     l277:
  2147  1687  0008               	return
  2148  1688                     __end_of_LCD_CMD:
  2149                           
  2150                           	psect	text11
  2151  1652                     __ptext11:	
  2152 ;; *************** function _LCD_Write_4Bit *****************
  2153 ;; Defined at:
  2154 ;;		line 152 in file "I2C_Master.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  Nibble          1    wreg     unsigned char 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  Nibble          1    5[COMMON] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         0       0       0       0       0
  2169 ;;      Locals:         1       0       0       0       0
  2170 ;;      Temps:          1       0       0       0       0
  2171 ;;      Totals:         2       0       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		_IO_Expander_Write
  2177 ;; This function is called by:
  2178 ;;		_LCD_CMD
  2179 ;;		_LCD_Write_Char
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _LCD_Write_4Bit
  2185  1652                     _LCD_Write_4Bit:
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  2189                           ;LCD_Write_4Bit@Nibble stored from wreg
  2190  1652  00F5               	movwf	LCD_Write_4Bit@Nibble
  2191  1653                     l3084:
  2192                           
  2193                           ;I2C_Master.c: 152: void LCD_Write_4Bit(unsigned char Nibble);I2C_Master.c: 153: {;I2C_M
      +                          aster.c: 155:   Nibble |= RS;
  2194  1653  1683               	bsf	3,5	;RP0=1, select bank1
  2195  1654  1303               	bcf	3,6	;RP1=0, select bank1
  2196  1655  0826               	movf	_RS^(0+128),w
  2197  1656  00F4               	movwf	??_LCD_Write_4Bit
  2198  1657  0874               	movf	??_LCD_Write_4Bit,w
  2199  1658  04F5               	iorwf	LCD_Write_4Bit@Nibble,f
  2200  1659                     l3086:
  2201                           
  2202                           ;I2C_Master.c: 156:   IO_Expander_Write(Nibble | 0x04);
  2203  1659  0875               	movf	LCD_Write_4Bit@Nibble,w
  2204  165A  3804               	iorlw	4
  2205  165B  160A  118A  2688  160A  118A  	fcall	_IO_Expander_Write
  2206  1660                     l3088:
  2207                           
  2208                           ;I2C_Master.c: 157:   IO_Expander_Write(Nibble & 0xFB);
  2209  1660  0875               	movf	LCD_Write_4Bit@Nibble,w
  2210  1661  39FB               	andlw	251
  2211  1662  160A  118A  2688  160A  118A  	fcall	_IO_Expander_Write
  2212                           
  2213                           ;I2C_Master.c: 158:   _delay((unsigned long)((50)*(8000000/4000000.0)));
  2214  1667  3021               	movlw	33
  2215  1668  00F4               	movwf	??_LCD_Write_4Bit
  2216  1669                     u5737:
  2217  1669  0BF4               	decfsz	??_LCD_Write_4Bit,f
  2218  166A  2E69               	goto	u5737
  2219  166B                     l274:
  2220  166B  0008               	return
  2221  166C                     __end_of_LCD_Write_4Bit:
  2222                           
  2223                           	psect	text12
  2224  1688                     __ptext12:	
  2225 ;; *************** function _IO_Expander_Write *****************
  2226 ;; Defined at:
  2227 ;;		line 144 in file "I2C_Master.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  Data            1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  Data            1    3[COMMON] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       0       0       0       0
  2242 ;;      Locals:         1       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         1       0       0       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 3
  2248 ;; This function calls:
  2249 ;;		_I2C_Master_Start
  2250 ;;		_I2C_Master_Stop
  2251 ;;		_I2C_Master_Write
  2252 ;; This function is called by:
  2253 ;;		_LCD_Init
  2254 ;;		_LCD_Write_4Bit
  2255 ;;		_Backlight
  2256 ;;		_noBacklight
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _IO_Expander_Write
  2262  1688                     _IO_Expander_Write:
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2266                           ;IO_Expander_Write@Data stored from wreg
  2267  1688  00F3               	movwf	IO_Expander_Write@Data
  2268  1689                     l3082:
  2269                           
  2270                           ;I2C_Master.c: 144: void IO_Expander_Write(unsigned char Data);I2C_Master.c: 145: {;I2C_
      +                          Master.c: 146:   I2C_Master_Start();
  2271  1689  160A  118A  25E9  160A  118A  	fcall	_I2C_Master_Start
  2272                           
  2273                           ;I2C_Master.c: 147:   I2C_Master_Write(i2c_add);
  2274  168E  1683               	bsf	3,5	;RP0=1, select bank1
  2275  168F  1303               	bcf	3,6	;RP1=0, select bank1
  2276  1690  0846               	movf	_i2c_add^(0+128),w
  2277  1691  160A  118A  2615  160A  118A  	fcall	_I2C_Master_Write
  2278                           
  2279                           ;I2C_Master.c: 148:   I2C_Master_Write(Data | BackLight_State);
  2280  1696  0873               	movf	IO_Expander_Write@Data,w
  2281  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2282  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2283  1699  0447               	iorwf	_BackLight_State^(0+128),w
  2284  169A  160A  118A  2615  160A  118A  	fcall	_I2C_Master_Write
  2285                           
  2286                           ;I2C_Master.c: 149:   I2C_Master_Stop();
  2287  169F  160A  118A  25F2  160A  118A  	fcall	_I2C_Master_Stop
  2288  16A4                     l271:
  2289  16A4  0008               	return
  2290  16A5                     __end_of_IO_Expander_Write:
  2291                           
  2292                           	psect	text13
  2293  0029                     __ptext13:	
  2294 ;; *************** function _ADC_convert *****************
  2295 ;; Defined at:
  2296 ;;		line 221 in file "Master_PIC.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  data            1    wreg     PTR unsigned char 
  2299 ;;		 -> converted02(10), 
  2300 ;;  a               4   57[BANK0 ] float 
  2301 ;;  place           2   61[BANK0 ] int 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  data            1    4[BANK1 ] PTR unsigned char 
  2304 ;;		 -> converted02(10), 
  2305 ;;  x               4    5[BANK1 ] float 
  2306 ;;  mu              2   13[BANK1 ] int 
  2307 ;;  digits          2   11[BANK1 ] int 
  2308 ;;  i               2    9[BANK1 ] int 
  2309 ;;  j               2    2[BANK1 ] int 
  2310 ;;  temp            2    0[BANK1 ] int 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       6       0       0       0
  2321 ;;      Locals:         0       0      15       0       0
  2322 ;;      Temps:          0       2       0       0       0
  2323 ;;      Totals:         0       8      15       0       0
  2324 ;;Total ram usage:       23 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; Hardware stack levels required when called: 3
  2327 ;; This function calls:
  2328 ;;		___awdiv
  2329 ;;		___fldiv
  2330 ;;		___flge
  2331 ;;		___flmul
  2332 ;;		___flsub
  2333 ;;		___fltol
  2334 ;;		___wmul
  2335 ;;		___xxtofl
  2336 ;; This function is called by:
  2337 ;;		_LCD_Send
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _ADC_convert
  2343  0029                     _ADC_convert:
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _ADC_convert: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2347                           ;ADC_convert@data stored from wreg
  2348  0029  1683               	bsf	3,5	;RP0=1, select bank1
  2349  002A  1303               	bcf	3,6	;RP1=0, select bank1
  2350  002B  00BB               	movwf	ADC_convert@data^(0+128)
  2351  002C                     l3814:
  2352                           
  2353                           ;Master_PIC.c: 221:      x=0.0;;Master_PIC.c: 222:      mu=1;;Master_PIC.c: 223:      di
      +                          gits=place;
  2354  002C  1283               	bcf	3,5	;RP0=0, select bank0
  2355  002D  1303               	bcf	3,6	;RP1=0, select bank0
  2356  002E  085C               	movf	ADC_convert@a+3,w
  2357  002F  00F5               	movwf	___fltol@f1+3
  2358  0030  085B               	movf	ADC_convert@a+2,w
  2359  0031  00F4               	movwf	___fltol@f1+2
  2360  0032  085A               	movf	ADC_convert@a+1,w
  2361  0033  00F3               	movwf	___fltol@f1+1
  2362  0034  0859               	movf	ADC_convert@a,w
  2363  0035  00F2               	movwf	___fltol@f1
  2364  0036  120A  118A  277E  120A  118A  	fcall	___fltol
  2365  003B  0873               	movf	?___fltol+1,w
  2366  003C  1683               	bsf	3,5	;RP0=1, select bank1
  2367  003D  1303               	bcf	3,6	;RP1=0, select bank1
  2368  003E  00B8               	movwf	(ADC_convert@temp+1)^(0+128)
  2369  003F  0872               	movf	?___fltol,w
  2370  0040  00B7               	movwf	ADC_convert@temp^(0+128)
  2371  0041                     l3816:
  2372  0041                     l3818:
  2373                           
  2374                           ;Master_PIC.c: 225:      {
  2375  0041  01C2               	clrf	ADC_convert@digits^(0+128)
  2376  0042  01C3               	clrf	(ADC_convert@digits+1)^(0+128)
  2377  0043                     l3820:
  2378                           
  2379                           ;Master_PIC.c: 226:          if(digits==1)mu=1;
  2380  0043  01C0               	clrf	ADC_convert@i^(0+128)
  2381  0044  01C1               	clrf	(ADC_convert@i+1)^(0+128)
  2382  0045                     l3822:
  2383  0045  3001               	movlw	1
  2384  0046  00C4               	movwf	ADC_convert@mu^(0+128)
  2385  0047  3000               	movlw	0
  2386  0048  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  2387  0049                     l3824:
  2388  0049                     l3826:
  2389                           
  2390                           ;Master_PIC.c: 228: 
  2391  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2392  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2393  004B  085C               	movf	ADC_convert@a+3,w
  2394  004C  00F5               	movwf	___flge@ff1+3
  2395  004D  085B               	movf	ADC_convert@a+2,w
  2396  004E  00F4               	movwf	___flge@ff1+2
  2397  004F  085A               	movf	ADC_convert@a+1,w
  2398  0050  00F3               	movwf	___flge@ff1+1
  2399  0051  0859               	movf	ADC_convert@a,w
  2400  0052  00F2               	movwf	___flge@ff1
  2401  0053  3000               	movlw	0
  2402  0054  00F9               	movwf	___flge@ff2+3
  2403  0055  3000               	movlw	0
  2404  0056  00F8               	movwf	___flge@ff2+2
  2405  0057  3000               	movlw	0
  2406  0058  00F7               	movwf	___flge@ff2+1
  2407  0059  3000               	movlw	0
  2408  005A  00F6               	movwf	___flge@ff2
  2409  005B  120A  158A  223B  120A  118A  	fcall	___flge
  2410  0060  1803               	btfsc	3,0
  2411  0061  2863               	goto	u5481
  2412  0062  2864               	goto	u5480
  2413  0063                     u5481:
  2414  0063  28B2               	goto	l3838
  2415  0064                     u5480:
  2416  0064                     l3828:
  2417                           
  2418                           ;Master_PIC.c: 229:          x=a/mu;;Master_PIC.c: 230:          a=a-((int)x*mu);
  2419  0064  30BF               	movlw	191
  2420  0065  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0067  00C2               	movwf	___flmul@b+3
  2423  0068  3080               	movlw	128
  2424  0069  00C1               	movwf	___flmul@b+2
  2425  006A  3000               	movlw	0
  2426  006B  00C0               	movwf	___flmul@b+1
  2427  006C  3000               	movlw	0
  2428  006D  00BF               	movwf	___flmul@b
  2429  006E  085C               	movf	ADC_convert@a+3,w
  2430  006F  00C6               	movwf	___flmul@a+3
  2431  0070  085B               	movf	ADC_convert@a+2,w
  2432  0071  00C5               	movwf	___flmul@a+2
  2433  0072  085A               	movf	ADC_convert@a+1,w
  2434  0073  00C4               	movwf	___flmul@a+1
  2435  0074  0859               	movf	ADC_convert@a,w
  2436  0075  00C3               	movwf	___flmul@a
  2437  0076  120A  118A  241D  120A  118A  	fcall	___flmul
  2438  007B  1283               	bcf	3,5	;RP0=0, select bank0
  2439  007C  1303               	bcf	3,6	;RP1=0, select bank0
  2440  007D  0842               	movf	?___flmul+3,w
  2441  007E  00DC               	movwf	ADC_convert@a+3
  2442  007F  0841               	movf	?___flmul+2,w
  2443  0080  00DB               	movwf	ADC_convert@a+2
  2444  0081  0840               	movf	?___flmul+1,w
  2445  0082  00DA               	movwf	ADC_convert@a+1
  2446  0083  083F               	movf	?___flmul,w
  2447  0084  00D9               	movwf	ADC_convert@a
  2448  0085                     l3830:
  2449                           
  2450                           ;Master_PIC.c: 231:          data[i]=0x30+((int)x);
  2451  0085  302D               	movlw	45
  2452  0086  00DF               	movwf	??_ADC_convert
  2453  0087  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0088  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0089  083B               	movf	ADC_convert@data^(0+128),w
  2456  008A  0084               	movwf	4
  2457  008B  1283               	bcf	3,5	;RP0=0, select bank0
  2458  008C  1303               	bcf	3,6	;RP1=0, select bank0
  2459  008D  085F               	movf	??_ADC_convert,w
  2460  008E  1383               	bcf	3,7	;select IRP bank0
  2461  008F  0080               	movwf	0
  2462  0090                     l3832:
  2463                           
  2464                           ;Master_PIC.c: 232:          i++;
  2465  0090  3001               	movlw	1
  2466  0091  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0092  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0093  07C0               	addwf	ADC_convert@i^(0+128),f
  2469  0094  1803               	skipnc
  2470  0095  0AC1               	incf	(ADC_convert@i+1)^(0+128),f
  2471  0096  3000               	movlw	0
  2472  0097  07C1               	addwf	(ADC_convert@i+1)^(0+128),f
  2473  0098  28B2               	goto	l3838
  2474  0099                     l3834:
  2475                           
  2476                           ;Master_PIC.c: 236: ;Master_PIC.c: 237:     data[i]='\n';
  2477  0099  300A               	movlw	10
  2478  009A  00F2               	movwf	___awdiv@divisor
  2479  009B  3000               	movlw	0
  2480  009C  00F3               	movwf	___awdiv@divisor+1
  2481  009D  0838               	movf	(ADC_convert@temp+1)^(0+128),w
  2482  009E  00F5               	movwf	___awdiv@dividend+1
  2483  009F  0837               	movf	ADC_convert@temp^(0+128),w
  2484  00A0  00F4               	movwf	___awdiv@dividend
  2485  00A1  120A  158A  20D1  120A  118A  	fcall	___awdiv
  2486  00A6  0873               	movf	?___awdiv+1,w
  2487  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2488  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2489  00A9  00B8               	movwf	(ADC_convert@temp+1)^(0+128)
  2490  00AA  0872               	movf	?___awdiv,w
  2491  00AB  00B7               	movwf	ADC_convert@temp^(0+128)
  2492  00AC                     l3836:
  2493                           
  2494                           ;Master_PIC.c: 238: }
  2495  00AC  3001               	movlw	1
  2496  00AD  07C2               	addwf	ADC_convert@digits^(0+128),f
  2497  00AE  1803               	skipnc
  2498  00AF  0AC3               	incf	(ADC_convert@digits+1)^(0+128),f
  2499  00B0  3000               	movlw	0
  2500  00B1  07C3               	addwf	(ADC_convert@digits+1)^(0+128),f
  2501  00B2                     l3838:
  2502                           
  2503                           ;Master_PIC.c: 235:      }
  2504  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  2505  00B3  1303               	bcf	3,6	;RP1=0, select bank1
  2506  00B4  0837               	movf	ADC_convert@temp^(0+128),w
  2507  00B5  0438               	iorwf	(ADC_convert@temp+1)^(0+128),w
  2508  00B6  1D03               	btfss	3,2
  2509  00B7  28B9               	goto	u5491
  2510  00B8  28BA               	goto	u5490
  2511  00B9                     u5491:
  2512  00B9  2899               	goto	l3834
  2513  00BA                     u5490:
  2514  00BA  29D6               	goto	l3862
  2515  00BB                     l3840:
  2516                           
  2517                           ;Master_PIC.c: 241: char division (char valor){;Master_PIC.c: 242:     hundreds = valor/
      +                          100;
  2518  00BB  0342               	decf	ADC_convert@digits^(0+128),w
  2519  00BC  0443               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2520  00BD  1D03               	btfss	3,2
  2521  00BE  28C0               	goto	u5501
  2522  00BF  28C1               	goto	u5500
  2523  00C0                     u5501:
  2524  00C0  28C6               	goto	l3844
  2525  00C1                     u5500:
  2526  00C1                     l3842:
  2527  00C1  3001               	movlw	1
  2528  00C2  00C4               	movwf	ADC_convert@mu^(0+128)
  2529  00C3  3000               	movlw	0
  2530  00C4  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  2531  00C5  2908               	goto	l3852
  2532  00C6                     l3844:
  2533  00C6  3002               	movlw	2
  2534  00C7  00B9               	movwf	ADC_convert@j^(0+128)
  2535  00C8  3000               	movlw	0
  2536  00C9  00BA               	movwf	(ADC_convert@j^(0+128)+1)
  2537  00CA  28F2               	goto	l3850
  2538  00CB                     l3846:
  2539  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  2540  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  2541  00CD  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  2542  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2543  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2544  00D0  00A6               	movwf	___wmul@multiplier+1
  2545  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  2546  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  2547  00D3  0844               	movf	ADC_convert@mu^(0+128),w
  2548  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  2549  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  2550  00D6  00A5               	movwf	___wmul@multiplier
  2551  00D7  300A               	movlw	10
  2552  00D8  00A7               	movwf	___wmul@multiplicand
  2553  00D9  3000               	movlw	0
  2554  00DA  00A8               	movwf	___wmul@multiplicand+1
  2555  00DB  160A  118A  2721  120A  118A  	fcall	___wmul
  2556  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2557  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2558  00E2  0826               	movf	?___wmul+1,w
  2559  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2560  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  2561  00E5  00C5               	movwf	(ADC_convert@mu+1)^(0+128)
  2562  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2563  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2564  00E8  0825               	movf	?___wmul,w
  2565  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  2566  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  2567  00EB  00C4               	movwf	ADC_convert@mu^(0+128)
  2568  00EC                     l3848:
  2569  00EC  3001               	movlw	1
  2570  00ED  07B9               	addwf	ADC_convert@j^(0+128),f
  2571  00EE  1803               	skipnc
  2572  00EF  0ABA               	incf	(ADC_convert@j+1)^(0+128),f
  2573  00F0  3000               	movlw	0
  2574  00F1  07BA               	addwf	(ADC_convert@j+1)^(0+128),f
  2575  00F2                     l3850:
  2576  00F2  0843               	movf	(ADC_convert@digits+1)^(0+128),w
  2577  00F3  3A80               	xorlw	128
  2578  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  2579  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  2580  00F6  00DF               	movwf	??_ADC_convert
  2581  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2582  00F8  1303               	bcf	3,6	;RP1=0, select bank1
  2583  00F9  083A               	movf	(ADC_convert@j+1)^(0+128),w
  2584  00FA  3A80               	xorlw	128
  2585  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2586  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2587  00FD  025F               	subwf	??_ADC_convert,w
  2588  00FE  1D03               	skipz
  2589  00FF  2904               	goto	u5515
  2590  0100  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0101  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0102  0839               	movf	ADC_convert@j^(0+128),w
  2593  0103  0242               	subwf	ADC_convert@digits^(0+128),w
  2594  0104                     u5515:
  2595  0104  1803               	skipnc
  2596  0105  2907               	goto	u5511
  2597  0106  2908               	goto	u5510
  2598  0107                     u5511:
  2599  0107  28CB               	goto	l3846
  2600  0108                     u5510:
  2601  0108                     l3852:
  2602                           
  2603                           ;Master_PIC.c: 245:     units = residuo%10;
  2604  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2606  010A  0844               	movf	ADC_convert@mu^(0+128),w
  2607  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2608  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2609  010D  00A9               	movwf	___xxtofl@val
  2610  010E  1683               	bsf	3,5	;RP0=1, select bank1
  2611  010F  1303               	bcf	3,6	;RP1=0, select bank1
  2612  0110  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  2613  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0113  00AA               	movwf	___xxtofl@val+1
  2616  0114  3000               	movlw	0
  2617  0115  1BAA               	btfsc	___xxtofl@val+1,7
  2618  0116  30FF               	movlw	255
  2619  0117  00AB               	movwf	___xxtofl@val+2
  2620  0118  00AC               	movwf	___xxtofl@val+3
  2621  0119  3001               	movlw	1
  2622  011A  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2623  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2624  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2625  0121  082C               	movf	?___xxtofl+3,w
  2626  0122  00BA               	movwf	___fldiv@a+3
  2627  0123  082B               	movf	?___xxtofl+2,w
  2628  0124  00B9               	movwf	___fldiv@a+2
  2629  0125  082A               	movf	?___xxtofl+1,w
  2630  0126  00B8               	movwf	___fldiv@a+1
  2631  0127  0829               	movf	?___xxtofl,w
  2632  0128  00B7               	movwf	___fldiv@a
  2633  0129  085C               	movf	ADC_convert@a+3,w
  2634  012A  00BE               	movwf	___fldiv@b+3
  2635  012B  085B               	movf	ADC_convert@a+2,w
  2636  012C  00BD               	movwf	___fldiv@b+2
  2637  012D  085A               	movf	ADC_convert@a+1,w
  2638  012E  00BC               	movwf	___fldiv@b+1
  2639  012F  0859               	movf	ADC_convert@a,w
  2640  0130  00BB               	movwf	___fldiv@b
  2641  0131  120A  158A  239B  120A  118A  	fcall	___fldiv
  2642  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0138  083A               	movf	?___fldiv+3,w
  2645  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2646  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2647  013B  00BF               	movwf	(ADC_convert@x+3)^(0+128)
  2648  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2649  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2650  013E  0839               	movf	?___fldiv+2,w
  2651  013F  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0140  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0141  00BE               	movwf	(ADC_convert@x+2)^(0+128)
  2654  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0144  0838               	movf	?___fldiv+1,w
  2657  0145  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0146  1303               	bcf	3,6	;RP1=0, select bank1
  2659  0147  00BD               	movwf	(ADC_convert@x+1)^(0+128)
  2660  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0149  1303               	bcf	3,6	;RP1=0, select bank0
  2662  014A  0837               	movf	?___fldiv,w
  2663  014B  1683               	bsf	3,5	;RP0=1, select bank1
  2664  014C  1303               	bcf	3,6	;RP1=0, select bank1
  2665  014D  00BC               	movwf	ADC_convert@x^(0+128)
  2666                           
  2667                           ;Master_PIC.c: 246: 
  2668  014E  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  2669  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0151  00A8               	movwf	___wmul@multiplicand+1
  2672  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0153  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0154  0844               	movf	ADC_convert@mu^(0+128),w
  2675  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0156  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0157  00A7               	movwf	___wmul@multiplicand
  2678  0158  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0159  1303               	bcf	3,6	;RP1=0, select bank1
  2680  015A  083F               	movf	(ADC_convert@x+3)^(0+128),w
  2681  015B  00F5               	movwf	___fltol@f1+3
  2682  015C  083E               	movf	(ADC_convert@x+2)^(0+128),w
  2683  015D  00F4               	movwf	___fltol@f1+2
  2684  015E  083D               	movf	(ADC_convert@x+1)^(0+128),w
  2685  015F  00F3               	movwf	___fltol@f1+1
  2686  0160  083C               	movf	ADC_convert@x^(0+128),w
  2687  0161  00F2               	movwf	___fltol@f1
  2688  0162  120A  118A  277E  120A  118A  	fcall	___fltol
  2689  0167  0873               	movf	?___fltol+1,w
  2690  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2692  016A  00A6               	movwf	___wmul@multiplier+1
  2693  016B  0872               	movf	?___fltol,w
  2694  016C  00A5               	movwf	___wmul@multiplier
  2695  016D  160A  118A  2721  120A  118A  	fcall	___wmul
  2696  0172  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0173  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0174  0825               	movf	?___wmul,w
  2699  0175  00A9               	movwf	___xxtofl@val
  2700  0176  0826               	movf	?___wmul+1,w
  2701  0177  00AA               	movwf	___xxtofl@val+1
  2702  0178  3000               	movlw	0
  2703  0179  1BAA               	btfsc	___xxtofl@val+1,7
  2704  017A  30FF               	movlw	255
  2705  017B  00AB               	movwf	___xxtofl@val+2
  2706  017C  00AC               	movwf	___xxtofl@val+3
  2707  017D  3001               	movlw	1
  2708  017E  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2709  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2710  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2711  0185  082C               	movf	?___xxtofl+3,w
  2712  0186  00BA               	movwf	___flsub@a+3
  2713  0187  082B               	movf	?___xxtofl+2,w
  2714  0188  00B9               	movwf	___flsub@a+2
  2715  0189  082A               	movf	?___xxtofl+1,w
  2716  018A  00B8               	movwf	___flsub@a+1
  2717  018B  0829               	movf	?___xxtofl,w
  2718  018C  00B7               	movwf	___flsub@a
  2719  018D  085C               	movf	ADC_convert@a+3,w
  2720  018E  00BE               	movwf	___flsub@b+3
  2721  018F  085B               	movf	ADC_convert@a+2,w
  2722  0190  00BD               	movwf	___flsub@b+2
  2723  0191  085A               	movf	ADC_convert@a+1,w
  2724  0192  00BC               	movwf	___flsub@b+1
  2725  0193  0859               	movf	ADC_convert@a,w
  2726  0194  00BB               	movwf	___flsub@b
  2727  0195  160A  118A  26FD  120A  118A  	fcall	___flsub
  2728  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2729  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2730  019C  083A               	movf	?___flsub+3,w
  2731  019D  00DC               	movwf	ADC_convert@a+3
  2732  019E  0839               	movf	?___flsub+2,w
  2733  019F  00DB               	movwf	ADC_convert@a+2
  2734  01A0  0838               	movf	?___flsub+1,w
  2735  01A1  00DA               	movwf	ADC_convert@a+1
  2736  01A2  0837               	movf	?___flsub,w
  2737  01A3  00D9               	movwf	ADC_convert@a
  2738  01A4                     l3854:
  2739                           
  2740                           ;Master_PIC.c: 247:     hundreds = hundreds + 48;
  2741  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2742  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  2743  01A6  083F               	movf	(ADC_convert@x+3)^(0+128),w
  2744  01A7  00F5               	movwf	___fltol@f1+3
  2745  01A8  083E               	movf	(ADC_convert@x+2)^(0+128),w
  2746  01A9  00F4               	movwf	___fltol@f1+2
  2747  01AA  083D               	movf	(ADC_convert@x+1)^(0+128),w
  2748  01AB  00F3               	movwf	___fltol@f1+1
  2749  01AC  083C               	movf	ADC_convert@x^(0+128),w
  2750  01AD  00F2               	movwf	___fltol@f1
  2751  01AE  120A  118A  277E  120A  118A  	fcall	___fltol
  2752  01B3  0872               	movf	?___fltol,w
  2753  01B4  3E30               	addlw	48
  2754  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2755  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  2756  01B7  00DF               	movwf	??_ADC_convert
  2757  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2758  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2759  01BA  0840               	movf	ADC_convert@i^(0+128),w
  2760  01BB  073B               	addwf	ADC_convert@data^(0+128),w
  2761  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2762  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2763  01BE  00E0               	movwf	??_ADC_convert+1
  2764  01BF  0860               	movf	??_ADC_convert+1,w
  2765  01C0  0084               	movwf	4
  2766  01C1  085F               	movf	??_ADC_convert,w
  2767  01C2  1383               	bcf	3,7	;select IRP bank0
  2768  01C3  0080               	movwf	0
  2769  01C4                     l3856:
  2770                           
  2771                           ;Master_PIC.c: 248:     tens = tens + 48;
  2772  01C4  3001               	movlw	1
  2773  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2774  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  2775  01C7  07C0               	addwf	ADC_convert@i^(0+128),f
  2776  01C8  1803               	skipnc
  2777  01C9  0AC1               	incf	(ADC_convert@i+1)^(0+128),f
  2778  01CA  3000               	movlw	0
  2779  01CB  07C1               	addwf	(ADC_convert@i+1)^(0+128),f
  2780  01CC                     l3858:
  2781                           
  2782                           ;Master_PIC.c: 249:     units = units + 48;
  2783  01CC  30FF               	movlw	255
  2784  01CD  07C2               	addwf	ADC_convert@digits^(0+128),f
  2785  01CE  1803               	skipnc
  2786  01CF  0AC3               	incf	(ADC_convert@digits+1)^(0+128),f
  2787  01D0  30FF               	movlw	255
  2788  01D1  07C3               	addwf	(ADC_convert@digits+1)^(0+128),f
  2789  01D2                     l3860:
  2790                           
  2791                           ;Master_PIC.c: 250: }
  2792  01D2  3001               	movlw	1
  2793  01D3  00C4               	movwf	ADC_convert@mu^(0+128)
  2794  01D4  3000               	movlw	0
  2795  01D5  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  2796  01D6                     l3862:
  2797                           
  2798                           ;Master_PIC.c: 240: 
  2799  01D6  0842               	movf	ADC_convert@digits^(0+128),w
  2800  01D7  0443               	iorwf	(ADC_convert@digits+1)^(0+128),w
  2801  01D8  1D03               	btfss	3,2
  2802  01D9  29DB               	goto	u5521
  2803  01DA  29DC               	goto	u5520
  2804  01DB                     u5521:
  2805  01DB  28BB               	goto	l3840
  2806  01DC                     u5520:
  2807  01DC                     l3864:
  2808                           
  2809                           ;Master_PIC.c: 253: int concat(int a, int b)
  2810  01DC  302E               	movlw	46
  2811  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2812  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2813  01DF  00DF               	movwf	??_ADC_convert
  2814  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2815  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2816  01E2  0840               	movf	ADC_convert@i^(0+128),w
  2817  01E3  073B               	addwf	ADC_convert@data^(0+128),w
  2818  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2819  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2820  01E6  00E0               	movwf	??_ADC_convert+1
  2821  01E7  0860               	movf	??_ADC_convert+1,w
  2822  01E8  0084               	movwf	4
  2823  01E9  085F               	movf	??_ADC_convert,w
  2824  01EA  1383               	bcf	3,7	;select IRP bank0
  2825  01EB  0080               	movwf	0
  2826  01EC                     l3866:
  2827                           
  2828                           ;Master_PIC.c: 254: {
  2829  01EC  3001               	movlw	1
  2830  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2831  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2832  01EF  07C0               	addwf	ADC_convert@i^(0+128),f
  2833  01F0  1803               	skipnc
  2834  01F1  0AC1               	incf	(ADC_convert@i+1)^(0+128),f
  2835  01F2  3000               	movlw	0
  2836  01F3  07C1               	addwf	(ADC_convert@i+1)^(0+128),f
  2837  01F4                     l3868:
  2838  01F4                     l3870:
  2839                           
  2840                           ;Master_PIC.c: 256:     char s1[20];
  2841  01F4  3001               	movlw	1
  2842  01F5  00B9               	movwf	ADC_convert@j^(0+128)
  2843  01F6  3000               	movlw	0
  2844  01F7  00BA               	movwf	(ADC_convert@j^(0+128)+1)
  2845  01F8  2A20               	goto	l3876
  2846  01F9                     l3872:
  2847  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2848  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2849  01FB  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  2850  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2851  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2852  01FE  00A6               	movwf	___wmul@multiplier+1
  2853  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2854  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2855  0201  0844               	movf	ADC_convert@mu^(0+128),w
  2856  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0204  00A5               	movwf	___wmul@multiplier
  2859  0205  300A               	movlw	10
  2860  0206  00A7               	movwf	___wmul@multiplicand
  2861  0207  3000               	movlw	0
  2862  0208  00A8               	movwf	___wmul@multiplicand+1
  2863  0209  160A  118A  2721  120A  118A  	fcall	___wmul
  2864  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2865  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0210  0826               	movf	?___wmul+1,w
  2867  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2868  0212  1303               	bcf	3,6	;RP1=0, select bank1
  2869  0213  00C5               	movwf	(ADC_convert@mu+1)^(0+128)
  2870  0214  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0215  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0216  0825               	movf	?___wmul,w
  2873  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0218  1303               	bcf	3,6	;RP1=0, select bank1
  2875  0219  00C4               	movwf	ADC_convert@mu^(0+128)
  2876  021A                     l3874:
  2877  021A  3001               	movlw	1
  2878  021B  07B9               	addwf	ADC_convert@j^(0+128),f
  2879  021C  1803               	skipnc
  2880  021D  0ABA               	incf	(ADC_convert@j+1)^(0+128),f
  2881  021E  3000               	movlw	0
  2882  021F  07BA               	addwf	(ADC_convert@j+1)^(0+128),f
  2883  0220                     l3876:
  2884  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0222  085E               	movf	ADC_convert@place+1,w
  2887  0223  3A80               	xorlw	128
  2888  0224  00DF               	movwf	??_ADC_convert
  2889  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2891  0227  083A               	movf	(ADC_convert@j+1)^(0+128),w
  2892  0228  3A80               	xorlw	128
  2893  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2894  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2895  022B  025F               	subwf	??_ADC_convert,w
  2896  022C  1D03               	skipz
  2897  022D  2A34               	goto	u5535
  2898  022E  1683               	bsf	3,5	;RP0=1, select bank1
  2899  022F  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0230  0839               	movf	ADC_convert@j^(0+128),w
  2901  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0233  025D               	subwf	ADC_convert@place,w
  2904  0234                     u5535:
  2905  0234  1803               	skipnc
  2906  0235  2A37               	goto	u5531
  2907  0236  2A38               	goto	u5530
  2908  0237                     u5531:
  2909  0237  29F9               	goto	l3872
  2910  0238                     u5530:
  2911  0238                     l3878:
  2912                           
  2913                           ;Master_PIC.c: 257:     char s2[20];
  2914  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2916  023A  0844               	movf	ADC_convert@mu^(0+128),w
  2917  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2918  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2919  023D  00A9               	movwf	___xxtofl@val
  2920  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2921  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2922  0240  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  2923  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0243  00AA               	movwf	___xxtofl@val+1
  2926  0244  3000               	movlw	0
  2927  0245  1BAA               	btfsc	___xxtofl@val+1,7
  2928  0246  30FF               	movlw	255
  2929  0247  00AB               	movwf	___xxtofl@val+2
  2930  0248  00AC               	movwf	___xxtofl@val+3
  2931  0249  3001               	movlw	1
  2932  024A  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2933  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0251  082C               	movf	?___xxtofl+3,w
  2936  0252  00C2               	movwf	___flmul@b+3
  2937  0253  082B               	movf	?___xxtofl+2,w
  2938  0254  00C1               	movwf	___flmul@b+2
  2939  0255  082A               	movf	?___xxtofl+1,w
  2940  0256  00C0               	movwf	___flmul@b+1
  2941  0257  0829               	movf	?___xxtofl,w
  2942  0258  00BF               	movwf	___flmul@b
  2943  0259  085C               	movf	ADC_convert@a+3,w
  2944  025A  00F5               	movwf	___fltol@f1+3
  2945  025B  085B               	movf	ADC_convert@a+2,w
  2946  025C  00F4               	movwf	___fltol@f1+2
  2947  025D  085A               	movf	ADC_convert@a+1,w
  2948  025E  00F3               	movwf	___fltol@f1+1
  2949  025F  0859               	movf	ADC_convert@a,w
  2950  0260  00F2               	movwf	___fltol@f1
  2951  0261  120A  118A  277E  120A  118A  	fcall	___fltol
  2952  0266  0872               	movf	?___fltol,w
  2953  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2954  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0269  00A9               	movwf	___xxtofl@val
  2956  026A  0873               	movf	?___fltol+1,w
  2957  026B  00AA               	movwf	___xxtofl@val+1
  2958  026C  3000               	movlw	0
  2959  026D  1BAA               	btfsc	___xxtofl@val+1,7
  2960  026E  30FF               	movlw	255
  2961  026F  00AB               	movwf	___xxtofl@val+2
  2962  0270  00AC               	movwf	___xxtofl@val+3
  2963  0271  3001               	movlw	1
  2964  0272  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  2965  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0279  082C               	movf	?___xxtofl+3,w
  2968  027A  00BA               	movwf	___flsub@a+3
  2969  027B  082B               	movf	?___xxtofl+2,w
  2970  027C  00B9               	movwf	___flsub@a+2
  2971  027D  082A               	movf	?___xxtofl+1,w
  2972  027E  00B8               	movwf	___flsub@a+1
  2973  027F  0829               	movf	?___xxtofl,w
  2974  0280  00B7               	movwf	___flsub@a
  2975  0281  085C               	movf	ADC_convert@a+3,w
  2976  0282  00BE               	movwf	___flsub@b+3
  2977  0283  085B               	movf	ADC_convert@a+2,w
  2978  0284  00BD               	movwf	___flsub@b+2
  2979  0285  085A               	movf	ADC_convert@a+1,w
  2980  0286  00BC               	movwf	___flsub@b+1
  2981  0287  0859               	movf	ADC_convert@a,w
  2982  0288  00BB               	movwf	___flsub@b
  2983  0289  160A  118A  26FD  120A  118A  	fcall	___flsub
  2984  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2985  028F  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0290  083A               	movf	?___flsub+3,w
  2987  0291  00C6               	movwf	___flmul@a+3
  2988  0292  0839               	movf	?___flsub+2,w
  2989  0293  00C5               	movwf	___flmul@a+2
  2990  0294  0838               	movf	?___flsub+1,w
  2991  0295  00C4               	movwf	___flmul@a+1
  2992  0296  0837               	movf	?___flsub,w
  2993  0297  00C3               	movwf	___flmul@a
  2994  0298  120A  118A  241D  120A  118A  	fcall	___flmul
  2995  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2996  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2997  029F  0842               	movf	?___flmul+3,w
  2998  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  2999  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  3000  02A2  00BF               	movwf	(ADC_convert@x+3)^(0+128)
  3001  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  3002  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  3003  02A5  0841               	movf	?___flmul+2,w
  3004  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  3005  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  3006  02A8  00BE               	movwf	(ADC_convert@x+2)^(0+128)
  3007  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3008  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3009  02AB  0840               	movf	?___flmul+1,w
  3010  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3011  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3012  02AE  00BD               	movwf	(ADC_convert@x+1)^(0+128)
  3013  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3014  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3015  02B1  083F               	movf	?___flmul,w
  3016  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  3017  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  3018  02B4  00BC               	movwf	ADC_convert@x^(0+128)
  3019  02B5                     l3880:
  3020                           
  3021                           ;Master_PIC.c: 258: 
  3022  02B5  083F               	movf	(ADC_convert@x+3)^(0+128),w
  3023  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3024  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3025  02B8  00DC               	movwf	ADC_convert@a+3
  3026  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  3027  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  3028  02BB  083E               	movf	(ADC_convert@x+2)^(0+128),w
  3029  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3030  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3031  02BE  00DB               	movwf	ADC_convert@a+2
  3032  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  3033  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  3034  02C1  083D               	movf	(ADC_convert@x+1)^(0+128),w
  3035  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3036  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3037  02C4  00DA               	movwf	ADC_convert@a+1
  3038  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  3039  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  3040  02C7  083C               	movf	ADC_convert@x^(0+128),w
  3041  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  3042  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  3043  02CA  00D9               	movwf	ADC_convert@a
  3044  02CB                     l3882:
  3045  02CB  085C               	movf	ADC_convert@a+3,w
  3046  02CC  00F5               	movwf	___fltol@f1+3
  3047  02CD  085B               	movf	ADC_convert@a+2,w
  3048  02CE  00F4               	movwf	___fltol@f1+2
  3049  02CF  085A               	movf	ADC_convert@a+1,w
  3050  02D0  00F3               	movwf	___fltol@f1+1
  3051  02D1  0859               	movf	ADC_convert@a,w
  3052  02D2  00F2               	movwf	___fltol@f1
  3053  02D3  120A  118A  277E  120A  118A  	fcall	___fltol
  3054  02D8                     l3884:
  3055  02D8                     l3886:
  3056                           
  3057                           ;Master_PIC.c: 261:     sprintf(s1, "%d", a);
  3058  02D8  3001               	movlw	1
  3059  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  3060  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  3061  02DB  00C4               	movwf	ADC_convert@mu^(0+128)
  3062  02DC  3000               	movlw	0
  3063  02DD  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  3064  02DE                     l3888:
  3065                           
  3066                           ;Master_PIC.c: 262:     sprintf(s2, "%d", b);
  3067  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3068  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3069  02E0  085E               	movf	ADC_convert@place+1,w
  3070  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  3071  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  3072  02E3  00C3               	movwf	(ADC_convert@digits+1)^(0+128)
  3073  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  3074  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  3075  02E6  085D               	movf	ADC_convert@place,w
  3076  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  3077  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  3078  02E9  00C2               	movwf	ADC_convert@digits^(0+128)
  3079                           
  3080                           ;Master_PIC.c: 263: 
  3081  02EA  2C06               	goto	l3912
  3082  02EB                     l3890:
  3083                           
  3084                           ;Master_PIC.c: 264: ;Master_PIC.c: 265: 
  3085  02EB  0342               	decf	ADC_convert@digits^(0+128),w
  3086  02EC  0443               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3087  02ED  1D03               	btfss	3,2
  3088  02EE  2AF0               	goto	u5541
  3089  02EF  2AF1               	goto	u5540
  3090  02F0                     u5541:
  3091  02F0  2AF6               	goto	l3894
  3092  02F1                     u5540:
  3093  02F1                     l3892:
  3094  02F1  3001               	movlw	1
  3095  02F2  00C4               	movwf	ADC_convert@mu^(0+128)
  3096  02F3  3000               	movlw	0
  3097  02F4  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  3098  02F5  2B38               	goto	l3902
  3099  02F6                     l3894:
  3100  02F6  3002               	movlw	2
  3101  02F7  00B9               	movwf	ADC_convert@j^(0+128)
  3102  02F8  3000               	movlw	0
  3103  02F9  00BA               	movwf	(ADC_convert@j^(0+128)+1)
  3104  02FA  2B22               	goto	l3900
  3105  02FB                     l3896:
  3106  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  3107  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  3108  02FD  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  3109  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0300  00A6               	movwf	___wmul@multiplier+1
  3112  0301  1683               	bsf	3,5	;RP0=1, select bank1
  3113  0302  1303               	bcf	3,6	;RP1=0, select bank1
  3114  0303  0844               	movf	ADC_convert@mu^(0+128),w
  3115  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3116  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3117  0306  00A5               	movwf	___wmul@multiplier
  3118  0307  300A               	movlw	10
  3119  0308  00A7               	movwf	___wmul@multiplicand
  3120  0309  3000               	movlw	0
  3121  030A  00A8               	movwf	___wmul@multiplicand+1
  3122  030B  160A  118A  2721  120A  118A  	fcall	___wmul
  3123  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0312  0826               	movf	?___wmul+1,w
  3126  0313  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0314  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0315  00C5               	movwf	(ADC_convert@mu+1)^(0+128)
  3129  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0318  0825               	movf	?___wmul,w
  3132  0319  1683               	bsf	3,5	;RP0=1, select bank1
  3133  031A  1303               	bcf	3,6	;RP1=0, select bank1
  3134  031B  00C4               	movwf	ADC_convert@mu^(0+128)
  3135  031C                     l3898:
  3136  031C  3001               	movlw	1
  3137  031D  07B9               	addwf	ADC_convert@j^(0+128),f
  3138  031E  1803               	skipnc
  3139  031F  0ABA               	incf	(ADC_convert@j+1)^(0+128),f
  3140  0320  3000               	movlw	0
  3141  0321  07BA               	addwf	(ADC_convert@j+1)^(0+128),f
  3142  0322                     l3900:
  3143  0322  0843               	movf	(ADC_convert@digits+1)^(0+128),w
  3144  0323  3A80               	xorlw	128
  3145  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3146  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3147  0326  00DF               	movwf	??_ADC_convert
  3148  0327  1683               	bsf	3,5	;RP0=1, select bank1
  3149  0328  1303               	bcf	3,6	;RP1=0, select bank1
  3150  0329  083A               	movf	(ADC_convert@j+1)^(0+128),w
  3151  032A  3A80               	xorlw	128
  3152  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3153  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3154  032D  025F               	subwf	??_ADC_convert,w
  3155  032E  1D03               	skipz
  3156  032F  2B34               	goto	u5555
  3157  0330  1683               	bsf	3,5	;RP0=1, select bank1
  3158  0331  1303               	bcf	3,6	;RP1=0, select bank1
  3159  0332  0839               	movf	ADC_convert@j^(0+128),w
  3160  0333  0242               	subwf	ADC_convert@digits^(0+128),w
  3161  0334                     u5555:
  3162  0334  1803               	skipnc
  3163  0335  2B37               	goto	u5551
  3164  0336  2B38               	goto	u5550
  3165  0337                     u5551:
  3166  0337  2AFB               	goto	l3896
  3167  0338                     u5550:
  3168  0338                     l3902:
  3169                           
  3170                           ;Master_PIC.c: 268: 
  3171  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3172  0339  1303               	bcf	3,6	;RP1=0, select bank1
  3173  033A  0844               	movf	ADC_convert@mu^(0+128),w
  3174  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3175  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3176  033D  00A9               	movwf	___xxtofl@val
  3177  033E  1683               	bsf	3,5	;RP0=1, select bank1
  3178  033F  1303               	bcf	3,6	;RP1=0, select bank1
  3179  0340  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  3180  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3181  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3182  0343  00AA               	movwf	___xxtofl@val+1
  3183  0344  3000               	movlw	0
  3184  0345  1BAA               	btfsc	___xxtofl@val+1,7
  3185  0346  30FF               	movlw	255
  3186  0347  00AB               	movwf	___xxtofl@val+2
  3187  0348  00AC               	movwf	___xxtofl@val+3
  3188  0349  3001               	movlw	1
  3189  034A  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  3190  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0351  082C               	movf	?___xxtofl+3,w
  3193  0352  00BA               	movwf	___fldiv@a+3
  3194  0353  082B               	movf	?___xxtofl+2,w
  3195  0354  00B9               	movwf	___fldiv@a+2
  3196  0355  082A               	movf	?___xxtofl+1,w
  3197  0356  00B8               	movwf	___fldiv@a+1
  3198  0357  0829               	movf	?___xxtofl,w
  3199  0358  00B7               	movwf	___fldiv@a
  3200  0359  085C               	movf	ADC_convert@a+3,w
  3201  035A  00BE               	movwf	___fldiv@b+3
  3202  035B  085B               	movf	ADC_convert@a+2,w
  3203  035C  00BD               	movwf	___fldiv@b+2
  3204  035D  085A               	movf	ADC_convert@a+1,w
  3205  035E  00BC               	movwf	___fldiv@b+1
  3206  035F  0859               	movf	ADC_convert@a,w
  3207  0360  00BB               	movwf	___fldiv@b
  3208  0361  120A  158A  239B  120A  118A  	fcall	___fldiv
  3209  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0368  083A               	movf	?___fldiv+3,w
  3212  0369  1683               	bsf	3,5	;RP0=1, select bank1
  3213  036A  1303               	bcf	3,6	;RP1=0, select bank1
  3214  036B  00BF               	movwf	(ADC_convert@x+3)^(0+128)
  3215  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3216  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3217  036E  0839               	movf	?___fldiv+2,w
  3218  036F  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0370  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0371  00BE               	movwf	(ADC_convert@x+2)^(0+128)
  3221  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0374  0838               	movf	?___fldiv+1,w
  3224  0375  1683               	bsf	3,5	;RP0=1, select bank1
  3225  0376  1303               	bcf	3,6	;RP1=0, select bank1
  3226  0377  00BD               	movwf	(ADC_convert@x+1)^(0+128)
  3227  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3228  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3229  037A  0837               	movf	?___fldiv,w
  3230  037B  1683               	bsf	3,5	;RP0=1, select bank1
  3231  037C  1303               	bcf	3,6	;RP1=0, select bank1
  3232  037D  00BC               	movwf	ADC_convert@x^(0+128)
  3233                           
  3234                           ;Master_PIC.c: 269: 
  3235  037E  0845               	movf	(ADC_convert@mu+1)^(0+128),w
  3236  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0381  00A8               	movwf	___wmul@multiplicand+1
  3239  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3240  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3241  0384  0844               	movf	ADC_convert@mu^(0+128),w
  3242  0385  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0386  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0387  00A7               	movwf	___wmul@multiplicand
  3245  0388  1683               	bsf	3,5	;RP0=1, select bank1
  3246  0389  1303               	bcf	3,6	;RP1=0, select bank1
  3247  038A  083F               	movf	(ADC_convert@x+3)^(0+128),w
  3248  038B  00F5               	movwf	___fltol@f1+3
  3249  038C  083E               	movf	(ADC_convert@x+2)^(0+128),w
  3250  038D  00F4               	movwf	___fltol@f1+2
  3251  038E  083D               	movf	(ADC_convert@x+1)^(0+128),w
  3252  038F  00F3               	movwf	___fltol@f1+1
  3253  0390  083C               	movf	ADC_convert@x^(0+128),w
  3254  0391  00F2               	movwf	___fltol@f1
  3255  0392  120A  118A  277E  120A  118A  	fcall	___fltol
  3256  0397  0873               	movf	?___fltol+1,w
  3257  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3259  039A  00A6               	movwf	___wmul@multiplier+1
  3260  039B  0872               	movf	?___fltol,w
  3261  039C  00A5               	movwf	___wmul@multiplier
  3262  039D  160A  118A  2721  120A  118A  	fcall	___wmul
  3263  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3264  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3265  03A4  0825               	movf	?___wmul,w
  3266  03A5  00A9               	movwf	___xxtofl@val
  3267  03A6  0826               	movf	?___wmul+1,w
  3268  03A7  00AA               	movwf	___xxtofl@val+1
  3269  03A8  3000               	movlw	0
  3270  03A9  1BAA               	btfsc	___xxtofl@val+1,7
  3271  03AA  30FF               	movlw	255
  3272  03AB  00AB               	movwf	___xxtofl@val+2
  3273  03AC  00AC               	movwf	___xxtofl@val+3
  3274  03AD  3001               	movlw	1
  3275  03AE  120A  158A  22DF  120A  118A  	fcall	___xxtofl
  3276  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3277  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3278  03B5  082C               	movf	?___xxtofl+3,w
  3279  03B6  00BA               	movwf	___flsub@a+3
  3280  03B7  082B               	movf	?___xxtofl+2,w
  3281  03B8  00B9               	movwf	___flsub@a+2
  3282  03B9  082A               	movf	?___xxtofl+1,w
  3283  03BA  00B8               	movwf	___flsub@a+1
  3284  03BB  0829               	movf	?___xxtofl,w
  3285  03BC  00B7               	movwf	___flsub@a
  3286  03BD  085C               	movf	ADC_convert@a+3,w
  3287  03BE  00BE               	movwf	___flsub@b+3
  3288  03BF  085B               	movf	ADC_convert@a+2,w
  3289  03C0  00BD               	movwf	___flsub@b+2
  3290  03C1  085A               	movf	ADC_convert@a+1,w
  3291  03C2  00BC               	movwf	___flsub@b+1
  3292  03C3  0859               	movf	ADC_convert@a,w
  3293  03C4  00BB               	movwf	___flsub@b
  3294  03C5  160A  118A  26FD  120A  118A  	fcall	___flsub
  3295  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3296  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3297  03CC  083A               	movf	?___flsub+3,w
  3298  03CD  00DC               	movwf	ADC_convert@a+3
  3299  03CE  0839               	movf	?___flsub+2,w
  3300  03CF  00DB               	movwf	ADC_convert@a+2
  3301  03D0  0838               	movf	?___flsub+1,w
  3302  03D1  00DA               	movwf	ADC_convert@a+1
  3303  03D2  0837               	movf	?___flsub,w
  3304  03D3  00D9               	movwf	ADC_convert@a
  3305  03D4                     l3904:
  3306                           
  3307                           ;Master_PIC.c: 270:     int c = atoi(s1);
  3308  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3309  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3310  03D6  083F               	movf	(ADC_convert@x+3)^(0+128),w
  3311  03D7  00F5               	movwf	___fltol@f1+3
  3312  03D8  083E               	movf	(ADC_convert@x+2)^(0+128),w
  3313  03D9  00F4               	movwf	___fltol@f1+2
  3314  03DA  083D               	movf	(ADC_convert@x+1)^(0+128),w
  3315  03DB  00F3               	movwf	___fltol@f1+1
  3316  03DC  083C               	movf	ADC_convert@x^(0+128),w
  3317  03DD  00F2               	movwf	___fltol@f1
  3318  03DE  120A  118A  277E  120A  118A  	fcall	___fltol
  3319  03E3  0872               	movf	?___fltol,w
  3320  03E4  3E30               	addlw	48
  3321  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3322  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3323  03E7  00DF               	movwf	??_ADC_convert
  3324  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3325  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  3326  03EA  0840               	movf	ADC_convert@i^(0+128),w
  3327  03EB  073B               	addwf	ADC_convert@data^(0+128),w
  3328  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3329  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  3330  03EE  00E0               	movwf	??_ADC_convert+1
  3331  03EF  0860               	movf	??_ADC_convert+1,w
  3332  03F0  0084               	movwf	4
  3333  03F1  085F               	movf	??_ADC_convert,w
  3334  03F2  1383               	bcf	3,7	;select IRP bank0
  3335  03F3  0080               	movwf	0
  3336  03F4                     l3906:
  3337                           
  3338                           ;Master_PIC.c: 271: 
  3339  03F4  3001               	movlw	1
  3340  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3341  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3342  03F7  07C0               	addwf	ADC_convert@i^(0+128),f
  3343  03F8  1803               	skipnc
  3344  03F9  0AC1               	incf	(ADC_convert@i+1)^(0+128),f
  3345  03FA  3000               	movlw	0
  3346  03FB  07C1               	addwf	(ADC_convert@i+1)^(0+128),f
  3347  03FC                     l3908:
  3348                           
  3349                           ;Master_PIC.c: 272: 
  3350  03FC  30FF               	movlw	255
  3351  03FD  07C2               	addwf	ADC_convert@digits^(0+128),f
  3352  03FE  1803               	skipnc
  3353  03FF  0AC3               	incf	(ADC_convert@digits+1)^(0+128),f
  3354  0400  30FF               	movlw	255
  3355  0401  07C3               	addwf	(ADC_convert@digits+1)^(0+128),f
  3356  0402                     l3910:
  3357                           
  3358                           ;Master_PIC.c: 273:     return c;
  3359  0402  3001               	movlw	1
  3360  0403  00C4               	movwf	ADC_convert@mu^(0+128)
  3361  0404  3000               	movlw	0
  3362  0405  00C5               	movwf	(ADC_convert@mu^(0+128)+1)
  3363  0406                     l3912:
  3364                           
  3365                           ;Master_PIC.c: 263: 
  3366  0406  0842               	movf	ADC_convert@digits^(0+128),w
  3367  0407  0443               	iorwf	(ADC_convert@digits+1)^(0+128),w
  3368  0408  1D03               	btfss	3,2
  3369  0409  2C0B               	goto	u5561
  3370  040A  2C0C               	goto	u5560
  3371  040B                     u5561:
  3372  040B  2AEB               	goto	l3890
  3373  040C                     u5560:
  3374  040C                     l3914:
  3375                           
  3376                           ;Master_PIC.c: 276: 
  3377  040C  300A               	movlw	10
  3378  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3379  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3380  040F  00DF               	movwf	??_ADC_convert
  3381  0410  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0411  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0412  0840               	movf	ADC_convert@i^(0+128),w
  3384  0413  073B               	addwf	ADC_convert@data^(0+128),w
  3385  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0416  00E0               	movwf	??_ADC_convert+1
  3388  0417  0860               	movf	??_ADC_convert+1,w
  3389  0418  0084               	movwf	4
  3390  0419  085F               	movf	??_ADC_convert,w
  3391  041A  1383               	bcf	3,7	;select IRP bank0
  3392  041B  0080               	movwf	0
  3393  041C                     l159:
  3394  041C  0008               	return
  3395  041D                     __end_of_ADC_convert:
  3396                           
  3397                           	psect	text14
  3398  0ADF                     __ptext14:	
  3399 ;; *************** function ___xxtofl *****************
  3400 ;; Defined at:
  3401 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  sign            1    wreg     unsigned char 
  3404 ;;  val             4    9[BANK0 ] long 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  sign            1   17[BANK0 ] unsigned char 
  3407 ;;  arg             4   19[BANK0 ] unsigned long 
  3408 ;;  exp             1   18[BANK0 ] unsigned char 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  4    9[BANK0 ] unsigned char 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       4       0       0       0
  3419 ;;      Locals:         0       6       0       0       0
  3420 ;;      Temps:          0       4       0       0       0
  3421 ;;      Totals:         0      14       0       0       0
  3422 ;;Total ram usage:       14 bytes
  3423 ;; Hardware stack levels used: 1
  3424 ;; Hardware stack levels required when called: 1
  3425 ;; This function calls:
  3426 ;;		Nothing
  3427 ;; This function is called by:
  3428 ;;		_LCD_Send
  3429 ;;		_ADC_convert
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           
  3434                           ;psect for function ___xxtofl
  3435  0ADF                     ___xxtofl:
  3436                           
  3437                           ;incstack = 0
  3438                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3439                           ;___xxtofl@sign stored from wreg
  3440  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0AE1  00B1               	movwf	___xxtofl@sign
  3443  0AE2                     l3710:
  3444  0AE2  0831               	movf	___xxtofl@sign,w
  3445  0AE3  1903               	btfsc	3,2
  3446  0AE4  2AE6               	goto	u5301
  3447  0AE5  2AE7               	goto	u5300
  3448  0AE6                     u5301:
  3449  0AE6  2AFB               	goto	l3716
  3450  0AE7                     u5300:
  3451  0AE7                     l3712:
  3452  0AE7  1FAC               	btfss	___xxtofl@val+3,7
  3453  0AE8  2AEA               	goto	u5311
  3454  0AE9  2AEB               	goto	u5310
  3455  0AEA                     u5311:
  3456  0AEA  2AFB               	goto	l3716
  3457  0AEB                     u5310:
  3458  0AEB                     l3714:
  3459  0AEB  0929               	comf	___xxtofl@val,w
  3460  0AEC  00B3               	movwf	___xxtofl@arg
  3461  0AED  092A               	comf	___xxtofl@val+1,w
  3462  0AEE  00B4               	movwf	___xxtofl@arg+1
  3463  0AEF  092B               	comf	___xxtofl@val+2,w
  3464  0AF0  00B5               	movwf	___xxtofl@arg+2
  3465  0AF1  092C               	comf	___xxtofl@val+3,w
  3466  0AF2  00B6               	movwf	___xxtofl@arg+3
  3467  0AF3  0AB3               	incf	___xxtofl@arg,f
  3468  0AF4  1903               	skipnz
  3469  0AF5  0AB4               	incf	___xxtofl@arg+1,f
  3470  0AF6  1903               	skipnz
  3471  0AF7  0AB5               	incf	___xxtofl@arg+2,f
  3472  0AF8  1903               	skipnz
  3473  0AF9  0AB6               	incf	___xxtofl@arg+3,f
  3474  0AFA  2B03               	goto	l829
  3475  0AFB                     l3716:
  3476  0AFB  082C               	movf	___xxtofl@val+3,w
  3477  0AFC  00B6               	movwf	___xxtofl@arg+3
  3478  0AFD  082B               	movf	___xxtofl@val+2,w
  3479  0AFE  00B5               	movwf	___xxtofl@arg+2
  3480  0AFF  082A               	movf	___xxtofl@val+1,w
  3481  0B00  00B4               	movwf	___xxtofl@arg+1
  3482  0B01  0829               	movf	___xxtofl@val,w
  3483  0B02  00B3               	movwf	___xxtofl@arg
  3484  0B03                     l829:
  3485  0B03  082C               	movf	___xxtofl@val+3,w
  3486  0B04  042B               	iorwf	___xxtofl@val+2,w
  3487  0B05  042A               	iorwf	___xxtofl@val+1,w
  3488  0B06  0429               	iorwf	___xxtofl@val,w
  3489  0B07  1D03               	skipz
  3490  0B08  2B0A               	goto	u5321
  3491  0B09  2B0B               	goto	u5320
  3492  0B0A                     u5321:
  3493  0B0A  2B14               	goto	l3722
  3494  0B0B                     u5320:
  3495  0B0B                     l3718:
  3496  0B0B  3000               	movlw	0
  3497  0B0C  00AC               	movwf	?___xxtofl+3
  3498  0B0D  3000               	movlw	0
  3499  0B0E  00AB               	movwf	?___xxtofl+2
  3500  0B0F  3000               	movlw	0
  3501  0B10  00AA               	movwf	?___xxtofl+1
  3502  0B11  3000               	movlw	0
  3503  0B12  00A9               	movwf	?___xxtofl
  3504  0B13  2B9A               	goto	l831
  3505  0B14                     l3722:
  3506  0B14  3096               	movlw	150
  3507  0B15  00AD               	movwf	??___xxtofl
  3508  0B16  082D               	movf	??___xxtofl,w
  3509  0B17  00B2               	movwf	___xxtofl@exp
  3510  0B18  2B26               	goto	l3726
  3511  0B19                     l3724:
  3512  0B19  3001               	movlw	1
  3513  0B1A  00AD               	movwf	??___xxtofl
  3514  0B1B  082D               	movf	??___xxtofl,w
  3515  0B1C  07B2               	addwf	___xxtofl@exp,f
  3516  0B1D  3001               	movlw	1
  3517  0B1E                     u5335:
  3518  0B1E  1003               	clrc
  3519  0B1F  0CB6               	rrf	___xxtofl@arg+3,f
  3520  0B20  0CB5               	rrf	___xxtofl@arg+2,f
  3521  0B21  0CB4               	rrf	___xxtofl@arg+1,f
  3522  0B22  0CB3               	rrf	___xxtofl@arg,f
  3523  0B23  3EFF               	addlw	-1
  3524  0B24  1D03               	skipz
  3525  0B25  2B1E               	goto	u5335
  3526  0B26                     l3726:
  3527  0B26  30FE               	movlw	254
  3528  0B27  0536               	andwf	___xxtofl@arg+3,w
  3529  0B28  1D03               	btfss	3,2
  3530  0B29  2B2B               	goto	u5341
  3531  0B2A  2B2C               	goto	u5340
  3532  0B2B                     u5341:
  3533  0B2B  2B19               	goto	l3724
  3534  0B2C                     u5340:
  3535  0B2C  2B48               	goto	l835
  3536  0B2D                     l3728:
  3537  0B2D  3001               	movlw	1
  3538  0B2E  00AD               	movwf	??___xxtofl
  3539  0B2F  082D               	movf	??___xxtofl,w
  3540  0B30  07B2               	addwf	___xxtofl@exp,f
  3541  0B31                     l3730:
  3542  0B31  3001               	movlw	1
  3543  0B32  07B3               	addwf	___xxtofl@arg,f
  3544  0B33  3000               	movlw	0
  3545  0B34  1803               	skipnc
  3546  0B35  3001               	movlw	1
  3547  0B36  07B4               	addwf	___xxtofl@arg+1,f
  3548  0B37  3000               	movlw	0
  3549  0B38  1803               	skipnc
  3550  0B39  3001               	movlw	1
  3551  0B3A  07B5               	addwf	___xxtofl@arg+2,f
  3552  0B3B  3000               	movlw	0
  3553  0B3C  1803               	skipnc
  3554  0B3D  3001               	movlw	1
  3555  0B3E  07B6               	addwf	___xxtofl@arg+3,f
  3556  0B3F                     l3732:
  3557  0B3F  3001               	movlw	1
  3558  0B40                     u5355:
  3559  0B40  1003               	clrc
  3560  0B41  0CB6               	rrf	___xxtofl@arg+3,f
  3561  0B42  0CB5               	rrf	___xxtofl@arg+2,f
  3562  0B43  0CB4               	rrf	___xxtofl@arg+1,f
  3563  0B44  0CB3               	rrf	___xxtofl@arg,f
  3564  0B45  3EFF               	addlw	-1
  3565  0B46  1D03               	skipz
  3566  0B47  2B40               	goto	u5355
  3567  0B48                     l835:
  3568  0B48  30FF               	movlw	255
  3569  0B49  0536               	andwf	___xxtofl@arg+3,w
  3570  0B4A  1D03               	btfss	3,2
  3571  0B4B  2B4D               	goto	u5361
  3572  0B4C  2B4E               	goto	u5360
  3573  0B4D                     u5361:
  3574  0B4D  2B2D               	goto	l3728
  3575  0B4E                     u5360:
  3576  0B4E  2B5A               	goto	l3736
  3577  0B4F                     l3734:
  3578  0B4F  3001               	movlw	1
  3579  0B50  02B2               	subwf	___xxtofl@exp,f
  3580  0B51  3001               	movlw	1
  3581  0B52  00AD               	movwf	??___xxtofl
  3582  0B53                     u5375:
  3583  0B53  1003               	clrc
  3584  0B54  0DB3               	rlf	___xxtofl@arg,f
  3585  0B55  0DB4               	rlf	___xxtofl@arg+1,f
  3586  0B56  0DB5               	rlf	___xxtofl@arg+2,f
  3587  0B57  0DB6               	rlf	___xxtofl@arg+3,f
  3588  0B58  0BAD               	decfsz	??___xxtofl,f
  3589  0B59  2B53               	goto	u5375
  3590  0B5A                     l3736:
  3591  0B5A  1BB5               	btfsc	___xxtofl@arg+2,7
  3592  0B5B  2B5D               	goto	u5381
  3593  0B5C  2B5E               	goto	u5380
  3594  0B5D                     u5381:
  3595  0B5D  2B64               	goto	l842
  3596  0B5E                     u5380:
  3597  0B5E                     l3738:
  3598  0B5E  3002               	movlw	2
  3599  0B5F  0232               	subwf	___xxtofl@exp,w
  3600  0B60  1803               	skipnc
  3601  0B61  2B63               	goto	u5391
  3602  0B62  2B64               	goto	u5390
  3603  0B63                     u5391:
  3604  0B63  2B4F               	goto	l3734
  3605  0B64                     u5390:
  3606  0B64                     l842:
  3607  0B64  1832               	btfsc	___xxtofl@exp,0
  3608  0B65  2B67               	goto	u5401
  3609  0B66  2B68               	goto	u5400
  3610  0B67                     u5401:
  3611  0B67  2B70               	goto	l843
  3612  0B68                     u5400:
  3613  0B68                     l3740:
  3614  0B68  30FF               	movlw	255
  3615  0B69  05B3               	andwf	___xxtofl@arg,f
  3616  0B6A  30FF               	movlw	255
  3617  0B6B  05B4               	andwf	___xxtofl@arg+1,f
  3618  0B6C  307F               	movlw	127
  3619  0B6D  05B5               	andwf	___xxtofl@arg+2,f
  3620  0B6E  30FF               	movlw	255
  3621  0B6F  05B6               	andwf	___xxtofl@arg+3,f
  3622  0B70                     l843:
  3623  0B70  1003               	clrc
  3624  0B71  0CB2               	rrf	___xxtofl@exp,f
  3625  0B72                     l3742:
  3626  0B72  0832               	movf	___xxtofl@exp,w
  3627  0B73  00AD               	movwf	??___xxtofl
  3628  0B74  01AE               	clrf	??___xxtofl+1
  3629  0B75  01AF               	clrf	??___xxtofl+2
  3630  0B76  01B0               	clrf	??___xxtofl+3
  3631  0B77  3018               	movlw	24
  3632  0B78                     u5415:
  3633  0B78  1003               	clrc
  3634  0B79  0DAD               	rlf	??___xxtofl,f
  3635  0B7A  0DAE               	rlf	??___xxtofl+1,f
  3636  0B7B  0DAF               	rlf	??___xxtofl+2,f
  3637  0B7C  0DB0               	rlf	??___xxtofl+3,f
  3638  0B7D                     u5410:
  3639  0B7D  3EFF               	addlw	-1
  3640  0B7E  1D03               	skipz
  3641  0B7F  2B78               	goto	u5415
  3642  0B80  082D               	movf	??___xxtofl,w
  3643  0B81  04B3               	iorwf	___xxtofl@arg,f
  3644  0B82  082E               	movf	??___xxtofl+1,w
  3645  0B83  04B4               	iorwf	___xxtofl@arg+1,f
  3646  0B84  082F               	movf	??___xxtofl+2,w
  3647  0B85  04B5               	iorwf	___xxtofl@arg+2,f
  3648  0B86  0830               	movf	??___xxtofl+3,w
  3649  0B87  04B6               	iorwf	___xxtofl@arg+3,f
  3650  0B88                     l3744:
  3651  0B88  0831               	movf	___xxtofl@sign,w
  3652  0B89  1903               	btfsc	3,2
  3653  0B8A  2B8C               	goto	u5421
  3654  0B8B  2B8D               	goto	u5420
  3655  0B8C                     u5421:
  3656  0B8C  2B92               	goto	l3750
  3657  0B8D                     u5420:
  3658  0B8D                     l3746:
  3659  0B8D  1FAC               	btfss	___xxtofl@val+3,7
  3660  0B8E  2B90               	goto	u5431
  3661  0B8F  2B91               	goto	u5430
  3662  0B90                     u5431:
  3663  0B90  2B92               	goto	l3750
  3664  0B91                     u5430:
  3665  0B91                     l3748:
  3666  0B91  17B6               	bsf	___xxtofl@arg+3,7
  3667  0B92                     l3750:
  3668  0B92  0836               	movf	___xxtofl@arg+3,w
  3669  0B93  00AC               	movwf	?___xxtofl+3
  3670  0B94  0835               	movf	___xxtofl@arg+2,w
  3671  0B95  00AB               	movwf	?___xxtofl+2
  3672  0B96  0834               	movf	___xxtofl@arg+1,w
  3673  0B97  00AA               	movwf	?___xxtofl+1
  3674  0B98  0833               	movf	___xxtofl@arg,w
  3675  0B99  00A9               	movwf	?___xxtofl
  3676  0B9A                     l831:
  3677  0B9A  0008               	return
  3678  0B9B                     __end_of___xxtofl:
  3679                           
  3680                           	psect	text15
  3681  1721                     __ptext15:	
  3682 ;; *************** function ___wmul *****************
  3683 ;; Defined at:
  3684 ;;		line 15 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3685 ;; Parameters:    Size  Location     Type
  3686 ;;  multiplier      2    5[BANK0 ] unsigned int 
  3687 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;  product         2    8[COMMON] unsigned int 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  2    5[BANK0 ] unsigned int 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3699 ;;      Params:         0       4       0       0       0
  3700 ;;      Locals:         2       0       0       0       0
  3701 ;;      Temps:          0       0       0       0       0
  3702 ;;      Totals:         2       4       0       0       0
  3703 ;;Total ram usage:        6 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; Hardware stack levels required when called: 1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_ADC_convert
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function ___wmul
  3715  1721                     ___wmul:
  3716  1721                     l3308:	
  3717                           ;incstack = 0
  3718                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3719                           
  3720  1721  01F8               	clrf	___wmul@product
  3721  1722  01F9               	clrf	___wmul@product+1
  3722  1723                     l3310:
  3723  1723  1283               	bcf	3,5	;RP0=0, select bank0
  3724  1724  1303               	bcf	3,6	;RP1=0, select bank0
  3725  1725  1C25               	btfss	___wmul@multiplier,0
  3726  1726  2F28               	goto	u4331
  3727  1727  2F29               	goto	u4330
  3728  1728                     u4331:
  3729  1728  2F2F               	goto	l396
  3730  1729                     u4330:
  3731  1729                     l3312:
  3732  1729  0827               	movf	___wmul@multiplicand,w
  3733  172A  07F8               	addwf	___wmul@product,f
  3734  172B  1803               	skipnc
  3735  172C  0AF9               	incf	___wmul@product+1,f
  3736  172D  0828               	movf	___wmul@multiplicand+1,w
  3737  172E  07F9               	addwf	___wmul@product+1,f
  3738  172F                     l396:
  3739  172F  3001               	movlw	1
  3740  1730                     u4345:
  3741  1730  1003               	clrc
  3742  1731  0DA7               	rlf	___wmul@multiplicand,f
  3743  1732  0DA8               	rlf	___wmul@multiplicand+1,f
  3744  1733  3EFF               	addlw	-1
  3745  1734  1D03               	skipz
  3746  1735  2F30               	goto	u4345
  3747  1736                     l3314:
  3748  1736  3001               	movlw	1
  3749  1737                     u4355:
  3750  1737  1003               	clrc
  3751  1738  0CA6               	rrf	___wmul@multiplier+1,f
  3752  1739  0CA5               	rrf	___wmul@multiplier,f
  3753  173A  3EFF               	addlw	-1
  3754  173B  1D03               	skipz
  3755  173C  2F37               	goto	u4355
  3756  173D                     l3316:
  3757  173D  0825               	movf	___wmul@multiplier,w
  3758  173E  0426               	iorwf	___wmul@multiplier+1,w
  3759  173F  1D03               	btfss	3,2
  3760  1740  2F42               	goto	u4361
  3761  1741  2F43               	goto	u4360
  3762  1742                     u4361:
  3763  1742  2F23               	goto	l3310
  3764  1743                     u4360:
  3765  1743                     l3318:
  3766  1743  0879               	movf	___wmul@product+1,w
  3767  1744  00A6               	movwf	?___wmul+1
  3768  1745  0878               	movf	___wmul@product,w
  3769  1746  00A5               	movwf	?___wmul
  3770  1747                     l398:
  3771  1747  0008               	return
  3772  1748                     __end_of___wmul:
  3773                           
  3774                           	psect	text16
  3775  077E                     __ptext16:	
  3776 ;; *************** function ___fltol *****************
  3777 ;; Defined at:
  3778 ;;		line 43 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  f1              4    2[COMMON] unsigned int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  exp1            1    7[COMMON] unsigned char 
  3783 ;;  sign1           1    6[COMMON] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  4    2[COMMON] long 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         4       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0
  3795 ;;      Temps:          0       5       0       0       0
  3796 ;;      Totals:         6       5       0       0       0
  3797 ;;Total ram usage:       11 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; Hardware stack levels required when called: 1
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_ADC_convert
  3804 ;; This function uses a non-reentrant model
  3805 ;;
  3806                           
  3807                           
  3808                           ;psect for function ___fltol
  3809  077E                     ___fltol:
  3810  077E                     l3386:	
  3811                           ;incstack = 0
  3812                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3813                           
  3814  077E  1003               	clrc
  3815  077F  0D74               	rlf	___fltol@f1+2,w
  3816  0780  0D75               	rlf	___fltol@f1+3,w
  3817  0781  1283               	bcf	3,5	;RP0=0, select bank0
  3818  0782  1303               	bcf	3,6	;RP1=0, select bank0
  3819  0783  00A0               	movwf	??___fltol
  3820  0784  0820               	movf	??___fltol,w
  3821  0785  00F7               	movwf	___fltol@exp1
  3822  0786  0877               	movf	___fltol@exp1,w
  3823  0787  1D03               	btfss	3,2
  3824  0788  2F8A               	goto	u4541
  3825  0789  2F8B               	goto	u4540
  3826  078A                     u4541:
  3827  078A  2F94               	goto	l3392
  3828  078B                     u4540:
  3829  078B                     l3388:
  3830  078B  3000               	movlw	0
  3831  078C  00F5               	movwf	?___fltol+3
  3832  078D  3000               	movlw	0
  3833  078E  00F4               	movwf	?___fltol+2
  3834  078F  3000               	movlw	0
  3835  0790  00F3               	movwf	?___fltol+1
  3836  0791  3000               	movlw	0
  3837  0792  00F2               	movwf	?___fltol
  3838  0793  2FF9               	goto	l582
  3839  0794                     l3392:
  3840  0794  0872               	movf	___fltol@f1,w
  3841  0795  00A0               	movwf	??___fltol
  3842  0796  0873               	movf	___fltol@f1+1,w
  3843  0797  00A1               	movwf	??___fltol+1
  3844  0798  0874               	movf	___fltol@f1+2,w
  3845  0799  00A2               	movwf	??___fltol+2
  3846  079A  0875               	movf	___fltol@f1+3,w
  3847  079B  00A3               	movwf	??___fltol+3
  3848  079C  301F               	movlw	31
  3849  079D                     u4555:
  3850  079D  1003               	clrc
  3851  079E  0CA3               	rrf	??___fltol+3,f
  3852  079F  0CA2               	rrf	??___fltol+2,f
  3853  07A0  0CA1               	rrf	??___fltol+1,f
  3854  07A1  0CA0               	rrf	??___fltol,f
  3855  07A2                     u4550:
  3856  07A2  3EFF               	addlw	-1
  3857  07A3  1D03               	skipz
  3858  07A4  2F9D               	goto	u4555
  3859  07A5  0820               	movf	??___fltol,w
  3860  07A6  00A4               	movwf	??___fltol+4
  3861  07A7  0824               	movf	??___fltol+4,w
  3862  07A8  00F6               	movwf	___fltol@sign1
  3863  07A9                     l3394:
  3864  07A9  17F4               	bsf	___fltol@f1+2,7
  3865  07AA                     l3396:
  3866  07AA  30FF               	movlw	255
  3867  07AB  05F2               	andwf	___fltol@f1,f
  3868  07AC  30FF               	movlw	255
  3869  07AD  05F3               	andwf	___fltol@f1+1,f
  3870  07AE  30FF               	movlw	255
  3871  07AF  05F4               	andwf	___fltol@f1+2,f
  3872  07B0  3000               	movlw	0
  3873  07B1  05F5               	andwf	___fltol@f1+3,f
  3874  07B2                     l3398:
  3875  07B2  3096               	movlw	150
  3876  07B3  02F7               	subwf	___fltol@exp1,f
  3877  07B4                     l3400:
  3878  07B4  1FF7               	btfss	___fltol@exp1,7
  3879  07B5  2FB7               	goto	u4561
  3880  07B6  2FB8               	goto	u4560
  3881  07B7                     u4561:
  3882  07B7  2FD2               	goto	l3410
  3883  07B8                     u4560:
  3884  07B8                     l3402:
  3885  07B8  0877               	movf	___fltol@exp1,w
  3886  07B9  3A80               	xorlw	128
  3887  07BA  3E97               	addlw	151
  3888  07BB  1803               	skipnc
  3889  07BC  2FBE               	goto	u4571
  3890  07BD  2FBF               	goto	u4570
  3891  07BE                     u4571:
  3892  07BE  2FC0               	goto	l3408
  3893  07BF                     u4570:
  3894  07BF  2F8B               	goto	l3388
  3895  07C0                     l3408:
  3896  07C0  3001               	movlw	1
  3897  07C1                     u4585:
  3898  07C1  1003               	clrc
  3899  07C2  0CF5               	rrf	___fltol@f1+3,f
  3900  07C3  0CF4               	rrf	___fltol@f1+2,f
  3901  07C4  0CF3               	rrf	___fltol@f1+1,f
  3902  07C5  0CF2               	rrf	___fltol@f1,f
  3903  07C6  3EFF               	addlw	-1
  3904  07C7  1D03               	skipz
  3905  07C8  2FC1               	goto	u4585
  3906  07C9  3001               	movlw	1
  3907  07CA  00A0               	movwf	??___fltol
  3908  07CB  0820               	movf	??___fltol,w
  3909  07CC  07F7               	addwf	___fltol@exp1,f
  3910  07CD  1D03               	btfss	3,2
  3911  07CE  2FD0               	goto	u4591
  3912  07CF  2FD1               	goto	u4590
  3913  07D0                     u4591:
  3914  07D0  2FC0               	goto	l3408
  3915  07D1                     u4590:
  3916  07D1  2FE9               	goto	l3418
  3917  07D2                     l3410:
  3918  07D2  3020               	movlw	32
  3919  07D3  0277               	subwf	___fltol@exp1,w
  3920  07D4  1C03               	skipc
  3921  07D5  2FD7               	goto	u4601
  3922  07D6  2FD8               	goto	u4600
  3923  07D7                     u4601:
  3924  07D7  2FE4               	goto	l589
  3925  07D8                     u4600:
  3926  07D8  2F8B               	goto	l3388
  3927  07D9                     l3416:
  3928  07D9  3001               	movlw	1
  3929  07DA  00A0               	movwf	??___fltol
  3930  07DB                     u4615:
  3931  07DB  1003               	clrc
  3932  07DC  0DF2               	rlf	___fltol@f1,f
  3933  07DD  0DF3               	rlf	___fltol@f1+1,f
  3934  07DE  0DF4               	rlf	___fltol@f1+2,f
  3935  07DF  0DF5               	rlf	___fltol@f1+3,f
  3936  07E0  0BA0               	decfsz	??___fltol,f
  3937  07E1  2FDB               	goto	u4615
  3938  07E2  3001               	movlw	1
  3939  07E3  02F7               	subwf	___fltol@exp1,f
  3940  07E4                     l589:
  3941  07E4  0877               	movf	___fltol@exp1,w
  3942  07E5  1D03               	btfss	3,2
  3943  07E6  2FE8               	goto	u4621
  3944  07E7  2FE9               	goto	u4620
  3945  07E8                     u4621:
  3946  07E8  2FD9               	goto	l3416
  3947  07E9                     u4620:
  3948  07E9                     l3418:
  3949  07E9  0876               	movf	___fltol@sign1,w
  3950  07EA  1903               	btfsc	3,2
  3951  07EB  2FED               	goto	u4631
  3952  07EC  2FEE               	goto	u4630
  3953  07ED                     u4631:
  3954  07ED  2FF9               	goto	l592
  3955  07EE                     u4630:
  3956  07EE                     l3420:
  3957  07EE  09F2               	comf	___fltol@f1,f
  3958  07EF  09F3               	comf	___fltol@f1+1,f
  3959  07F0  09F4               	comf	___fltol@f1+2,f
  3960  07F1  09F5               	comf	___fltol@f1+3,f
  3961  07F2  0AF2               	incf	___fltol@f1,f
  3962  07F3  1903               	skipnz
  3963  07F4  0AF3               	incf	___fltol@f1+1,f
  3964  07F5  1903               	skipnz
  3965  07F6  0AF4               	incf	___fltol@f1+2,f
  3966  07F7  1903               	skipnz
  3967  07F8  0AF5               	incf	___fltol@f1+3,f
  3968  07F9                     l592:
  3969  07F9                     l582:
  3970  07F9  0008               	return
  3971  07FA                     __end_of___fltol:
  3972                           
  3973                           	psect	text17
  3974  16FD                     __ptext17:	
  3975 ;; *************** function ___flsub *****************
  3976 ;; Defined at:
  3977 ;;		line 242 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  a               4   23[BANK0 ] long 
  3980 ;;  b               4   27[BANK0 ] long 
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  4   23[BANK0 ] long 
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       8       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0
  3995 ;;      Totals:         0       8       0       0       0
  3996 ;;Total ram usage:        8 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; Hardware stack levels required when called: 2
  3999 ;; This function calls:
  4000 ;;		___fladd
  4001 ;; This function is called by:
  4002 ;;		_ADC_convert
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           
  4007                           ;psect for function ___flsub
  4008  16FD                     ___flsub:
  4009  16FD                     l3422:	
  4010                           ;incstack = 0
  4011                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4012                           
  4013  16FD  3080               	movlw	128
  4014  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  4015  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  4016  1700  06BA               	xorwf	___flsub@a+3,f
  4017  1701                     l3424:
  4018  1701  083E               	movf	___flsub@b+3,w
  4019  1702  00F5               	movwf	___fladd@b+3
  4020  1703  083D               	movf	___flsub@b+2,w
  4021  1704  00F4               	movwf	___fladd@b+2
  4022  1705  083C               	movf	___flsub@b+1,w
  4023  1706  00F3               	movwf	___fladd@b+1
  4024  1707  083B               	movf	___flsub@b,w
  4025  1708  00F2               	movwf	___fladd@b
  4026  1709  083A               	movf	___flsub@a+3,w
  4027  170A  00F9               	movwf	___fladd@a+3
  4028  170B  0839               	movf	___flsub@a+2,w
  4029  170C  00F8               	movwf	___fladd@a+2
  4030  170D  0838               	movf	___flsub@a+1,w
  4031  170E  00F7               	movwf	___fladd@a+1
  4032  170F  0837               	movf	___flsub@a,w
  4033  1710  00F6               	movwf	___fladd@a
  4034  1711  120A  158A  2578  160A  118A  	fcall	___fladd
  4035  1716  0875               	movf	?___fladd+3,w
  4036  1717  1283               	bcf	3,5	;RP0=0, select bank0
  4037  1718  1303               	bcf	3,6	;RP1=0, select bank0
  4038  1719  00BA               	movwf	?___flsub+3
  4039  171A  0874               	movf	?___fladd+2,w
  4040  171B  00B9               	movwf	?___flsub+2
  4041  171C  0873               	movf	?___fladd+1,w
  4042  171D  00B8               	movwf	?___flsub+1
  4043  171E  0872               	movf	?___fladd,w
  4044  171F  00B7               	movwf	?___flsub
  4045  1720                     l735:
  4046  1720  0008               	return
  4047  1721                     __end_of___flsub:
  4048                           
  4049                           	psect	text18
  4050  0D78                     __ptext18:	
  4051 ;; *************** function ___fladd *****************
  4052 ;; Defined at:
  4053 ;;		line 10 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  b               4    2[COMMON] long 
  4056 ;;  a               4    6[COMMON] long 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  grs             1   11[BANK0 ] unsigned char 
  4059 ;;  bexp            1   10[BANK0 ] unsigned char 
  4060 ;;  aexp            1    9[BANK0 ] unsigned char 
  4061 ;;  signs           1    8[BANK0 ] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  4    2[COMMON] unsigned char 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, btemp+1
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         8       0       0       0       0
  4072 ;;      Locals:         0       4       0       0       0
  4073 ;;      Temps:          0       8       0       0       0
  4074 ;;      Totals:         8      12       0       0       0
  4075 ;;Total ram usage:       20 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 1
  4078 ;; This function calls:
  4079 ;;		Nothing
  4080 ;; This function is called by:
  4081 ;;		___flsub
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           
  4086                           ;psect for function ___fladd
  4087  0D78                     ___fladd:
  4088  0D78                     l3090:	
  4089                           ;incstack = 0
  4090                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4091                           
  4092  0D78  0875               	movf	___fladd@b+3,w
  4093  0D79  3980               	andlw	128
  4094  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4095  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4096  0D7C  00A0               	movwf	??___fladd
  4097  0D7D  0820               	movf	??___fladd,w
  4098  0D7E  00A8               	movwf	___fladd@signs
  4099  0D7F                     l3092:
  4100  0D7F  0875               	movf	___fladd@b+3,w
  4101  0D80  00A0               	movwf	??___fladd
  4102  0D81  0720               	addwf	??___fladd,w
  4103  0D82  00A1               	movwf	??___fladd+1
  4104  0D83  0821               	movf	??___fladd+1,w
  4105  0D84  00AA               	movwf	___fladd@bexp
  4106  0D85                     l3094:
  4107  0D85  1FF4               	btfss	___fladd@b+2,7
  4108  0D86  2D88               	goto	u3821
  4109  0D87  2D89               	goto	u3820
  4110  0D88                     u3821:
  4111  0D88  2D8A               	goto	l3098
  4112  0D89                     u3820:
  4113  0D89                     l3096:
  4114  0D89  142A               	bsf	___fladd@bexp,0
  4115  0D8A                     l3098:
  4116  0D8A  082A               	movf	___fladd@bexp,w
  4117  0D8B  1903               	btfsc	3,2
  4118  0D8C  2D8E               	goto	u3831
  4119  0D8D  2D8F               	goto	u3830
  4120  0D8E                     u3831:
  4121  0D8E  2D9F               	goto	l3108
  4122  0D8F                     u3830:
  4123  0D8F                     l3100:
  4124  0D8F  0A2A               	incf	___fladd@bexp,w
  4125  0D90  1D03               	btfss	3,2
  4126  0D91  2D93               	goto	u3841
  4127  0D92  2D94               	goto	u3840
  4128  0D93                     u3841:
  4129  0D93  2D9C               	goto	l3104
  4130  0D94                     u3840:
  4131  0D94                     l3102:
  4132  0D94  3000               	movlw	0
  4133  0D95  00F5               	movwf	___fladd@b+3
  4134  0D96  3000               	movlw	0
  4135  0D97  00F4               	movwf	___fladd@b+2
  4136  0D98  3000               	movlw	0
  4137  0D99  00F3               	movwf	___fladd@b+1
  4138  0D9A  3000               	movlw	0
  4139  0D9B  00F2               	movwf	___fladd@b
  4140  0D9C                     l3104:
  4141  0D9C  17F4               	bsf	___fladd@b+2,7
  4142  0D9D                     l3106:
  4143  0D9D  01F5               	clrf	___fladd@b+3
  4144  0D9E  2DA7               	goto	l3110
  4145  0D9F                     l3108:
  4146  0D9F  3000               	movlw	0
  4147  0DA0  00F5               	movwf	___fladd@b+3
  4148  0DA1  3000               	movlw	0
  4149  0DA2  00F4               	movwf	___fladd@b+2
  4150  0DA3  3000               	movlw	0
  4151  0DA4  00F3               	movwf	___fladd@b+1
  4152  0DA5  3000               	movlw	0
  4153  0DA6  00F2               	movwf	___fladd@b
  4154  0DA7                     l3110:
  4155  0DA7  0879               	movf	___fladd@a+3,w
  4156  0DA8  3980               	andlw	128
  4157  0DA9  00A0               	movwf	??___fladd
  4158  0DAA  0820               	movf	??___fladd,w
  4159  0DAB  00A9               	movwf	___fladd@aexp
  4160  0DAC                     l3112:
  4161  0DAC  0829               	movf	___fladd@aexp,w
  4162  0DAD  0628               	xorwf	___fladd@signs,w
  4163  0DAE  1903               	skipnz
  4164  0DAF  2DB1               	goto	u3851
  4165  0DB0  2DB2               	goto	u3850
  4166  0DB1                     u3851:
  4167  0DB1  2DB3               	goto	l3116
  4168  0DB2                     u3850:
  4169  0DB2                     l3114:
  4170  0DB2  1728               	bsf	___fladd@signs,6
  4171  0DB3                     l3116:
  4172  0DB3  0879               	movf	___fladd@a+3,w
  4173  0DB4  00A0               	movwf	??___fladd
  4174  0DB5  0720               	addwf	??___fladd,w
  4175  0DB6  00A1               	movwf	??___fladd+1
  4176  0DB7  0821               	movf	??___fladd+1,w
  4177  0DB8  00A9               	movwf	___fladd@aexp
  4178  0DB9                     l3118:
  4179  0DB9  1FF8               	btfss	___fladd@a+2,7
  4180  0DBA  2DBC               	goto	u3861
  4181  0DBB  2DBD               	goto	u3860
  4182  0DBC                     u3861:
  4183  0DBC  2DBE               	goto	l3122
  4184  0DBD                     u3860:
  4185  0DBD                     l3120:
  4186  0DBD  1429               	bsf	___fladd@aexp,0
  4187  0DBE                     l3122:
  4188  0DBE  0829               	movf	___fladd@aexp,w
  4189  0DBF  1903               	btfsc	3,2
  4190  0DC0  2DC2               	goto	u3871
  4191  0DC1  2DC3               	goto	u3870
  4192  0DC2                     u3871:
  4193  0DC2  2DD3               	goto	l3132
  4194  0DC3                     u3870:
  4195  0DC3                     l3124:
  4196  0DC3  0A29               	incf	___fladd@aexp,w
  4197  0DC4  1D03               	btfss	3,2
  4198  0DC5  2DC7               	goto	u3881
  4199  0DC6  2DC8               	goto	u3880
  4200  0DC7                     u3881:
  4201  0DC7  2DD0               	goto	l3128
  4202  0DC8                     u3880:
  4203  0DC8                     l3126:
  4204  0DC8  3000               	movlw	0
  4205  0DC9  00F9               	movwf	___fladd@a+3
  4206  0DCA  3000               	movlw	0
  4207  0DCB  00F8               	movwf	___fladd@a+2
  4208  0DCC  3000               	movlw	0
  4209  0DCD  00F7               	movwf	___fladd@a+1
  4210  0DCE  3000               	movlw	0
  4211  0DCF  00F6               	movwf	___fladd@a
  4212  0DD0                     l3128:
  4213  0DD0  17F8               	bsf	___fladd@a+2,7
  4214  0DD1                     l3130:
  4215  0DD1  01F9               	clrf	___fladd@a+3
  4216  0DD2  2DDB               	goto	l689
  4217  0DD3                     l3132:
  4218  0DD3  3000               	movlw	0
  4219  0DD4  00F9               	movwf	___fladd@a+3
  4220  0DD5  3000               	movlw	0
  4221  0DD6  00F8               	movwf	___fladd@a+2
  4222  0DD7  3000               	movlw	0
  4223  0DD8  00F7               	movwf	___fladd@a+1
  4224  0DD9  3000               	movlw	0
  4225  0DDA  00F6               	movwf	___fladd@a
  4226  0DDB                     l689:
  4227  0DDB  082A               	movf	___fladd@bexp,w
  4228  0DDC  0229               	subwf	___fladd@aexp,w
  4229  0DDD  1803               	skipnc
  4230  0DDE  2DE0               	goto	u3891
  4231  0DDF  2DE1               	goto	u3890
  4232  0DE0                     u3891:
  4233  0DE0  2E25               	goto	l3168
  4234  0DE1                     u3890:
  4235  0DE1                     l3134:
  4236  0DE1  1F28               	btfss	___fladd@signs,6
  4237  0DE2  2DE4               	goto	u3901
  4238  0DE3  2DE5               	goto	u3900
  4239  0DE4                     u3901:
  4240  0DE4  2DE9               	goto	l3138
  4241  0DE5                     u3900:
  4242  0DE5                     l3136:
  4243  0DE5  3080               	movlw	128
  4244  0DE6  00A0               	movwf	??___fladd
  4245  0DE7  0820               	movf	??___fladd,w
  4246  0DE8  06A8               	xorwf	___fladd@signs,f
  4247  0DE9                     l3138:
  4248  0DE9  082A               	movf	___fladd@bexp,w
  4249  0DEA  00A0               	movwf	??___fladd
  4250  0DEB  0820               	movf	??___fladd,w
  4251  0DEC  00AB               	movwf	___fladd@grs
  4252  0DED                     l3140:
  4253  0DED  0829               	movf	___fladd@aexp,w
  4254  0DEE  00A0               	movwf	??___fladd
  4255  0DEF  0820               	movf	??___fladd,w
  4256  0DF0  00AA               	movwf	___fladd@bexp
  4257  0DF1                     l3142:
  4258  0DF1  082B               	movf	___fladd@grs,w
  4259  0DF2  00A0               	movwf	??___fladd
  4260  0DF3  0820               	movf	??___fladd,w
  4261  0DF4  00A9               	movwf	___fladd@aexp
  4262  0DF5                     l3144:
  4263  0DF5  0872               	movf	___fladd@b,w
  4264  0DF6  00A0               	movwf	??___fladd
  4265  0DF7  0820               	movf	??___fladd,w
  4266  0DF8  00AB               	movwf	___fladd@grs
  4267  0DF9                     l3146:
  4268  0DF9  0876               	movf	___fladd@a,w
  4269  0DFA  00A0               	movwf	??___fladd
  4270  0DFB  0820               	movf	??___fladd,w
  4271  0DFC  00F2               	movwf	___fladd@b
  4272  0DFD                     l3148:
  4273  0DFD  082B               	movf	___fladd@grs,w
  4274  0DFE  00A0               	movwf	??___fladd
  4275  0DFF  0820               	movf	??___fladd,w
  4276  0E00  00F6               	movwf	___fladd@a
  4277  0E01                     l3150:
  4278  0E01  0873               	movf	___fladd@b+1,w
  4279  0E02  00A0               	movwf	??___fladd
  4280  0E03  0820               	movf	??___fladd,w
  4281  0E04  00AB               	movwf	___fladd@grs
  4282  0E05                     l3152:
  4283  0E05  0877               	movf	___fladd@a+1,w
  4284  0E06  00A0               	movwf	??___fladd
  4285  0E07  0820               	movf	??___fladd,w
  4286  0E08  00F3               	movwf	___fladd@b+1
  4287  0E09                     l3154:
  4288  0E09  082B               	movf	___fladd@grs,w
  4289  0E0A  00A0               	movwf	??___fladd
  4290  0E0B  0820               	movf	??___fladd,w
  4291  0E0C  00F7               	movwf	___fladd@a+1
  4292  0E0D                     l3156:
  4293  0E0D  0874               	movf	___fladd@b+2,w
  4294  0E0E  00A0               	movwf	??___fladd
  4295  0E0F  0820               	movf	??___fladd,w
  4296  0E10  00AB               	movwf	___fladd@grs
  4297  0E11                     l3158:
  4298  0E11  0878               	movf	___fladd@a+2,w
  4299  0E12  00A0               	movwf	??___fladd
  4300  0E13  0820               	movf	??___fladd,w
  4301  0E14  00F4               	movwf	___fladd@b+2
  4302  0E15                     l3160:
  4303  0E15  082B               	movf	___fladd@grs,w
  4304  0E16  00A0               	movwf	??___fladd
  4305  0E17  0820               	movf	??___fladd,w
  4306  0E18  00F8               	movwf	___fladd@a+2
  4307  0E19                     l3162:
  4308  0E19  0875               	movf	___fladd@b+3,w
  4309  0E1A  00A0               	movwf	??___fladd
  4310  0E1B  0820               	movf	??___fladd,w
  4311  0E1C  00AB               	movwf	___fladd@grs
  4312  0E1D                     l3164:
  4313  0E1D  0879               	movf	___fladd@a+3,w
  4314  0E1E  00A0               	movwf	??___fladd
  4315  0E1F  0820               	movf	??___fladd,w
  4316  0E20  00F5               	movwf	___fladd@b+3
  4317  0E21                     l3166:
  4318  0E21  082B               	movf	___fladd@grs,w
  4319  0E22  00A0               	movwf	??___fladd
  4320  0E23  0820               	movf	??___fladd,w
  4321  0E24  00F9               	movwf	___fladd@a+3
  4322  0E25                     l3168:
  4323  0E25  01AB               	clrf	___fladd@grs
  4324  0E26                     l3170:
  4325  0E26  0829               	movf	___fladd@aexp,w
  4326  0E27  00A0               	movwf	??___fladd
  4327  0E28  01A1               	clrf	??___fladd+1
  4328  0E29  0821               	movf	??___fladd+1,w
  4329  0E2A  00A3               	movwf	??___fladd+3
  4330  0E2B  082A               	movf	___fladd@bexp,w
  4331  0E2C  0220               	subwf	??___fladd,w
  4332  0E2D  00A2               	movwf	??___fladd+2
  4333  0E2E  1C03               	skipc
  4334  0E2F  03A3               	decf	??___fladd+3,f
  4335  0E30  0823               	movf	??___fladd+3,w
  4336  0E31  3A80               	xorlw	128
  4337  0E32  00FF               	movwf	btemp+1
  4338  0E33  3080               	movlw	128
  4339  0E34  027F               	subwf	btemp+1,w
  4340  0E35  1D03               	skipz
  4341  0E36  2E39               	goto	u3915
  4342  0E37  301A               	movlw	26
  4343  0E38  0222               	subwf	??___fladd+2,w
  4344  0E39                     u3915:
  4345  0E39  1C03               	skipc
  4346  0E3A  2E3C               	goto	u3911
  4347  0E3B  2E3D               	goto	u3910
  4348  0E3C                     u3911:
  4349  0E3C  2E7A               	goto	l3186
  4350  0E3D                     u3910:
  4351  0E3D                     l3172:
  4352  0E3D  0875               	movf	___fladd@b+3,w
  4353  0E3E  0474               	iorwf	___fladd@b+2,w
  4354  0E3F  0473               	iorwf	___fladd@b+1,w
  4355  0E40  0472               	iorwf	___fladd@b,w
  4356  0E41  1D03               	skipz
  4357  0E42  2E44               	goto	u3921
  4358  0E43  2E46               	goto	u3920
  4359  0E44                     u3921:
  4360  0E44  3001               	movlw	1
  4361  0E45  2E47               	goto	u3930
  4362  0E46                     u3920:
  4363  0E46  3000               	movlw	0
  4364  0E47                     u3930:
  4365  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4366  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4367  0E49  00A0               	movwf	??___fladd
  4368  0E4A  0820               	movf	??___fladd,w
  4369  0E4B  00AB               	movwf	___fladd@grs
  4370  0E4C  3000               	movlw	0
  4371  0E4D  00F5               	movwf	___fladd@b+3
  4372  0E4E  3000               	movlw	0
  4373  0E4F  00F4               	movwf	___fladd@b+2
  4374  0E50  3000               	movlw	0
  4375  0E51  00F3               	movwf	___fladd@b+1
  4376  0E52  3000               	movlw	0
  4377  0E53  00F2               	movwf	___fladd@b
  4378  0E54  0829               	movf	___fladd@aexp,w
  4379  0E55  00A0               	movwf	??___fladd
  4380  0E56  0820               	movf	??___fladd,w
  4381  0E57  00AA               	movwf	___fladd@bexp
  4382  0E58  2E82               	goto	l693
  4383  0E59                     l695:
  4384  0E59  1C2B               	btfss	___fladd@grs,0
  4385  0E5A  2E5C               	goto	u3941
  4386  0E5B  2E5D               	goto	u3940
  4387  0E5C                     u3941:
  4388  0E5C  2E66               	goto	l3176
  4389  0E5D                     u3940:
  4390  0E5D                     l3174:
  4391  0E5D  082B               	movf	___fladd@grs,w
  4392  0E5E  00A0               	movwf	??___fladd
  4393  0E5F  1003               	clrc
  4394  0E60  0C20               	rrf	??___fladd,w
  4395  0E61  3801               	iorlw	1
  4396  0E62  00A1               	movwf	??___fladd+1
  4397  0E63  0821               	movf	??___fladd+1,w
  4398  0E64  00AB               	movwf	___fladd@grs
  4399  0E65  2E68               	goto	l3178
  4400  0E66                     l3176:
  4401  0E66  1003               	clrc
  4402  0E67  0CAB               	rrf	___fladd@grs,f
  4403  0E68                     l3178:
  4404  0E68  1C72               	btfss	___fladd@b,0
  4405  0E69  2E6B               	goto	u3951
  4406  0E6A  2E6C               	goto	u3950
  4407  0E6B                     u3951:
  4408  0E6B  2E6D               	goto	l3182
  4409  0E6C                     u3950:
  4410  0E6C                     l3180:
  4411  0E6C  17AB               	bsf	___fladd@grs,7
  4412  0E6D                     l3182:
  4413  0E6D  3001               	movlw	1
  4414  0E6E  00A0               	movwf	??___fladd
  4415  0E6F                     u3965:
  4416  0E6F  0D75               	rlf	___fladd@b+3,w
  4417  0E70  0CF5               	rrf	___fladd@b+3,f
  4418  0E71  0CF4               	rrf	___fladd@b+2,f
  4419  0E72  0CF3               	rrf	___fladd@b+1,f
  4420  0E73  0CF2               	rrf	___fladd@b,f
  4421  0E74  0BA0               	decfsz	??___fladd& (0+127),f
  4422  0E75  2E6F               	goto	u3965
  4423  0E76                     l3184:
  4424  0E76  3001               	movlw	1
  4425  0E77  00A0               	movwf	??___fladd
  4426  0E78  0820               	movf	??___fladd,w
  4427  0E79  07AA               	addwf	___fladd@bexp,f
  4428  0E7A                     l3186:
  4429  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  4430  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  4431  0E7C  0829               	movf	___fladd@aexp,w
  4432  0E7D  022A               	subwf	___fladd@bexp,w
  4433  0E7E  1C03               	skipc
  4434  0E7F  2E81               	goto	u3971
  4435  0E80  2E82               	goto	u3970
  4436  0E81                     u3971:
  4437  0E81  2E59               	goto	l695
  4438  0E82                     u3970:
  4439  0E82                     l693:
  4440  0E82  1B28               	btfsc	___fladd@signs,6
  4441  0E83  2E85               	goto	u3981
  4442  0E84  2E86               	goto	u3980
  4443  0E85                     u3981:
  4444  0E85  2ED1               	goto	l3212
  4445  0E86                     u3980:
  4446  0E86                     l3188:
  4447  0E86  082A               	movf	___fladd@bexp,w
  4448  0E87  1D03               	btfss	3,2
  4449  0E88  2E8A               	goto	u3991
  4450  0E89  2E8B               	goto	u3990
  4451  0E8A                     u3991:
  4452  0E8A  2E94               	goto	l3194
  4453  0E8B                     u3990:
  4454  0E8B                     l3190:
  4455  0E8B  3000               	movlw	0
  4456  0E8C  00F5               	movwf	?___fladd+3
  4457  0E8D  3000               	movlw	0
  4458  0E8E  00F4               	movwf	?___fladd+2
  4459  0E8F  3000               	movlw	0
  4460  0E90  00F3               	movwf	?___fladd+1
  4461  0E91  3000               	movlw	0
  4462  0E92  00F2               	movwf	?___fladd
  4463  0E93  2FFF               	goto	l702
  4464  0E94                     l3194:
  4465  0E94  0876               	movf	___fladd@a,w
  4466  0E95  07F2               	addwf	___fladd@b,f
  4467  0E96  0877               	movf	___fladd@a+1,w
  4468  0E97  1103               	clrz
  4469  0E98  1803               	skipnc
  4470  0E99  3E01               	addlw	1
  4471  0E9A  1903               	skipnz
  4472  0E9B  2E9D               	goto	u4001
  4473  0E9C  07F3               	addwf	___fladd@b+1,f
  4474  0E9D                     u4001:
  4475  0E9D  0878               	movf	___fladd@a+2,w
  4476  0E9E  1103               	clrz
  4477  0E9F  1803               	skipnc
  4478  0EA0  3E01               	addlw	1
  4479  0EA1  1903               	skipnz
  4480  0EA2  2EA4               	goto	u4002
  4481  0EA3  07F4               	addwf	___fladd@b+2,f
  4482  0EA4                     u4002:
  4483  0EA4  0879               	movf	___fladd@a+3,w
  4484  0EA5  1103               	clrz
  4485  0EA6  1803               	skipnc
  4486  0EA7  3E01               	addlw	1
  4487  0EA8  1903               	skipnz
  4488  0EA9  2EAB               	goto	u4003
  4489  0EAA  07F5               	addwf	___fladd@b+3,f
  4490  0EAB                     u4003:
  4491  0EAB                     l3196:
  4492  0EAB  1C75               	btfss	___fladd@b+3,0
  4493  0EAC  2EAE               	goto	u4011
  4494  0EAD  2EAF               	goto	u4010
  4495  0EAE                     u4011:
  4496  0EAE  2F85               	goto	l3246
  4497  0EAF                     u4010:
  4498  0EAF                     l3198:
  4499  0EAF  1C2B               	btfss	___fladd@grs,0
  4500  0EB0  2EB2               	goto	u4021
  4501  0EB1  2EB3               	goto	u4020
  4502  0EB2                     u4021:
  4503  0EB2  2EBC               	goto	l3202
  4504  0EB3                     u4020:
  4505  0EB3                     l3200:
  4506  0EB3  082B               	movf	___fladd@grs,w
  4507  0EB4  00A0               	movwf	??___fladd
  4508  0EB5  1003               	clrc
  4509  0EB6  0C20               	rrf	??___fladd,w
  4510  0EB7  3801               	iorlw	1
  4511  0EB8  00A1               	movwf	??___fladd+1
  4512  0EB9  0821               	movf	??___fladd+1,w
  4513  0EBA  00AB               	movwf	___fladd@grs
  4514  0EBB  2EBE               	goto	l3204
  4515  0EBC                     l3202:
  4516  0EBC  1003               	clrc
  4517  0EBD  0CAB               	rrf	___fladd@grs,f
  4518  0EBE                     l3204:
  4519  0EBE  1C72               	btfss	___fladd@b,0
  4520  0EBF  2EC1               	goto	u4031
  4521  0EC0  2EC2               	goto	u4030
  4522  0EC1                     u4031:
  4523  0EC1  2EC3               	goto	l3208
  4524  0EC2                     u4030:
  4525  0EC2                     l3206:
  4526  0EC2  17AB               	bsf	___fladd@grs,7
  4527  0EC3                     l3208:
  4528  0EC3  3001               	movlw	1
  4529  0EC4  00A0               	movwf	??___fladd
  4530  0EC5                     u4045:
  4531  0EC5  0D75               	rlf	___fladd@b+3,w
  4532  0EC6  0CF5               	rrf	___fladd@b+3,f
  4533  0EC7  0CF4               	rrf	___fladd@b+2,f
  4534  0EC8  0CF3               	rrf	___fladd@b+1,f
  4535  0EC9  0CF2               	rrf	___fladd@b,f
  4536  0ECA  0BA0               	decfsz	??___fladd& (0+127),f
  4537  0ECB  2EC5               	goto	u4045
  4538  0ECC                     l3210:
  4539  0ECC  3001               	movlw	1
  4540  0ECD  00A0               	movwf	??___fladd
  4541  0ECE  0820               	movf	??___fladd,w
  4542  0ECF  07AA               	addwf	___fladd@bexp,f
  4543  0ED0  2F85               	goto	l3246
  4544  0ED1                     l3212:
  4545  0ED1  0875               	movf	___fladd@b+3,w
  4546  0ED2  3A80               	xorlw	128
  4547  0ED3  00FF               	movwf	btemp+1
  4548  0ED4  0879               	movf	___fladd@a+3,w
  4549  0ED5  3A80               	xorlw	128
  4550  0ED6  027F               	subwf	btemp+1,w
  4551  0ED7  1D03               	skipz
  4552  0ED8  2EE3               	goto	u4053
  4553  0ED9  0878               	movf	___fladd@a+2,w
  4554  0EDA  0274               	subwf	___fladd@b+2,w
  4555  0EDB  1D03               	skipz
  4556  0EDC  2EE3               	goto	u4053
  4557  0EDD  0877               	movf	___fladd@a+1,w
  4558  0EDE  0273               	subwf	___fladd@b+1,w
  4559  0EDF  1D03               	skipz
  4560  0EE0  2EE3               	goto	u4053
  4561  0EE1  0876               	movf	___fladd@a,w
  4562  0EE2  0272               	subwf	___fladd@b,w
  4563  0EE3                     u4053:
  4564  0EE3  1803               	skipnc
  4565  0EE4  2EE6               	goto	u4051
  4566  0EE5  2EE7               	goto	u4050
  4567  0EE6                     u4051:
  4568  0EE6  2F3F               	goto	l3222
  4569  0EE7                     u4050:
  4570  0EE7                     l3214:
  4571  0EE7  30FF               	movlw	255
  4572  0EE8  00A0               	movwf	??___fladd
  4573  0EE9  30FF               	movlw	255
  4574  0EEA  00A1               	movwf	??___fladd+1
  4575  0EEB  30FF               	movlw	255
  4576  0EEC  00A2               	movwf	??___fladd+2
  4577  0EED  30FF               	movlw	255
  4578  0EEE  00A3               	movwf	??___fladd+3
  4579  0EEF  0876               	movf	___fladd@a,w
  4580  0EF0  00A4               	movwf	??___fladd+4
  4581  0EF1  0877               	movf	___fladd@a+1,w
  4582  0EF2  00A5               	movwf	??___fladd+5
  4583  0EF3  0878               	movf	___fladd@a+2,w
  4584  0EF4  00A6               	movwf	??___fladd+6
  4585  0EF5  0879               	movf	___fladd@a+3,w
  4586  0EF6  00A7               	movwf	??___fladd+7
  4587  0EF7  0872               	movf	___fladd@b,w
  4588  0EF8  02A4               	subwf	??___fladd+4,f
  4589  0EF9  0873               	movf	___fladd@b+1,w
  4590  0EFA  1C03               	skipc
  4591  0EFB  0F73               	incfsz	___fladd@b+1,w
  4592  0EFC  2EFE               	goto	u4061
  4593  0EFD  2EFF               	goto	u4062
  4594  0EFE                     u4061:
  4595  0EFE  02A5               	subwf	??___fladd+5,f
  4596  0EFF                     u4062:
  4597  0EFF  0874               	movf	___fladd@b+2,w
  4598  0F00  1C03               	skipc
  4599  0F01  0F74               	incfsz	___fladd@b+2,w
  4600  0F02  2F04               	goto	u4063
  4601  0F03  2F05               	goto	u4064
  4602  0F04                     u4063:
  4603  0F04  02A6               	subwf	??___fladd+6,f
  4604  0F05                     u4064:
  4605  0F05  0875               	movf	___fladd@b+3,w
  4606  0F06  1C03               	skipc
  4607  0F07  0F75               	incfsz	___fladd@b+3,w
  4608  0F08  2F0A               	goto	u4065
  4609  0F09  2F0B               	goto	u4066
  4610  0F0A                     u4065:
  4611  0F0A  02A7               	subwf	??___fladd+7,f
  4612  0F0B                     u4066:
  4613  0F0B  0824               	movf	??___fladd+4,w
  4614  0F0C  07A0               	addwf	??___fladd,f
  4615  0F0D  0825               	movf	??___fladd+5,w
  4616  0F0E  1803               	skipnc
  4617  0F0F  0F25               	incfsz	??___fladd+5,w
  4618  0F10  2F12               	goto	u4070
  4619  0F11  2F13               	goto	u4071
  4620  0F12                     u4070:
  4621  0F12  07A1               	addwf	??___fladd+1,f
  4622  0F13                     u4071:
  4623  0F13  0826               	movf	??___fladd+6,w
  4624  0F14  1803               	skipnc
  4625  0F15  0F26               	incfsz	??___fladd+6,w
  4626  0F16  2F18               	goto	u4072
  4627  0F17  2F19               	goto	u4073
  4628  0F18                     u4072:
  4629  0F18  07A2               	addwf	??___fladd+2,f
  4630  0F19                     u4073:
  4631  0F19  0827               	movf	??___fladd+7,w
  4632  0F1A  1803               	skipnc
  4633  0F1B  0A27               	incf	??___fladd+7,w
  4634  0F1C  07A3               	addwf	??___fladd+3,f
  4635  0F1D  0823               	movf	??___fladd+3,w
  4636  0F1E  00F5               	movwf	___fladd@b+3
  4637  0F1F  0822               	movf	??___fladd+2,w
  4638  0F20  00F4               	movwf	___fladd@b+2
  4639  0F21  0821               	movf	??___fladd+1,w
  4640  0F22  00F3               	movwf	___fladd@b+1
  4641  0F23  0820               	movf	??___fladd,w
  4642  0F24  00F2               	movwf	___fladd@b
  4643  0F25                     l3216:
  4644  0F25  3080               	movlw	128
  4645  0F26  00A0               	movwf	??___fladd
  4646  0F27  0820               	movf	??___fladd,w
  4647  0F28  06A8               	xorwf	___fladd@signs,f
  4648  0F29  09AB               	comf	___fladd@grs,f
  4649  0F2A  0AAB               	incf	___fladd@grs,f
  4650  0F2B                     l3218:
  4651  0F2B  082B               	movf	___fladd@grs,w
  4652  0F2C  1D03               	btfss	3,2
  4653  0F2D  2F2F               	goto	u4081
  4654  0F2E  2F30               	goto	u4080
  4655  0F2F                     u4081:
  4656  0F2F  2F4D               	goto	l710
  4657  0F30                     u4080:
  4658  0F30                     l3220:
  4659  0F30  3001               	movlw	1
  4660  0F31  07F2               	addwf	___fladd@b,f
  4661  0F32  3000               	movlw	0
  4662  0F33  1803               	skipnc
  4663  0F34  3001               	movlw	1
  4664  0F35  07F3               	addwf	___fladd@b+1,f
  4665  0F36  3000               	movlw	0
  4666  0F37  1803               	skipnc
  4667  0F38  3001               	movlw	1
  4668  0F39  07F4               	addwf	___fladd@b+2,f
  4669  0F3A  3000               	movlw	0
  4670  0F3B  1803               	skipnc
  4671  0F3C  3001               	movlw	1
  4672  0F3D  07F5               	addwf	___fladd@b+3,f
  4673  0F3E  2F4D               	goto	l710
  4674  0F3F                     l3222:
  4675  0F3F  0876               	movf	___fladd@a,w
  4676  0F40  02F2               	subwf	___fladd@b,f
  4677  0F41  0877               	movf	___fladd@a+1,w
  4678  0F42  1C03               	skipc
  4679  0F43  0F77               	incfsz	___fladd@a+1,w
  4680  0F44  02F3               	subwf	___fladd@b+1,f
  4681  0F45  0878               	movf	___fladd@a+2,w
  4682  0F46  1C03               	skipc
  4683  0F47  0F78               	incfsz	___fladd@a+2,w
  4684  0F48  02F4               	subwf	___fladd@b+2,f
  4685  0F49  0879               	movf	___fladd@a+3,w
  4686  0F4A  1C03               	skipc
  4687  0F4B  0F79               	incfsz	___fladd@a+3,w
  4688  0F4C  02F5               	subwf	___fladd@b+3,f
  4689  0F4D                     l710:
  4690  0F4D  0875               	movf	___fladd@b+3,w
  4691  0F4E  0474               	iorwf	___fladd@b+2,w
  4692  0F4F  0473               	iorwf	___fladd@b+1,w
  4693  0F50  0472               	iorwf	___fladd@b,w
  4694  0F51  1D03               	skipz
  4695  0F52  2F54               	goto	u4091
  4696  0F53  2F55               	goto	u4090
  4697  0F54                     u4091:
  4698  0F54  2F81               	goto	l3244
  4699  0F55                     u4090:
  4700  0F55                     l3224:
  4701  0F55  082B               	movf	___fladd@grs,w
  4702  0F56  1D03               	btfss	3,2
  4703  0F57  2F59               	goto	u4101
  4704  0F58  2F5A               	goto	u4100
  4705  0F59                     u4101:
  4706  0F59  2F81               	goto	l3244
  4707  0F5A                     u4100:
  4708  0F5A                     l3226:
  4709  0F5A  3000               	movlw	0
  4710  0F5B  00F5               	movwf	?___fladd+3
  4711  0F5C  3000               	movlw	0
  4712  0F5D  00F4               	movwf	?___fladd+2
  4713  0F5E  3000               	movlw	0
  4714  0F5F  00F3               	movwf	?___fladd+1
  4715  0F60  3000               	movlw	0
  4716  0F61  00F2               	movwf	?___fladd
  4717  0F62  2FFF               	goto	l702
  4718  0F63                     l3230:
  4719  0F63  3001               	movlw	1
  4720  0F64  00A0               	movwf	??___fladd
  4721  0F65                     u4115:
  4722  0F65  1003               	clrc
  4723  0F66  0DF2               	rlf	___fladd@b,f
  4724  0F67  0DF3               	rlf	___fladd@b+1,f
  4725  0F68  0DF4               	rlf	___fladd@b+2,f
  4726  0F69  0DF5               	rlf	___fladd@b+3,f
  4727  0F6A  0BA0               	decfsz	??___fladd,f
  4728  0F6B  2F65               	goto	u4115
  4729  0F6C                     l3232:
  4730  0F6C  1FAB               	btfss	___fladd@grs,7
  4731  0F6D  2F6F               	goto	u4121
  4732  0F6E  2F70               	goto	u4120
  4733  0F6F                     u4121:
  4734  0F6F  2F71               	goto	l714
  4735  0F70                     u4120:
  4736  0F70                     l3234:
  4737  0F70  1472               	bsf	___fladd@b,0
  4738  0F71                     l714:
  4739  0F71  1C2B               	btfss	___fladd@grs,0
  4740  0F72  2F74               	goto	u4131
  4741  0F73  2F75               	goto	u4130
  4742  0F74                     u4131:
  4743  0F74  2F78               	goto	l3238
  4744  0F75                     u4130:
  4745  0F75                     l3236:
  4746  0F75  1403               	setc
  4747  0F76  0DAB               	rlf	___fladd@grs,f
  4748  0F77  2F7A               	goto	l3240
  4749  0F78                     l3238:
  4750  0F78  1003               	clrc
  4751  0F79  0DAB               	rlf	___fladd@grs,f
  4752  0F7A                     l3240:
  4753  0F7A  082A               	movf	___fladd@bexp,w
  4754  0F7B  1903               	btfsc	3,2
  4755  0F7C  2F7E               	goto	u4141
  4756  0F7D  2F7F               	goto	u4140
  4757  0F7E                     u4141:
  4758  0F7E  2F81               	goto	l3244
  4759  0F7F                     u4140:
  4760  0F7F                     l3242:
  4761  0F7F  3001               	movlw	1
  4762  0F80  02AA               	subwf	___fladd@bexp,f
  4763  0F81                     l3244:
  4764  0F81  1FF4               	btfss	___fladd@b+2,7
  4765  0F82  2F84               	goto	u4151
  4766  0F83  2F85               	goto	u4150
  4767  0F84                     u4151:
  4768  0F84  2F63               	goto	l3230
  4769  0F85                     u4150:
  4770  0F85                     l3246:
  4771  0F85  01A9               	clrf	___fladd@aexp
  4772  0F86                     l3248:
  4773  0F86  1FAB               	btfss	___fladd@grs,7
  4774  0F87  2F89               	goto	u4161
  4775  0F88  2F8A               	goto	u4160
  4776  0F89                     u4161:
  4777  0F89  2F98               	goto	l3256
  4778  0F8A                     u4160:
  4779  0F8A                     l3250:
  4780  0F8A  082B               	movf	___fladd@grs,w
  4781  0F8B  397F               	andlw	127
  4782  0F8C  1903               	btfsc	3,2
  4783  0F8D  2F8F               	goto	u4171
  4784  0F8E  2F90               	goto	u4170
  4785  0F8F                     u4171:
  4786  0F8F  2F93               	goto	l720
  4787  0F90                     u4170:
  4788  0F90                     l3252:
  4789  0F90  01A9               	clrf	___fladd@aexp
  4790  0F91  0AA9               	incf	___fladd@aexp,f
  4791  0F92  2F98               	goto	l3256
  4792  0F93                     l720:
  4793  0F93  1C72               	btfss	___fladd@b,0
  4794  0F94  2F96               	goto	u4181
  4795  0F95  2F97               	goto	u4180
  4796  0F96                     u4181:
  4797  0F96  2F98               	goto	l3256
  4798  0F97                     u4180:
  4799  0F97  2F90               	goto	l3252
  4800  0F98                     l3256:
  4801  0F98  0829               	movf	___fladd@aexp,w
  4802  0F99  1903               	btfsc	3,2
  4803  0F9A  2F9C               	goto	u4191
  4804  0F9B  2F9D               	goto	u4190
  4805  0F9C                     u4191:
  4806  0F9C  2FD1               	goto	l723
  4807  0F9D                     u4190:
  4808  0F9D                     l3258:
  4809  0F9D  3001               	movlw	1
  4810  0F9E  07F2               	addwf	___fladd@b,f
  4811  0F9F  3000               	movlw	0
  4812  0FA0  1803               	skipnc
  4813  0FA1  3001               	movlw	1
  4814  0FA2  07F3               	addwf	___fladd@b+1,f
  4815  0FA3  3000               	movlw	0
  4816  0FA4  1803               	skipnc
  4817  0FA5  3001               	movlw	1
  4818  0FA6  07F4               	addwf	___fladd@b+2,f
  4819  0FA7  3000               	movlw	0
  4820  0FA8  1803               	skipnc
  4821  0FA9  3001               	movlw	1
  4822  0FAA  07F5               	addwf	___fladd@b+3,f
  4823  0FAB                     l3260:
  4824  0FAB  1C75               	btfss	___fladd@b+3,0
  4825  0FAC  2FAE               	goto	u4201
  4826  0FAD  2FAF               	goto	u4200
  4827  0FAE                     u4201:
  4828  0FAE  2FD1               	goto	l723
  4829  0FAF                     u4200:
  4830  0FAF                     l3262:
  4831  0FAF  0872               	movf	___fladd@b,w
  4832  0FB0  00A0               	movwf	??___fladd
  4833  0FB1  0873               	movf	___fladd@b+1,w
  4834  0FB2  00A1               	movwf	??___fladd+1
  4835  0FB3  0874               	movf	___fladd@b+2,w
  4836  0FB4  00A2               	movwf	??___fladd+2
  4837  0FB5  0875               	movf	___fladd@b+3,w
  4838  0FB6  00A3               	movwf	??___fladd+3
  4839  0FB7  3001               	movlw	1
  4840  0FB8  00A4               	movwf	??___fladd+4
  4841  0FB9                     u4215:
  4842  0FB9  0D23               	rlf	??___fladd+3,w
  4843  0FBA  0CA3               	rrf	??___fladd+3,f
  4844  0FBB  0CA2               	rrf	??___fladd+2,f
  4845  0FBC  0CA1               	rrf	??___fladd+1,f
  4846  0FBD  0CA0               	rrf	??___fladd,f
  4847  0FBE                     u4210:
  4848  0FBE  0BA4               	decfsz	??___fladd+4,f
  4849  0FBF  2FB9               	goto	u4215
  4850  0FC0  0823               	movf	??___fladd+3,w
  4851  0FC1  00F5               	movwf	___fladd@b+3
  4852  0FC2  0822               	movf	??___fladd+2,w
  4853  0FC3  00F4               	movwf	___fladd@b+2
  4854  0FC4  0821               	movf	??___fladd+1,w
  4855  0FC5  00F3               	movwf	___fladd@b+1
  4856  0FC6  0820               	movf	??___fladd,w
  4857  0FC7  00F2               	movwf	___fladd@b
  4858  0FC8  0A2A               	incf	___fladd@bexp,w
  4859  0FC9  1903               	btfsc	3,2
  4860  0FCA  2FCC               	goto	u4221
  4861  0FCB  2FCD               	goto	u4220
  4862  0FCC                     u4221:
  4863  0FCC  2FD1               	goto	l723
  4864  0FCD                     u4220:
  4865  0FCD                     l3264:
  4866  0FCD  3001               	movlw	1
  4867  0FCE  00A0               	movwf	??___fladd
  4868  0FCF  0820               	movf	??___fladd,w
  4869  0FD0  07AA               	addwf	___fladd@bexp,f
  4870  0FD1                     l723:
  4871  0FD1  0A2A               	incf	___fladd@bexp,w
  4872  0FD2  1903               	btfsc	3,2
  4873  0FD3  2FD5               	goto	u4231
  4874  0FD4  2FD6               	goto	u4230
  4875  0FD5                     u4231:
  4876  0FD5  2FDB               	goto	l3268
  4877  0FD6                     u4230:
  4878  0FD6                     l3266:
  4879  0FD6  082A               	movf	___fladd@bexp,w
  4880  0FD7  1D03               	btfss	3,2
  4881  0FD8  2FDA               	goto	u4241
  4882  0FD9  2FDB               	goto	u4240
  4883  0FDA                     u4241:
  4884  0FDA  2FE9               	goto	l3274
  4885  0FDB                     u4240:
  4886  0FDB                     l3268:
  4887  0FDB  3000               	movlw	0
  4888  0FDC  00F5               	movwf	___fladd@b+3
  4889  0FDD  3000               	movlw	0
  4890  0FDE  00F4               	movwf	___fladd@b+2
  4891  0FDF  3000               	movlw	0
  4892  0FE0  00F3               	movwf	___fladd@b+1
  4893  0FE1  3000               	movlw	0
  4894  0FE2  00F2               	movwf	___fladd@b
  4895  0FE3                     l3270:
  4896  0FE3  082A               	movf	___fladd@bexp,w
  4897  0FE4  1D03               	btfss	3,2
  4898  0FE5  2FE7               	goto	u4251
  4899  0FE6  2FE8               	goto	u4250
  4900  0FE7                     u4251:
  4901  0FE7  2FE9               	goto	l3274
  4902  0FE8                     u4250:
  4903  0FE8                     l3272:
  4904  0FE8  01A8               	clrf	___fladd@signs
  4905  0FE9                     l3274:
  4906  0FE9  1C2A               	btfss	___fladd@bexp,0
  4907  0FEA  2FEC               	goto	u4261
  4908  0FEB  2FED               	goto	u4260
  4909  0FEC                     u4261:
  4910  0FEC  2FEF               	goto	l3278
  4911  0FED                     u4260:
  4912  0FED                     l3276:
  4913  0FED  17F4               	bsf	___fladd@b+2,7
  4914  0FEE  2FF3               	goto	l731
  4915  0FEF                     l3278:
  4916  0FEF  307F               	movlw	127
  4917  0FF0  00A0               	movwf	??___fladd
  4918  0FF1  0820               	movf	??___fladd,w
  4919  0FF2  05F4               	andwf	___fladd@b+2,f
  4920  0FF3                     l731:
  4921  0FF3  082A               	movf	___fladd@bexp,w
  4922  0FF4  00A0               	movwf	??___fladd
  4923  0FF5  1003               	clrc
  4924  0FF6  0C20               	rrf	??___fladd,w
  4925  0FF7  00A1               	movwf	??___fladd+1
  4926  0FF8  0821               	movf	??___fladd+1,w
  4927  0FF9  00F5               	movwf	___fladd@b+3
  4928  0FFA                     l3280:
  4929  0FFA  1FA8               	btfss	___fladd@signs,7
  4930  0FFB  2FFD               	goto	u4271
  4931  0FFC  2FFE               	goto	u4270
  4932  0FFD                     u4271:
  4933  0FFD  2FFF               	goto	l732
  4934  0FFE                     u4270:
  4935  0FFE                     l3282:
  4936  0FFE  17F5               	bsf	___fladd@b+3,7
  4937  0FFF                     l732:
  4938  0FFF                     l702:
  4939  0FFF  0008               	return
  4940  1000                     __end_of___fladd:
  4941                           
  4942                           	psect	text19
  4943  041D                     __ptext19:	
  4944 ;; *************** function ___flmul *****************
  4945 ;; Defined at:
  4946 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  b               4   31[BANK0 ] unsigned char 
  4949 ;;  a               4   35[BANK0 ] unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  prod            4   51[BANK0 ] struct .
  4952 ;;  grs             4   46[BANK0 ] unsigned long 
  4953 ;;  temp            2   55[BANK0 ] struct .
  4954 ;;  bexp            1   50[BANK0 ] unsigned char 
  4955 ;;  aexp            1   45[BANK0 ] unsigned char 
  4956 ;;  sign            1   44[BANK0 ] unsigned char 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  4   31[BANK0 ] unsigned char 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4966 ;;      Params:         0       8       0       0       0
  4967 ;;      Locals:         0      13       0       0       0
  4968 ;;      Temps:          0       5       0       0       0
  4969 ;;      Totals:         0      26       0       0       0
  4970 ;;Total ram usage:       26 bytes
  4971 ;; Hardware stack levels used: 1
  4972 ;; Hardware stack levels required when called: 2
  4973 ;; This function calls:
  4974 ;;		__Umul8_16
  4975 ;; This function is called by:
  4976 ;;		_ADC_convert
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           
  4981                           ;psect for function ___flmul
  4982  041D                     ___flmul:
  4983  041D                     l3570:	
  4984                           ;incstack = 0
  4985                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4986                           
  4987  041D  1283               	bcf	3,5	;RP0=0, select bank0
  4988  041E  1303               	bcf	3,6	;RP1=0, select bank0
  4989  041F  0842               	movf	___flmul@b+3,w
  4990  0420  3980               	andlw	128
  4991  0421  00C7               	movwf	??___flmul
  4992  0422  0847               	movf	??___flmul,w
  4993  0423  00CC               	movwf	___flmul@sign
  4994  0424                     l3572:
  4995  0424  0842               	movf	___flmul@b+3,w
  4996  0425  00C7               	movwf	??___flmul
  4997  0426  0747               	addwf	??___flmul,w
  4998  0427  00C8               	movwf	??___flmul+1
  4999  0428  0848               	movf	??___flmul+1,w
  5000  0429  00D2               	movwf	___flmul@bexp
  5001  042A                     l3574:
  5002  042A  1FC1               	btfss	___flmul@b+2,7
  5003  042B  2C2D               	goto	u4931
  5004  042C  2C2E               	goto	u4930
  5005  042D                     u4931:
  5006  042D  2C2F               	goto	l3578
  5007  042E                     u4930:
  5008  042E                     l3576:
  5009  042E  1452               	bsf	___flmul@bexp,0
  5010  042F                     l3578:
  5011  042F  0852               	movf	___flmul@bexp,w
  5012  0430  1903               	btfsc	3,2
  5013  0431  2C33               	goto	u4941
  5014  0432  2C34               	goto	u4940
  5015  0433                     u4941:
  5016  0433  2C43               	goto	l3586
  5017  0434                     u4940:
  5018  0434                     l3580:
  5019  0434  0A52               	incf	___flmul@bexp,w
  5020  0435  1D03               	btfss	3,2
  5021  0436  2C38               	goto	u4951
  5022  0437  2C39               	goto	u4950
  5023  0438                     u4951:
  5024  0438  2C41               	goto	l3584
  5025  0439                     u4950:
  5026  0439                     l3582:
  5027  0439  3000               	movlw	0
  5028  043A  00C2               	movwf	___flmul@b+3
  5029  043B  3000               	movlw	0
  5030  043C  00C1               	movwf	___flmul@b+2
  5031  043D  3000               	movlw	0
  5032  043E  00C0               	movwf	___flmul@b+1
  5033  043F  3000               	movlw	0
  5034  0440  00BF               	movwf	___flmul@b
  5035  0441                     l3584:
  5036  0441  17C1               	bsf	___flmul@b+2,7
  5037  0442  2C4B               	goto	l3588
  5038  0443                     l3586:
  5039  0443  3000               	movlw	0
  5040  0444  00C2               	movwf	___flmul@b+3
  5041  0445  3000               	movlw	0
  5042  0446  00C1               	movwf	___flmul@b+2
  5043  0447  3000               	movlw	0
  5044  0448  00C0               	movwf	___flmul@b+1
  5045  0449  3000               	movlw	0
  5046  044A  00BF               	movwf	___flmul@b
  5047  044B                     l3588:
  5048  044B  0846               	movf	___flmul@a+3,w
  5049  044C  3980               	andlw	128
  5050  044D  00C7               	movwf	??___flmul
  5051  044E  0847               	movf	??___flmul,w
  5052  044F  06CC               	xorwf	___flmul@sign,f
  5053  0450                     l3590:
  5054  0450  0846               	movf	___flmul@a+3,w
  5055  0451  00C7               	movwf	??___flmul
  5056  0452  0747               	addwf	??___flmul,w
  5057  0453  00C8               	movwf	??___flmul+1
  5058  0454  0848               	movf	??___flmul+1,w
  5059  0455  00CD               	movwf	___flmul@aexp
  5060  0456                     l3592:
  5061  0456  1FC5               	btfss	___flmul@a+2,7
  5062  0457  2C59               	goto	u4961
  5063  0458  2C5A               	goto	u4960
  5064  0459                     u4961:
  5065  0459  2C5B               	goto	l3596
  5066  045A                     u4960:
  5067  045A                     l3594:
  5068  045A  144D               	bsf	___flmul@aexp,0
  5069  045B                     l3596:
  5070  045B  084D               	movf	___flmul@aexp,w
  5071  045C  1903               	btfsc	3,2
  5072  045D  2C5F               	goto	u4971
  5073  045E  2C60               	goto	u4970
  5074  045F                     u4971:
  5075  045F  2C6F               	goto	l3604
  5076  0460                     u4970:
  5077  0460                     l3598:
  5078  0460  0A4D               	incf	___flmul@aexp,w
  5079  0461  1D03               	btfss	3,2
  5080  0462  2C64               	goto	u4981
  5081  0463  2C65               	goto	u4980
  5082  0464                     u4981:
  5083  0464  2C6D               	goto	l3602
  5084  0465                     u4980:
  5085  0465                     l3600:
  5086  0465  3000               	movlw	0
  5087  0466  00C6               	movwf	___flmul@a+3
  5088  0467  3000               	movlw	0
  5089  0468  00C5               	movwf	___flmul@a+2
  5090  0469  3000               	movlw	0
  5091  046A  00C4               	movwf	___flmul@a+1
  5092  046B  3000               	movlw	0
  5093  046C  00C3               	movwf	___flmul@a
  5094  046D                     l3602:
  5095  046D  17C5               	bsf	___flmul@a+2,7
  5096  046E  2C77               	goto	l3606
  5097  046F                     l3604:
  5098  046F  3000               	movlw	0
  5099  0470  00C6               	movwf	___flmul@a+3
  5100  0471  3000               	movlw	0
  5101  0472  00C5               	movwf	___flmul@a+2
  5102  0473  3000               	movlw	0
  5103  0474  00C4               	movwf	___flmul@a+1
  5104  0475  3000               	movlw	0
  5105  0476  00C3               	movwf	___flmul@a
  5106  0477                     l3606:
  5107  0477  084D               	movf	___flmul@aexp,w
  5108  0478  1903               	btfsc	3,2
  5109  0479  2C7B               	goto	u4991
  5110  047A  2C7C               	goto	u4990
  5111  047B                     u4991:
  5112  047B  2C81               	goto	l3610
  5113  047C                     u4990:
  5114  047C                     l3608:
  5115  047C  0852               	movf	___flmul@bexp,w
  5116  047D  1D03               	btfss	3,2
  5117  047E  2C80               	goto	u5001
  5118  047F  2C81               	goto	u5000
  5119  0480                     u5001:
  5120  0480  2C8A               	goto	l3614
  5121  0481                     u5000:
  5122  0481                     l3610:
  5123  0481  3000               	movlw	0
  5124  0482  00C2               	movwf	?___flmul+3
  5125  0483  3000               	movlw	0
  5126  0484  00C1               	movwf	?___flmul+2
  5127  0485  3000               	movlw	0
  5128  0486  00C0               	movwf	?___flmul+1
  5129  0487  3000               	movlw	0
  5130  0488  00BF               	movwf	?___flmul
  5131  0489  2F7D               	goto	l785
  5132  048A                     l3614:
  5133  048A  083F               	movf	___flmul@b,w
  5134  048B  00C7               	movwf	??___flmul
  5135  048C  0847               	movf	??___flmul,w
  5136  048D  00F2               	movwf	__Umul8_16@multiplicand
  5137  048E  0845               	movf	___flmul@a+2,w
  5138  048F  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5139  0494  0873               	movf	?__Umul8_16+1,w
  5140  0495  1283               	bcf	3,5	;RP0=0, select bank0
  5141  0496  1303               	bcf	3,6	;RP1=0, select bank0
  5142  0497  00D8               	movwf	___flmul@temp+1
  5143  0498  0872               	movf	?__Umul8_16,w
  5144  0499  00D7               	movwf	___flmul@temp
  5145  049A                     l3616:
  5146  049A  0857               	movf	___flmul@temp,w
  5147  049B  00C7               	movwf	??___flmul
  5148  049C  01C8               	clrf	??___flmul+1
  5149  049D  01C9               	clrf	??___flmul+2
  5150  049E  01CA               	clrf	??___flmul+3
  5151  049F  084A               	movf	??___flmul+3,w
  5152  04A0  00D1               	movwf	___flmul@grs+3
  5153  04A1  0849               	movf	??___flmul+2,w
  5154  04A2  00D0               	movwf	___flmul@grs+2
  5155  04A3  0848               	movf	??___flmul+1,w
  5156  04A4  00CF               	movwf	___flmul@grs+1
  5157  04A5  0847               	movf	??___flmul,w
  5158  04A6  00CE               	movwf	___flmul@grs
  5159  04A7                     l3618:
  5160  04A7  0858               	movf	___flmul@temp+1,w
  5161  04A8  00C7               	movwf	??___flmul
  5162  04A9  01C8               	clrf	??___flmul+1
  5163  04AA  01C9               	clrf	??___flmul+2
  5164  04AB  01CA               	clrf	??___flmul+3
  5165  04AC  084A               	movf	??___flmul+3,w
  5166  04AD  00D6               	movwf	___flmul@prod+3
  5167  04AE  0849               	movf	??___flmul+2,w
  5168  04AF  00D5               	movwf	___flmul@prod+2
  5169  04B0  0848               	movf	??___flmul+1,w
  5170  04B1  00D4               	movwf	___flmul@prod+1
  5171  04B2  0847               	movf	??___flmul,w
  5172  04B3  00D3               	movwf	___flmul@prod
  5173  04B4  0840               	movf	___flmul@b+1,w
  5174  04B5  00C7               	movwf	??___flmul
  5175  04B6  0847               	movf	??___flmul,w
  5176  04B7  00F2               	movwf	__Umul8_16@multiplicand
  5177  04B8  0844               	movf	___flmul@a+1,w
  5178  04B9  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5179  04BE  0873               	movf	?__Umul8_16+1,w
  5180  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  5181  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  5182  04C1  00D8               	movwf	___flmul@temp+1
  5183  04C2  0872               	movf	?__Umul8_16,w
  5184  04C3  00D7               	movwf	___flmul@temp
  5185  04C4                     l3620:
  5186  04C4  0857               	movf	___flmul@temp,w
  5187  04C5  00C7               	movwf	??___flmul
  5188  04C6  01C8               	clrf	??___flmul+1
  5189  04C7  01C9               	clrf	??___flmul+2
  5190  04C8  01CA               	clrf	??___flmul+3
  5191  04C9  0847               	movf	??___flmul,w
  5192  04CA  07CE               	addwf	___flmul@grs,f
  5193  04CB  0848               	movf	??___flmul+1,w
  5194  04CC  1103               	clrz
  5195  04CD  1803               	skipnc
  5196  04CE  3E01               	addlw	1
  5197  04CF  1903               	skipnz
  5198  04D0  2CD2               	goto	u5011
  5199  04D1  07CF               	addwf	___flmul@grs+1,f
  5200  04D2                     u5011:
  5201  04D2  0849               	movf	??___flmul+2,w
  5202  04D3  1103               	clrz
  5203  04D4  1803               	skipnc
  5204  04D5  3E01               	addlw	1
  5205  04D6  1903               	skipnz
  5206  04D7  2CD9               	goto	u5012
  5207  04D8  07D0               	addwf	___flmul@grs+2,f
  5208  04D9                     u5012:
  5209  04D9  084A               	movf	??___flmul+3,w
  5210  04DA  1103               	clrz
  5211  04DB  1803               	skipnc
  5212  04DC  3E01               	addlw	1
  5213  04DD  1903               	skipnz
  5214  04DE  2CE0               	goto	u5013
  5215  04DF  07D1               	addwf	___flmul@grs+3,f
  5216  04E0                     u5013:
  5217  04E0                     l3622:
  5218  04E0  0858               	movf	___flmul@temp+1,w
  5219  04E1  00C7               	movwf	??___flmul
  5220  04E2  01C8               	clrf	??___flmul+1
  5221  04E3  01C9               	clrf	??___flmul+2
  5222  04E4  01CA               	clrf	??___flmul+3
  5223  04E5  0847               	movf	??___flmul,w
  5224  04E6  07D3               	addwf	___flmul@prod,f
  5225  04E7  0848               	movf	??___flmul+1,w
  5226  04E8  1103               	clrz
  5227  04E9  1803               	skipnc
  5228  04EA  3E01               	addlw	1
  5229  04EB  1903               	skipnz
  5230  04EC  2CEE               	goto	u5021
  5231  04ED  07D4               	addwf	___flmul@prod+1,f
  5232  04EE                     u5021:
  5233  04EE  0849               	movf	??___flmul+2,w
  5234  04EF  1103               	clrz
  5235  04F0  1803               	skipnc
  5236  04F1  3E01               	addlw	1
  5237  04F2  1903               	skipnz
  5238  04F3  2CF5               	goto	u5022
  5239  04F4  07D5               	addwf	___flmul@prod+2,f
  5240  04F5                     u5022:
  5241  04F5  084A               	movf	??___flmul+3,w
  5242  04F6  1103               	clrz
  5243  04F7  1803               	skipnc
  5244  04F8  3E01               	addlw	1
  5245  04F9  1903               	skipnz
  5246  04FA  2CFC               	goto	u5023
  5247  04FB  07D6               	addwf	___flmul@prod+3,f
  5248  04FC                     u5023:
  5249  04FC  0841               	movf	___flmul@b+2,w
  5250  04FD  00C7               	movwf	??___flmul
  5251  04FE  0847               	movf	??___flmul,w
  5252  04FF  00F2               	movwf	__Umul8_16@multiplicand
  5253  0500  0843               	movf	___flmul@a,w
  5254  0501  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5255  0506  0873               	movf	?__Umul8_16+1,w
  5256  0507  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0508  1303               	bcf	3,6	;RP1=0, select bank0
  5258  0509  00D8               	movwf	___flmul@temp+1
  5259  050A  0872               	movf	?__Umul8_16,w
  5260  050B  00D7               	movwf	___flmul@temp
  5261  050C                     l3624:
  5262  050C  0857               	movf	___flmul@temp,w
  5263  050D  00C7               	movwf	??___flmul
  5264  050E  01C8               	clrf	??___flmul+1
  5265  050F  01C9               	clrf	??___flmul+2
  5266  0510  01CA               	clrf	??___flmul+3
  5267  0511  0847               	movf	??___flmul,w
  5268  0512  07CE               	addwf	___flmul@grs,f
  5269  0513  0848               	movf	??___flmul+1,w
  5270  0514  1103               	clrz
  5271  0515  1803               	skipnc
  5272  0516  3E01               	addlw	1
  5273  0517  1903               	skipnz
  5274  0518  2D1A               	goto	u5031
  5275  0519  07CF               	addwf	___flmul@grs+1,f
  5276  051A                     u5031:
  5277  051A  0849               	movf	??___flmul+2,w
  5278  051B  1103               	clrz
  5279  051C  1803               	skipnc
  5280  051D  3E01               	addlw	1
  5281  051E  1903               	skipnz
  5282  051F  2D21               	goto	u5032
  5283  0520  07D0               	addwf	___flmul@grs+2,f
  5284  0521                     u5032:
  5285  0521  084A               	movf	??___flmul+3,w
  5286  0522  1103               	clrz
  5287  0523  1803               	skipnc
  5288  0524  3E01               	addlw	1
  5289  0525  1903               	skipnz
  5290  0526  2D28               	goto	u5033
  5291  0527  07D1               	addwf	___flmul@grs+3,f
  5292  0528                     u5033:
  5293  0528                     l3626:
  5294  0528  0858               	movf	___flmul@temp+1,w
  5295  0529  00C7               	movwf	??___flmul
  5296  052A  01C8               	clrf	??___flmul+1
  5297  052B  01C9               	clrf	??___flmul+2
  5298  052C  01CA               	clrf	??___flmul+3
  5299  052D  0847               	movf	??___flmul,w
  5300  052E  07D3               	addwf	___flmul@prod,f
  5301  052F  0848               	movf	??___flmul+1,w
  5302  0530  1103               	clrz
  5303  0531  1803               	skipnc
  5304  0532  3E01               	addlw	1
  5305  0533  1903               	skipnz
  5306  0534  2D36               	goto	u5041
  5307  0535  07D4               	addwf	___flmul@prod+1,f
  5308  0536                     u5041:
  5309  0536  0849               	movf	??___flmul+2,w
  5310  0537  1103               	clrz
  5311  0538  1803               	skipnc
  5312  0539  3E01               	addlw	1
  5313  053A  1903               	skipnz
  5314  053B  2D3D               	goto	u5042
  5315  053C  07D5               	addwf	___flmul@prod+2,f
  5316  053D                     u5042:
  5317  053D  084A               	movf	??___flmul+3,w
  5318  053E  1103               	clrz
  5319  053F  1803               	skipnc
  5320  0540  3E01               	addlw	1
  5321  0541  1903               	skipnz
  5322  0542  2D44               	goto	u5043
  5323  0543  07D6               	addwf	___flmul@prod+3,f
  5324  0544                     u5043:
  5325  0544                     l3628:
  5326  0544  3008               	movlw	8
  5327  0545  00C7               	movwf	??___flmul
  5328  0546                     u5055:
  5329  0546  1003               	clrc
  5330  0547  0DCE               	rlf	___flmul@grs,f
  5331  0548  0DCF               	rlf	___flmul@grs+1,f
  5332  0549  0DD0               	rlf	___flmul@grs+2,f
  5333  054A  0DD1               	rlf	___flmul@grs+3,f
  5334  054B  0BC7               	decfsz	??___flmul,f
  5335  054C  2D46               	goto	u5055
  5336  054D                     l3630:
  5337  054D  0840               	movf	___flmul@b+1,w
  5338  054E  00C7               	movwf	??___flmul
  5339  054F  0847               	movf	??___flmul,w
  5340  0550  00F2               	movwf	__Umul8_16@multiplicand
  5341  0551  0843               	movf	___flmul@a,w
  5342  0552  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5343  0557  0873               	movf	?__Umul8_16+1,w
  5344  0558  1283               	bcf	3,5	;RP0=0, select bank0
  5345  0559  1303               	bcf	3,6	;RP1=0, select bank0
  5346  055A  00D8               	movwf	___flmul@temp+1
  5347  055B  0872               	movf	?__Umul8_16,w
  5348  055C  00D7               	movwf	___flmul@temp
  5349  055D                     l3632:
  5350  055D  0857               	movf	___flmul@temp,w
  5351  055E  00C7               	movwf	??___flmul
  5352  055F  0858               	movf	___flmul@temp+1,w
  5353  0560  00C8               	movwf	??___flmul+1
  5354  0561  01C9               	clrf	??___flmul+2
  5355  0562  01CA               	clrf	??___flmul+3
  5356  0563  0847               	movf	??___flmul,w
  5357  0564  07CE               	addwf	___flmul@grs,f
  5358  0565  0848               	movf	??___flmul+1,w
  5359  0566  1103               	clrz
  5360  0567  1803               	skipnc
  5361  0568  3E01               	addlw	1
  5362  0569  1903               	skipnz
  5363  056A  2D6C               	goto	u5061
  5364  056B  07CF               	addwf	___flmul@grs+1,f
  5365  056C                     u5061:
  5366  056C  0849               	movf	??___flmul+2,w
  5367  056D  1103               	clrz
  5368  056E  1803               	skipnc
  5369  056F  3E01               	addlw	1
  5370  0570  1903               	skipnz
  5371  0571  2D73               	goto	u5062
  5372  0572  07D0               	addwf	___flmul@grs+2,f
  5373  0573                     u5062:
  5374  0573  084A               	movf	??___flmul+3,w
  5375  0574  1103               	clrz
  5376  0575  1803               	skipnc
  5377  0576  3E01               	addlw	1
  5378  0577  1903               	skipnz
  5379  0578  2D7A               	goto	u5063
  5380  0579  07D1               	addwf	___flmul@grs+3,f
  5381  057A                     u5063:
  5382  057A                     l3634:
  5383  057A  083F               	movf	___flmul@b,w
  5384  057B  00C7               	movwf	??___flmul
  5385  057C  0847               	movf	??___flmul,w
  5386  057D  00F2               	movwf	__Umul8_16@multiplicand
  5387  057E  0844               	movf	___flmul@a+1,w
  5388  057F  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5389  0584  0873               	movf	?__Umul8_16+1,w
  5390  0585  1283               	bcf	3,5	;RP0=0, select bank0
  5391  0586  1303               	bcf	3,6	;RP1=0, select bank0
  5392  0587  00D8               	movwf	___flmul@temp+1
  5393  0588  0872               	movf	?__Umul8_16,w
  5394  0589  00D7               	movwf	___flmul@temp
  5395  058A                     l3636:
  5396  058A  0857               	movf	___flmul@temp,w
  5397  058B  00C7               	movwf	??___flmul
  5398  058C  0858               	movf	___flmul@temp+1,w
  5399  058D  00C8               	movwf	??___flmul+1
  5400  058E  01C9               	clrf	??___flmul+2
  5401  058F  01CA               	clrf	??___flmul+3
  5402  0590  0847               	movf	??___flmul,w
  5403  0591  07CE               	addwf	___flmul@grs,f
  5404  0592  0848               	movf	??___flmul+1,w
  5405  0593  1103               	clrz
  5406  0594  1803               	skipnc
  5407  0595  3E01               	addlw	1
  5408  0596  1903               	skipnz
  5409  0597  2D99               	goto	u5071
  5410  0598  07CF               	addwf	___flmul@grs+1,f
  5411  0599                     u5071:
  5412  0599  0849               	movf	??___flmul+2,w
  5413  059A  1103               	clrz
  5414  059B  1803               	skipnc
  5415  059C  3E01               	addlw	1
  5416  059D  1903               	skipnz
  5417  059E  2DA0               	goto	u5072
  5418  059F  07D0               	addwf	___flmul@grs+2,f
  5419  05A0                     u5072:
  5420  05A0  084A               	movf	??___flmul+3,w
  5421  05A1  1103               	clrz
  5422  05A2  1803               	skipnc
  5423  05A3  3E01               	addlw	1
  5424  05A4  1903               	skipnz
  5425  05A5  2DA7               	goto	u5073
  5426  05A6  07D1               	addwf	___flmul@grs+3,f
  5427  05A7                     u5073:
  5428  05A7                     l3638:
  5429  05A7  3008               	movlw	8
  5430  05A8  00C7               	movwf	??___flmul
  5431  05A9                     u5085:
  5432  05A9  1003               	clrc
  5433  05AA  0DCE               	rlf	___flmul@grs,f
  5434  05AB  0DCF               	rlf	___flmul@grs+1,f
  5435  05AC  0DD0               	rlf	___flmul@grs+2,f
  5436  05AD  0DD1               	rlf	___flmul@grs+3,f
  5437  05AE  0BC7               	decfsz	??___flmul,f
  5438  05AF  2DA9               	goto	u5085
  5439  05B0  083F               	movf	___flmul@b,w
  5440  05B1  00C7               	movwf	??___flmul
  5441  05B2  0847               	movf	??___flmul,w
  5442  05B3  00F2               	movwf	__Umul8_16@multiplicand
  5443  05B4  0843               	movf	___flmul@a,w
  5444  05B5  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5445  05BA  0873               	movf	?__Umul8_16+1,w
  5446  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  5447  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  5448  05BD  00D8               	movwf	___flmul@temp+1
  5449  05BE  0872               	movf	?__Umul8_16,w
  5450  05BF  00D7               	movwf	___flmul@temp
  5451  05C0                     l3640:
  5452  05C0  0857               	movf	___flmul@temp,w
  5453  05C1  00C7               	movwf	??___flmul
  5454  05C2  0858               	movf	___flmul@temp+1,w
  5455  05C3  00C8               	movwf	??___flmul+1
  5456  05C4  01C9               	clrf	??___flmul+2
  5457  05C5  01CA               	clrf	??___flmul+3
  5458  05C6  0847               	movf	??___flmul,w
  5459  05C7  07CE               	addwf	___flmul@grs,f
  5460  05C8  0848               	movf	??___flmul+1,w
  5461  05C9  1103               	clrz
  5462  05CA  1803               	skipnc
  5463  05CB  3E01               	addlw	1
  5464  05CC  1903               	skipnz
  5465  05CD  2DCF               	goto	u5091
  5466  05CE  07CF               	addwf	___flmul@grs+1,f
  5467  05CF                     u5091:
  5468  05CF  0849               	movf	??___flmul+2,w
  5469  05D0  1103               	clrz
  5470  05D1  1803               	skipnc
  5471  05D2  3E01               	addlw	1
  5472  05D3  1903               	skipnz
  5473  05D4  2DD6               	goto	u5092
  5474  05D5  07D0               	addwf	___flmul@grs+2,f
  5475  05D6                     u5092:
  5476  05D6  084A               	movf	??___flmul+3,w
  5477  05D7  1103               	clrz
  5478  05D8  1803               	skipnc
  5479  05D9  3E01               	addlw	1
  5480  05DA  1903               	skipnz
  5481  05DB  2DDD               	goto	u5093
  5482  05DC  07D1               	addwf	___flmul@grs+3,f
  5483  05DD                     u5093:
  5484  05DD                     l3642:
  5485  05DD  0840               	movf	___flmul@b+1,w
  5486  05DE  00C7               	movwf	??___flmul
  5487  05DF  0847               	movf	??___flmul,w
  5488  05E0  00F2               	movwf	__Umul8_16@multiplicand
  5489  05E1  0845               	movf	___flmul@a+2,w
  5490  05E2  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5491  05E7  0873               	movf	?__Umul8_16+1,w
  5492  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  5493  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  5494  05EA  00D8               	movwf	___flmul@temp+1
  5495  05EB  0872               	movf	?__Umul8_16,w
  5496  05EC  00D7               	movwf	___flmul@temp
  5497  05ED  0857               	movf	___flmul@temp,w
  5498  05EE  00C7               	movwf	??___flmul
  5499  05EF  0858               	movf	___flmul@temp+1,w
  5500  05F0  00C8               	movwf	??___flmul+1
  5501  05F1  01C9               	clrf	??___flmul+2
  5502  05F2  01CA               	clrf	??___flmul+3
  5503  05F3  0847               	movf	??___flmul,w
  5504  05F4  07D3               	addwf	___flmul@prod,f
  5505  05F5  0848               	movf	??___flmul+1,w
  5506  05F6  1103               	clrz
  5507  05F7  1803               	skipnc
  5508  05F8  3E01               	addlw	1
  5509  05F9  1903               	skipnz
  5510  05FA  2DFC               	goto	u5101
  5511  05FB  07D4               	addwf	___flmul@prod+1,f
  5512  05FC                     u5101:
  5513  05FC  0849               	movf	??___flmul+2,w
  5514  05FD  1103               	clrz
  5515  05FE  1803               	skipnc
  5516  05FF  3E01               	addlw	1
  5517  0600  1903               	skipnz
  5518  0601  2E03               	goto	u5102
  5519  0602  07D5               	addwf	___flmul@prod+2,f
  5520  0603                     u5102:
  5521  0603  084A               	movf	??___flmul+3,w
  5522  0604  1103               	clrz
  5523  0605  1803               	skipnc
  5524  0606  3E01               	addlw	1
  5525  0607  1903               	skipnz
  5526  0608  2E0A               	goto	u5103
  5527  0609  07D6               	addwf	___flmul@prod+3,f
  5528  060A                     u5103:
  5529  060A                     l3644:
  5530  060A  0841               	movf	___flmul@b+2,w
  5531  060B  00C7               	movwf	??___flmul
  5532  060C  0847               	movf	??___flmul,w
  5533  060D  00F2               	movwf	__Umul8_16@multiplicand
  5534  060E  0844               	movf	___flmul@a+1,w
  5535  060F  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5536  0614  0873               	movf	?__Umul8_16+1,w
  5537  0615  1283               	bcf	3,5	;RP0=0, select bank0
  5538  0616  1303               	bcf	3,6	;RP1=0, select bank0
  5539  0617  00D8               	movwf	___flmul@temp+1
  5540  0618  0872               	movf	?__Umul8_16,w
  5541  0619  00D7               	movwf	___flmul@temp
  5542  061A                     l3646:
  5543  061A  0857               	movf	___flmul@temp,w
  5544  061B  00C7               	movwf	??___flmul
  5545  061C  0858               	movf	___flmul@temp+1,w
  5546  061D  00C8               	movwf	??___flmul+1
  5547  061E  01C9               	clrf	??___flmul+2
  5548  061F  01CA               	clrf	??___flmul+3
  5549  0620  0847               	movf	??___flmul,w
  5550  0621  07D3               	addwf	___flmul@prod,f
  5551  0622  0848               	movf	??___flmul+1,w
  5552  0623  1103               	clrz
  5553  0624  1803               	skipnc
  5554  0625  3E01               	addlw	1
  5555  0626  1903               	skipnz
  5556  0627  2E29               	goto	u5111
  5557  0628  07D4               	addwf	___flmul@prod+1,f
  5558  0629                     u5111:
  5559  0629  0849               	movf	??___flmul+2,w
  5560  062A  1103               	clrz
  5561  062B  1803               	skipnc
  5562  062C  3E01               	addlw	1
  5563  062D  1903               	skipnz
  5564  062E  2E30               	goto	u5112
  5565  062F  07D5               	addwf	___flmul@prod+2,f
  5566  0630                     u5112:
  5567  0630  084A               	movf	??___flmul+3,w
  5568  0631  1103               	clrz
  5569  0632  1803               	skipnc
  5570  0633  3E01               	addlw	1
  5571  0634  1903               	skipnz
  5572  0635  2E37               	goto	u5113
  5573  0636  07D6               	addwf	___flmul@prod+3,f
  5574  0637                     u5113:
  5575  0637  0841               	movf	___flmul@b+2,w
  5576  0638  00C7               	movwf	??___flmul
  5577  0639  0847               	movf	??___flmul,w
  5578  063A  00F2               	movwf	__Umul8_16@multiplicand
  5579  063B  0845               	movf	___flmul@a+2,w
  5580  063C  160A  118A  2748  120A  118A  	fcall	__Umul8_16
  5581  0641  0873               	movf	?__Umul8_16+1,w
  5582  0642  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0643  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0644  00D8               	movwf	___flmul@temp+1
  5585  0645  0872               	movf	?__Umul8_16,w
  5586  0646  00D7               	movwf	___flmul@temp
  5587  0647                     l3648:
  5588  0647  0857               	movf	___flmul@temp,w
  5589  0648  00C7               	movwf	??___flmul
  5590  0649  0858               	movf	___flmul@temp+1,w
  5591  064A  00C8               	movwf	??___flmul+1
  5592  064B  01C9               	clrf	??___flmul+2
  5593  064C  01CA               	clrf	??___flmul+3
  5594  064D  3008               	movlw	8
  5595  064E                     u5125:
  5596  064E  1003               	clrc
  5597  064F  0DC7               	rlf	??___flmul,f
  5598  0650  0DC8               	rlf	??___flmul+1,f
  5599  0651  0DC9               	rlf	??___flmul+2,f
  5600  0652  0DCA               	rlf	??___flmul+3,f
  5601  0653                     u5120:
  5602  0653  3EFF               	addlw	-1
  5603  0654  1D03               	skipz
  5604  0655  2E4E               	goto	u5125
  5605  0656  0847               	movf	??___flmul,w
  5606  0657  07D3               	addwf	___flmul@prod,f
  5607  0658  0848               	movf	??___flmul+1,w
  5608  0659  1103               	clrz
  5609  065A  1803               	skipnc
  5610  065B  3E01               	addlw	1
  5611  065C  1903               	skipnz
  5612  065D  2E5F               	goto	u5131
  5613  065E  07D4               	addwf	___flmul@prod+1,f
  5614  065F                     u5131:
  5615  065F  0849               	movf	??___flmul+2,w
  5616  0660  1103               	clrz
  5617  0661  1803               	skipnc
  5618  0662  3E01               	addlw	1
  5619  0663  1903               	skipnz
  5620  0664  2E66               	goto	u5132
  5621  0665  07D5               	addwf	___flmul@prod+2,f
  5622  0666                     u5132:
  5623  0666  084A               	movf	??___flmul+3,w
  5624  0667  1103               	clrz
  5625  0668  1803               	skipnc
  5626  0669  3E01               	addlw	1
  5627  066A  1903               	skipnz
  5628  066B  2E6D               	goto	u5133
  5629  066C  07D6               	addwf	___flmul@prod+3,f
  5630  066D                     u5133:
  5631  066D                     l3650:
  5632  066D  084E               	movf	___flmul@grs,w
  5633  066E  00C7               	movwf	??___flmul
  5634  066F  084F               	movf	___flmul@grs+1,w
  5635  0670  00C8               	movwf	??___flmul+1
  5636  0671  0850               	movf	___flmul@grs+2,w
  5637  0672  00C9               	movwf	??___flmul+2
  5638  0673  0851               	movf	___flmul@grs+3,w
  5639  0674  00CA               	movwf	??___flmul+3
  5640  0675  3018               	movlw	24
  5641  0676                     u5145:
  5642  0676  1003               	clrc
  5643  0677  0CCA               	rrf	??___flmul+3,f
  5644  0678  0CC9               	rrf	??___flmul+2,f
  5645  0679  0CC8               	rrf	??___flmul+1,f
  5646  067A  0CC7               	rrf	??___flmul,f
  5647  067B                     u5140:
  5648  067B  3EFF               	addlw	-1
  5649  067C  1D03               	skipz
  5650  067D  2E76               	goto	u5145
  5651  067E  0847               	movf	??___flmul,w
  5652  067F  07D3               	addwf	___flmul@prod,f
  5653  0680  0848               	movf	??___flmul+1,w
  5654  0681  1103               	clrz
  5655  0682  1803               	skipnc
  5656  0683  3E01               	addlw	1
  5657  0684  1903               	skipnz
  5658  0685  2E87               	goto	u5151
  5659  0686  07D4               	addwf	___flmul@prod+1,f
  5660  0687                     u5151:
  5661  0687  0849               	movf	??___flmul+2,w
  5662  0688  1103               	clrz
  5663  0689  1803               	skipnc
  5664  068A  3E01               	addlw	1
  5665  068B  1903               	skipnz
  5666  068C  2E8E               	goto	u5152
  5667  068D  07D5               	addwf	___flmul@prod+2,f
  5668  068E                     u5152:
  5669  068E  084A               	movf	??___flmul+3,w
  5670  068F  1103               	clrz
  5671  0690  1803               	skipnc
  5672  0691  3E01               	addlw	1
  5673  0692  1903               	skipnz
  5674  0693  2E95               	goto	u5153
  5675  0694  07D6               	addwf	___flmul@prod+3,f
  5676  0695                     u5153:
  5677  0695                     l3652:
  5678  0695  3008               	movlw	8
  5679  0696  00C7               	movwf	??___flmul
  5680  0697                     u5165:
  5681  0697  1003               	clrc
  5682  0698  0DCE               	rlf	___flmul@grs,f
  5683  0699  0DCF               	rlf	___flmul@grs+1,f
  5684  069A  0DD0               	rlf	___flmul@grs+2,f
  5685  069B  0DD1               	rlf	___flmul@grs+3,f
  5686  069C  0BC7               	decfsz	??___flmul,f
  5687  069D  2E97               	goto	u5165
  5688  069E                     l3654:
  5689  069E  0852               	movf	___flmul@bexp,w
  5690  069F  074D               	addwf	___flmul@aexp,w
  5691  06A0  00C7               	movwf	??___flmul
  5692  06A1  01C8               	clrf	??___flmul+1
  5693  06A2  0DC8               	rlf	??___flmul+1,f
  5694  06A3  0847               	movf	??___flmul,w
  5695  06A4  3E82               	addlw	130
  5696  06A5  00D7               	movwf	___flmul@temp
  5697  06A6  0848               	movf	??___flmul+1,w
  5698  06A7  1803               	skipnc
  5699  06A8  3E01               	addlw	1
  5700  06A9  3EFF               	addlw	255
  5701  06AA  00D8               	movwf	___flmul@temp+1
  5702  06AB  2EC9               	goto	l3666
  5703  06AC                     l3656:
  5704  06AC  3001               	movlw	1
  5705  06AD  00C7               	movwf	??___flmul
  5706  06AE                     u5175:
  5707  06AE  1003               	clrc
  5708  06AF  0DD3               	rlf	___flmul@prod,f
  5709  06B0  0DD4               	rlf	___flmul@prod+1,f
  5710  06B1  0DD5               	rlf	___flmul@prod+2,f
  5711  06B2  0DD6               	rlf	___flmul@prod+3,f
  5712  06B3  0BC7               	decfsz	??___flmul,f
  5713  06B4  2EAE               	goto	u5175
  5714  06B5                     l3658:
  5715  06B5  1FD1               	btfss	___flmul@grs+3,7
  5716  06B6  2EB8               	goto	u5181
  5717  06B7  2EB9               	goto	u5180
  5718  06B8                     u5181:
  5719  06B8  2EBA               	goto	l3662
  5720  06B9                     u5180:
  5721  06B9                     l3660:
  5722  06B9  1453               	bsf	___flmul@prod,0
  5723  06BA                     l3662:
  5724  06BA  3001               	movlw	1
  5725  06BB  00C7               	movwf	??___flmul
  5726  06BC                     u5195:
  5727  06BC  1003               	clrc
  5728  06BD  0DCE               	rlf	___flmul@grs,f
  5729  06BE  0DCF               	rlf	___flmul@grs+1,f
  5730  06BF  0DD0               	rlf	___flmul@grs+2,f
  5731  06C0  0DD1               	rlf	___flmul@grs+3,f
  5732  06C1  0BC7               	decfsz	??___flmul,f
  5733  06C2  2EBC               	goto	u5195
  5734  06C3                     l3664:
  5735  06C3  30FF               	movlw	255
  5736  06C4  07D7               	addwf	___flmul@temp,f
  5737  06C5  1803               	skipnc
  5738  06C6  0AD8               	incf	___flmul@temp+1,f
  5739  06C7  30FF               	movlw	255
  5740  06C8  07D8               	addwf	___flmul@temp+1,f
  5741  06C9                     l3666:
  5742  06C9  1FD5               	btfss	___flmul@prod+2,7
  5743  06CA  2ECC               	goto	u5201
  5744  06CB  2ECD               	goto	u5200
  5745  06CC                     u5201:
  5746  06CC  2EAC               	goto	l3656
  5747  06CD                     u5200:
  5748  06CD                     l3668:
  5749  06CD  01CD               	clrf	___flmul@aexp
  5750  06CE                     l3670:
  5751  06CE  1FD1               	btfss	___flmul@grs+3,7
  5752  06CF  2ED1               	goto	u5211
  5753  06D0  2ED2               	goto	u5210
  5754  06D1                     u5211:
  5755  06D1  2EEE               	goto	l3678
  5756  06D2                     u5210:
  5757  06D2                     l3672:
  5758  06D2  30FF               	movlw	255
  5759  06D3  054E               	andwf	___flmul@grs,w
  5760  06D4  00C7               	movwf	??___flmul
  5761  06D5  30FF               	movlw	255
  5762  06D6  054F               	andwf	___flmul@grs+1,w
  5763  06D7  00C8               	movwf	??___flmul+1
  5764  06D8  30FF               	movlw	255
  5765  06D9  0550               	andwf	___flmul@grs+2,w
  5766  06DA  00C9               	movwf	??___flmul+2
  5767  06DB  307F               	movlw	127
  5768  06DC  0551               	andwf	___flmul@grs+3,w
  5769  06DD  00CA               	movwf	??___flmul+3
  5770  06DE  084A               	movf	??___flmul+3,w
  5771  06DF  0449               	iorwf	??___flmul+2,w
  5772  06E0  0448               	iorwf	??___flmul+1,w
  5773  06E1  0447               	iorwf	??___flmul,w
  5774  06E2  1903               	skipnz
  5775  06E3  2EE5               	goto	u5221
  5776  06E4  2EE6               	goto	u5220
  5777  06E5                     u5221:
  5778  06E5  2EE9               	goto	l791
  5779  06E6                     u5220:
  5780  06E6                     l3674:
  5781  06E6  01CD               	clrf	___flmul@aexp
  5782  06E7  0ACD               	incf	___flmul@aexp,f
  5783  06E8  2EEE               	goto	l3678
  5784  06E9                     l791:
  5785  06E9  1C53               	btfss	___flmul@prod,0
  5786  06EA  2EEC               	goto	u5231
  5787  06EB  2EED               	goto	u5230
  5788  06EC                     u5231:
  5789  06EC  2EEE               	goto	l3678
  5790  06ED                     u5230:
  5791  06ED  2EE6               	goto	l3674
  5792  06EE                     l3678:
  5793  06EE  084D               	movf	___flmul@aexp,w
  5794  06EF  1903               	btfsc	3,2
  5795  06F0  2EF2               	goto	u5241
  5796  06F1  2EF3               	goto	u5240
  5797  06F2                     u5241:
  5798  06F2  2F24               	goto	l3688
  5799  06F3                     u5240:
  5800  06F3                     l3680:
  5801  06F3  3001               	movlw	1
  5802  06F4  07D3               	addwf	___flmul@prod,f
  5803  06F5  3000               	movlw	0
  5804  06F6  1803               	skipnc
  5805  06F7  3001               	movlw	1
  5806  06F8  07D4               	addwf	___flmul@prod+1,f
  5807  06F9  3000               	movlw	0
  5808  06FA  1803               	skipnc
  5809  06FB  3001               	movlw	1
  5810  06FC  07D5               	addwf	___flmul@prod+2,f
  5811  06FD  3000               	movlw	0
  5812  06FE  1803               	skipnc
  5813  06FF  3001               	movlw	1
  5814  0700  07D6               	addwf	___flmul@prod+3,f
  5815  0701                     l3682:
  5816  0701  1C56               	btfss	___flmul@prod+3,0
  5817  0702  2F04               	goto	u5251
  5818  0703  2F05               	goto	u5250
  5819  0704                     u5251:
  5820  0704  2F24               	goto	l3688
  5821  0705                     u5250:
  5822  0705                     l3684:
  5823  0705  0853               	movf	___flmul@prod,w
  5824  0706  00C7               	movwf	??___flmul
  5825  0707  0854               	movf	___flmul@prod+1,w
  5826  0708  00C8               	movwf	??___flmul+1
  5827  0709  0855               	movf	___flmul@prod+2,w
  5828  070A  00C9               	movwf	??___flmul+2
  5829  070B  0856               	movf	___flmul@prod+3,w
  5830  070C  00CA               	movwf	??___flmul+3
  5831  070D  3001               	movlw	1
  5832  070E  00CB               	movwf	??___flmul+4
  5833  070F                     u5265:
  5834  070F  0D4A               	rlf	??___flmul+3,w
  5835  0710  0CCA               	rrf	??___flmul+3,f
  5836  0711  0CC9               	rrf	??___flmul+2,f
  5837  0712  0CC8               	rrf	??___flmul+1,f
  5838  0713  0CC7               	rrf	??___flmul,f
  5839  0714                     u5260:
  5840  0714  0BCB               	decfsz	??___flmul+4,f
  5841  0715  2F0F               	goto	u5265
  5842  0716  084A               	movf	??___flmul+3,w
  5843  0717  00D6               	movwf	___flmul@prod+3
  5844  0718  0849               	movf	??___flmul+2,w
  5845  0719  00D5               	movwf	___flmul@prod+2
  5846  071A  0848               	movf	??___flmul+1,w
  5847  071B  00D4               	movwf	___flmul@prod+1
  5848  071C  0847               	movf	??___flmul,w
  5849  071D  00D3               	movwf	___flmul@prod
  5850  071E                     l3686:
  5851  071E  3001               	movlw	1
  5852  071F  07D7               	addwf	___flmul@temp,f
  5853  0720  1803               	skipnc
  5854  0721  0AD8               	incf	___flmul@temp+1,f
  5855  0722  3000               	movlw	0
  5856  0723  07D8               	addwf	___flmul@temp+1,f
  5857  0724                     l3688:
  5858  0724  0858               	movf	___flmul@temp+1,w
  5859  0725  3A80               	xorlw	128
  5860  0726  00FF               	movwf	btemp+1
  5861  0727  3080               	movlw	128
  5862  0728  027F               	subwf	btemp+1,w
  5863  0729  1D03               	skipz
  5864  072A  2F2D               	goto	u5275
  5865  072B  30FF               	movlw	255
  5866  072C  0257               	subwf	___flmul@temp,w
  5867  072D                     u5275:
  5868  072D  1C03               	skipc
  5869  072E  2F30               	goto	u5271
  5870  072F  2F31               	goto	u5270
  5871  0730                     u5271:
  5872  0730  2F3C               	goto	l3692
  5873  0731                     u5270:
  5874  0731                     l3690:
  5875  0731  307F               	movlw	127
  5876  0732  1283               	bcf	3,5	;RP0=0, select bank0
  5877  0733  1303               	bcf	3,6	;RP1=0, select bank0
  5878  0734  00D6               	movwf	___flmul@prod+3
  5879  0735  3080               	movlw	128
  5880  0736  00D5               	movwf	___flmul@prod+2
  5881  0737  3000               	movlw	0
  5882  0738  00D4               	movwf	___flmul@prod+1
  5883  0739  3000               	movlw	0
  5884  073A  00D3               	movwf	___flmul@prod
  5885  073B  2F71               	goto	l797
  5886  073C                     l3692:
  5887  073C  1283               	bcf	3,5	;RP0=0, select bank0
  5888  073D  1303               	bcf	3,6	;RP1=0, select bank0
  5889  073E  0858               	movf	___flmul@temp+1,w
  5890  073F  3A80               	xorlw	128
  5891  0740  00FF               	movwf	btemp+1
  5892  0741  3080               	movlw	128
  5893  0742  027F               	subwf	btemp+1,w
  5894  0743  1D03               	skipz
  5895  0744  2F47               	goto	u5285
  5896  0745  3001               	movlw	1
  5897  0746  0257               	subwf	___flmul@temp,w
  5898  0747                     u5285:
  5899  0747  1803               	skipnc
  5900  0748  2F4A               	goto	u5281
  5901  0749  2F4B               	goto	u5280
  5902  074A                     u5281:
  5903  074A  2F57               	goto	l3698
  5904  074B                     u5280:
  5905  074B                     l3694:
  5906  074B  3000               	movlw	0
  5907  074C  1283               	bcf	3,5	;RP0=0, select bank0
  5908  074D  1303               	bcf	3,6	;RP1=0, select bank0
  5909  074E  00D6               	movwf	___flmul@prod+3
  5910  074F  3000               	movlw	0
  5911  0750  00D5               	movwf	___flmul@prod+2
  5912  0751  3000               	movlw	0
  5913  0752  00D4               	movwf	___flmul@prod+1
  5914  0753  3000               	movlw	0
  5915  0754  00D3               	movwf	___flmul@prod
  5916  0755                     l3696:
  5917  0755  01CC               	clrf	___flmul@sign
  5918  0756  2F71               	goto	l797
  5919  0757                     l3698:
  5920  0757  1283               	bcf	3,5	;RP0=0, select bank0
  5921  0758  1303               	bcf	3,6	;RP1=0, select bank0
  5922  0759  0857               	movf	___flmul@temp,w
  5923  075A  00C7               	movwf	??___flmul
  5924  075B  0847               	movf	??___flmul,w
  5925  075C  00D2               	movwf	___flmul@bexp
  5926  075D  30FF               	movlw	255
  5927  075E  05D3               	andwf	___flmul@prod,f
  5928  075F  30FF               	movlw	255
  5929  0760  05D4               	andwf	___flmul@prod+1,f
  5930  0761  307F               	movlw	127
  5931  0762  05D5               	andwf	___flmul@prod+2,f
  5932  0763  3000               	movlw	0
  5933  0764  05D6               	andwf	___flmul@prod+3,f
  5934  0765                     l3700:
  5935  0765  1C52               	btfss	___flmul@bexp,0
  5936  0766  2F68               	goto	u5291
  5937  0767  2F69               	goto	u5290
  5938  0768                     u5291:
  5939  0768  2F6A               	goto	l3704
  5940  0769                     u5290:
  5941  0769                     l3702:
  5942  0769  17D5               	bsf	___flmul@prod+2,7
  5943  076A                     l3704:
  5944  076A  0852               	movf	___flmul@bexp,w
  5945  076B  00C7               	movwf	??___flmul
  5946  076C  1003               	clrc
  5947  076D  0C47               	rrf	??___flmul,w
  5948  076E  00C8               	movwf	??___flmul+1
  5949  076F  0848               	movf	??___flmul+1,w
  5950  0770  00D6               	movwf	___flmul@prod+3
  5951  0771                     l797:
  5952  0771  084C               	movf	___flmul@sign,w
  5953  0772  00C7               	movwf	??___flmul
  5954  0773  0847               	movf	??___flmul,w
  5955  0774  04D6               	iorwf	___flmul@prod+3,f
  5956  0775                     l3706:
  5957  0775  0856               	movf	___flmul@prod+3,w
  5958  0776  00C2               	movwf	?___flmul+3
  5959  0777  0855               	movf	___flmul@prod+2,w
  5960  0778  00C1               	movwf	?___flmul+2
  5961  0779  0854               	movf	___flmul@prod+1,w
  5962  077A  00C0               	movwf	?___flmul+1
  5963  077B  0853               	movf	___flmul@prod,w
  5964  077C  00BF               	movwf	?___flmul
  5965  077D                     l785:
  5966  077D  0008               	return
  5967  077E                     __end_of___flmul:
  5968                           
  5969                           	psect	text20
  5970  1748                     __ptext20:	
  5971 ;; *************** function __Umul8_16 *****************
  5972 ;; Defined at:
  5973 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  multiplier      1    wreg     unsigned char 
  5976 ;;  multiplicand    1    2[COMMON] unsigned char 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5979 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5980 ;;  product         2    0[BANK0 ] unsigned int 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  2    2[COMMON] unsigned int 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5990 ;;      Params:         2       0       0       0       0
  5991 ;;      Locals:         0       5       0       0       0
  5992 ;;      Temps:          2       0       0       0       0
  5993 ;;      Totals:         4       5       0       0       0
  5994 ;;Total ram usage:        9 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		___flmul
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           
  6005                           ;psect for function __Umul8_16
  6006  1748                     __Umul8_16:
  6007                           
  6008                           ;incstack = 0
  6009                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6010                           ;__Umul8_16@multiplier stored from wreg
  6011  1748  1283               	bcf	3,5	;RP0=0, select bank0
  6012  1749  1303               	bcf	3,6	;RP1=0, select bank0
  6013  174A  00A4               	movwf	__Umul8_16@multiplier
  6014  174B                     l3284:
  6015  174B  01A0               	clrf	__Umul8_16@product
  6016  174C  01A1               	clrf	__Umul8_16@product+1
  6017  174D                     l3286:
  6018  174D  0872               	movf	__Umul8_16@multiplicand,w
  6019  174E  00F4               	movwf	??__Umul8_16
  6020  174F  01F5               	clrf	??__Umul8_16+1
  6021  1750  0874               	movf	??__Umul8_16,w
  6022  1751  00A2               	movwf	__Umul8_16@word_mpld
  6023  1752  0875               	movf	??__Umul8_16+1,w
  6024  1753  00A3               	movwf	__Umul8_16@word_mpld+1
  6025  1754                     l3288:
  6026  1754  1C24               	btfss	__Umul8_16@multiplier,0
  6027  1755  2F57               	goto	u4281
  6028  1756  2F58               	goto	u4280
  6029  1757                     u4281:
  6030  1757  2F5E               	goto	l804
  6031  1758                     u4280:
  6032  1758                     l3290:
  6033  1758  0822               	movf	__Umul8_16@word_mpld,w
  6034  1759  07A0               	addwf	__Umul8_16@product,f
  6035  175A  1803               	skipnc
  6036  175B  0AA1               	incf	__Umul8_16@product+1,f
  6037  175C  0823               	movf	__Umul8_16@word_mpld+1,w
  6038  175D  07A1               	addwf	__Umul8_16@product+1,f
  6039  175E                     l804:
  6040  175E  3001               	movlw	1
  6041  175F                     u4295:
  6042  175F  1003               	clrc
  6043  1760  0DA2               	rlf	__Umul8_16@word_mpld,f
  6044  1761  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6045  1762  3EFF               	addlw	-1
  6046  1763  1D03               	skipz
  6047  1764  2F5F               	goto	u4295
  6048  1765  1003               	clrc
  6049  1766  0CA4               	rrf	__Umul8_16@multiplier,f
  6050  1767                     l3292:
  6051  1767  0824               	movf	__Umul8_16@multiplier,w
  6052  1768  1D03               	btfss	3,2
  6053  1769  2F6B               	goto	u4301
  6054  176A  2F6C               	goto	u4300
  6055  176B                     u4301:
  6056  176B  2F54               	goto	l3288
  6057  176C                     u4300:
  6058  176C                     l3294:
  6059  176C  0821               	movf	__Umul8_16@product+1,w
  6060  176D  00F3               	movwf	?__Umul8_16+1
  6061  176E  0820               	movf	__Umul8_16@product,w
  6062  176F  00F2               	movwf	?__Umul8_16
  6063  1770                     l806:
  6064  1770  0008               	return
  6065  1771                     __end_of__Umul8_16:
  6066                           
  6067                           	psect	text21
  6068  0A3B                     __ptext21:	
  6069 ;; *************** function ___flge *****************
  6070 ;; Defined at:
  6071 ;;		line 4 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\flge.c"
  6072 ;; Parameters:    Size  Location     Type
  6073 ;;  ff1             4    2[COMMON] unsigned int 
  6074 ;;  ff2             4    6[COMMON] unsigned int 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;		None
  6077 ;; Return value:  Size  Location     Type
  6078 ;;		None               void
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6086 ;;      Params:         8       0       0       0       0
  6087 ;;      Locals:         0       0       0       0       0
  6088 ;;      Temps:          0       4       0       0       0
  6089 ;;      Totals:         8       4       0       0       0
  6090 ;;Total ram usage:       12 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 1
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_ADC_convert
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           
  6101                           ;psect for function ___flge
  6102  0A3B                     ___flge:
  6103  0A3B                     l3366:	
  6104                           ;incstack = 0
  6105                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6106                           
  6107  0A3B  3000               	movlw	0
  6108  0A3C  0572               	andwf	___flge@ff1,w
  6109  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  6110  0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  6111  0A3F  00A0               	movwf	??___flge
  6112  0A40  3000               	movlw	0
  6113  0A41  0573               	andwf	___flge@ff1+1,w
  6114  0A42  00A1               	movwf	??___flge+1
  6115  0A43  3080               	movlw	128
  6116  0A44  0574               	andwf	___flge@ff1+2,w
  6117  0A45  00A2               	movwf	??___flge+2
  6118  0A46  307F               	movlw	127
  6119  0A47  0575               	andwf	___flge@ff1+3,w
  6120  0A48  00A3               	movwf	??___flge+3
  6121  0A49  0823               	movf	??___flge+3,w
  6122  0A4A  0422               	iorwf	??___flge+2,w
  6123  0A4B  0421               	iorwf	??___flge+1,w
  6124  0A4C  0420               	iorwf	??___flge,w
  6125  0A4D  1D03               	skipz
  6126  0A4E  2A50               	goto	u4471
  6127  0A4F  2A51               	goto	u4470
  6128  0A50                     u4471:
  6129  0A50  2A59               	goto	l570
  6130  0A51                     u4470:
  6131  0A51                     l3368:
  6132  0A51  3000               	movlw	0
  6133  0A52  00F5               	movwf	___flge@ff1+3
  6134  0A53  3000               	movlw	0
  6135  0A54  00F4               	movwf	___flge@ff1+2
  6136  0A55  3000               	movlw	0
  6137  0A56  00F3               	movwf	___flge@ff1+1
  6138  0A57  3000               	movlw	0
  6139  0A58  00F2               	movwf	___flge@ff1
  6140  0A59                     l570:
  6141  0A59  3000               	movlw	0
  6142  0A5A  0576               	andwf	___flge@ff2,w
  6143  0A5B  00A0               	movwf	??___flge
  6144  0A5C  3000               	movlw	0
  6145  0A5D  0577               	andwf	___flge@ff2+1,w
  6146  0A5E  00A1               	movwf	??___flge+1
  6147  0A5F  3080               	movlw	128
  6148  0A60  0578               	andwf	___flge@ff2+2,w
  6149  0A61  00A2               	movwf	??___flge+2
  6150  0A62  307F               	movlw	127
  6151  0A63  0579               	andwf	___flge@ff2+3,w
  6152  0A64  00A3               	movwf	??___flge+3
  6153  0A65  0823               	movf	??___flge+3,w
  6154  0A66  0422               	iorwf	??___flge+2,w
  6155  0A67  0421               	iorwf	??___flge+1,w
  6156  0A68  0420               	iorwf	??___flge,w
  6157  0A69  1D03               	skipz
  6158  0A6A  2A6C               	goto	u4481
  6159  0A6B  2A6D               	goto	u4480
  6160  0A6C                     u4481:
  6161  0A6C  2A75               	goto	l3372
  6162  0A6D                     u4480:
  6163  0A6D                     l3370:
  6164  0A6D  3000               	movlw	0
  6165  0A6E  00F9               	movwf	___flge@ff2+3
  6166  0A6F  3000               	movlw	0
  6167  0A70  00F8               	movwf	___flge@ff2+2
  6168  0A71  3000               	movlw	0
  6169  0A72  00F7               	movwf	___flge@ff2+1
  6170  0A73  3000               	movlw	0
  6171  0A74  00F6               	movwf	___flge@ff2
  6172  0A75                     l3372:
  6173  0A75  1FF5               	btfss	___flge@ff1+3,7
  6174  0A76  2A78               	goto	u4491
  6175  0A77  2A79               	goto	u4490
  6176  0A78                     u4491:
  6177  0A78  2A9D               	goto	l3376
  6178  0A79                     u4490:
  6179  0A79                     l3374:
  6180  0A79  3000               	movlw	0
  6181  0A7A  00A0               	movwf	??___flge
  6182  0A7B  3000               	movlw	0
  6183  0A7C  00A1               	movwf	??___flge+1
  6184  0A7D  3000               	movlw	0
  6185  0A7E  00A2               	movwf	??___flge+2
  6186  0A7F  3080               	movlw	128
  6187  0A80  00A3               	movwf	??___flge+3
  6188  0A81  0872               	movf	___flge@ff1,w
  6189  0A82  02A0               	subwf	??___flge,f
  6190  0A83  0873               	movf	___flge@ff1+1,w
  6191  0A84  1C03               	skipc
  6192  0A85  0F73               	incfsz	___flge@ff1+1,w
  6193  0A86  2A88               	goto	u4501
  6194  0A87  2A89               	goto	u4502
  6195  0A88                     u4501:
  6196  0A88  02A1               	subwf	??___flge+1,f
  6197  0A89                     u4502:
  6198  0A89  0874               	movf	___flge@ff1+2,w
  6199  0A8A  1C03               	skipc
  6200  0A8B  0F74               	incfsz	___flge@ff1+2,w
  6201  0A8C  2A8E               	goto	u4503
  6202  0A8D  2A8F               	goto	u4504
  6203  0A8E                     u4503:
  6204  0A8E  02A2               	subwf	??___flge+2,f
  6205  0A8F                     u4504:
  6206  0A8F  0875               	movf	___flge@ff1+3,w
  6207  0A90  1C03               	skipc
  6208  0A91  0F75               	incfsz	___flge@ff1+3,w
  6209  0A92  2A94               	goto	u4505
  6210  0A93  2A95               	goto	u4506
  6211  0A94                     u4505:
  6212  0A94  02A3               	subwf	??___flge+3,f
  6213  0A95                     u4506:
  6214  0A95  0823               	movf	??___flge+3,w
  6215  0A96  00F5               	movwf	___flge@ff1+3
  6216  0A97  0822               	movf	??___flge+2,w
  6217  0A98  00F4               	movwf	___flge@ff1+2
  6218  0A99  0821               	movf	??___flge+1,w
  6219  0A9A  00F3               	movwf	___flge@ff1+1
  6220  0A9B  0820               	movf	??___flge,w
  6221  0A9C  00F2               	movwf	___flge@ff1
  6222  0A9D                     l3376:
  6223  0A9D  1FF9               	btfss	___flge@ff2+3,7
  6224  0A9E  2AA0               	goto	u4511
  6225  0A9F  2AA1               	goto	u4510
  6226  0AA0                     u4511:
  6227  0AA0  2AC5               	goto	l573
  6228  0AA1                     u4510:
  6229  0AA1                     l3378:
  6230  0AA1  3000               	movlw	0
  6231  0AA2  00A0               	movwf	??___flge
  6232  0AA3  3000               	movlw	0
  6233  0AA4  00A1               	movwf	??___flge+1
  6234  0AA5  3000               	movlw	0
  6235  0AA6  00A2               	movwf	??___flge+2
  6236  0AA7  3080               	movlw	128
  6237  0AA8  00A3               	movwf	??___flge+3
  6238  0AA9  0876               	movf	___flge@ff2,w
  6239  0AAA  02A0               	subwf	??___flge,f
  6240  0AAB  0877               	movf	___flge@ff2+1,w
  6241  0AAC  1C03               	skipc
  6242  0AAD  0F77               	incfsz	___flge@ff2+1,w
  6243  0AAE  2AB0               	goto	u4521
  6244  0AAF  2AB1               	goto	u4522
  6245  0AB0                     u4521:
  6246  0AB0  02A1               	subwf	??___flge+1,f
  6247  0AB1                     u4522:
  6248  0AB1  0878               	movf	___flge@ff2+2,w
  6249  0AB2  1C03               	skipc
  6250  0AB3  0F78               	incfsz	___flge@ff2+2,w
  6251  0AB4  2AB6               	goto	u4523
  6252  0AB5  2AB7               	goto	u4524
  6253  0AB6                     u4523:
  6254  0AB6  02A2               	subwf	??___flge+2,f
  6255  0AB7                     u4524:
  6256  0AB7  0879               	movf	___flge@ff2+3,w
  6257  0AB8  1C03               	skipc
  6258  0AB9  0F79               	incfsz	___flge@ff2+3,w
  6259  0ABA  2ABC               	goto	u4525
  6260  0ABB  2ABD               	goto	u4526
  6261  0ABC                     u4525:
  6262  0ABC  02A3               	subwf	??___flge+3,f
  6263  0ABD                     u4526:
  6264  0ABD  0823               	movf	??___flge+3,w
  6265  0ABE  00F9               	movwf	___flge@ff2+3
  6266  0ABF  0822               	movf	??___flge+2,w
  6267  0AC0  00F8               	movwf	___flge@ff2+2
  6268  0AC1  0821               	movf	??___flge+1,w
  6269  0AC2  00F7               	movwf	___flge@ff2+1
  6270  0AC3  0820               	movf	??___flge,w
  6271  0AC4  00F6               	movwf	___flge@ff2
  6272  0AC5                     l573:
  6273  0AC5  3080               	movlw	128
  6274  0AC6  06F5               	xorwf	___flge@ff1+3,f
  6275  0AC7  3080               	movlw	128
  6276  0AC8  06F9               	xorwf	___flge@ff2+3,f
  6277  0AC9  0879               	movf	___flge@ff2+3,w
  6278  0ACA  0275               	subwf	___flge@ff1+3,w
  6279  0ACB  1D03               	skipz
  6280  0ACC  2AD7               	goto	u4535
  6281  0ACD  0878               	movf	___flge@ff2+2,w
  6282  0ACE  0274               	subwf	___flge@ff1+2,w
  6283  0ACF  1D03               	skipz
  6284  0AD0  2AD7               	goto	u4535
  6285  0AD1  0877               	movf	___flge@ff2+1,w
  6286  0AD2  0273               	subwf	___flge@ff1+1,w
  6287  0AD3  1D03               	skipz
  6288  0AD4  2AD7               	goto	u4535
  6289  0AD5  0876               	movf	___flge@ff2,w
  6290  0AD6  0272               	subwf	___flge@ff1,w
  6291  0AD7                     u4535:
  6292  0AD7  1803               	skipnc
  6293  0AD8  2ADA               	goto	u4531
  6294  0AD9  2ADB               	goto	u4530
  6295  0ADA                     u4531:
  6296  0ADA  2ADD               	goto	l3382
  6297  0ADB                     u4530:
  6298  0ADB                     l3380:
  6299  0ADB  1003               	clrc
  6300  0ADC  2ADE               	goto	l574
  6301  0ADD                     l3382:
  6302  0ADD  1403               	setc
  6303  0ADE                     l574:
  6304  0ADE  0008               	return
  6305  0ADF                     __end_of___flge:
  6306                           
  6307                           	psect	text22
  6308  0B9B                     __ptext22:	
  6309 ;; *************** function ___fldiv *****************
  6310 ;; Defined at:
  6311 ;;		line 8 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  a               4   23[BANK0 ] unsigned int 
  6314 ;;  b               4   27[BANK0 ] unsigned int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  grs             4   43[BANK0 ] unsigned long 
  6317 ;;  rem             4   36[BANK0 ] unsigned long 
  6318 ;;  new_exp         2   41[BANK0 ] int 
  6319 ;;  aexp            1   48[BANK0 ] unsigned char 
  6320 ;;  bexp            1   47[BANK0 ] unsigned char 
  6321 ;;  sign            1   40[BANK0 ] unsigned char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  4   23[BANK0 ] unsigned char 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0, btemp+1
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6331 ;;      Params:         0       8       0       0       0
  6332 ;;      Locals:         0      13       0       0       0
  6333 ;;      Temps:          0       5       0       0       0
  6334 ;;      Totals:         0      26       0       0       0
  6335 ;;Total ram usage:       26 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 1
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_ADC_convert
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           
  6346                           ;psect for function ___fldiv
  6347  0B9B                     ___fldiv:
  6348  0B9B                     l3428:	
  6349                           ;incstack = 0
  6350                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6351                           
  6352  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  6353  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  6354  0B9D  083E               	movf	___fldiv@b+3,w
  6355  0B9E  3980               	andlw	128
  6356  0B9F  00BF               	movwf	??___fldiv
  6357  0BA0  083F               	movf	??___fldiv,w
  6358  0BA1  00C8               	movwf	___fldiv@sign
  6359  0BA2                     l3430:
  6360  0BA2  083E               	movf	___fldiv@b+3,w
  6361  0BA3  00BF               	movwf	??___fldiv
  6362  0BA4  073F               	addwf	??___fldiv,w
  6363  0BA5  00C0               	movwf	??___fldiv+1
  6364  0BA6  0840               	movf	??___fldiv+1,w
  6365  0BA7  00CF               	movwf	___fldiv@bexp
  6366  0BA8                     l3432:
  6367  0BA8  1FBD               	btfss	___fldiv@b+2,7
  6368  0BA9  2BAB               	goto	u4641
  6369  0BAA  2BAC               	goto	u4640
  6370  0BAB                     u4641:
  6371  0BAB  2BAD               	goto	l3436
  6372  0BAC                     u4640:
  6373  0BAC                     l3434:
  6374  0BAC  144F               	bsf	___fldiv@bexp,0
  6375  0BAD                     l3436:
  6376  0BAD  084F               	movf	___fldiv@bexp,w
  6377  0BAE  1903               	btfsc	3,2
  6378  0BAF  2BB1               	goto	u4651
  6379  0BB0  2BB2               	goto	u4650
  6380  0BB1                     u4651:
  6381  0BB1  2BC2               	goto	l3446
  6382  0BB2                     u4650:
  6383  0BB2                     l3438:
  6384  0BB2  0A4F               	incf	___fldiv@bexp,w
  6385  0BB3  1D03               	btfss	3,2
  6386  0BB4  2BB6               	goto	u4661
  6387  0BB5  2BB7               	goto	u4660
  6388  0BB6                     u4661:
  6389  0BB6  2BBF               	goto	l3442
  6390  0BB7                     u4660:
  6391  0BB7                     l3440:
  6392  0BB7  3000               	movlw	0
  6393  0BB8  00BE               	movwf	___fldiv@b+3
  6394  0BB9  3000               	movlw	0
  6395  0BBA  00BD               	movwf	___fldiv@b+2
  6396  0BBB  3000               	movlw	0
  6397  0BBC  00BC               	movwf	___fldiv@b+1
  6398  0BBD  3000               	movlw	0
  6399  0BBE  00BB               	movwf	___fldiv@b
  6400  0BBF                     l3442:
  6401  0BBF  17BD               	bsf	___fldiv@b+2,7
  6402  0BC0                     l3444:
  6403  0BC0  01BE               	clrf	___fldiv@b+3
  6404  0BC1  2BCA               	goto	l3448
  6405  0BC2                     l3446:
  6406  0BC2  3000               	movlw	0
  6407  0BC3  00BE               	movwf	___fldiv@b+3
  6408  0BC4  3000               	movlw	0
  6409  0BC5  00BD               	movwf	___fldiv@b+2
  6410  0BC6  3000               	movlw	0
  6411  0BC7  00BC               	movwf	___fldiv@b+1
  6412  0BC8  3000               	movlw	0
  6413  0BC9  00BB               	movwf	___fldiv@b
  6414  0BCA                     l3448:
  6415  0BCA  083A               	movf	___fldiv@a+3,w
  6416  0BCB  3980               	andlw	128
  6417  0BCC  00BF               	movwf	??___fldiv
  6418  0BCD  083F               	movf	??___fldiv,w
  6419  0BCE  06C8               	xorwf	___fldiv@sign,f
  6420  0BCF                     l3450:
  6421  0BCF  083A               	movf	___fldiv@a+3,w
  6422  0BD0  00BF               	movwf	??___fldiv
  6423  0BD1  073F               	addwf	??___fldiv,w
  6424  0BD2  00C0               	movwf	??___fldiv+1
  6425  0BD3  0840               	movf	??___fldiv+1,w
  6426  0BD4  00D0               	movwf	___fldiv@aexp
  6427  0BD5                     l3452:
  6428  0BD5  1FB9               	btfss	___fldiv@a+2,7
  6429  0BD6  2BD8               	goto	u4671
  6430  0BD7  2BD9               	goto	u4670
  6431  0BD8                     u4671:
  6432  0BD8  2BDA               	goto	l3456
  6433  0BD9                     u4670:
  6434  0BD9                     l3454:
  6435  0BD9  1450               	bsf	___fldiv@aexp,0
  6436  0BDA                     l3456:
  6437  0BDA  0850               	movf	___fldiv@aexp,w
  6438  0BDB  1903               	btfsc	3,2
  6439  0BDC  2BDE               	goto	u4681
  6440  0BDD  2BDF               	goto	u4680
  6441  0BDE                     u4681:
  6442  0BDE  2BEF               	goto	l3466
  6443  0BDF                     u4680:
  6444  0BDF                     l3458:
  6445  0BDF  0A50               	incf	___fldiv@aexp,w
  6446  0BE0  1D03               	btfss	3,2
  6447  0BE1  2BE3               	goto	u4691
  6448  0BE2  2BE4               	goto	u4690
  6449  0BE3                     u4691:
  6450  0BE3  2BEC               	goto	l3462
  6451  0BE4                     u4690:
  6452  0BE4                     l3460:
  6453  0BE4  3000               	movlw	0
  6454  0BE5  00BA               	movwf	___fldiv@a+3
  6455  0BE6  3000               	movlw	0
  6456  0BE7  00B9               	movwf	___fldiv@a+2
  6457  0BE8  3000               	movlw	0
  6458  0BE9  00B8               	movwf	___fldiv@a+1
  6459  0BEA  3000               	movlw	0
  6460  0BEB  00B7               	movwf	___fldiv@a
  6461  0BEC                     l3462:
  6462  0BEC  17B9               	bsf	___fldiv@a+2,7
  6463  0BED                     l3464:
  6464  0BED  01BA               	clrf	___fldiv@a+3
  6465  0BEE  2BF7               	goto	l745
  6466  0BEF                     l3466:
  6467  0BEF  3000               	movlw	0
  6468  0BF0  00BA               	movwf	___fldiv@a+3
  6469  0BF1  3000               	movlw	0
  6470  0BF2  00B9               	movwf	___fldiv@a+2
  6471  0BF3  3000               	movlw	0
  6472  0BF4  00B8               	movwf	___fldiv@a+1
  6473  0BF5  3000               	movlw	0
  6474  0BF6  00B7               	movwf	___fldiv@a
  6475  0BF7                     l745:
  6476  0BF7  083A               	movf	___fldiv@a+3,w
  6477  0BF8  0439               	iorwf	___fldiv@a+2,w
  6478  0BF9  0438               	iorwf	___fldiv@a+1,w
  6479  0BFA  0437               	iorwf	___fldiv@a,w
  6480  0BFB  1D03               	skipz
  6481  0BFC  2BFE               	goto	u4701
  6482  0BFD  2BFF               	goto	u4700
  6483  0BFE                     u4701:
  6484  0BFE  2C18               	goto	l3476
  6485  0BFF                     u4700:
  6486  0BFF                     l3468:
  6487  0BFF  3000               	movlw	0
  6488  0C00  00BE               	movwf	___fldiv@b+3
  6489  0C01  3000               	movlw	0
  6490  0C02  00BD               	movwf	___fldiv@b+2
  6491  0C03  3000               	movlw	0
  6492  0C04  00BC               	movwf	___fldiv@b+1
  6493  0C05  3000               	movlw	0
  6494  0C06  00BB               	movwf	___fldiv@b
  6495  0C07  3080               	movlw	128
  6496  0C08  04BD               	iorwf	___fldiv@b+2,f
  6497  0C09  307F               	movlw	127
  6498  0C0A  04BE               	iorwf	___fldiv@b+3,f
  6499  0C0B                     l3470:
  6500  0C0B  0848               	movf	___fldiv@sign,w
  6501  0C0C  00BF               	movwf	??___fldiv
  6502  0C0D  083F               	movf	??___fldiv,w
  6503  0C0E  04BE               	iorwf	___fldiv@b+3,f
  6504  0C0F                     l3472:
  6505  0C0F  083E               	movf	___fldiv@b+3,w
  6506  0C10  00BA               	movwf	?___fldiv+3
  6507  0C11  083D               	movf	___fldiv@b+2,w
  6508  0C12  00B9               	movwf	?___fldiv+2
  6509  0C13  083C               	movf	___fldiv@b+1,w
  6510  0C14  00B8               	movwf	?___fldiv+1
  6511  0C15  083B               	movf	___fldiv@b,w
  6512  0C16  00B7               	movwf	?___fldiv
  6513  0C17  2D77               	goto	l747
  6514  0C18                     l3476:
  6515  0C18  084F               	movf	___fldiv@bexp,w
  6516  0C19  1D03               	btfss	3,2
  6517  0C1A  2C1C               	goto	u4711
  6518  0C1B  2C1D               	goto	u4710
  6519  0C1C                     u4711:
  6520  0C1C  2C26               	goto	l3482
  6521  0C1D                     u4710:
  6522  0C1D                     l3478:
  6523  0C1D  3000               	movlw	0
  6524  0C1E  00BA               	movwf	?___fldiv+3
  6525  0C1F  3000               	movlw	0
  6526  0C20  00B9               	movwf	?___fldiv+2
  6527  0C21  3000               	movlw	0
  6528  0C22  00B8               	movwf	?___fldiv+1
  6529  0C23  3000               	movlw	0
  6530  0C24  00B7               	movwf	?___fldiv
  6531  0C25  2D77               	goto	l747
  6532  0C26                     l3482:
  6533  0C26  084F               	movf	___fldiv@bexp,w
  6534  0C27  00BF               	movwf	??___fldiv
  6535  0C28  01C0               	clrf	??___fldiv+1
  6536  0C29  0840               	movf	??___fldiv+1,w
  6537  0C2A  00C2               	movwf	??___fldiv+3
  6538  0C2B  0850               	movf	___fldiv@aexp,w
  6539  0C2C  023F               	subwf	??___fldiv,w
  6540  0C2D  00C1               	movwf	??___fldiv+2
  6541  0C2E  1C03               	skipc
  6542  0C2F  03C2               	decf	??___fldiv+3,f
  6543  0C30  0841               	movf	??___fldiv+2,w
  6544  0C31  3E7F               	addlw	127
  6545  0C32  00C9               	movwf	___fldiv@new_exp
  6546  0C33  0842               	movf	??___fldiv+3,w
  6547  0C34  1803               	skipnc
  6548  0C35  3E01               	addlw	1
  6549  0C36  3E00               	addlw	0
  6550  0C37  00CA               	movwf	___fldiv@new_exp+1
  6551  0C38                     l3484:
  6552  0C38  083E               	movf	___fldiv@b+3,w
  6553  0C39  00C7               	movwf	___fldiv@rem+3
  6554  0C3A  083D               	movf	___fldiv@b+2,w
  6555  0C3B  00C6               	movwf	___fldiv@rem+2
  6556  0C3C  083C               	movf	___fldiv@b+1,w
  6557  0C3D  00C5               	movwf	___fldiv@rem+1
  6558  0C3E  083B               	movf	___fldiv@b,w
  6559  0C3F  00C4               	movwf	___fldiv@rem
  6560  0C40                     l3486:
  6561  0C40  3000               	movlw	0
  6562  0C41  00BE               	movwf	___fldiv@b+3
  6563  0C42  3000               	movlw	0
  6564  0C43  00BD               	movwf	___fldiv@b+2
  6565  0C44  3000               	movlw	0
  6566  0C45  00BC               	movwf	___fldiv@b+1
  6567  0C46  3000               	movlw	0
  6568  0C47  00BB               	movwf	___fldiv@b
  6569  0C48                     l3488:
  6570  0C48  3000               	movlw	0
  6571  0C49  00CE               	movwf	___fldiv@grs+3
  6572  0C4A  3000               	movlw	0
  6573  0C4B  00CD               	movwf	___fldiv@grs+2
  6574  0C4C  3000               	movlw	0
  6575  0C4D  00CC               	movwf	___fldiv@grs+1
  6576  0C4E  3000               	movlw	0
  6577  0C4F  00CB               	movwf	___fldiv@grs
  6578  0C50                     l3490:
  6579  0C50  01D0               	clrf	___fldiv@aexp
  6580  0C51  2C9C               	goto	l3510
  6581  0C52                     l3492:
  6582  0C52  0850               	movf	___fldiv@aexp,w
  6583  0C53  1903               	btfsc	3,2
  6584  0C54  2C56               	goto	u4721
  6585  0C55  2C57               	goto	u4720
  6586  0C56                     u4721:
  6587  0C56  2C77               	goto	l3502
  6588  0C57                     u4720:
  6589  0C57                     l3494:
  6590  0C57  3001               	movlw	1
  6591  0C58  00BF               	movwf	??___fldiv
  6592  0C59                     u4735:
  6593  0C59  1003               	clrc
  6594  0C5A  0DC4               	rlf	___fldiv@rem,f
  6595  0C5B  0DC5               	rlf	___fldiv@rem+1,f
  6596  0C5C  0DC6               	rlf	___fldiv@rem+2,f
  6597  0C5D  0DC7               	rlf	___fldiv@rem+3,f
  6598  0C5E  0BBF               	decfsz	??___fldiv,f
  6599  0C5F  2C59               	goto	u4735
  6600  0C60  3001               	movlw	1
  6601  0C61  00BF               	movwf	??___fldiv
  6602  0C62                     u4745:
  6603  0C62  1003               	clrc
  6604  0C63  0DBB               	rlf	___fldiv@b,f
  6605  0C64  0DBC               	rlf	___fldiv@b+1,f
  6606  0C65  0DBD               	rlf	___fldiv@b+2,f
  6607  0C66  0DBE               	rlf	___fldiv@b+3,f
  6608  0C67  0BBF               	decfsz	??___fldiv,f
  6609  0C68  2C62               	goto	u4745
  6610  0C69                     l3496:
  6611  0C69  1FCE               	btfss	___fldiv@grs+3,7
  6612  0C6A  2C6C               	goto	u4751
  6613  0C6B  2C6D               	goto	u4750
  6614  0C6C                     u4751:
  6615  0C6C  2C6E               	goto	l3500
  6616  0C6D                     u4750:
  6617  0C6D                     l3498:
  6618  0C6D  143B               	bsf	___fldiv@b,0
  6619  0C6E                     l3500:
  6620  0C6E  3001               	movlw	1
  6621  0C6F  00BF               	movwf	??___fldiv
  6622  0C70                     u4765:
  6623  0C70  1003               	clrc
  6624  0C71  0DCB               	rlf	___fldiv@grs,f
  6625  0C72  0DCC               	rlf	___fldiv@grs+1,f
  6626  0C73  0DCD               	rlf	___fldiv@grs+2,f
  6627  0C74  0DCE               	rlf	___fldiv@grs+3,f
  6628  0C75  0BBF               	decfsz	??___fldiv,f
  6629  0C76  2C70               	goto	u4765
  6630  0C77                     l3502:
  6631  0C77  083A               	movf	___fldiv@a+3,w
  6632  0C78  0247               	subwf	___fldiv@rem+3,w
  6633  0C79  1D03               	skipz
  6634  0C7A  2C85               	goto	u4775
  6635  0C7B  0839               	movf	___fldiv@a+2,w
  6636  0C7C  0246               	subwf	___fldiv@rem+2,w
  6637  0C7D  1D03               	skipz
  6638  0C7E  2C85               	goto	u4775
  6639  0C7F  0838               	movf	___fldiv@a+1,w
  6640  0C80  0245               	subwf	___fldiv@rem+1,w
  6641  0C81  1D03               	skipz
  6642  0C82  2C85               	goto	u4775
  6643  0C83  0837               	movf	___fldiv@a,w
  6644  0C84  0244               	subwf	___fldiv@rem,w
  6645  0C85                     u4775:
  6646  0C85  1C03               	skipc
  6647  0C86  2C88               	goto	u4771
  6648  0C87  2C89               	goto	u4770
  6649  0C88                     u4771:
  6650  0C88  2C98               	goto	l3508
  6651  0C89                     u4770:
  6652  0C89                     l3504:
  6653  0C89  174E               	bsf	___fldiv@grs+3,6
  6654  0C8A                     l3506:
  6655  0C8A  0837               	movf	___fldiv@a,w
  6656  0C8B  02C4               	subwf	___fldiv@rem,f
  6657  0C8C  0838               	movf	___fldiv@a+1,w
  6658  0C8D  1C03               	skipc
  6659  0C8E  0F38               	incfsz	___fldiv@a+1,w
  6660  0C8F  02C5               	subwf	___fldiv@rem+1,f
  6661  0C90  0839               	movf	___fldiv@a+2,w
  6662  0C91  1C03               	skipc
  6663  0C92  0F39               	incfsz	___fldiv@a+2,w
  6664  0C93  02C6               	subwf	___fldiv@rem+2,f
  6665  0C94  083A               	movf	___fldiv@a+3,w
  6666  0C95  1C03               	skipc
  6667  0C96  0F3A               	incfsz	___fldiv@a+3,w
  6668  0C97  02C7               	subwf	___fldiv@rem+3,f
  6669  0C98                     l3508:
  6670  0C98  3001               	movlw	1
  6671  0C99  00BF               	movwf	??___fldiv
  6672  0C9A  083F               	movf	??___fldiv,w
  6673  0C9B  07D0               	addwf	___fldiv@aexp,f
  6674  0C9C                     l3510:
  6675  0C9C  301A               	movlw	26
  6676  0C9D  0250               	subwf	___fldiv@aexp,w
  6677  0C9E  1C03               	skipc
  6678  0C9F  2CA1               	goto	u4781
  6679  0CA0  2CA2               	goto	u4780
  6680  0CA1                     u4781:
  6681  0CA1  2C52               	goto	l3492
  6682  0CA2                     u4780:
  6683  0CA2                     l3512:
  6684  0CA2  0847               	movf	___fldiv@rem+3,w
  6685  0CA3  0446               	iorwf	___fldiv@rem+2,w
  6686  0CA4  0445               	iorwf	___fldiv@rem+1,w
  6687  0CA5  0444               	iorwf	___fldiv@rem,w
  6688  0CA6  1903               	skipnz
  6689  0CA7  2CA9               	goto	u4791
  6690  0CA8  2CAA               	goto	u4790
  6691  0CA9                     u4791:
  6692  0CA9  2CC9               	goto	l3526
  6693  0CAA                     u4790:
  6694  0CAA                     l3514:
  6695  0CAA  144B               	bsf	___fldiv@grs,0
  6696  0CAB  2CC9               	goto	l3526
  6697  0CAC                     l3516:
  6698  0CAC  3001               	movlw	1
  6699  0CAD  00BF               	movwf	??___fldiv
  6700  0CAE                     u4805:
  6701  0CAE  1003               	clrc
  6702  0CAF  0DBB               	rlf	___fldiv@b,f
  6703  0CB0  0DBC               	rlf	___fldiv@b+1,f
  6704  0CB1  0DBD               	rlf	___fldiv@b+2,f
  6705  0CB2  0DBE               	rlf	___fldiv@b+3,f
  6706  0CB3  0BBF               	decfsz	??___fldiv,f
  6707  0CB4  2CAE               	goto	u4805
  6708  0CB5                     l3518:
  6709  0CB5  1FCE               	btfss	___fldiv@grs+3,7
  6710  0CB6  2CB8               	goto	u4811
  6711  0CB7  2CB9               	goto	u4810
  6712  0CB8                     u4811:
  6713  0CB8  2CBA               	goto	l3522
  6714  0CB9                     u4810:
  6715  0CB9                     l3520:
  6716  0CB9  143B               	bsf	___fldiv@b,0
  6717  0CBA                     l3522:
  6718  0CBA  3001               	movlw	1
  6719  0CBB  00BF               	movwf	??___fldiv
  6720  0CBC                     u4825:
  6721  0CBC  1003               	clrc
  6722  0CBD  0DCB               	rlf	___fldiv@grs,f
  6723  0CBE  0DCC               	rlf	___fldiv@grs+1,f
  6724  0CBF  0DCD               	rlf	___fldiv@grs+2,f
  6725  0CC0  0DCE               	rlf	___fldiv@grs+3,f
  6726  0CC1  0BBF               	decfsz	??___fldiv,f
  6727  0CC2  2CBC               	goto	u4825
  6728  0CC3                     l3524:
  6729  0CC3  30FF               	movlw	255
  6730  0CC4  07C9               	addwf	___fldiv@new_exp,f
  6731  0CC5  1803               	skipnc
  6732  0CC6  0ACA               	incf	___fldiv@new_exp+1,f
  6733  0CC7  30FF               	movlw	255
  6734  0CC8  07CA               	addwf	___fldiv@new_exp+1,f
  6735  0CC9                     l3526:
  6736  0CC9  1FBD               	btfss	___fldiv@b+2,7
  6737  0CCA  2CCC               	goto	u4831
  6738  0CCB  2CCD               	goto	u4830
  6739  0CCC                     u4831:
  6740  0CCC  2CAC               	goto	l3516
  6741  0CCD                     u4830:
  6742  0CCD                     l3528:
  6743  0CCD  01D0               	clrf	___fldiv@aexp
  6744  0CCE                     l3530:
  6745  0CCE  1FCE               	btfss	___fldiv@grs+3,7
  6746  0CCF  2CD1               	goto	u4841
  6747  0CD0  2CD2               	goto	u4840
  6748  0CD1                     u4841:
  6749  0CD1  2CEE               	goto	l3538
  6750  0CD2                     u4840:
  6751  0CD2                     l3532:
  6752  0CD2  30FF               	movlw	255
  6753  0CD3  054B               	andwf	___fldiv@grs,w
  6754  0CD4  00BF               	movwf	??___fldiv
  6755  0CD5  30FF               	movlw	255
  6756  0CD6  054C               	andwf	___fldiv@grs+1,w
  6757  0CD7  00C0               	movwf	??___fldiv+1
  6758  0CD8  30FF               	movlw	255
  6759  0CD9  054D               	andwf	___fldiv@grs+2,w
  6760  0CDA  00C1               	movwf	??___fldiv+2
  6761  0CDB  307F               	movlw	127
  6762  0CDC  054E               	andwf	___fldiv@grs+3,w
  6763  0CDD  00C2               	movwf	??___fldiv+3
  6764  0CDE  0842               	movf	??___fldiv+3,w
  6765  0CDF  0441               	iorwf	??___fldiv+2,w
  6766  0CE0  0440               	iorwf	??___fldiv+1,w
  6767  0CE1  043F               	iorwf	??___fldiv,w
  6768  0CE2  1903               	skipnz
  6769  0CE3  2CE5               	goto	u4851
  6770  0CE4  2CE6               	goto	u4850
  6771  0CE5                     u4851:
  6772  0CE5  2CE9               	goto	l761
  6773  0CE6                     u4850:
  6774  0CE6                     l3534:
  6775  0CE6  01D0               	clrf	___fldiv@aexp
  6776  0CE7  0AD0               	incf	___fldiv@aexp,f
  6777  0CE8  2CEE               	goto	l3538
  6778  0CE9                     l761:
  6779  0CE9  1C3B               	btfss	___fldiv@b,0
  6780  0CEA  2CEC               	goto	u4861
  6781  0CEB  2CED               	goto	u4860
  6782  0CEC                     u4861:
  6783  0CEC  2CEE               	goto	l3538
  6784  0CED                     u4860:
  6785  0CED  2CE6               	goto	l3534
  6786  0CEE                     l3538:
  6787  0CEE  0850               	movf	___fldiv@aexp,w
  6788  0CEF  1903               	btfsc	3,2
  6789  0CF0  2CF2               	goto	u4871
  6790  0CF1  2CF3               	goto	u4870
  6791  0CF2                     u4871:
  6792  0CF2  2D24               	goto	l3548
  6793  0CF3                     u4870:
  6794  0CF3                     l3540:
  6795  0CF3  3001               	movlw	1
  6796  0CF4  07BB               	addwf	___fldiv@b,f
  6797  0CF5  3000               	movlw	0
  6798  0CF6  1803               	skipnc
  6799  0CF7  3001               	movlw	1
  6800  0CF8  07BC               	addwf	___fldiv@b+1,f
  6801  0CF9  3000               	movlw	0
  6802  0CFA  1803               	skipnc
  6803  0CFB  3001               	movlw	1
  6804  0CFC  07BD               	addwf	___fldiv@b+2,f
  6805  0CFD  3000               	movlw	0
  6806  0CFE  1803               	skipnc
  6807  0CFF  3001               	movlw	1
  6808  0D00  07BE               	addwf	___fldiv@b+3,f
  6809  0D01                     l3542:
  6810  0D01  1C3E               	btfss	___fldiv@b+3,0
  6811  0D02  2D04               	goto	u4881
  6812  0D03  2D05               	goto	u4880
  6813  0D04                     u4881:
  6814  0D04  2D24               	goto	l3548
  6815  0D05                     u4880:
  6816  0D05                     l3544:
  6817  0D05  083B               	movf	___fldiv@b,w
  6818  0D06  00BF               	movwf	??___fldiv
  6819  0D07  083C               	movf	___fldiv@b+1,w
  6820  0D08  00C0               	movwf	??___fldiv+1
  6821  0D09  083D               	movf	___fldiv@b+2,w
  6822  0D0A  00C1               	movwf	??___fldiv+2
  6823  0D0B  083E               	movf	___fldiv@b+3,w
  6824  0D0C  00C2               	movwf	??___fldiv+3
  6825  0D0D  3001               	movlw	1
  6826  0D0E  00C3               	movwf	??___fldiv+4
  6827  0D0F                     u4895:
  6828  0D0F  0D42               	rlf	??___fldiv+3,w
  6829  0D10  0CC2               	rrf	??___fldiv+3,f
  6830  0D11  0CC1               	rrf	??___fldiv+2,f
  6831  0D12  0CC0               	rrf	??___fldiv+1,f
  6832  0D13  0CBF               	rrf	??___fldiv,f
  6833  0D14                     u4890:
  6834  0D14  0BC3               	decfsz	??___fldiv+4,f
  6835  0D15  2D0F               	goto	u4895
  6836  0D16  0842               	movf	??___fldiv+3,w
  6837  0D17  00BE               	movwf	___fldiv@b+3
  6838  0D18  0841               	movf	??___fldiv+2,w
  6839  0D19  00BD               	movwf	___fldiv@b+2
  6840  0D1A  0840               	movf	??___fldiv+1,w
  6841  0D1B  00BC               	movwf	___fldiv@b+1
  6842  0D1C  083F               	movf	??___fldiv,w
  6843  0D1D  00BB               	movwf	___fldiv@b
  6844  0D1E                     l3546:
  6845  0D1E  3001               	movlw	1
  6846  0D1F  07C9               	addwf	___fldiv@new_exp,f
  6847  0D20  1803               	skipnc
  6848  0D21  0ACA               	incf	___fldiv@new_exp+1,f
  6849  0D22  3000               	movlw	0
  6850  0D23  07CA               	addwf	___fldiv@new_exp+1,f
  6851  0D24                     l3548:
  6852  0D24  084A               	movf	___fldiv@new_exp+1,w
  6853  0D25  3A80               	xorlw	128
  6854  0D26  00FF               	movwf	btemp+1
  6855  0D27  3080               	movlw	128
  6856  0D28  027F               	subwf	btemp+1,w
  6857  0D29  1D03               	skipz
  6858  0D2A  2D2D               	goto	u4905
  6859  0D2B  30FF               	movlw	255
  6860  0D2C  0249               	subwf	___fldiv@new_exp,w
  6861  0D2D                     u4905:
  6862  0D2D  1C03               	skipc
  6863  0D2E  2D30               	goto	u4901
  6864  0D2F  2D31               	goto	u4900
  6865  0D30                     u4901:
  6866  0D30  2D3F               	goto	l3552
  6867  0D31                     u4900:
  6868  0D31                     l3550:
  6869  0D31  30FF               	movlw	255
  6870  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  6871  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  6872  0D34  00C9               	movwf	___fldiv@new_exp
  6873  0D35  3000               	movlw	0
  6874  0D36  00CA               	movwf	___fldiv@new_exp+1
  6875  0D37  3000               	movlw	0
  6876  0D38  00BE               	movwf	___fldiv@b+3
  6877  0D39  3000               	movlw	0
  6878  0D3A  00BD               	movwf	___fldiv@b+2
  6879  0D3B  3000               	movlw	0
  6880  0D3C  00BC               	movwf	___fldiv@b+1
  6881  0D3D  3000               	movlw	0
  6882  0D3E  00BB               	movwf	___fldiv@b
  6883  0D3F                     l3552:
  6884  0D3F  1283               	bcf	3,5	;RP0=0, select bank0
  6885  0D40  1303               	bcf	3,6	;RP1=0, select bank0
  6886  0D41  084A               	movf	___fldiv@new_exp+1,w
  6887  0D42  3A80               	xorlw	128
  6888  0D43  00FF               	movwf	btemp+1
  6889  0D44  3080               	movlw	128
  6890  0D45  027F               	subwf	btemp+1,w
  6891  0D46  1D03               	skipz
  6892  0D47  2D4A               	goto	u4915
  6893  0D48  3001               	movlw	1
  6894  0D49  0249               	subwf	___fldiv@new_exp,w
  6895  0D4A                     u4915:
  6896  0D4A  1803               	skipnc
  6897  0D4B  2D4D               	goto	u4911
  6898  0D4C  2D4E               	goto	u4910
  6899  0D4D                     u4911:
  6900  0D4D  2D5B               	goto	l767
  6901  0D4E                     u4910:
  6902  0D4E                     l3554:
  6903  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  6904  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  6905  0D50  01C9               	clrf	___fldiv@new_exp
  6906  0D51  01CA               	clrf	___fldiv@new_exp+1
  6907  0D52                     l3556:
  6908  0D52  3000               	movlw	0
  6909  0D53  00BE               	movwf	___fldiv@b+3
  6910  0D54  3000               	movlw	0
  6911  0D55  00BD               	movwf	___fldiv@b+2
  6912  0D56  3000               	movlw	0
  6913  0D57  00BC               	movwf	___fldiv@b+1
  6914  0D58  3000               	movlw	0
  6915  0D59  00BB               	movwf	___fldiv@b
  6916  0D5A                     l3558:
  6917  0D5A  01C8               	clrf	___fldiv@sign
  6918  0D5B                     l767:
  6919  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  6920  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  6921  0D5D  0849               	movf	___fldiv@new_exp,w
  6922  0D5E  00BF               	movwf	??___fldiv
  6923  0D5F  083F               	movf	??___fldiv,w
  6924  0D60  00CF               	movwf	___fldiv@bexp
  6925  0D61                     l3560:
  6926  0D61  1C4F               	btfss	___fldiv@bexp,0
  6927  0D62  2D64               	goto	u4921
  6928  0D63  2D65               	goto	u4920
  6929  0D64                     u4921:
  6930  0D64  2D67               	goto	l3564
  6931  0D65                     u4920:
  6932  0D65                     l3562:
  6933  0D65  17BD               	bsf	___fldiv@b+2,7
  6934  0D66  2D6B               	goto	l769
  6935  0D67                     l3564:
  6936  0D67  307F               	movlw	127
  6937  0D68  00BF               	movwf	??___fldiv
  6938  0D69  083F               	movf	??___fldiv,w
  6939  0D6A  05BD               	andwf	___fldiv@b+2,f
  6940  0D6B                     l769:
  6941  0D6B  084F               	movf	___fldiv@bexp,w
  6942  0D6C  00BF               	movwf	??___fldiv
  6943  0D6D  1003               	clrc
  6944  0D6E  0C3F               	rrf	??___fldiv,w
  6945  0D6F  00C0               	movwf	??___fldiv+1
  6946  0D70  0840               	movf	??___fldiv+1,w
  6947  0D71  00BE               	movwf	___fldiv@b+3
  6948  0D72  0848               	movf	___fldiv@sign,w
  6949  0D73  00BF               	movwf	??___fldiv
  6950  0D74  083F               	movf	??___fldiv,w
  6951  0D75  04BE               	iorwf	___fldiv@b+3,f
  6952  0D76  2C0F               	goto	l3472
  6953  0D77                     l747:
  6954  0D77  0008               	return
  6955  0D78                     __end_of___fldiv:
  6956                           
  6957                           	psect	text23
  6958  08D1                     __ptext23:	
  6959 ;; *************** function ___awdiv *****************
  6960 ;; Defined at:
  6961 ;;		line 5 in file "D:\Program File\MicroChip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  divisor         2    2[COMMON] int 
  6964 ;;  dividend        2    4[COMMON] int 
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  quotient        2    2[BANK0 ] int 
  6967 ;;  sign            1    1[BANK0 ] unsigned char 
  6968 ;;  counter         1    0[BANK0 ] unsigned char 
  6969 ;; Return value:  Size  Location     Type
  6970 ;;                  2    2[COMMON] int 
  6971 ;; Registers used:
  6972 ;;		wreg, status,2, status,0
  6973 ;; Tracked objects:
  6974 ;;		On entry : 0/0
  6975 ;;		On exit  : 0/0
  6976 ;;		Unchanged: 0/0
  6977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6978 ;;      Params:         4       0       0       0       0
  6979 ;;      Locals:         0       4       0       0       0
  6980 ;;      Temps:          1       0       0       0       0
  6981 ;;      Totals:         5       4       0       0       0
  6982 ;;Total ram usage:        9 bytes
  6983 ;; Hardware stack levels used: 1
  6984 ;; Hardware stack levels required when called: 1
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		_ADC_convert
  6989 ;;		_division
  6990 ;; This function uses a non-reentrant model
  6991 ;;
  6992                           
  6993                           
  6994                           ;psect for function ___awdiv
  6995  08D1                     ___awdiv:
  6996  08D1                     l3322:	
  6997                           ;incstack = 0
  6998                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6999                           
  7000  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  7001  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  7002  08D3  01A1               	clrf	___awdiv@sign
  7003  08D4                     l3324:
  7004  08D4  1FF3               	btfss	___awdiv@divisor+1,7
  7005  08D5  28D7               	goto	u4371
  7006  08D6  28D8               	goto	u4370
  7007  08D7                     u4371:
  7008  08D7  28DF               	goto	l3330
  7009  08D8                     u4370:
  7010  08D8                     l3326:
  7011  08D8  09F2               	comf	___awdiv@divisor,f
  7012  08D9  09F3               	comf	___awdiv@divisor+1,f
  7013  08DA  0AF2               	incf	___awdiv@divisor,f
  7014  08DB  1903               	skipnz
  7015  08DC  0AF3               	incf	___awdiv@divisor+1,f
  7016  08DD                     l3328:
  7017  08DD  01A1               	clrf	___awdiv@sign
  7018  08DE  0AA1               	incf	___awdiv@sign,f
  7019  08DF                     l3330:
  7020  08DF  1FF5               	btfss	___awdiv@dividend+1,7
  7021  08E0  28E2               	goto	u4381
  7022  08E1  28E3               	goto	u4380
  7023  08E2                     u4381:
  7024  08E2  28EC               	goto	l3336
  7025  08E3                     u4380:
  7026  08E3                     l3332:
  7027  08E3  09F4               	comf	___awdiv@dividend,f
  7028  08E4  09F5               	comf	___awdiv@dividend+1,f
  7029  08E5  0AF4               	incf	___awdiv@dividend,f
  7030  08E6  1903               	skipnz
  7031  08E7  0AF5               	incf	___awdiv@dividend+1,f
  7032  08E8                     l3334:
  7033  08E8  3001               	movlw	1
  7034  08E9  00F6               	movwf	??___awdiv
  7035  08EA  0876               	movf	??___awdiv,w
  7036  08EB  06A1               	xorwf	___awdiv@sign,f
  7037  08EC                     l3336:
  7038  08EC  01A2               	clrf	___awdiv@quotient
  7039  08ED  01A3               	clrf	___awdiv@quotient+1
  7040  08EE                     l3338:
  7041  08EE  0872               	movf	___awdiv@divisor,w
  7042  08EF  0473               	iorwf	___awdiv@divisor+1,w
  7043  08F0  1903               	btfsc	3,2
  7044  08F1  28F3               	goto	u4391
  7045  08F2  28F4               	goto	u4390
  7046  08F3                     u4391:
  7047  08F3  292B               	goto	l3358
  7048  08F4                     u4390:
  7049  08F4                     l3340:
  7050  08F4  01A0               	clrf	___awdiv@counter
  7051  08F5  0AA0               	incf	___awdiv@counter,f
  7052  08F6  2902               	goto	l3346
  7053  08F7                     l3342:
  7054  08F7  3001               	movlw	1
  7055  08F8                     u4405:
  7056  08F8  1003               	clrc
  7057  08F9  0DF2               	rlf	___awdiv@divisor,f
  7058  08FA  0DF3               	rlf	___awdiv@divisor+1,f
  7059  08FB  3EFF               	addlw	-1
  7060  08FC  1D03               	skipz
  7061  08FD  28F8               	goto	u4405
  7062  08FE                     l3344:
  7063  08FE  3001               	movlw	1
  7064  08FF  00F6               	movwf	??___awdiv
  7065  0900  0876               	movf	??___awdiv,w
  7066  0901  07A0               	addwf	___awdiv@counter,f
  7067  0902                     l3346:
  7068  0902  1FF3               	btfss	___awdiv@divisor+1,7
  7069  0903  2905               	goto	u4411
  7070  0904  2906               	goto	u4410
  7071  0905                     u4411:
  7072  0905  28F7               	goto	l3342
  7073  0906                     u4410:
  7074  0906                     l3348:
  7075  0906  3001               	movlw	1
  7076  0907                     u4425:
  7077  0907  1003               	clrc
  7078  0908  0DA2               	rlf	___awdiv@quotient,f
  7079  0909  0DA3               	rlf	___awdiv@quotient+1,f
  7080  090A  3EFF               	addlw	-1
  7081  090B  1D03               	skipz
  7082  090C  2907               	goto	u4425
  7083  090D  0873               	movf	___awdiv@divisor+1,w
  7084  090E  0275               	subwf	___awdiv@dividend+1,w
  7085  090F  1D03               	skipz
  7086  0910  2913               	goto	u4435
  7087  0911  0872               	movf	___awdiv@divisor,w
  7088  0912  0274               	subwf	___awdiv@dividend,w
  7089  0913                     u4435:
  7090  0913  1C03               	skipc
  7091  0914  2916               	goto	u4431
  7092  0915  2917               	goto	u4430
  7093  0916                     u4431:
  7094  0916  291E               	goto	l3354
  7095  0917                     u4430:
  7096  0917                     l3350:
  7097  0917  0872               	movf	___awdiv@divisor,w
  7098  0918  02F4               	subwf	___awdiv@dividend,f
  7099  0919  0873               	movf	___awdiv@divisor+1,w
  7100  091A  1C03               	skipc
  7101  091B  03F5               	decf	___awdiv@dividend+1,f
  7102  091C  02F5               	subwf	___awdiv@dividend+1,f
  7103  091D                     l3352:
  7104  091D  1422               	bsf	___awdiv@quotient,0
  7105  091E                     l3354:
  7106  091E  3001               	movlw	1
  7107  091F                     u4445:
  7108  091F  1003               	clrc
  7109  0920  0CF3               	rrf	___awdiv@divisor+1,f
  7110  0921  0CF2               	rrf	___awdiv@divisor,f
  7111  0922  3EFF               	addlw	-1
  7112  0923  1D03               	skipz
  7113  0924  291F               	goto	u4445
  7114  0925                     l3356:
  7115  0925  3001               	movlw	1
  7116  0926  02A0               	subwf	___awdiv@counter,f
  7117  0927  1D03               	btfss	3,2
  7118  0928  292A               	goto	u4451
  7119  0929  292B               	goto	u4450
  7120  092A                     u4451:
  7121  092A  2906               	goto	l3348
  7122  092B                     u4450:
  7123  092B                     l3358:
  7124  092B  0821               	movf	___awdiv@sign,w
  7125  092C  1903               	btfsc	3,2
  7126  092D  292F               	goto	u4461
  7127  092E  2930               	goto	u4460
  7128  092F                     u4461:
  7129  092F  2935               	goto	l3362
  7130  0930                     u4460:
  7131  0930                     l3360:
  7132  0930  09A2               	comf	___awdiv@quotient,f
  7133  0931  09A3               	comf	___awdiv@quotient+1,f
  7134  0932  0AA2               	incf	___awdiv@quotient,f
  7135  0933  1903               	skipnz
  7136  0934  0AA3               	incf	___awdiv@quotient+1,f
  7137  0935                     l3362:
  7138  0935  0823               	movf	___awdiv@quotient+1,w
  7139  0936  00F3               	movwf	?___awdiv+1
  7140  0937  0822               	movf	___awdiv@quotient,w
  7141  0938  00F2               	movwf	?___awdiv
  7142  0939                     l549:
  7143  0939  0008               	return
  7144  093A                     __end_of___awdiv:
  7145                           
  7146                           	psect	text24
  7147  093A                     __ptext24:	
  7148 ;; *************** function _I2C_Comunication *****************
  7149 ;; Defined at:
  7150 ;;		line 175 in file "Master_PIC.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7164 ;;      Params:         0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0
  7166 ;;      Temps:          3       0       0       0       0
  7167 ;;      Totals:         3       0       0       0       0
  7168 ;;Total ram usage:        3 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 3
  7171 ;; This function calls:
  7172 ;;		_I2C_Master_Start
  7173 ;;		_I2C_Master_Stop
  7174 ;;		_I2C_Master_Write
  7175 ;;		_I2C_Read_Byte
  7176 ;; This function is called by:
  7177 ;;		_main
  7178 ;; This function uses a non-reentrant model
  7179 ;;
  7180                           
  7181                           
  7182                           ;psect for function _I2C_Comunication
  7183  093A                     _I2C_Comunication:
  7184  093A                     l3940:	
  7185                           ;incstack = 0
  7186                           ; Regs used in _I2C_Comunication: [wreg+status,2+status,0+pclath+cstack]
  7187                           
  7188                           
  7189                           ;Master_PIC.c: 177: }
  7190  093A  3051               	movlw	81
  7191  093B  160A  118A  2615  120A  158A  	fcall	_I2C_Master_Write
  7192                           
  7193                           ;Master_PIC.c: 178: 
  7194  0940  160A  118A  263B  120A  158A  	fcall	_I2C_Read_Byte
  7195  0945  00F3               	movwf	??_I2C_Comunication
  7196  0946  0873               	movf	??_I2C_Comunication,w
  7197  0947  1683               	bsf	3,5	;RP0=1, select bank1
  7198  0948  1303               	bcf	3,6	;RP1=0, select bank1
  7199  0949  00A9               	movwf	_POT^(0+128)
  7200                           
  7201                           ;Master_PIC.c: 179: 
  7202  094A  160A  118A  25F2  120A  158A  	fcall	_I2C_Master_Stop
  7203  094F                     l3942:
  7204                           
  7205                           ;Master_PIC.c: 180: 
  7206  094F  3003               	movlw	3
  7207  0950  00F5               	movwf	??_I2C_Comunication+2
  7208  0951  3008               	movlw	8
  7209  0952  00F4               	movwf	??_I2C_Comunication+1
  7210  0953  3077               	movlw	119
  7211  0954  00F3               	movwf	??_I2C_Comunication
  7212  0955                     u5747:
  7213  0955  0BF3               	decfsz	??_I2C_Comunication,f
  7214  0956  2955               	goto	u5747
  7215  0957  0BF4               	decfsz	??_I2C_Comunication+1,f
  7216  0958  2955               	goto	u5747
  7217  0959  0BF5               	decfsz	??_I2C_Comunication+2,f
  7218  095A  2955               	goto	u5747
  7219  095B                     l3944:
  7220                           
  7221                           ;Master_PIC.c: 182: void ADC_convert(char *data,float a, int place)
  7222  095B  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  7223  0960                     l3946:
  7224                           
  7225                           ;Master_PIC.c: 183: {
  7226  0960  3061               	movlw	97
  7227  0961  160A  118A  2615  120A  158A  	fcall	_I2C_Master_Write
  7228  0966                     l3948:
  7229                           
  7230                           ;Master_PIC.c: 184:      int temp=a;
  7231  0966  160A  118A  263B  120A  158A  	fcall	_I2C_Read_Byte
  7232  096B  00F3               	movwf	??_I2C_Comunication
  7233  096C  0873               	movf	??_I2C_Comunication,w
  7234  096D  1683               	bsf	3,5	;RP0=1, select bank1
  7235  096E  1303               	bcf	3,6	;RP1=0, select bank1
  7236  096F  00AA               	movwf	_CONT^(0+128)
  7237  0970                     l3950:
  7238                           
  7239                           ;Master_PIC.c: 185:      float x=0.0;
  7240  0970  160A  118A  25F2  120A  158A  	fcall	_I2C_Master_Stop
  7241  0975                     l3952:
  7242                           
  7243                           ;Master_PIC.c: 186:      int digits=0;
  7244  0975  3003               	movlw	3
  7245  0976  00F5               	movwf	??_I2C_Comunication+2
  7246  0977  3008               	movlw	8
  7247  0978  00F4               	movwf	??_I2C_Comunication+1
  7248  0979  3077               	movlw	119
  7249  097A  00F3               	movwf	??_I2C_Comunication
  7250  097B                     u5757:
  7251  097B  0BF3               	decfsz	??_I2C_Comunication,f
  7252  097C  297B               	goto	u5757
  7253  097D  0BF4               	decfsz	??_I2C_Comunication+1,f
  7254  097E  297B               	goto	u5757
  7255  097F  0BF5               	decfsz	??_I2C_Comunication+2,f
  7256  0980  297B               	goto	u5757
  7257                           
  7258                           ;Master_PIC.c: 188:      int j=0;
  7259  0981  160A  118A  25E9  120A  158A  	fcall	_I2C_Master_Start
  7260                           
  7261                           ;Master_PIC.c: 189:      if(a<0)
  7262  0986  3071               	movlw	113
  7263  0987  160A  118A  2615  120A  158A  	fcall	_I2C_Master_Write
  7264                           
  7265                           ;Master_PIC.c: 190:      {
  7266  098C  160A  118A  263B  120A  158A  	fcall	_I2C_Read_Byte
  7267  0991  00F3               	movwf	??_I2C_Comunication
  7268  0992  01F4               	clrf	??_I2C_Comunication+1
  7269  0993  0873               	movf	??_I2C_Comunication,w
  7270  0994  1683               	bsf	3,5	;RP0=1, select bank1
  7271  0995  1303               	bcf	3,6	;RP1=0, select bank1
  7272  0996  00A4               	movwf	_temp^(0+128)
  7273  0997  0874               	movf	??_I2C_Comunication+1,w
  7274  0998  00A5               	movwf	(_temp+1)^(0+128)
  7275                           
  7276                           ;Master_PIC.c: 191:             a=a*-1;
  7277  0999  160A  118A  25F2  120A  158A  	fcall	_I2C_Master_Stop
  7278  099E                     l3954:
  7279                           
  7280                           ;Master_PIC.c: 192:             data[i]='-';
  7281  099E  3003               	movlw	3
  7282  099F  00F5               	movwf	??_I2C_Comunication+2
  7283  09A0  3008               	movlw	8
  7284  09A1  00F4               	movwf	??_I2C_Comunication+1
  7285  09A2  3077               	movlw	119
  7286  09A3  00F3               	movwf	??_I2C_Comunication
  7287  09A4                     u5767:
  7288  09A4  0BF3               	decfsz	??_I2C_Comunication,f
  7289  09A5  29A4               	goto	u5767
  7290  09A6  0BF4               	decfsz	??_I2C_Comunication+1,f
  7291  09A7  29A4               	goto	u5767
  7292  09A8  0BF5               	decfsz	??_I2C_Comunication+2,f
  7293  09A9  29A4               	goto	u5767
  7294  09AA                     l127:
  7295  09AA  0008               	return
  7296  09AB                     __end_of_I2C_Comunication:
  7297                           
  7298                           	psect	text25
  7299  163B                     __ptext25:	
  7300 ;; *************** function _I2C_Read_Byte *****************
  7301 ;; Defined at:
  7302 ;;		line 71 in file "I2C_Master.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;		None
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      unsigned char 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0, pclath, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7316 ;;      Params:         0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0
  7319 ;;      Totals:         0       0       0       0       0
  7320 ;;Total ram usage:        0 bytes
  7321 ;; Hardware stack levels used: 1
  7322 ;; Hardware stack levels required when called: 2
  7323 ;; This function calls:
  7324 ;;		_I2C_Master_Wait
  7325 ;; This function is called by:
  7326 ;;		_I2C_Comunication
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function _I2C_Read_Byte
  7332  163B                     _I2C_Read_Byte:
  7333  163B                     l3754:	
  7334                           ;incstack = 0
  7335                           ; Regs used in _I2C_Read_Byte: [wreg+status,2+status,0+pclath+cstack]
  7336                           
  7337                           
  7338                           ;I2C_Master.c: 74:  I2C_Master_Wait();
  7339  163B  160A  118A  25FB  160A  118A  	fcall	_I2C_Master_Wait
  7340  1640                     l3756:
  7341                           
  7342                           ;I2C_Master.c: 75:     RCEN = 1;
  7343  1640  1683               	bsf	3,5	;RP0=1, select bank1
  7344  1641  1303               	bcf	3,6	;RP1=0, select bank1
  7345  1642  1591               	bsf	17,3	;volatile
  7346  1643                     l254:	
  7347                           ;I2C_Master.c: 76:  while(!SSPIF);
  7348                           
  7349  1643  1283               	bcf	3,5	;RP0=0, select bank0
  7350  1644  1D8C               	btfss	12,3	;volatile
  7351  1645  2E47               	goto	u5441
  7352  1646  2E48               	goto	u5440
  7353  1647                     u5441:
  7354  1647  2E43               	goto	l254
  7355  1648                     u5440:
  7356  1648                     l256:
  7357                           
  7358                           ;I2C_Master.c: 77:  SSPIF = 0;
  7359  1648  118C               	bcf	12,3	;volatile
  7360  1649                     l3758:
  7361                           
  7362                           ;I2C_Master.c: 78:     I2C_Master_Wait();
  7363  1649  160A  118A  25FB  160A  118A  	fcall	_I2C_Master_Wait
  7364  164E                     l3760:
  7365                           
  7366                           ;I2C_Master.c: 79:     return SSPBUF;
  7367  164E  1283               	bcf	3,5	;RP0=0, select bank0
  7368  164F  1303               	bcf	3,6	;RP1=0, select bank0
  7369  1650  0813               	movf	19,w	;volatile
  7370  1651                     l257:
  7371  1651  0008               	return
  7372  1652                     __end_of_I2C_Read_Byte:
  7373                           
  7374                           	psect	text26
  7375  1615                     __ptext26:	
  7376 ;; *************** function _I2C_Master_Write *****************
  7377 ;; Defined at:
  7378 ;;		line 62 in file "I2C_Master.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  data            1    wreg     unsigned char 
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;  data            1    2[COMMON] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      unsigned char 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, pclath, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7392 ;;      Params:         0       0       0       0       0
  7393 ;;      Locals:         1       0       0       0       0
  7394 ;;      Temps:          0       0       0       0       0
  7395 ;;      Totals:         1       0       0       0       0
  7396 ;;Total ram usage:        1 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 2
  7399 ;; This function calls:
  7400 ;;		_I2C_Master_Wait
  7401 ;; This function is called by:
  7402 ;;		_I2C_Comunication
  7403 ;;		_IO_Expander_Write
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           
  7408                           ;psect for function _I2C_Master_Write
  7409  1615                     _I2C_Master_Write:
  7410                           
  7411                           ;incstack = 0
  7412                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7413                           ;I2C_Master_Write@data stored from wreg
  7414  1615  00F2               	movwf	I2C_Master_Write@data
  7415  1616                     l3070:
  7416                           
  7417                           ;I2C_Master.c: 62: unsigned char I2C_Master_Write(unsigned char data);I2C_Master.c: 63: 
      +                          {;I2C_Master.c: 64:     I2C_Master_Wait();
  7418  1616  160A  118A  25FB  160A  118A  	fcall	_I2C_Master_Wait
  7419  161B                     l3072:
  7420                           
  7421                           ;I2C_Master.c: 65:     SSPBUF = data;
  7422  161B  0872               	movf	I2C_Master_Write@data,w
  7423  161C  1283               	bcf	3,5	;RP0=0, select bank0
  7424  161D  1303               	bcf	3,6	;RP1=0, select bank0
  7425  161E  0093               	movwf	19	;volatile
  7426  161F                     l248:	
  7427                           ;I2C_Master.c: 66:     while(!SSPIF);
  7428                           
  7429  161F  1D8C               	btfss	12,3	;volatile
  7430  1620  2E22               	goto	u3811
  7431  1621  2E23               	goto	u3810
  7432  1622                     u3811:
  7433  1622  2E1F               	goto	l248
  7434  1623                     u3810:
  7435  1623                     l250:
  7436                           
  7437                           ;I2C_Master.c: 67:  SSPIF = 0;
  7438  1623  118C               	bcf	12,3	;volatile
  7439  1624                     l251:	
  7440                           ;I2C_Master.c: 68:     return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  7441                           
  7442  1624  0008               	return
  7443  1625                     __end_of_I2C_Master_Write:
  7444                           
  7445                           	psect	text27
  7446  15F2                     __ptext27:	
  7447 ;; *************** function _I2C_Master_Stop *****************
  7448 ;; Defined at:
  7449 ;;		line 42 in file "I2C_Master.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;		None
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0, pclath, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7463 ;;      Params:         0       0       0       0       0
  7464 ;;      Locals:         0       0       0       0       0
  7465 ;;      Temps:          0       0       0       0       0
  7466 ;;      Totals:         0       0       0       0       0
  7467 ;;Total ram usage:        0 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 2
  7470 ;; This function calls:
  7471 ;;		_I2C_Master_Wait
  7472 ;; This function is called by:
  7473 ;;		_I2C_Comunication
  7474 ;;		_IO_Expander_Write
  7475 ;; This function uses a non-reentrant model
  7476 ;;
  7477                           
  7478                           
  7479                           ;psect for function _I2C_Master_Stop
  7480  15F2                     _I2C_Master_Stop:
  7481  15F2                     l3074:	
  7482                           ;incstack = 0
  7483                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7484                           
  7485                           
  7486                           ;I2C_Master.c: 44:     I2C_Master_Wait();
  7487  15F2  160A  118A  25FB  160A  118A  	fcall	_I2C_Master_Wait
  7488  15F7                     l3076:
  7489                           
  7490                           ;I2C_Master.c: 45:     PEN = 1;
  7491  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  7492  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  7493  15F9  1511               	bsf	17,2	;volatile
  7494  15FA                     l239:
  7495  15FA  0008               	return
  7496  15FB                     __end_of_I2C_Master_Stop:
  7497                           
  7498                           	psect	text28
  7499  15E9                     __ptext28:	
  7500 ;; *************** function _I2C_Master_Start *****************
  7501 ;; Defined at:
  7502 ;;		line 30 in file "I2C_Master.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;		None
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  1    wreg      void 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0, pclath, cstack
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7516 ;;      Params:         0       0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0
  7519 ;;      Totals:         0       0       0       0       0
  7520 ;;Total ram usage:        0 bytes
  7521 ;; Hardware stack levels used: 1
  7522 ;; Hardware stack levels required when called: 2
  7523 ;; This function calls:
  7524 ;;		_I2C_Master_Wait
  7525 ;; This function is called by:
  7526 ;;		_I2C_Comunication
  7527 ;;		_IO_Expander_Write
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function _I2C_Master_Start
  7533  15E9                     _I2C_Master_Start:
  7534  15E9                     l3078:	
  7535                           ;incstack = 0
  7536                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  7537                           
  7538                           
  7539                           ;I2C_Master.c: 32:     I2C_Master_Wait();
  7540  15E9  160A  118A  25FB  160A  118A  	fcall	_I2C_Master_Wait
  7541  15EE                     l3080:
  7542                           
  7543                           ;I2C_Master.c: 33:     SEN = 1;
  7544  15EE  1683               	bsf	3,5	;RP0=1, select bank1
  7545  15EF  1303               	bcf	3,6	;RP1=0, select bank1
  7546  15F0  1411               	bsf	17,0	;volatile
  7547  15F1                     l233:
  7548  15F1  0008               	return
  7549  15F2                     __end_of_I2C_Master_Start:
  7550                           
  7551                           	psect	text29
  7552  15FB                     __ptext29:	
  7553 ;; *************** function _I2C_Master_Wait *****************
  7554 ;; Defined at:
  7555 ;;		line 25 in file "I2C_Master.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0
  7572 ;;      Totals:         0       0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; Hardware stack levels required when called: 1
  7576 ;; This function calls:
  7577 ;;		Nothing
  7578 ;; This function is called by:
  7579 ;;		_I2C_Master_Start
  7580 ;;		_I2C_Master_Stop
  7581 ;;		_I2C_Master_Write
  7582 ;;		_I2C_Read_Byte
  7583 ;;		_I2C_Master_RepeatedStart
  7584 ;;		_I2C_ACK
  7585 ;;		_I2C_NACK
  7586 ;;		_I2C_Master_Read
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           
  7591                           ;psect for function _I2C_Master_Wait
  7592  15FB                     _I2C_Master_Wait:
  7593  15FB                     l3066:	
  7594                           ;incstack = 0
  7595                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  7596                           
  7597  15FB                     l227:	
  7598                           ;I2C_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  7599                           
  7600  15FB  1683               	bsf	3,5	;RP0=1, select bank1
  7601  15FC  1303               	bcf	3,6	;RP1=0, select bank1
  7602  15FD  1914               	btfsc	20,2	;volatile
  7603  15FE  2E00               	goto	u3791
  7604  15FF  2E01               	goto	u3790
  7605  1600                     u3791:
  7606  1600  2DFB               	goto	l227
  7607  1601                     u3790:
  7608  1601                     l3068:
  7609  1601  0811               	movf	17,w	;volatile
  7610  1602  391F               	andlw	31
  7611  1603  1D03               	btfss	3,2
  7612  1604  2E06               	goto	u3801
  7613  1605  2E07               	goto	u3800
  7614  1606                     u3801:
  7615  1606  2DFB               	goto	l227
  7616  1607                     u3800:
  7617  1607                     l230:
  7618  1607  0008               	return
  7619  1608                     __end_of_I2C_Master_Wait:
  7620                           
  7621                           	psect	text30
  7622  15DA                     __ptext30:	
  7623 ;; *************** function _isr *****************
  7624 ;; Defined at:
  7625 ;;		line 69 in file "Master_PIC.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		None
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         0       0       0       0       0
  7640 ;;      Locals:         0       0       0       0       0
  7641 ;;      Temps:          2       0       0       0       0
  7642 ;;      Totals:         2       0       0       0       0
  7643 ;;Total ram usage:        2 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		Interrupt level 1
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           
  7653                           ;psect for function _isr
  7654  15DA                     _isr:
  7655  15DA                     i1l101:
  7656  15DA  0871               	movf	??_isr+1,w
  7657  15DB  008A               	movwf	10
  7658  15DC  0E70               	swapf	??_isr,w
  7659  15DD  0083               	movwf	3
  7660  15DE  0EFE               	swapf	btemp,f
  7661  15DF  0E7E               	swapf	btemp,w
  7662  15E0  0009               	retfie
  7663  15E1                     __end_of_isr:
  7664  007E                     btemp	set	126	;btemp
  7665  007E                     wtemp0	set	126
  7666                           
  7667                           	psect	intentry
  7668  0004                     __pintentry:	
  7669                           ;incstack = 0
  7670                           ; Regs used in _isr: []
  7671                           
  7672  0004                     interrupt_function:
  7673  007E                     saved_w	set	btemp
  7674  0004  00FE               	movwf	btemp
  7675  0005  0E03               	swapf	3,w
  7676  0006  00F0               	movwf	??_isr
  7677  0007  080A               	movf	10,w
  7678  0008  00F1               	movwf	??_isr+1
  7679  0009  160A  118A  2DDA   	ljmp	_isr
  7680                           
  7681                           	psect	config
  7682                           
  7683                           ;Config register CONFIG1 @ 0x2007
  7684                           ;	Oscillator Selection bits
  7685                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  7686                           ;	Watchdog Timer Enable bit
  7687                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7688                           ;	Power-up Timer Enable bit
  7689                           ;	PWRTE = OFF, PWRT disabled
  7690                           ;	RE3/MCLR pin function select bit
  7691                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7692                           ;	Code Protection bit
  7693                           ;	CP = OFF, Program memory code protection is disabled
  7694                           ;	Data Code Protection bit
  7695                           ;	CPD = OFF, Data memory code protection is disabled
  7696                           ;	Brown Out Reset Selection bits
  7697                           ;	BOREN = OFF, BOR disabled
  7698                           ;	Internal External Switchover bit
  7699                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7700                           ;	Fail-Safe Clock Monitor Enabled bit
  7701                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7702                           ;	Low Voltage Programming Enable bit
  7703                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7704                           ;	In-Circuit Debugger Mode bit
  7705                           ;	DEBUG = 0x1, unprogrammed default
  7706  2007                     	org	8199
  7707  2007  20D4               	dw	8404
  7708                           
  7709                           ;Config register CONFIG2 @ 0x2008
  7710                           ;	Brown-out Reset Selection bit
  7711                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7712                           ;	Flash Program Memory Self Write Enable bits
  7713                           ;	WRT = OFF, Write protection off
  7714  2008                     	org	8200
  7715  2008  3FFF               	dw	16383

Data Sizes:
    Strings     58
    Constant    0
    Data        1
    BSS         26
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      74
    BANK1            80     15      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S801__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S801__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 19
		 -> converted02(BANK1[10]), STR_3(CODE[18]), STR_2(CODE[19]), STR_1(CODE[18]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    ADC_convert@data	PTR unsigned char  size(1) Largest target is 10
		 -> converted02(BANK1[10]), 


Critical Paths under _main in COMMON

    _LCD_Start->_LCD_Init
    _LCD_Start->_LCD_Set_Cursor
    _LCD_Start->_LCD_Write_String
    _LCD_Init->_LCD_CMD
    _LCD_Send->_LCD_Set_Cursor
    _LCD_Send->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _ADC_convert->___flge
    _ADC_convert->___wmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___fladd
    ___flsub->___wmul
    _I2C_Comunication->_I2C_Master_Write

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Send
    _LCD_Start->_LCD_Write_String
    _LCD_Send->_ADC_convert
    _ADC_convert->___flmul
    ___xxtofl->___wmul
    ___wmul->___fltol
    ___flsub->___xxtofl
    ___flmul->___flsub
    ___fldiv->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _LCD_Send->_ADC_convert

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19961
                   _I2C_Comunication
                           _LCD_Send
                          _LCD_Start
                           _infrared
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _infrared                                             3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Start                                            3     3      0    1665
                                              5 BANK0      3     3      0
                    _I2C_Master_Init
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             3     3      0     282
                                              8 COMMON     2     2      0
                                              0 BANK0      1     1      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Send                                             8     8      0   18265
                                             65 BANK0      8     8      0
                        _ADC_convert
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2     679
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     704
                                              8 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     189
                                              6 COMMON     2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       2     2      0     127
                                              4 COMMON     2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      62
                                              3 COMMON     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _ADC_convert                                         23    17      6   15742
                                             57 BANK0      8     2      6
                                              0 BANK1     15    15      0
                            ___awdiv
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                              9 BANK0     14    10      4
                            ___fltol (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1176
                                              8 COMMON     2     2      0
                                              5 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     967
                                              2 COMMON     6     2      4
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    3727
                                             23 BANK0      8     0      8
                            ___fladd
                            ___fltol (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3122
                                              2 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3533
                                             31 BANK0     26    18      8
                          __Umul8_16
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2043
                                             23 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     985
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Comunication                                     3     3      0      31
                                              3 COMMON     3     3      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                      _I2C_Read_Byte
 ---------------------------------------------------------------------------------
 (2) _I2C_Read_Byte                                        0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      31
                                              2 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Comunication
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _I2C_Read_Byte
       _I2C_Master_Wait
   _LCD_Send
     _ADC_convert
       ___awdiv
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
           ___wmul (ARG)
             ___fltol (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___flsub (ARG)
           ___fladd
           ___fltol (ARG)
           ___wmul (ARG)
           ___xxtofl (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flsub
       ___fltol
       ___wmul
       ___xxtofl
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
             _I2C_Master_Stop
             _I2C_Master_Write
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     ___xxtofl
   _LCD_Start
     _I2C_Master_Init
     _LCD_Init
       _IO_Expander_Write
       _LCD_CMD
     _LCD_Set_Cursor
     _LCD_Write_String
   _infrared
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      F      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      7E      12        0.0%
ABS                  0      0      7E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 01 01:16:17 2021

              ___fldiv@aexp 0050                ___fldiv@bexp 004F                           pc 0002  
              ___fldiv@sign 0048                          _RS 00A6                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0027         __Umul8_16@word_mpld 0022  
                       l112 163A                         l130 08D0                         l133 17FF  
                       l117 16FC                         l230 1607                         l127 09AA  
                       l224 1614                         l233 15F1                         l250 1623  
                       l227 15FB                         l251 1624                         l254 1643  
                       l239 15FA                         l159 041C                         l271 16A4  
                       l248 161F                         l256 1648                         l280 16C1  
                       l257 1651                         l274 166B                         l268 0A3A  
                       l277 1687                         l710 0F4D                         l702 0FFF  
                       l286 17B6                         l295 0882                         l720 0F93  
                       l570 0A59                         l714 0F71                         l731 0FF3  
                       l723 0FD1                         l804 175E                         l732 0FFF  
                       l396 172F                         l549 0939                         l573 0AC5  
                       l574 0ADE                         l806 1770                         l582 07F9  
                       l398 1747                         l735 1720                         l831 0B9A  
                       l592 07F9                         l761 0CE9                         l745 0BF7  
                       l842 0B64                         l747 0D77                         l843 0B70  
                       l835 0B48                         l693 0E82                         l589 07E4  
                       l829 0B03                         l767 0D5B                         l791 06E9  
                       l695 0E59                         l769 0D6B                         l785 077D  
                       l689 0DDB                         l797 0771                         _GIE 005F  
                       _RA0 0028                         _RB7 0037                         _PEN 048A  
                       _SEN 0488                         _POT 00A9                         _isr 15DA  
                       fsr0 0004                         indf 0000           ?_I2C_Comunication 0070  
              ___flmul@aexp 004D                ___flmul@bexp 0052                ___flmul@sign 004C  
              ___flmul@temp 0057                ___flmul@prod 0053             __end_of_LCD_CMD 1688  
        ??_I2C_Comunication 0073         LCD_Write_String@Str 0078              _LCD_Set_Cursor 084B  
              ___fltol@exp1 0077                        l3100 0D8F                        l3110 0DA7  
                      l3102 0D94                        l3200 0EB3                        l3120 0DBD  
                      l3112 0DAC                        l3104 0D9C                        l3210 0ECC  
                      l3202 0EBC                        l3130 0DD1                        l3122 0DBE  
                      l3114 0DB2                        l3106 0D9D                        l3220 0F30  
                      l3204 0EBE                        l3212 0ED1                        l3140 0DED  
                      l3124 0DC3                        l3132 0DD3                        l3116 0DB3  
                      l3108 0D9F                        l3300 1670                        l3070 1616  
                      l3230 0F63                        l3214 0EE7                        l3222 0F3F  
                      l3206 0EC2                        l3150 0E01                        l3142 0DF1  
                      l3134 0DE1                        l3126 0DC8                        l3118 0DB9  
                      l3310 1723                        l3302 1677                        l3080 15EE  
                      l3072 161B                        l3240 0F7A                        l3232 0F6C  
                      l3224 0F55                        l3216 0F25                        l3208 0EC3  
                      l3160 0E15                        l3152 0E05                        l3144 0DF5  
                      l3136 0DE5                        l3128 0DD0                        l3400 07B4  
                      l3312 1729                        l3304 16A6                        l3066 15FB  
                      l3074 15F2                        l3330 08DF                        l3322 08D1  
                      l3250 0F8A                        l3242 0F7F                        l3234 0F70  
                      l3226 0F5A                        l3218 0F2B                        l3170 0E26  
                      l3162 0E19                        l3154 0E09                        l3146 0DF9  
                      l3138 0DE9                        l3090 0D78                        l3402 07B8  
                      l3410 07D2                        l3314 1736                        l3082 1689  
                      l3306 16AA                        l1650 160C                        l1810 1625  
                      l3068 1601                        l3076 15F7                        l3340 08F4  
                      l3332 08E3                        l3324 08D4                        l3500 0C6E  
                      l3260 0FAB                        l3252 0F90                        l3236 0F75  
                      l3244 0F81                        l3180 0E6C                        l3172 0E3D  
                      l3164 0E1D                        l3156 0E0D                        l3148 0DFD  
                      l3092 0D7F                        l3420 07EE                        l3316 173D  
                      l3308 1721                        l3084 1653                        l1652 160F  
                      l1820 1630                        l1812 1629                        l3078 15E9  
                      l3350 0917                        l3342 08F7                        l3334 08E8  
                      l3326 08D8                        l3502 0C77                        l3510 0C9C  
                      l3430 0BA2                        l3270 0FE3                        l3262 0FAF  
                      l3238 0F78                        l3246 0F85                        l3190 0E8B  
                      l3182 0E6D                        l3174 0E5D                        l3166 0E21  
                      l3158 0E11                        l3094 0D85                        l3422 16FD  
                      l3318 1743                        l3086 1659                        l4062 0877  
                      l1654 1612                        l1822 1631                        l1814 162C  
                      l3360 0930                        l3352 091D                        l3344 08FE  
                      l3336 08EC                        l3328 08DD                        l3520 0CB9  
                      l3512 0CA2                        l3504 0C89                        l3440 0BB7  
                      l3432 0BA8                        l3600 0465                        l3280 0FFA  
                      l3272 0FE8                        l3264 0FCD                        l3256 0F98  
                      l3248 0F86                        l3184 0E76                        l3176 0E66  
                      l3168 0E25                        l3096 0D89                        l3424 1701  
                      l3416 07D9                        l3408 07C0                        l3088 1660  
                      l1656 1613                        l1648 1608                        l1824 1632  
                      l1816 162D                        l3362 0935                        l3354 091E  
                      l3346 0902                        l3338 08EE                        l3530 0CCE  
                      l3522 0CBA                        l3514 0CAA                        l3506 0C8A  
                      l3450 0BCF                        l3442 0BBF                        l3434 0BAC  
                      l3370 0A6D                        l3290 1758                        l3610 0481  
                      l3602 046D                        l3282 0FFE                        l3274 0FE9  
                      l3266 0FD6                        l3258 0F9D                        l3194 0E94  
                      l3178 0E68                        l3186 0E7A                        l3098 0D8A  
                      l3418 07E9                        l1818 162F                        l3356 0925  
                      l3348 0906                        l3540 0CF3                        l3532 0CD2  
                      l3524 0CC3                        l3516 0CAC                        l3508 0C98  
                      l3460 0BE4                        l3452 0BD5                        l3444 0BC0  
                      l3436 0BAD                        l3428 0B9B                        l3380 0ADB  
                      l3372 0A75                        l3292 1767                        l3284 174B  
                      l3700 0765                        l3620 04C4                        l3604 046F  
                      l3276 0FED                        l3268 0FDB                        l3196 0EAB  
                      l3188 0E86                        l3358 092B                        l3550 0D31  
                      l3542 0D01                        l3534 0CE6                        l3518 0CB5  
                      l3526 0CC9                        l3470 0C0B                        l3462 0BEC  
                      l3454 0BD9                        l3438 0BB2                        l3446 0BC2  
                      l3382 0ADD                        l3374 0A79                        l3366 0A3B  
                      l3294 176C                        l3286 174D                        l3702 0769  
                      l3630 054D                        l3622 04E0                        l3614 048A  
                      l3606 0477                        l3278 0FEF                        l3198 0EAF  
                      l3710 0AE2                        l3560 0D61                        l3552 0D3F  
                      l3544 0D05                        l3528 0CCD                        l3472 0C0F  
                      l3464 0BED                        l3456 0BDA                        l3448 0BCA  
                      l3376 0A9D                        l3368 0A51                        l3288 1754  
                      l3704 076A                        l3640 05C0                        l3632 055D  
                      l3624 050C                        l3616 049A                        l3608 047C  
                      l3392 0794                        l3712 0AE7                        l3800 086D  
                      l3562 0D65                        l3554 0D4E                        l3546 0D1E  
                      l3538 0CEE                        l3490 0C50                        l3482 0C26  
                      l3458 0BDF                        l3466 0BEF                        l3378 0AA1  
                      l3706 0775                        l3650 066D                        l3642 05DD  
                      l3634 057A                        l3626 0528                        l3618 04A7  
                      l3570 041D                        l3394 07A9                        l3386 077E  
                      l3730 0B31                        l3722 0B14                        l3714 0AEB  
                      l3298 166D                        l3810 1792                        l3564 0D67  
                      l3556 0D52                        l3548 0D24                        l3492 0C52  
                      l3484 0C38                        l3468 0BFF                        l3476 0C18  
                      l3660 06B9                        l3652 0695                        l3644 060A  
                      l3636 058A                        l3628 0544                        l3580 0434  
                      l3572 0424                        l3396 07AA                        l3388 078B  
                      l3740 0B68                        l3732 0B3F                        l3724 0B19  
                      l3716 0AFB                        l3900 0322                        l3820 0043  
                      l3812 179A                        l3558 0D5A                        l3494 0C57  
                      l3486 0C40                        l3478 0C1D                        l3670 06CE  
                      l3662 06BA                        l3654 069E                        l3646 061A  
                      l3638 05A7                        l3590 0450                        l3582 0439  
                      l3574 042A                        l3398 07B2                        l3750 0B92  
                      l3742 0B72                        l3734 0B4F                        l3726 0B26  
                      l3718 0B0B                        l3910 0402                        l3902 0338  
                      l3830 0085                        l3822 0045                        l3814 002C  
                      l3806 1771                        l3760 164E                        l3496 0C69  
                      l3488 0C48                        l3680 06F3                        l3672 06D2  
                      l3664 06C3                        l3656 06AC                        l3648 0647  
                      l3592 0456                        l3584 0441                        l3576 042E  
                      l3744 0B88                        l3736 0B5A                        l3728 0B2D  
                      l3904 03D4                        l3912 0406                        l3840 00BB  
                      l3832 0090                        l3824 0049                        l3816 0041  
                      l3808 1776                        l3920 0896                        l3754 163B  
                      l3498 0C6D                        l3690 0731                        l3682 0701  
                      l3674 06E6                        l3658 06B5                        l3666 06C9  
                      l3594 045A                        l3586 0443                        l3578 042F  
                      l3746 0B8D                        l3738 0B5E                        l3914 040C  
                      l3906 03F4                        l3850 00F2                        l3842 00C1  
                      l3834 0099                        l3826 0049                        l3818 0041  
                      l3770 09C8                        l3930 08C1                        l3922 089F  
                      l2890 16E5                        l3756 1640                        l3940 093A  
                      l3692 073C                        l3684 0705                        l3668 06CD  
                      l3596 045B                        l3588 044B                        l3748 0B91  
                      l3908 03FC                        l3860 01D2                        l3852 0108  
                      l3844 00C6                        l3836 00AC                        l3828 0064  
                      l3932 17B7                        l3780 09FE                        l3772 09D1  
                      l3764 09AE                        l3924 08A7                        l3916 0883  
                      l2892 16E6                        l3758 1649                        l3950 0970  
                      l3942 094F                        l3694 074B                        l3686 071E  
                      l3678 06EE                        l3598 0460                        l3870 01F4  
                      l3854 01A4                        l3846 00CB                        l3862 01D6  
                      l3838 00B2                        l3790 084C                        l3934 17C3  
                      l3782 0A0D                        l3774 09E0                        l3766 09B4  
                      l3926 08B0                        l3918 088E                        l2894 16EC  
                      l3952 0975                        l3944 095B                        l3696 0755  
                      l3688 0724                        l3880 02B5                        l3872 01F9  
                      l3864 01DC                        l3856 01C4                        l3848 00EC  
                      l3792 084D                        l3936 17CC                        l3784 0A13  
                      l3776 09E6                        l3768 09BA                        l3928 08B8  
                      l2896 16F9                        l2888 16DF                        l3960 16CC  
                      l3954 099E                        l3946 0960                        l3698 0757  
                      l3890 02EB                        l3882 02CB                        l3874 021A  
                      l3866 01EC                        l3858 01CC                        l3794 0855  
                      l3938 17ED                        l3786 0A22                        l3778 09F5  
                      l3962 16D1                        l3948 0966                        l3892 02F1  
                      l3884 02D8                        l3876 0220                        l3868 01F4  
                      l3796 085D                        l3788 0A2B                        l3964 16D6  
                      l3956 16C2                        l3894 02F6                        l3886 02D8  
                      l3878 0238                        l3798 0865                        l3958 16C7  
                      l3896 02FB                        l3888 02DE                        l3898 031C  
                      ?_isr 0070                        STR_1 0835                        STR_2 0810  
                      STR_3 0823                        STR_4 0847                        _CONT 00AA  
                      u4001 0E9D                        u4010 0EAF                        u4002 0EA4  
                      u4011 0EAE                        u4003 0EAB                        u4100 0F5A  
                      u4020 0EB3                        u4101 0F59                        u4021 0EB2  
                      u4030 0EC2                        u4031 0EC1                        u5000 0481  
                      u4200 0FAF                        u4120 0F70                        u5001 0480  
                      u4201 0FAE                        u4121 0F6F                        u4210 0FBE  
                      u4130 0F75                        u4050 0EE7                        u5011 04D2  
                      u4131 0F74                        u4115 0F65                        u4051 0EE6  
                      u4300 176C                        u5012 04D9                        u4220 0FCD  
                      u4140 0F7F                        u4301 176B                        u5101 05FC  
                      u5021 04EE                        u5013 04E0                        u4221 0FCC  
                      u4141 0F7E                        u4061 0EFE                        u4053 0EE3  
                      u4045 0EC5                        u5102 0603                        u5022 04F5  
                      u4230 0FD6                        u4150 0F85                        u4070 0F12  
                      u4062 0EFF                        u5111 0629                        u5103 060A  
                      u5031 051A                        u5023 04FC                        u4231 0FD5  
                      u4215 0FB9                        u4151 0F84                        u4071 0F13  
                      u4063 0F04                        u5200 06CD                        u5120 0653  
                      u5112 0630                        u5032 0521                        u4240 0FDB  
                      u4160 0F8A                        u4080 0F30                        u4072 0F18  
                      u4064 0F05                        u5201 06CC                        u5113 0637  
                      u5041 0536                        u5033 0528                        u4241 0FDA  
                      u4161 0F89                        u4081 0F2F                        u4073 0F19  
                      u4065 0F0A                        u4410 0906                        u5210 06D2  
                      u5042 053D                        u4250 0FE8                        u4170 0F90  
                      u4090 0F55                        u4066 0F0B                        u4330 1729  
                      u4411 0905                        u5211 06D1                        u5131 065F  
                      u5043 0544                        u4251 0FE7                        u4171 0F8F  
                      u4091 0F54                        u4331 1728                        u4315 167A  
                      u5220 06E6                        u5140 067B                        u5132 0666  
                      u4260 0FED                        u4180 0F97                        u5300 0AE7  
                      u4405 08F8                        u4501 0A88                        u5221 06E5  
                      u5133 066D                        u5125 064E                        u5061 056C  
                      u4261 0FEC                        u4181 0F96                        u5301 0AE6  
                      u4325 16B4                        u4430 0917                        u4510 0AA1  
                      u4502 0A89                        u5230 06ED                        u5062 0573  
                      u4270 0FFE                        u4190 0F9D                        u5310 0AEB  
                      u4431 0916                        u4511 0AA0                        u4503 0A8E  
                      u5231 06EC                        u5151 0687                        u5071 0599  
                      u5063 057A                        u5055 0546                        u4271 0FFD  
                      u4191 0F9C                        u5311 0AEA                        u3800 1607  
                      u4504 0A8F                        u4280 1758                        u5240 06F3  
                      u5152 068E                        u5072 05A0                        u4600 07D8  
                      u4360 1743                        u5400 0B68                        u5320 0B0B  
                      u3640 16E5                        u3801 1606                        u4425 0907  
                      u4521 0AB0                        u4505 0A94                        u4281 1757  
                      u5241 06F2                        u5153 0695                        u5145 0676  
                      u5073 05A7                        u4601 07D7                        u4361 1742  
                      u4345 1730                        u5401 0B67                        u5321 0B0A  
                      u3641 16E4                        u3810 1623                        u4450 092B  
                      u4370 08D8                        u4530 0ADB                        u4522 0AB1  
                      u4506 0A95                        u5250 0705                        u5410 0B7D  
                      u3811 1622                        u4451 092A                        u4435 0913  
                      u4371 08D7                        u4531 0ADA                        u4523 0AB6  
                      u5251 0704                        u5091 05CF                        u4355 1737  
                      _PEIE 005E                        u4460 0930                        u4380 08E3  
                      u4700 0BFF                        u4524 0AB7                        u5260 0714  
                      u5180 06B9                        u5092 05D6                        u3900 0DE5  
                      u3820 0D89                        u4620 07E9                        u4540 078B  
                      u5420 0B8D                        u5340 0B2C                        u5500 00C1  
                      u4461 092F                        u4445 091F                        u4381 08E2  
                      u4701 0BFE                        u4525 0ABC                        u5181 06B8  
                      u5165 0697                        u5093 05DD                        u5085 05A9  
                      u3901 0DE4                        u3821 0D88                        u4621 07E8  
                      u4541 078A                        u5421 0B8C                        u5341 0B2B  
                      u5501 00C0                        u4390 08F4                        u4710 0C1D  
                      u4526 0ABD                        u4470 0A51                        u5270 0731  
                      u3910 0E3D                        u3830 0D8F                        u4630 07EE  
                      u4550 07A2                        u5430 0B91                        u5510 0108  
                      u4391 08F3                        u4711 0C1C                        u4535 0AD7  
                      u4471 0A50                        u4295 175F                        u5271 0730  
                      u5175 06AE                        u3911 0E3C                        u3831 0D8E  
                      u4631 07ED                        u4615 07DB                        u5431 0B90  
                      u5415 0B78                        u5335 0B1E                        u5511 0107  
                      u5440 1648                        u4720 0C57                        u4640 0BAC  
                      u4480 0A6D                        u5280 074B                        u3920 0E46  
                      u3840 0D94                        u4560 07B8                        u5360 0B4E  
                      u5520 01DC                        u5441 1647                        u4721 0C56  
                      u4641 0BAB                        u4481 0A6C                        u5281 074A  
                      u5265 070F                        u3921 0E44                        u3841 0D93  
                      u4561 07B7                        u5361 0B4D                        u5521 01DB  
                      u4810 0CB9                        u4650 0BB2                        u4490 0A79  
                      u5290 0769                        u3930 0E47                        u3850 0DB2  
                      u4570 07BF                        u5530 0238                        u5450 1780  
                      u4811 0CB8                        u4651 0BB1                        u4491 0A78  
                      u5291 0768                        u5275 072D                        u5195 06BC  
                      u3915 0E39                        u3851 0DB1                        u4571 07BE  
                      u4555 079D                        u5355 0B40                        u5531 0237  
                      u5515 0104                        u4900 0D31                        u4660 0BB7  
                      u3940 0E5D                        u3860 0DBD                        u5380 0B5E  
                      u5540 02F1                        u5460 17A4                        _RCEN 048B  
                      u4901 0D30                        u4805 0CAE                        u4661 0BB6  
                      u5285 0747                        u3941 0E5C                        u3861 0DBC  
                      u5381 0B5D                        u5541 02F0                        u3790 1601  
                      u4910 0D4E                        u4830 0CCD                        u4750 0C6D  
                      u4670 0BD9                        u3950 0E6C                        u3870 0DC3  
                      u4590 07D1                        u5390 0B64                        u5550 0338  
                      u5470 17B6                        u3791 1600                        u4911 0D4D  
                      u4831 0CCC                        u4751 0C6C                        u4735 0C59  
                      u4671 0BD8                        u3951 0E6B                        u3871 0DC2  
                      u4591 07D0                        u5391 0B63                        u5375 0B53  
                      u5551 0337                        u5535 0234                        u5471 17B5  
                      u4920 0D65                        u4840 0CD2                        u4680 0BDF  
                      u3880 0DC8                        u5560 040C                        u5480 0064  
                      u4921 0D64                        u4905 0D2D                        u4841 0CD1  
                      u4825 0CBC                        u4745 0C62                        u4681 0BDE  
                      u3881 0DC7                        u4585 07C1                        u5561 040B  
                      u5481 0063                        u4850 0CE6                        u4770 0C89  
                      u4690 0BE4                        u4930 042E                        u3970 0E82  
                      u3890 0DE1                        u5490 00BA                        u4915 0D4A  
                      u4851 0CE5                        u4771 0C88                        u4691 0BE3  
                      u4931 042D                        u3971 0E81                        u3891 0DE0  
                      u5555 0334                        u5491 00B9                        u5707 0A17  
                      u5627 16F2                        u4860 0CED                        u4780 0CA2  
                      u4940 0434                        u3980 0E86                        u4861 0CEC  
                      u4781 0CA1                        u4765 0C70                        u4941 0433  
                      u3981 0E85                        u3965 0E6F                        u5717 0A26  
                      u5637 08C9                        u4870 0CF3                        u4790 0CAA  
                      u4950 0439                        u3990 0E8B                        u4871 0CF2  
                      u4791 0CA9                        u4775 0C85                        u4951 0438  
                      u3991 0E8A                        u5727 0A35                        u5647 09BE  
                      u4880 0D05                        u4960 045A                        u4881 0D04  
                      u4961 0459                        u5737 1669                        u5657 09CC  
                      u4890 0D14                        u4970 0460                        u5747 0955  
                      u4971 045F                        u5667 09DB                        u4980 0465  
                      u5757 097B                        u4981 0464                        u5677 09EA  
                      u4990 047C                        u5767 09A4                        u4895 0D0F  
                      u4991 047B                        u5687 09F9                        u5697 0A08  
                      _RSEN 0489                        _TXIF 0064           ?_LCD_Write_String 0078  
                      _main 16C2                        _temp 00A4                        _tens 0069  
                      btemp 007E               ADC_convert@mu 00C4                        start 000C  
        __size_of_LCD_Start 004E          ??_LCD_Write_String 0020             ___fldiv@new_exp 0049  
      LCD_Write_4Bit@Nibble 0075        __size_of_ADC_convert 03F4                       ??_isr 0070  
          __end_of_LCD_Init 0A3B            __end_of_LCD_Send 1800            ?_I2C_Master_Init 0070  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070               ___fltol@sign1 0076  
           __end_of___fladd 1000                       ?_main 0070                       _ACKEN 048C  
                     _ACKDT 048D             __end_of___fldiv 0D78             __end_of___awdiv 093A  
           __end_of___flmul 077E             __end_of___flsub 1721             __end_of___fltol 07FA  
                     _ANSEL 0188             ___awdiv@divisor 0072                       i1l101 15DA  
           ___awdiv@counter 0020                       _RCREG 001A                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISD 0088                       _SSPIE 0463  
                     _SSPIF 0063                       _TXREG 0019      __end_of_LCD_Set_Cursor 0883  
                     _conv0 00A0      __size_of_I2C_Read_Byte 0017                       _valor 00A8  
                     _setup 1625                       _units 00A7                       pclath 000A  
                     status 0003                       wtemp0 007E              _LCD_Write_4Bit 1652  
            _LCD_Write_Char 16A5             __initialization 000F                __end_of_main 16DF  
         _IO_Expander_Write 1688          ?_IO_Expander_Write 0070                      ??_main 007A  
                 ??_LCD_CMD 0076           __end_of_LCD_Start 08D1           ?_I2C_Master_Start 0070  
         ?_I2C_Master_Write 0070         ??_IO_Expander_Write 0073             ?_LCD_Set_Cursor 0078  
        ??_I2C_Master_Start 0072          ??_I2C_Master_Write 0072            ___awdiv@dividend 0074  
                    ?_setup 0070                      _ANSELH 0189                      _SSPADD 0093  
                    _TRISA0 0428                      _TRISB0 0430                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
    __end_of_LCD_Write_4Bit 166C            __end_of___xxtofl 0B9B      __end_of_LCD_Write_Char 16C2  
 __end_of_IO_Expander_Write 16A5                      ___flge 0A3B               _I2C_Read_Byte 163B  
                 ??___fladd 0020                      ___wmul 1721                   ??___fldiv 003F  
                 ??___awdiv 0076                   ??___flmul 0047                   ??___flsub 007A  
                 ??___fltol 0020            __end_of_infrared 16FD            ___awdiv@quotient 0022  
        __size_of__Umul8_16 0029                      saved_w 007E             ADC_convert@data 00BB  
           ADC_convert@temp 00B7                  ___flge@ff1 0072                  ___flge@ff2 0076  
              ___xxtofl@arg 0033                ___xxtofl@exp 0032                ___xxtofl@val 0029  
   __end_of__initialization 0025                   ?_LCD_Init 0070                   ?_LCD_Send 0070  
           ?_LCD_Write_4Bit 0070                  ___fltol@f1 0072             ?_LCD_Write_Char 0070  
            ?_I2C_Read_Byte 0070              __pcstackCOMMON 0070                __pidataBANK1 07FA  
             __end_of_setup 163B                     ??_setup 0072                  __pbssBANK0 0069  
                __pbssBANK1 00A0                  ??_LCD_Init 0078                  ??_LCD_Send 0061  
 __size_of_I2C_Comunication 0071           __end_of__Umul8_16 1771  __size_of_IO_Expander_Write 001D  
                __pmaintext 16C2                     ?___flge 0072                     ?___wmul 0025  
                __pintentry 0004                     _ACKSTAT 048E   __size_of_LCD_Write_String 0046  
                   _LCD_CMD 166C                   ?___xxtofl 0029                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 0800                   ?_infrared 0070  
                   _i2c_add 00C6             ??_I2C_Read_Byte 0072               ??_ADC_convert 005F  
           __size_of___flge 00A4                     ___fladd 0D78                     ___fldiv 0B9B  
                   ___awdiv 08D1                     ___flmul 041D                     ___flsub 16FD  
                   ___fltol 077E             __size_of___wmul 0027            ??_LCD_Set_Cursor 0020  
                   __ptext1 1625                     __ptext2 16DF                     __ptext3 0883  
                   __ptext4 09AB                     __ptext5 1608                     __ptext6 17B7  
                   __ptext7 1771                     __ptext8 16A5                     __ptext9 084B  
                   _counter 00AC                __size_of_isr 0007                  ??___xxtofl 002D  
  __size_of_I2C_Master_Init 000D                     _residuo 007A    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009                   _LCD_Start 0883                     clrloop0 15E2  
      end_of_initialization 0025                  ??_infrared 0072   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 0010            ADC_convert@place 005D         __end_of_ADC_convert 041D  
                LCD_CMD@CMD 0077                 ___fladd@grs 002B               ___xxtofl@sign 0031  
                 _TRISBbits 0086                 ___fldiv@grs 004B                 ___fldiv@rem 0044  
                ?_LCD_Start 0070            ??_LCD_Write_4Bit 0074           LCD_Write_String@i 0023  
          ??_LCD_Write_Char 0076                 ___flmul@grs 004E            _I2C_Comunication 093A  
         __size_of_LCD_Init 0090           __size_of_LCD_Send 0049                ADC_convert@a 0059  
              ADC_convert@i 00C0                ADC_convert@j 00B9                ADC_convert@x 00BC  
            __end_of___flge 0ADF              __end_of___wmul 1748            _LCD_Write_String 1771  
       start_initialization 000F                 __end_of_isr 15E1           ??_I2C_Master_Init 0072  
         ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072                 _ADC_convert 0029  
                  ??___flge 0020                    ??___wmul 0078                   __Umul8_16 1748  
               __pdataBANK1 00C7                   ___fladd@a 0076                   ___fladd@b 0072  
                  ?_LCD_CMD 0070                   ___fldiv@a 0037                   ___fldiv@b 003B  
                 ___flmul@a 0043                   ___flmul@b 003F                 __pbssCOMMON 007A  
                 ___flsub@a 0037                   ___flsub@b 003B                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00B7           __size_of___xxtofl 00BC  
               ??_LCD_Start 0025                   __pnvBANK1 00C6            _I2C_Master_Start 15E9  
          _I2C_Master_Write 1615           __size_of_infrared 001E       IO_Expander_Write@Data 0073  
                  ?___fladd 0072                    ?___fldiv 0037                    ?___awdiv 0072  
                  ?___flmul 003F                    ?___flsub 0037                    ?___fltol 0072  
                ?__Umul8_16 0072        I2C_Master_Write@data 0072                   __pstrings 0800  
                 _converted 00AB              __size_of_setup 0016           interrupt_function 0004  
                  _LCD_Init 09AB                    _LCD_Send 17B7              ___wmul@product 0078  
                 clear_ram0 15E1       __end_of_I2C_Read_Byte 1652                 __stringbase 080F  
         ___wmul@multiplier 0025    __end_of_I2C_Comunication 09AB            __size_of_LCD_CMD 001C  
               _converted02 00AD    __end_of_LCD_Write_String 17B7                 ??__Umul8_16 0074  
          __size_of___fladd 0288            __size_of___fldiv 01DD            __size_of___awdiv 0069  
          __size_of___flmul 0361            __size_of___flsub 0024            __size_of___fltol 007C  
        __end_of__stringtab 0810             _I2C_Master_Init 1608                    ___xxtofl 0ADF  
           _I2C_Master_Wait 15FB             _I2C_Master_Stop 15F2                    __ptext10 166C  
                  __ptext11 1652                    __ptext20 1748                    __ptext12 1688  
                  __ptext21 0A3B                    __ptext13 0029                    __ptext30 15DA  
                  __ptext22 0B9B                    __ptext14 0ADF                    __ptext23 08D1  
                  __ptext15 1721                    __ptext24 093A                    __ptext16 077E  
                  __ptext25 163B                    __ptext17 16FD                    __ptext26 1615  
                  __ptext18 0D78                    __ptext27 15F2                    __ptext19 041D  
                  __ptext28 15E9                    __ptext29 15FB     __size_of_LCD_Set_Cursor 0038  
                  _infrared 16DF             _BackLight_State 00C7               __size_of_main 001D  
                  _hundreds 007B                ?_ADC_convert 0059    __end_of_I2C_Master_Start 15F2  
  __end_of_I2C_Master_Write 1625          LCD_Write_Char@Data 0077                    intlevel1 0000  
                 stringcode 080A                  _OSCCONbits 008F     __size_of_LCD_Write_4Bit 001A  
         ADC_convert@digits 00C2     __size_of_LCD_Write_Char 001D     __end_of_I2C_Master_Init 1615  
   __end_of_I2C_Master_Wait 1608     __end_of_I2C_Master_Stop 15FB             LCD_Init@I2C_Add 0020  
    __Umul8_16@multiplicand 0072                    stringdir 080A                    stringtab 0800  
         LCD_Set_Cursor@COL 0078           LCD_Set_Cursor@ROW 0079                 _SSPCON2bits 0091  
             ___fladd@signs 0028                ___fladd@aexp 0029                ___fladd@bexp 002A  
      __Umul8_16@multiplier 0024               _LCD_Send$1043 0065           __Umul8_16@product 0020  
